id,project,branch,change_id,subject,status,created,updated,submitted,reviewers,revisions,total_comment_count,number,current_revision,discussion_messages_count,reviewers_count,revisions_count,owner_account_id,owner_name,owner_username,is_owner_bot,commit_message,git_command,changed_files,files_count,commit_id,topic,added_lines,deleted_lines,insertions,deletions
openstack%2Fpython-watcherclient~911358,openstack/python-watcherclient,unmaintained/victoria,I45a0648b8372bccaf6a0359a9083e5b3235d2d3b,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 20:12:37.000000000,2024-03-05 20:25:10.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 20:12:37.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-watcherclient/commit/2812059fac615a0a53f28e70db4da9851d4a5f6e', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I45a0648b8372bccaf6a0359a9083e5b3235d2d3b\n'}]",0,911358,2812059fac615a0a53f28e70db4da9851d4a5f6e,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I45a0648b8372bccaf6a0359a9083e5b3235d2d3b
",git fetch https://review.opendev.org/openstack/python-watcherclient refs/changes/58/911358/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,2812059fac615a0a53f28e70db4da9851d4a5f6e,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fwatcher~911368,openstack/watcher,master,I4ad95adf3f67786c97c0dbe562df3ae2a85fa1c8,reno: Update master for unmaintained/wallaby,NEW,2024-03-05 20:13:21.000000000,2024-03-05 20:24:57.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 20:13:21.000000000', 'files': ['releasenotes/source/wallaby.rst'], 'web_link': 'https://opendev.org/openstack/watcher/commit/0f0527abc14f0905e04ffef4af49292eb6aab92b', 'message': 'reno: Update master for unmaintained/wallaby\n\nUpdate the wallaby release notes configuration to build from\nunmaintained/wallaby.\n\nChange-Id: I4ad95adf3f67786c97c0dbe562df3ae2a85fa1c8\n'}]",0,911368,0f0527abc14f0905e04ffef4af49292eb6aab92b,2,1,1,22816,,,0,"reno: Update master for unmaintained/wallaby

Update the wallaby release notes configuration to build from
unmaintained/wallaby.

Change-Id: I4ad95adf3f67786c97c0dbe562df3ae2a85fa1c8
",git fetch https://review.opendev.org/openstack/watcher refs/changes/68/911368/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/source/wallaby.rst'],1,0f0527abc14f0905e04ffef4af49292eb6aab92b,reno-eom-wallaby, :branch: unmaintained/wallaby, :branch: stable/wallaby,1,1
openstack%2Fcinderlib~911340,openstack/cinderlib,unmaintained/wallaby,I9b0e660b94af65829fdc0c4d6ac322e92be56774,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 19:26:49.000000000,2024-03-05 20:14:52.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 19:26:49.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/cinderlib/commit/97b359a484093108a56e0c83016466867dfaa8d6', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I9b0e660b94af65829fdc0c4d6ac322e92be56774\n'}]",0,911340,97b359a484093108a56e0c83016466867dfaa8d6,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I9b0e660b94af65829fdc0c4d6ac322e92be56774
",git fetch https://review.opendev.org/openstack/cinderlib refs/changes/40/911340/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,97b359a484093108a56e0c83016466867dfaa8d6,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Freleases~910412,openstack/releases,master,I9c94ef06b781dc12e508c2a4543732099792a62c,[watcher] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:56:53.000000000,2024-03-05 20:09:27.000000000,2024-03-05 20:09:27.000000000,"[{'_account_id': 13252}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28748}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-02-27 18:56:53.000000000', 'files': ['deliverables/victoria/watcher-dashboard.yaml', 'deliverables/victoria/watcher.yaml', 'deliverables/wallaby/watcher-dashboard.yaml', 'deliverables/wallaby/python-watcherclient.yaml', 'deliverables/xena/watcher-dashboard.yaml', 'deliverables/wallaby/watcher.yaml', 'deliverables/xena/watcher.yaml', 'deliverables/victoria/python-watcherclient.yaml', 'deliverables/xena/python-watcherclient.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/7a8ceac240a36471ea62627df5fb52d80c2cede6', 'message': '[watcher] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: I9c94ef06b781dc12e508c2a4543732099792a62c\n'}]",1,910412,7a8ceac240a36471ea62627df5fb52d80c2cede6,10,5,1,17685,,,0,"[watcher] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: I9c94ef06b781dc12e508c2a4543732099792a62c
",git fetch https://review.opendev.org/openstack/releases refs/changes/12/910412/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/victoria/watcher-dashboard.yaml', 'deliverables/victoria/watcher.yaml', 'deliverables/wallaby/watcher-dashboard.yaml', 'deliverables/wallaby/python-watcherclient.yaml', 'deliverables/xena/watcher-dashboard.yaml', 'deliverables/wallaby/watcher.yaml', 'deliverables/xena/watcher.yaml', 'deliverables/victoria/python-watcherclient.yaml', 'deliverables/xena/python-watcherclient.yaml']",9,7a8ceac240a36471ea62627df5fb52d80c2cede6,vwx-unmaintained, - version: xena-eom projects: - repo: openstack/python-watcherclient hash: 1fc5643008a4c10896c3b392ce60d83bc11e58f0 - name: unmaintained/xena location: xena-eom,,60,3
openstack%2Fnova~899942,openstack/nova,master,I6ebd42280edf4dab59618b00db031f468614c26e,Add debug logging to can_fit_pagesize,NEW,2023-11-02 10:11:54.000000000,2024-03-05 19:56:46.000000000,,"[{'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-11-02 10:11:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/9951516622408099745ac756c3cc777936ffca19', 'message': 'Add debug logging to can_fit_pagesize\n\ncurrent logging can produce lines like\n\nNot enough available memory to schedule instance with pagesize 4.\nRequired: 32768, available: 129018, total: 129018.\n\nwhich is not helpful and frankly confusing without any other context.\n\nThis patch adds some more debug logging to can_fit_pagesize method\nso it clear what was the available memory size in that particular\npagesize.\n\nChange-Id: I6ebd42280edf4dab59618b00db031f468614c26e\n'}, {'number': 2, 'created': '2024-03-05 17:46:51.000000000', 'files': ['nova/objects/numa.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/8856a6db302ad742cdd9194c053510f733d62646', 'message': 'Add debug logging to can_fit_pagesize\n\ncurrent logging can produce lines like\n\nNot enough available memory to schedule instance with pagesize 4.\nRequired: 32768, available: 129018, total: 129018.\n\nwhich is not helpful and frankly confusing without any other context.\n\nThis patch adds some more debug logging to can_fit_pagesize method\nso it clear what was the available memory size in that particular\npagesize.\n\nChange-Id: I6ebd42280edf4dab59618b00db031f468614c26e\n'}]",2,899942,8856a6db302ad742cdd9194c053510f733d62646,8,2,2,9542,,,0,"Add debug logging to can_fit_pagesize

current logging can produce lines like

Not enough available memory to schedule instance with pagesize 4.
Required: 32768, available: 129018, total: 129018.

which is not helpful and frankly confusing without any other context.

This patch adds some more debug logging to can_fit_pagesize method
so it clear what was the available memory size in that particular
pagesize.

Change-Id: I6ebd42280edf4dab59618b00db031f468614c26e
",git fetch https://review.opendev.org/openstack/nova refs/changes/42/899942/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/objects/numa.py'],1,9951516622408099745ac756c3cc777936ffca19,,"from oslo_log import log as loggingLOG = logging.getLogger(__name__) fits = True if memory > avail_kb: LOG.debug( ""Requested memory %(mem)s kb is larger than "" ""available %(avail)s kb in pagesize of %(size)s kb"", {""mem"": memory, ""avail"": avail_kb, ""size"": pagesize} ) fits = False if (memory % pages.size_kb) != 0: LOG.debug( ""Requested memory %(mem)s kb is not multiple of "" ""requested pagesize %(size)s kb"", {""mem"": memory, ""size"": pagesize} ) fits = False return fits", return memory <= avail_kb and (memory % pages.size_kb) == 0,20,1
openstack%2Fcinderlib~911330,openstack/cinderlib,unmaintained/victoria,I8f1a4903198618732691a903b4d0a354c6a66e42,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 19:24:59.000000000,2024-03-05 19:53:32.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 19:24:59.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/cinderlib/commit/63af89658854355cef297bf96f41960dc3d59b43', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I8f1a4903198618732691a903b4d0a354c6a66e42\n'}]",0,911330,63af89658854355cef297bf96f41960dc3d59b43,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I8f1a4903198618732691a903b4d0a354c6a66e42
",git fetch https://review.opendev.org/openstack/cinderlib refs/changes/30/911330/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,63af89658854355cef297bf96f41960dc3d59b43,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fgovernance~911011,openstack/governance,master,I579f0341e2857cf6fca1a4217c8e43d19b06cc3e,Fixing one typo in 2024.2 testing runtime,ABANDONED,2024-03-04 23:34:03.000000000,2024-03-05 19:50:56.000000000,,"[{'_account_id': 935}, {'_account_id': 5314}, {'_account_id': 7166}, {'_account_id': 11975}, {'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 23:34:03.000000000', 'files': ['reference/runtimes/2024.2.rst'], 'web_link': 'https://opendev.org/openstack/governance/commit/a3550c7a1099ac1d1ab25ab1bfebbf1323b37966', 'message': 'Fixing one typo in 2024.2 testing runtime\n\n- https://review.opendev.org/c/openstack/governance/+/908862/comment/b41b7f9b_f6765914/\n\nChange-Id: I579f0341e2857cf6fca1a4217c8e43d19b06cc3e\n'}]",0,911011,a3550c7a1099ac1d1ab25ab1bfebbf1323b37966,8,6,1,8556,,,0,"Fixing one typo in 2024.2 testing runtime

- https://review.opendev.org/c/openstack/governance/+/908862/comment/b41b7f9b_f6765914/

Change-Id: I579f0341e2857cf6fca1a4217c8e43d19b06cc3e
",git fetch https://review.opendev.org/openstack/governance refs/changes/11/911011/1 && git format-patch -1 --stdout FETCH_HEAD,['reference/runtimes/2024.2.rst'],1,a3550c7a1099ac1d1ab25ab1bfebbf1323b37966,typo-fix, Python 3.9 and Python 3.10. It is okay to skip running the Python 3.10 testing, Python 3. and Python 3.10. It is okay to skip running the Python 3.10 testing,1,1
openstack%2Fcinderlib~911349,openstack/cinderlib,unmaintained/xena,Ic7c5393a00df0c918ce4fd4d2f50b148ed56edef,Update .gitreview for unmaintained/xena,NEW,2024-03-05 19:28:38.000000000,2024-03-05 19:50:41.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 19:28:38.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/cinderlib/commit/65323b5e693db05de741a77db85235075a67ee79', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: Ic7c5393a00df0c918ce4fd4d2f50b148ed56edef\n'}]",0,911349,65323b5e693db05de741a77db85235075a67ee79,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: Ic7c5393a00df0c918ce4fd4d2f50b148ed56edef
",git fetch https://review.opendev.org/openstack/cinderlib refs/changes/49/911349/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,65323b5e693db05de741a77db85235075a67ee79,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fec2-api~911136,openstack/ec2-api,unmaintained/wallaby,Ifc117b67ecacb4eaa58c315acb5507c78dc4a979,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 15:09:06.000000000,2024-03-05 19:48:52.000000000,,"[{'_account_id': 10234}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-05 15:09:06.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/ec2-api/commit/ad5468ec35c86a96f73a0fd0b3d53bda58818e66', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: Ifc117b67ecacb4eaa58c315acb5507c78dc4a979\n'}]",1,911136,ad5468ec35c86a96f73a0fd0b3d53bda58818e66,5,2,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: Ifc117b67ecacb4eaa58c315acb5507c78dc4a979
",git fetch https://review.opendev.org/openstack/ec2-api refs/changes/36/911136/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,ad5468ec35c86a96f73a0fd0b3d53bda58818e66,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fec2-api~911135,openstack/ec2-api,unmaintained/victoria,Ia5e0967246aa29ed3793bbd254184c7bce2d5cff,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 15:08:05.000000000,2024-03-05 19:45:02.000000000,,"[{'_account_id': 10234}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-05 15:08:05.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/ec2-api/commit/2f679e7868187bbb91713f681eece33afd6a0a75', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: Ia5e0967246aa29ed3793bbd254184c7bce2d5cff\n'}]",1,911135,2f679e7868187bbb91713f681eece33afd6a0a75,5,2,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: Ia5e0967246aa29ed3793bbd254184c7bce2d5cff
",git fetch https://review.opendev.org/openstack/ec2-api refs/changes/35/911135/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,2f679e7868187bbb91713f681eece33afd6a0a75,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fcinderlib~911331,openstack/cinderlib,unmaintained/victoria,I54eabb2ad9871127b611efe39933feec4b96eca3,Update TOX_CONSTRAINTS_FILE for unmaintained/victoria,NEW,2024-03-05 19:25:01.000000000,2024-03-05 19:44:38.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 19:25:01.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/cinderlib/commit/f44c2763dc84c39b191884541286b43a3ab88aeb', 'message': 'Update TOX_CONSTRAINTS_FILE for unmaintained/victoria\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as unmaintained/victoria branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: I54eabb2ad9871127b611efe39933feec4b96eca3\n'}]",0,911331,f44c2763dc84c39b191884541286b43a3ab88aeb,2,1,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for unmaintained/victoria

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as unmaintained/victoria branch, tests will
continue to use the upper-constraints list on master.

Change-Id: I54eabb2ad9871127b611efe39933feec4b96eca3
",git fetch https://review.opendev.org/openstack/cinderlib refs/changes/31/911331/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,f44c2763dc84c39b191884541286b43a3ab88aeb,create-victoria,deps = -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/victoria},deps = -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/victoria},1,1
openstack%2Fdevstack~910991,openstack/devstack,stable/victoria,Icd487e1012263a9b0bc13b529d31ff2025108adf,Drop the devstack-single-node-centos-7 nodeset,MERGED,2024-03-04 19:31:38.000000000,2024-03-05 19:42:37.000000000,2024-03-05 19:40:19.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 19:31:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/devstack/commit/ede937162dfcac6954bf145fffcdbde7b148fb70', 'message': ""Drop the devstack-single-node-centos-7 nodeset\n\nOpenDev is preparing to remove centos-7 nodes on March 15[*]. This\nchange drops one nodeset definition which is the last remaining\nreference on DevStack's master branch.\n\n[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/\n\nChange-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf\n(cherry picked from commit bc59eb81a74a240efa52d5e7a61b1a395bf8eefc)\n""}, {'number': 2, 'created': '2024-03-04 19:56:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/devstack/commit/9c386445a6ee4c9a4936998aac181ec347c1d0ac', 'message': ""Drop the devstack-single-node-centos-7 nodeset\n\nOpenDev is preparing to remove centos-7 nodes on March 15[*]. This\nchange drops one nodeset definition which is the last remaining\nreference on DevStack's master branch.\n\n[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/\n\nChange-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf\n(cherry picked from commit bc59eb81a74a240efa52d5e7a61b1a395bf8eefc)\n""}, {'number': 3, 'created': '2024-03-04 19:57:01.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/devstack/commit/326163c1aed4fda2b763237a98a6bb7018b1faad', 'message': ""Drop the devstack-single-node-centos-7 nodeset\n\nOpenDev is preparing to remove centos-7 nodes on March 15[*]. This\nchange drops one nodeset definition which is the last remaining\nreference on DevStack's master branch. Also clean up a lingering\nreference to swift-dsvm-functional-py3 which no longer exists.\n\n[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/\n\nChange-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf\n(cherry picked from commit bc59eb81a74a240efa52d5e7a61b1a395bf8eefc)\n""}]",1,910991,326163c1aed4fda2b763237a98a6bb7018b1faad,14,2,3,5263,,,0,"Drop the devstack-single-node-centos-7 nodeset

OpenDev is preparing to remove centos-7 nodes on March 15[*]. This
change drops one nodeset definition which is the last remaining
reference on DevStack's master branch. Also clean up a lingering
reference to swift-dsvm-functional-py3 which no longer exists.

[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/

Change-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf
(cherry picked from commit bc59eb81a74a240efa52d5e7a61b1a395bf8eefc)
",git fetch https://review.opendev.org/openstack/devstack refs/changes/91/910991/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,ede937162dfcac6954bf145fffcdbde7b148fb70,drop-centos-7,, name: devstack-single-node-centos-7 nodes: - name: controller label: centos-7 groups: - name: tempest nodes: - controller - nodeset:,0,10
openstack%2Foctavia~911304,openstack/octavia,unmaintained/victoria,Ia6957fa2586ad0a5dcd29faa35f49380db9a0ea1,Update TOX_CONSTRAINTS_FILE for unmaintained/victoria,NEW,2024-03-05 18:57:24.000000000,2024-03-05 19:39:23.000000000,,"[{'_account_id': 19298}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-05 18:57:24.000000000', 'files': ['elements/octavia-lib/source-repository-octavia-lib', 'elements/amphora-agent/source-repository-amphora-agent'], 'web_link': 'https://opendev.org/openstack/octavia/commit/3dbb4b7542bf1fbf9de546987e5b78b3ca0c919f', 'message': 'Update TOX_CONSTRAINTS_FILE for unmaintained/victoria\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as unmaintained/victoria branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: Ia6957fa2586ad0a5dcd29faa35f49380db9a0ea1\n'}]",0,911304,3dbb4b7542bf1fbf9de546987e5b78b3ca0c919f,3,2,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for unmaintained/victoria

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as unmaintained/victoria branch, tests will
continue to use the upper-constraints list on master.

Change-Id: Ia6957fa2586ad0a5dcd29faa35f49380db9a0ea1
",git fetch https://review.opendev.org/openstack/octavia refs/changes/04/911304/1 && git format-patch -1 --stdout FETCH_HEAD,"['elements/octavia-lib/source-repository-octavia-lib', 'elements/amphora-agent/source-repository-amphora-agent']",2,3dbb4b7542bf1fbf9de546987e5b78b3ca0c919f,create-victoria,amphora-agent git /opt/amphora-agent https://opendev.org/openstack/octavia unmaintained/victoria,amphora-agent git /opt/amphora-agent https://opendev.org/openstack/octavia stable/victoria,2,2
openstack%2Fec2-api~911137,openstack/ec2-api,unmaintained/xena,Id6664bb73249bbc229772ff16a17b0b1d4d29de7,Update .gitreview for unmaintained/xena,NEW,2024-03-05 15:09:20.000000000,2024-03-05 19:39:10.000000000,,"[{'_account_id': 10234}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-05 15:09:20.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/ec2-api/commit/5b9c9d6c1d0ba37bfbd5b2ce642f6441327df852', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: Id6664bb73249bbc229772ff16a17b0b1d4d29de7\n'}]",0,911137,5b9c9d6c1d0ba37bfbd5b2ce642f6441327df852,3,2,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: Id6664bb73249bbc229772ff16a17b0b1d4d29de7
",git fetch https://review.opendev.org/openstack/ec2-api refs/changes/37/911137/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,5b9c9d6c1d0ba37bfbd5b2ce642f6441327df852,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fnova~877446,openstack/nova,master,I21109752ff1c56d3cefa58fcd36c68bf468e0a73,Disconnecting volume from the compute host,MERGED,2023-03-15 05:37:57.000000000,2024-03-05 19:37:50.000000000,2024-03-05 19:36:40.000000000,"[{'_account_id': 4393}, {'_account_id': 4690}, {'_account_id': 8864}, {'_account_id': 9535}, {'_account_id': 10135}, {'_account_id': 11604}, {'_account_id': 15334}, {'_account_id': 19234}, {'_account_id': 20733}, {'_account_id': 22348}, {'_account_id': 27615}, {'_account_id': 32761}, {'_account_id': 34860}]","[{'number': 1, 'created': '2023-03-15 05:37:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/717519ed8be9c1518e64b64bcb7e96f3bcdcb134', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 2, 'created': '2023-03-16 13:33:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/b03ebe37bcfc36efca41096bf0f678c7fdd69dbd', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 3, 'created': '2023-03-16 13:37:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a558211e390ebe9d6501642217c71de6f78efaf0', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 4, 'created': '2023-03-20 10:31:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/22d1a15f15fc0107b050c9cd425f9a3a8669f438', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 5, 'created': '2023-03-21 09:29:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e2264355a18fb0315b05d365b6f83262dffda12f', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 6, 'created': '2023-06-27 15:17:40.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ba7dd04e0cd95a69a902e9be129ac0980ce8e6aa', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 7, 'created': '2023-07-11 12:55:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ce96d40f0c9ed84404e0ce9cdd13dadbe741207e', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 8, 'created': '2023-07-12 15:59:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/fa40a53bd45f3019c7dcd95a556ce9d67f6addda', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 9, 'created': '2023-07-13 11:24:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/fd4f2307850d90f36d7018b4a70e18424d7f89f8', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 10, 'created': '2023-07-13 15:38:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/74b8efd76a43ad90e2fb7ffd060ebe7dad78a10f', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 11, 'created': '2023-07-14 07:18:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/3b9a275b8f107e36a598dd4cd78333e04bb18894', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 12, 'created': '2023-07-14 16:58:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/9cbcc2aedf6831c87ed57ac8b1044de927951912', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 13, 'created': '2023-07-17 11:45:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/5bf6ffce65b26d2d6ce99e4f0a620cbe4db41226', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 14, 'created': '2023-07-18 10:33:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/5b646bfbfe69d5152e42c0f419e663f97d5ea71d', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 15, 'created': '2023-07-21 10:50:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ba7b3d0d2151c215107569e5291f81182b40322a', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 16, 'created': '2023-07-21 12:00:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/35535f89a4d7ab9c47d61e11efd022296bfece9f', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 17, 'created': '2023-07-24 14:21:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/0c3a185c7b168e6a4e8cc47aa58ecbc9bcffc884', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 18, 'created': '2023-07-24 14:39:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d6c2ef22147c319dbe68fbebceeb41631cea8ada', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 19, 'created': '2023-07-25 14:14:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8a6a6804007a4b11acd6e65913305d8d287b5763', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 20, 'created': '2023-08-07 07:27:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/092418b6651b0e089cb53cd8e16f47075c9bebdb', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 21, 'created': '2023-08-16 05:11:40.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a9143e1a2d6a5233847d0541f7b4691af7c59a3b', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 22, 'created': '2023-09-07 15:48:04.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e340f786419193ff267c75fd025d787eb3b51cb1', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 23, 'created': '2024-01-19 05:44:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/32424a14877e14b272db32c70b66bdb3d0041b56', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 24, 'created': '2024-02-12 15:13:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/9c980798fe7e1bb5f9f6e173457a9b0d22642bdd', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 25, 'created': '2024-02-14 10:26:36.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/341e8984d497f35aa2d23320e13e75af886d2a85', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 26, 'created': '2024-02-15 05:43:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/44ef0a388ce3af7a433f9babc33ecffa2102a1c5', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 27, 'created': '2024-02-15 08:47:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/460d6394325ca530919603c8f2edf749dd96a58a', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 28, 'created': '2024-02-29 19:46:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/7fb1cf9e73fc041a2582fcb67fe8b925f1c76d87', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\nAdded HostConflict exception\n\nFixes dedent in cmd/manange.py\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}, {'number': 29, 'created': '2024-03-01 06:27:16.000000000', 'files': ['nova/exception.py', 'nova/tests/unit/cmd/test_manage.py', 'doc/source/cli/nova-manage.rst', 'nova/cmd/manage.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/a8f81d5f08692c16d538af3197460d9426cc00a1', 'message': 'Disconnecting volume from the compute host\n\ncmd nova-manage volume_attachment refresh vm-id vol-id connetor\n\nThere were cases where the instance said to live in compute#1 but the\nconnection_info in the BDM record was for compute#2, and when the script\ncalled `remote_volume_connection` then nova would call os-brick on\ncompute#1 (the wrong node) and try to detach it.\n\nIn some case os-brick would mistakenly think that the volume was\nattached (because the target and lun matched an existing volume on the\nhost) and would try to disconnect, resulting in errors on the compute\nlogs.\n\n- Added HostConflict exception\n- Fixes dedent in cmd/manange.py\n- Updates nova-mange doc\n\nCloses-Bug: #2012365\nChange-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73\n'}]",86,877446,a8f81d5f08692c16d538af3197460d9426cc00a1,178,13,29,34860,,,0,"Disconnecting volume from the compute host

cmd nova-manage volume_attachment refresh vm-id vol-id connetor

There were cases where the instance said to live in compute#1 but the
connection_info in the BDM record was for compute#2, and when the script
called `remote_volume_connection` then nova would call os-brick on
compute#1 (the wrong node) and try to detach it.

In some case os-brick would mistakenly think that the volume was
attached (because the target and lun matched an existing volume on the
host) and would try to disconnect, resulting in errors on the compute
logs.

- Added HostConflict exception
- Fixes dedent in cmd/manange.py
- Updates nova-mange doc

Closes-Bug: #2012365
Change-Id: I21109752ff1c56d3cefa58fcd36c68bf468e0a73
",git fetch https://review.opendev.org/openstack/nova refs/changes/46/877446/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/cmd/manage.py'],1,717519ed8be9c1518e64b64bcb7e96f3bcdcb134,lp/2012365," cctxt, instance, volume_id, connector['host'])"," cctxt, instance, volume_id, instance.host)",1,1
openstack%2Fdesignate-dashboard~911263,openstack/designate-dashboard,unmaintained/xena,I45cbf39f223139eea3ab667446174caaa0bfae8f,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:41:38.000000000,2024-03-05 19:35:51.000000000,,"[{'_account_id': 19298}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-05 18:41:38.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/designate-dashboard/commit/2e4e7a3d8aee83ff397c5b08c5e2cbadd931d8fd', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I45cbf39f223139eea3ab667446174caaa0bfae8f\n'}]",0,911263,2e4e7a3d8aee83ff397c5b08c5e2cbadd931d8fd,3,2,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I45cbf39f223139eea3ab667446174caaa0bfae8f
",git fetch https://review.opendev.org/openstack/designate-dashboard refs/changes/63/911263/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,2e4e7a3d8aee83ff397c5b08c5e2cbadd931d8fd,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fpuppet-designate~909705,openstack/puppet-designate,unmaintained/yoga,Ief988f4f9be7b4ec65689cf4fac9ad432cbf29d2,Update .gitreview for unmaintained/yoga,NEW,2024-02-21 16:44:15.000000000,2024-03-05 19:35:07.000000000,,[{'_account_id': 19298}],"[{'number': 1, 'created': '2024-02-21 16:44:15.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/puppet-designate/commit/58a732b300a8ce91aad100d0e19b3a8c3ec2721c', 'message': 'Update .gitreview for unmaintained/yoga\n\nChange-Id: Ief988f4f9be7b4ec65689cf4fac9ad432cbf29d2\n'}]",0,909705,58a732b300a8ce91aad100d0e19b3a8c3ec2721c,2,1,1,22816,,,0,"Update .gitreview for unmaintained/yoga

Change-Id: Ief988f4f9be7b4ec65689cf4fac9ad432cbf29d2
",git fetch https://review.opendev.org/openstack/puppet-designate refs/changes/05/909705/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,58a732b300a8ce91aad100d0e19b3a8c3ec2721c,create-yoga,defaultbranch=unmaintained/yoga,defaultbranch=stable/yoga,1,1
openstack%2Fcloudkitty~908749,openstack/cloudkitty,master,I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06,Add grenade tests,MERGED,2024-02-11 18:03:58.000000000,2024-03-05 19:34:46.000000000,2024-03-05 19:30:46.000000000,"[{'_account_id': 15197}, {'_account_id': 22348}, {'_account_id': 25277}, {'_account_id': 28356}]","[{'number': 1, 'created': '2024-02-11 18:03:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/8e57a74f0661d22524056d5122ede44a9bb0a918', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 2, 'created': '2024-02-11 18:06:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/87f3a0c2ef8f3f5eed85eb311ddedf3f7a2066b7', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 3, 'created': '2024-02-11 20:24:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/50026e3cd27bfed18c77368fa4d2593cb7494c89', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 4, 'created': '2024-02-11 22:48:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/410abc7f50609a3659fd01ef576fc5568bcd6e71', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 5, 'created': '2024-02-12 00:23:34.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/c17811cb6d3c332ee0163678fdc9325857bb33a4', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 6, 'created': '2024-02-12 08:07:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/296c305b44d591baea579633c704d21b6e014dc0', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 7, 'created': '2024-02-12 11:46:36.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/ce17efea7b616dfbe21497bc8bb471288af445cc', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 8, 'created': '2024-02-12 12:41:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/8f9c50b6e9005d495872c63603f52fd2d27dd38f', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 9, 'created': '2024-02-12 18:23:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/af531f09aaffacb70a60b92a1442d7770c04cfc0', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 10, 'created': '2024-02-19 17:20:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/261d87987e63297bbb9079d720958ca9d6e2dcac', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 11, 'created': '2024-02-19 17:49:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/141b18979fc463f190b01c85c12cc3b3109252a7', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 12, 'created': '2024-02-19 19:34:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/7260199a90d4031d66af75254751d7b925aa4fd2', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 13, 'created': '2024-02-19 20:23:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/03829930778ebf1b9a4bfbebb7a56b974424c290', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 14, 'created': '2024-02-19 21:09:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/14e6e042456956383f6a0a20c0c1c9012a0b54b5', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 15, 'created': '2024-02-19 22:41:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/83d14d3fc45598012b1a6654107d5c247d2f7cfa', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 16, 'created': '2024-02-20 00:18:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/fe143cba8ef66533b2057474602a016c1bb97676', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 17, 'created': '2024-02-20 12:15:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/4407b3f34f83a4a14ec0df43a8428169d590e466', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 18, 'created': '2024-02-20 12:44:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/e3d969396756e1f5b189ecdbf7a85941da2d4b10', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 19, 'created': '2024-02-20 13:40:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/4b15f48ca186580f3f16501eae9c3576ebfd5bac', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 20, 'created': '2024-02-20 14:46:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/f17cac0381c861f617ffdc2c84f350e97b7995f6', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 21, 'created': '2024-02-20 15:56:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/d672b9381535a41c56d7bae3b67b9890a372dcfa', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 22, 'created': '2024-02-20 16:45:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/0ac4174acc36915ef6e51b41b3e4664fbc3780e3', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 23, 'created': '2024-02-20 17:12:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/4cc8c8e1ec881728e7323bf74f15e68cd0f6687b', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 24, 'created': '2024-02-20 19:33:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/8c1e977f9b55aaa95ba70a8a1e9e04aca41d1f95', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}, {'number': 25, 'created': '2024-03-05 17:06:47.000000000', 'files': ['devstack/upgrade/shutdown.sh', '.zuul.yaml', 'devstack/upgrade/upgrade.sh', 'devstack/upgrade/settings', 'devstack/upgrade/resources.sh'], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/3114c3f979a6f08e1460462ebcc463439a9c20d3', 'message': 'Add grenade tests\n\nChange-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06\n'}]",16,908749,3114c3f979a6f08e1460462ebcc463439a9c20d3,61,4,25,30695,,,0,"Add grenade tests

Change-Id: I427d4b91cc5da9e9b2ffdb4239a5256ab44a1e06
",git fetch https://review.opendev.org/openstack/cloudkitty refs/changes/49/908749/1 && git format-patch -1 --stdout FETCH_HEAD,"['devstack/upgrade/shutdown.sh', '.zuul.yaml', 'devstack/plugin.sh', 'devstack/upgrade/upgrade.sh', 'devstack/upgrade/settings', 'devstack/upgrade/resources.sh']",6,8e57a74f0661d22524056d5122ede44a9bb0a918,add-grenade-tests,"#!/bin/bash set -o errexit source $GRENADE_DIR/grenaderc source $GRENADE_DIR/functions source $TOP_DIR/openrc admin set -o xtrace CLOUDKITTY_GRENADE_DIR=$(dirname $0) CK_SERVICE_NAME='test_service' CK_FIELD_NAME='test_field' CK_MAPPING_VALUE='test_value' function create { CK_SERVICE_ID=$(openstack rating hashmap service create $CK_SERVICE_NAME -c 'Service ID' -f value) CK_FIELD_ID=$(openstack rating hashmap field create $CK_SERVICE_ID $CK_FIELD_NAME -c 'Field ID' -f value) openstack rating hashmap mapping create --field-id $CK_FIELD_ID --value $CK_MAPPING_VALUE 3 echo ""Cloudkitty create: SUCCESS"" } function verify { CK_SERVICE_NAME_VERIFY=$(openstack rating hashmap service list -c 'Name' -f value) if [ $CK_SERVICE_NAME_VERIFY != $CK_SERVICE_NAME ]; then echo ""Cloudkitty verify invalid service name. Expected $CK_SERVICE_NAME got $CK_SERVICE_NAME_VERIFY."" errexit fi CK_SERVICE_ID=$(openstack rating hashmap service list -c 'Service ID' -f value) CK_FIELD_NAME_VERIFY=$(openstack rating hashmap field list $CK_SERVICE_ID -c 'Name' -f value) if [ $CK_FIELD_NAME_VERIFY != $CK_FIELD_NAME ]; then echo ""Cloudkitty verify invalid field name. Expected $CK_FIELD_NAME got $CK_FIELD_NAME_VERIFY."" errexit fi CK_FIELD_ID=$(openstack rating hashmap field list $CK_SERVICE_ID -c 'Field ID' -f value) CK_MAPPING_VALUE_VERIFY=$(openstack rating hashmap mapping list --field-id $CK_FIELD_ID -c 'Value' -f value) if [ $CK_MAPPING_VALUE_VERIFY != $CK_MAPPING_VALUE ]; then echo ""Cloudkitty verify invalid mapping value. Expected $CK_MAPPING_VALUE got $CK_MAPPING_VALUE_VERIFY."" errexit fi echo ""Cloudkitty verify: SUCCESS"" } function verify_noapi { echo ""Cloudkitty verify_noapi: SUCCESS"" } function destroy { CK_SERVICE_ID=$(openstack rating hashmap service list -c 'Service ID' -f value) openstack rating hashmap service delete $CK_SERVICE_ID echo ""Cloudkitty destroy: SUCCESS"" } # Dispatcher case $1 in ""create"") create ;; ""verify_noapi"") verify_noapi ;; ""verify"") verify ;; ""destroy"") destroy ;; ""force_destroy"") set +o errexit destroy ;; esac ",,218,2
openstack%2Fironic~910651,openstack/ironic,stable/2023.2,I3373d1d7d22010b4b2dc783aa37b978505fc0103,ci: multiple fixes,ABANDONED,2024-02-29 17:30:07.000000000,2024-03-05 19:23:10.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-02-29 17:30:07.000000000', 'files': ['zuul.d/ironic-jobs.yaml', 'devstack/lib/ironic', 'devstack/plugin.sh', 'zuul.d/project.yaml'], 'web_link': 'https://opendev.org/openstack/ironic/commit/333b3f0464225b393470c2ec291683e83aa7af84', 'message': 'ci: multiple fixes\n\n* Reduces standalone job concurrency to 1 to reduce overall\n  parallelism.\n* Makes standalone jobs non-voting.\n* Removes the dnsmasq downgrade now that we sort of think it might\n  be semi-okay, while we continue to try and figure out what is\n  going sideways on multiple branches.\n\nChange-Id: I3373d1d7d22010b4b2dc783aa37b978505fc0103\n'}]",0,910651,333b3f0464225b393470c2ec291683e83aa7af84,4,1,1,11655,,,0,"ci: multiple fixes

* Reduces standalone job concurrency to 1 to reduce overall
  parallelism.
* Makes standalone jobs non-voting.
* Removes the dnsmasq downgrade now that we sort of think it might
  be semi-okay, while we continue to try and figure out what is
  going sideways on multiple branches.

Change-Id: I3373d1d7d22010b4b2dc783aa37b978505fc0103
",git fetch https://review.opendev.org/openstack/ironic refs/changes/51/910651/1 && git format-patch -1 --stdout FETCH_HEAD,"['zuul.d/ironic-jobs.yaml', 'devstack/lib/ironic', 'devstack/plugin.sh', 'zuul.d/project.yaml']",4,333b3f0464225b393470c2ec291683e83aa7af84,, - ironic-standalone: voting: false - ironic-standalone-redfish: voting: false # NOTE(TheJulia): Disabling standalone from gating until we can figure # out what exactly is breaking the jobs on multiple branches. # - ironic-standalone # - ironic-standalone-redfish, - ironic-standalone - ironic-standalone-redfish - ironic-standalone - ironic-standalone-redfish,10,19
openstack%2Fironic~910537,openstack/ironic,stable/2023.2,Ia7a9835241046f98c2cacb9bbc5156a14c568c1d,ci: stable-only: remove metal3-integration ci job,ABANDONED,2024-02-28 17:09:35.000000000,2024-03-05 19:22:56.000000000,,"[{'_account_id': 10342}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-28 17:09:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/31cc785c568bdef835bf1e296e61d49f7ec67cc3', 'message': 'ci: stable-only: remove metal3-integration ci job\n\nConsensus from IRC today yielded that we should likely just\ndrop metal3-integration.\n\nhttps: //meetings.opendev.org/irclogs/%23openstack-ironic/%23openstack-ironic.2024-02-28.log.html#t2024-02-28T16:37:48\n\nChange-Id: Ia7a9835241046f98c2cacb9bbc5156a14c568c1d\n'}, {'number': 2, 'created': '2024-03-05 19:22:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/869556d5d465a786616e54641be5f5de8adc9008', 'message': 'ci: stable-only: remove metal3-integration ci job\n\nConsensus from IRC today yielded that we should likely just\ndrop metal3-integration.\n\nhttps: //meetings.opendev.org/irclogs/%23openstack-ironic/%23openstack-ironic.2024-02-28.log.html#t2024-02-28T16:37:48\n\nChange-Id: Ia7a9835241046f98c2cacb9bbc5156a14c568c1d\n'}]",0,910537,869556d5d465a786616e54641be5f5de8adc9008,6,2,2,11655,,,0,"ci: stable-only: remove metal3-integration ci job

Consensus from IRC today yielded that we should likely just
drop metal3-integration.

https: //meetings.opendev.org/irclogs/%23openstack-ironic/%23openstack-ironic.2024-02-28.log.html#t2024-02-28T16:37:48

Change-Id: Ia7a9835241046f98c2cacb9bbc5156a14c568c1d
",git fetch https://review.opendev.org/openstack/ironic refs/changes/37/910537/1 && git format-patch -1 --stdout FETCH_HEAD,['zuul.d/project.yaml'],1,31cc785c568bdef835bf1e296e61d49f7ec67cc3,,, - metal3-integration - metal3-integration,0,2
openstack%2Foctavia~911314,openstack/octavia,unmaintained/wallaby,I78164123a710b3323d7a87f02b7e0e9678b3ada7,Update TOX_CONSTRAINTS_FILE for unmaintained/wallaby,NEW,2024-03-05 18:58:34.000000000,2024-03-05 19:19:29.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:58:34.000000000', 'files': ['elements/octavia-lib/source-repository-octavia-lib', 'elements/amphora-agent/source-repository-amphora-agent'], 'web_link': 'https://opendev.org/openstack/octavia/commit/5e67620659820428a31f677b85061373687e1ddf', 'message': 'Update TOX_CONSTRAINTS_FILE for unmaintained/wallaby\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as unmaintained/wallaby branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: I78164123a710b3323d7a87f02b7e0e9678b3ada7\n'}]",0,911314,5e67620659820428a31f677b85061373687e1ddf,2,1,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for unmaintained/wallaby

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as unmaintained/wallaby branch, tests will
continue to use the upper-constraints list on master.

Change-Id: I78164123a710b3323d7a87f02b7e0e9678b3ada7
",git fetch https://review.opendev.org/openstack/octavia refs/changes/14/911314/1 && git format-patch -1 --stdout FETCH_HEAD,"['elements/octavia-lib/source-repository-octavia-lib', 'elements/amphora-agent/source-repository-amphora-agent']",2,5e67620659820428a31f677b85061373687e1ddf,create-wallaby,amphora-agent git /opt/amphora-agent https://opendev.org/openstack/octavia unmaintained/wallaby,amphora-agent git /opt/amphora-agent https://opendev.org/openstack/octavia stable/wallaby,2,2
openstack%2Foctavia~911323,openstack/octavia,unmaintained/xena,Ib4509cd6a78ffc03c517f78c09e4343a5aae596b,Update TOX_CONSTRAINTS_FILE for unmaintained/xena,NEW,2024-03-05 18:59:44.000000000,2024-03-05 19:19:02.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:59:44.000000000', 'files': ['elements/octavia-lib/source-repository-octavia-lib', 'elements/amphora-agent/source-repository-amphora-agent'], 'web_link': 'https://opendev.org/openstack/octavia/commit/a5e845d40452f8ee9c79040208604072d98b516b', 'message': 'Update TOX_CONSTRAINTS_FILE for unmaintained/xena\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as unmaintained/xena branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: Ib4509cd6a78ffc03c517f78c09e4343a5aae596b\n'}]",0,911323,a5e845d40452f8ee9c79040208604072d98b516b,2,1,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for unmaintained/xena

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as unmaintained/xena branch, tests will
continue to use the upper-constraints list on master.

Change-Id: Ib4509cd6a78ffc03c517f78c09e4343a5aae596b
",git fetch https://review.opendev.org/openstack/octavia refs/changes/23/911323/1 && git format-patch -1 --stdout FETCH_HEAD,"['elements/octavia-lib/source-repository-octavia-lib', 'elements/amphora-agent/source-repository-amphora-agent']",2,a5e845d40452f8ee9c79040208604072d98b516b,create-xena,amphora-agent git /opt/amphora-agent https://opendev.org/openstack/octavia unmaintained/xena,amphora-agent git /opt/amphora-agent https://opendev.org/openstack/octavia stable/xena,2,2
openstack%2Freleases~910409,openstack/releases,master,Iade3b9c33fa46c57512ac8728e70c3c6c2995739,[cinder] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:56:37.000000000,2024-03-05 19:17:22.000000000,2024-03-05 19:17:22.000000000,"[{'_account_id': 8313}, {'_account_id': 9236}, {'_account_id': 13252}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 27615}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-02-27 18:56:37.000000000', 'files': ['deliverables/xena/cinder.yaml', 'deliverables/victoria/os-brick.yaml', 'deliverables/wallaby/os-brick.yaml', 'deliverables/xena/cinderlib.yaml', 'deliverables/wallaby/python-brick-cinderclient-ext.yaml', 'deliverables/xena/os-brick.yaml', 'deliverables/wallaby/cinder.yaml', 'deliverables/victoria/python-cinderclient.yaml', 'deliverables/wallaby/cinderlib.yaml', 'deliverables/xena/python-brick-cinderclient-ext.yaml', 'deliverables/victoria/python-brick-cinderclient-ext.yaml', 'deliverables/victoria/cinderlib.yaml', 'deliverables/victoria/cinder.yaml', 'deliverables/xena/python-cinderclient.yaml', 'deliverables/wallaby/python-cinderclient.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/d6dce203b0a0f4282f880f6dc77f09ff43149b3a', 'message': '[cinder] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: Iade3b9c33fa46c57512ac8728e70c3c6c2995739\n'}]",2,910409,d6dce203b0a0f4282f880f6dc77f09ff43149b3a,11,7,1,17685,,,0,"[cinder] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: Iade3b9c33fa46c57512ac8728e70c3c6c2995739
",git fetch https://review.opendev.org/openstack/releases refs/changes/09/910409/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/xena/cinder.yaml', 'deliverables/victoria/os-brick.yaml', 'deliverables/wallaby/os-brick.yaml', 'deliverables/xena/cinderlib.yaml', 'deliverables/wallaby/python-brick-cinderclient-ext.yaml', 'deliverables/xena/os-brick.yaml', 'deliverables/wallaby/cinder.yaml', 'deliverables/victoria/python-cinderclient.yaml', 'deliverables/wallaby/cinderlib.yaml', 'deliverables/xena/python-brick-cinderclient-ext.yaml', 'deliverables/victoria/python-brick-cinderclient-ext.yaml', 'deliverables/victoria/cinderlib.yaml', 'deliverables/victoria/cinder.yaml', 'deliverables/xena/python-cinderclient.yaml', 'deliverables/wallaby/python-cinderclient.yaml']",15,d6dce203b0a0f4282f880f6dc77f09ff43149b3a,vwx-unmaintained, - version: wallaby-eom projects: - repo: openstack/python-cinderclient hash: 3d309b785ad7a58fb13176d1a9b9770afb36c238 - name: unmaintained/wallaby location: wallaby-eom release-notes: https://docs.openstack.org/releasenotes/python-cinderclient/wallaby.html,release-notes: https://docs.openstack.org/releasenotes/python-cinderclient/wallaby.html,102,6
openstack%2Fzaqar~809567,openstack/zaqar,stable/xena,Id4c6a44417276950bd1fb92c2abc7c943960818a,Run TripleO jobs on CentOS8 instead of CentOS7,ABANDONED,2021-09-17 12:33:46.000000000,2024-03-05 19:16:46.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-09-17 12:33:46.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/zaqar/commit/7992a24446f24517429cb3a48092b3966f804433', 'message': 'Run TripleO jobs on CentOS8 instead of CentOS7\n\nAs we are cleaning up the c7 jobs and obselete featuresets [1].\nThis change replaces usage of CentOS7 in TripleO jobs by CentOS8.\n\n[1]: https://review.opendev.org/q/topic:%22cleanup_featuresets%22+(status:open%20OR%20status:merged)\n\nChange-Id: Id4c6a44417276950bd1fb92c2abc7c943960818a\n'}]",0,809567,7992a24446f24517429cb3a48092b3966f804433,3,1,1,20182,,,0,"Run TripleO jobs on CentOS8 instead of CentOS7

As we are cleaning up the c7 jobs and obselete featuresets [1].
This change replaces usage of CentOS7 in TripleO jobs by CentOS8.

[1]: https://review.opendev.org/q/topic:%22cleanup_featuresets%22+(status:open%20OR%20status:merged)

Change-Id: Id4c6a44417276950bd1fb92c2abc7c943960818a
",git fetch https://review.opendev.org/openstack/zaqar refs/changes/67/809567/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,7992a24446f24517429cb3a48092b3966f804433,c7-to-c8-stable/xena, - tripleo-ci-centos-8-scenario002-standalone, - tripleo-ci-centos-7-scenario002-standalone,1,1
openstack%2Fzaqar~828348,openstack/zaqar,stable/xena,I2f17523b52f43f8922dcdb6f3a706222a69ab707,Xena-only : Replace job template for stable/xena,ABANDONED,2022-02-08 14:22:30.000000000,2024-03-05 19:16:38.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-02-08 14:22:30.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/zaqar/commit/c800b742340c71f1dc2ec3f9a16fa35548d0d474', 'message': 'Xena-only : Replace job template for stable/xena\n\nIt seems job template has not been updated since Victoria. This change\nreplaces the template by the one for Xena release.\n\nChange-Id: I2f17523b52f43f8922dcdb6f3a706222a69ab707\n'}]",0,828348,c800b742340c71f1dc2ec3f9a16fa35548d0d474,3,1,1,9816,,,0,"Xena-only : Replace job template for stable/xena

It seems job template has not been updated since Victoria. This change
replaces the template by the one for Xena release.

Change-Id: I2f17523b52f43f8922dcdb6f3a706222a69ab707
",git fetch https://review.opendev.org/openstack/zaqar refs/changes/48/828348/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,c800b742340c71f1dc2ec3f9a16fa35548d0d474,, - openstack-python3-xena-jobs, - openstack-python3-ussuri-jobs,1,1
openstack%2Fzaqar~892305,openstack/zaqar,stable/xena,I16436aa19da2cf53951c9ad27bca14033194651a,Use processutils to fix TypeError in subprocess,ABANDONED,2023-08-22 13:10:39.000000000,2024-03-05 19:16:30.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-08-22 13:10:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/zaqar/commit/c71dc2a9afcf3d99cf32c1aaea510c7780393850', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}, {'number': 2, 'created': '2023-08-22 13:11:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/zaqar/commit/ab4a48f9f9a030ae1b79230c6c5a88b069e00cdb', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}, {'number': 3, 'created': '2023-08-22 14:28:53.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/zaqar/commit/8ddeef21fb860d925d9cc7752385367724d3052b', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}, {'number': 4, 'created': '2023-08-23 03:06:20.000000000', 'files': ['requirements.txt', 'zaqar/tests/unit/notification/test_notifier.py', 'zaqar/notification/tasks/mailto.py', 'lower-constraints.txt'], 'web_link': 'https://opendev.org/openstack/zaqar/commit/fa15fa6fd6d492fb37959cb2651ab98a927229f7', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}]",0,892305,fa15fa6fd6d492fb37959cb2651ab98a927229f7,7,1,4,21757,,,0,"Use processutils to fix TypeError in subprocess

Calling processutils.execute() other than subprocess to
fix bytes-like and str issue in python3.

Closes-bug: #2029392
Change-Id: I16436aa19da2cf53951c9ad27bca14033194651a
(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)
",git fetch https://review.opendev.org/openstack/zaqar refs/changes/05/892305/1 && git format-patch -1 --stdout FETCH_HEAD,"['requirements.txt', 'zaqar/tests/unit/notification/test_notifier.py', 'zaqar/notification/tasks/mailto.py']",3,c71dc2a9afcf3d99cf32c1aaea510c7780393850,bug/2029392-stable/2023.1-stable/zed-stable/yoga-stable/xena,"from oslo_concurrency import processutils cmd = conf_n.smtp_command.split(' ') processutils.execute(*cmd, process_input=msg.as_string())","import subprocess p = subprocess.Popen(conf_n.smtp_command.split(' '), stdin=subprocess.PIPE) p.communicate(msg.as_string())",15,10
openstack%2Fpython-zaqarclient~809836,openstack/python-zaqarclient,stable/xena,Icbd5b1f82214393caf96a926d2f073d9dadb7107,Update .gitreview for stable/xena,ABANDONED,2021-09-17 16:40:28.000000000,2024-03-05 19:16:13.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-09-17 16:40:28.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/f3c7d77a39f0a852063d1caff53d8b33fa4215fb', 'message': 'Update .gitreview for stable/xena\n\nChange-Id: Icbd5b1f82214393caf96a926d2f073d9dadb7107\n'}]",0,809836,f3c7d77a39f0a852063d1caff53d8b33fa4215fb,3,1,1,22816,,,0,"Update .gitreview for stable/xena

Change-Id: Icbd5b1f82214393caf96a926d2f073d9dadb7107
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/36/809836/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,f3c7d77a39f0a852063d1caff53d8b33fa4215fb,create-xena,defaultbranch=stable/xena,,1,0
openstack%2Fpython-zaqarclient~809837,openstack/python-zaqarclient,stable/xena,I20d9286f35837cb6415f5385e835f47e3b11628f,Update TOX_CONSTRAINTS_FILE for stable/xena,ABANDONED,2021-09-17 16:40:29.000000000,2024-03-05 19:16:04.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-09-17 16:40:29.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/fdbb8bb628be39cc666a1bb825b942e65166fd49', 'message': 'Update TOX_CONSTRAINTS_FILE for stable/xena\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as stable/xena branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: I20d9286f35837cb6415f5385e835f47e3b11628f\n'}]",0,809837,fdbb8bb628be39cc666a1bb825b942e65166fd49,3,1,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for stable/xena

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as stable/xena branch, tests will
continue to use the upper-constraints list on master.

Change-Id: I20d9286f35837cb6415f5385e835f47e3b11628f
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/37/809837/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,fdbb8bb628be39cc666a1bb825b942e65166fd49,create-xena, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/xena}, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master},1,1
openstack%2Fpython-octaviaclient~911325,openstack/python-octaviaclient,unmaintained/xena,I9a3c7748eaef8f41e936edcf69a8a7cb6a4e497c,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:59:56.000000000,2024-03-05 19:16:03.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:59:56.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-octaviaclient/commit/5351d628ca0fa770c47738387e7d219f8ba46a95', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I9a3c7748eaef8f41e936edcf69a8a7cb6a4e497c\n'}]",0,911325,5351d628ca0fa770c47738387e7d219f8ba46a95,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I9a3c7748eaef8f41e936edcf69a8a7cb6a4e497c
",git fetch https://review.opendev.org/openstack/python-octaviaclient refs/changes/25/911325/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,5351d628ca0fa770c47738387e7d219f8ba46a95,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fpython-zaqarclient~855860,openstack/python-zaqarclient,stable/xena,I7b6fc7af500f77a3e38ba98ef5960913ec60131f,Stable-only: Fix missing updates for stable branch creation,ABANDONED,2022-09-05 09:06:11.000000000,2024-03-05 19:15:56.000000000,,"[{'_account_id': 9816}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-09-05 09:06:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/a87796eddc678966ba715a429f4ccb0cf7a54e74', 'message': 'Stable-only: Fix missing updates for stable branch creation\n\nThis change fixes the following items still outdated in stable\nbranches.\n - .gitreview\n - TOX_CONSTRAINTS_FILE\n - supported python runtimes\n - job template\n\nThis also removes the broken lower constraints job.\n\nChange-Id: I7b6fc7af500f77a3e38ba98ef5960913ec60131f\n'}, {'number': 2, 'created': '2022-09-05 09:47:42.000000000', 'files': ['.gitreview', '.zuul.yaml', 'setup.cfg', 'tox.ini'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/e44a24d6afb7139720ac9a095cd73c76204395d8', 'message': 'Stable-only: Fix missing updates for stable branch creation\n\nThis change fixes the following items still outdated in stable\nbranches.\n - .gitreview\n - TOX_CONSTRAINTS_FILE\n - supported python runtimes\n - job template\n\nThis also removes the broken lower constraints job.\n\nChange-Id: I7b6fc7af500f77a3e38ba98ef5960913ec60131f\n'}]",0,855860,e44a24d6afb7139720ac9a095cd73c76204395d8,6,2,2,9816,,,0,"Stable-only: Fix missing updates for stable branch creation

This change fixes the following items still outdated in stable
branches.
 - .gitreview
 - TOX_CONSTRAINTS_FILE
 - supported python runtimes
 - job template

This also removes the broken lower constraints job.

Change-Id: I7b6fc7af500f77a3e38ba98ef5960913ec60131f
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/60/855860/1 && git format-patch -1 --stdout FETCH_HEAD,"['.gitreview', '.zuul.yaml', 'setup.cfg', 'tox.ini']",4,a87796eddc678966ba715a429f4ccb0cf7a54e74,, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/xena}, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master},5,2
openstack%2Fos-vif~886716,openstack/os-vif,stable/xena,Id9ef7074634a0f23d67a4401fa8fca363b51bb43,set default qos policy,ABANDONED,2023-06-22 06:15:06.000000000,2024-03-05 19:15:32.000000000,,"[{'_account_id': 8864}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-06-22 06:15:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/417cc3d6e4ee1f31b508e223c1470ef847dae775', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts:\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n\nNOTE(auniyal):\nadded datapath and qos_type parameter in create_ovs_vif_port function\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 00bd38a042b5665c24344eb746d51225961426ad)\n'}, {'number': 2, 'created': '2023-06-22 18:04:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/9e5dd4062bff79a945b2ab8bacd93b2f2d3bb088', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\n  ovs.py: added _get_qos_type\n  ovsdb_lib.py: updated _set_mtu_request\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 2af40e77a813e29e3066fe4188220d3a524e19c3)\n'}, {'number': 3, 'created': '2023-06-27 14:49:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/936a7c8d06e1bec1200ddc5c76463084994fb1ac', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts: Zed to Yoga\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\novs.py: added _get_qos_type config option\novsdb_lib.py: updated delete_ovs_vif_port\nadded funtional test module test_plugin\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 22ff6ac373892e13594e398d36ddee195b8113ed)\n'}, {'number': 4, 'created': '2023-06-27 15:10:32.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/4490c4d97f397b99f1804b7dac564b8626d132a2', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts: Zed to Yoga\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\novs.py: added _get_qos_type config option\novsdb_lib.py: updated delete_ovs_vif_port\nadded funtional test module test_plugin\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 57df00f746c9faf5416b02160fdfa277bc4ca388)\n'}, {'number': 5, 'created': '2023-06-29 09:43:58.000000000', 'files': ['vif_plug_ovs/tests/functional/test_plugin.py', 'vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py', 'releasenotes/notes/default-qos-policy-for-ovs-26f8806046a59c82.yaml', 'vif_plug_ovs/tests/unit/test_plugin.py', 'vif_plug_ovs/ovs.py', 'vif_plug_ovs/ovsdb/ovsdb_lib.py', 'vif_plug_ovs/tests/functional/base.py', 'vif_plug_ovs/ovsdb/impl_idl.py', 'os_vif/tests/functional/internal/command/ip/test_impl_pyroute2.py'], 'web_link': 'https://opendev.org/openstack/os-vif/commit/ddc08d59ef07bb7d40179e486af6a0b3b49db00e', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts:\n    vif_plug_ovs/ovs.py\n    vif_plug_ovs/ovsdb/ovsdb_lib.py\n    vif_plug_ovs/tests/functional/base.py\n    vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal): Zed to Yoga\nConflicts and differences\n   The conflicts are due to changes\n   I7d834a0c31c801e96002f42f86409ba274c234e6: Delete trunk bridges to avoid race with Neutron\n\n   differences and changes:\n   vif_plug_ovs/tests/functional/test_plugin.py was not present in stable/yoga\n   added only tests and supporting items, which is almost everything, and removed trunk test and trunk attributes from setup.\n   vif_plug_ovs/tests/functional/base.py\n   manually added _del_bridge and _check_bridge from change I7d834a0c31c801e96002f42f86409ba274c234e6\n   because they were required to pass added functional tests.\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit cb8c2104e0505bad020738b17a9c69b7558cadab)\n'}]",0,886716,ddc08d59ef07bb7d40179e486af6a0b3b49db00e,11,2,5,34860,,,0,"set default qos policy

This change modifies the os-vif ovs plugin to set a default
tc qdisc on ovs interface when the host os is not windows
and the system datapath is used.

This change fixes a ""silent"" bug in the functional test code due
to a change in an ovsdbapp function signiture to accpet a new paramater.

Conflicts:
    vif_plug_ovs/ovs.py
    vif_plug_ovs/ovsdb/ovsdb_lib.py
    vif_plug_ovs/tests/functional/base.py
    vif_plug_ovs/tests/functional/test_plugin.py

NOTE(auniyal): Zed to Yoga
Conflicts and differences
   The conflicts are due to changes
   I7d834a0c31c801e96002f42f86409ba274c234e6: Delete trunk bridges to avoid race with Neutron

   differences and changes:
   vif_plug_ovs/tests/functional/test_plugin.py was not present in stable/yoga
   added only tests and supporting items, which is almost everything, and removed trunk test and trunk attributes from setup.
   vif_plug_ovs/tests/functional/base.py
   manually added _del_bridge and _check_bridge from change I7d834a0c31c801e96002f42f86409ba274c234e6
   because they were required to pass added functional tests.

Closes-Bug: #2017868
Change-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43
(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)
(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)
(cherry picked from commit cb8c2104e0505bad020738b17a9c69b7558cadab)
",git fetch https://review.opendev.org/openstack/os-vif refs/changes/16/886716/1 && git format-patch -1 --stdout FETCH_HEAD,"['vif_plug_ovs/tests/functional/test_plugin.py', 'vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py', 'releasenotes/notes/default-qos-policy-for-ovs-26f8806046a59c82.yaml', 'vif_plug_ovs/tests/unit/test_plugin.py', 'vif_plug_ovs/ovs.py', 'vif_plug_ovs/ovsdb/ovsdb_lib.py', 'vif_plug_ovs/tests/functional/base.py', 'vif_plug_ovs/ovsdb/impl_idl.py', 'os_vif/tests/functional/internal/command/ip/test_impl_pyroute2.py']",9,417cc3d6e4ee1f31b508e223c1470ef847dae775,bug/2017868,import time # ensure that the device exists to prevent racing # with other ip commands for _ in range(10): if self.exist_device(device): return time.sleep(0.1),,446,28
openstack%2Foctavia~835779,openstack/octavia,stable/xena,I658a4097e120d4f6a49fa1a7945a8d999709d1bd,Switch centos8 jobs to centos-8-stream,ABANDONED,2022-03-30 06:38:27.000000000,2024-03-05 19:15:22.000000000,,"[{'_account_id': 22348}, {'_account_id': 29244}]","[{'number': 1, 'created': '2022-03-30 06:38:27.000000000', 'files': ['zuul.d/projects.yaml', 'zuul.d/jobs.yaml'], 'web_link': 'https://opendev.org/openstack/octavia/commit/1755832a309c84050499d66768060f0ff237e29c', 'message': 'Switch centos8 jobs to centos-8-stream\n\nChange-Id: I658a4097e120d4f6a49fa1a7945a8d999709d1bd\n(cherry picked from commit 76617f883e535a77008aac80d5350d0f0c889f8d)\n'}]",1,835779,1755832a309c84050499d66768060f0ff237e29c,4,2,1,29244,,,0,"Switch centos8 jobs to centos-8-stream

Change-Id: I658a4097e120d4f6a49fa1a7945a8d999709d1bd
(cherry picked from commit 76617f883e535a77008aac80d5350d0f0c889f8d)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/79/835779/1 && git format-patch -1 --stdout FETCH_HEAD,"['zuul.d/projects.yaml', 'zuul.d/jobs.yaml']",2,1755832a309c84050499d66768060f0ff237e29c,, name: publish-openstack-octavia-amphora-image-centos-8-stream nodeset: centos-8-stream Publish CentOS 8 Stream based amphora image to tarballs.o.o. amphora_os_release: 8-stream name: octavia-amphora-image-build-live-centos-8-stream nodeset: centos-8-stream Builds a CentOS 8 Stream amphora image using diskimage-builder from Git amphora_os_release: 8-stream, name: publish-openstack-octavia-amphora-image-centos8 nodeset: centos-8 Publish CentOS 8 based amphora image to tarballs.o.o. amphora_os_release: 8 name: octavia-amphora-image-build-live-centos8 nodeset: centos-8 Builds a CentOS 8 amphora image using diskimage-builder from Git amphora_os_release: 8,10,10
openstack%2Foctavia~899161,openstack/octavia,stable/xena,Ib067d4e92400fb781ccea63e556ca63ad161acc4,Remove job that provokes NODE_FAILURE in CI,ABANDONED,2023-10-24 12:17:36.000000000,2024-03-05 19:15:15.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-10-24 12:17:36.000000000', 'files': ['zuul.d/projects.yaml'], 'web_link': 'https://opendev.org/openstack/octavia/commit/e9998598bb95fe5b6f3af9193f0b14b3d51f3b47', 'message': 'Remove job that provokes NODE_FAILURE in CI\n\nChange-Id: Ib067d4e92400fb781ccea63e556ca63ad161acc4\n'}]",2,899161,e9998598bb95fe5b6f3af9193f0b14b3d51f3b47,3,1,1,34429,,,0,"Remove job that provokes NODE_FAILURE in CI

Change-Id: Ib067d4e92400fb781ccea63e556ca63ad161acc4
",git fetch https://review.opendev.org/openstack/octavia refs/changes/61/899161/1 && git format-patch -1 --stdout FETCH_HEAD,['zuul.d/projects.yaml'],1,e9998598bb95fe5b6f3af9193f0b14b3d51f3b47,remove-dsvm-sc-c8-job,, - octavia-v2-dsvm-scenario-centos-8: irrelevant-files: *irrelevant-files voting: false,0,3
openstack%2Foctavia~880454,openstack/octavia,stable/xena,I02804b7075edac72776b0377b7b283d0c7bfd8a2,Fix failover when the last listener is deleted,ABANDONED,2023-04-14 06:48:58.000000000,2024-03-05 19:15:01.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2023-04-14 06:48:58.000000000', 'files': ['octavia/amphorae/backends/health_daemon/health_daemon.py', 'releasenotes/notes/Fix-listener-delete-causing-failover-251efdb79af24c0a.yaml', 'octavia/tests/unit/amphorae/backends/health_daemon/test_health_daemon.py'], 'web_link': 'https://opendev.org/openstack/octavia/commit/c58f2cb591055f5968f92d762abcd5005e68e324', 'message': 'Fix failover when the last listener is deleted\n\nThis patch fixes an issue when deleting the last listener from a load balancer\nmay trigger a failover.\n\nStory: 2010652\nTask: 47683\nChange-Id: I02804b7075edac72776b0377b7b283d0c7bfd8a2\n(cherry picked from commit ba92aeb946343c045e8363a2aae78e0a17a6cb82)\n(cherry picked from commit e7f4b1b4c21d0a2b12022032caa38602f5341a20)\n(cherry picked from commit 658173e5b7f5dcbe5e309801b7d8488442f858e4)\n(cherry picked from commit 4e15e81208e198553163ff01e90a47ae0d481ced)\n'}]",0,880454,c58f2cb591055f5968f92d762abcd5005e68e324,5,3,1,29244,,,0,"Fix failover when the last listener is deleted

This patch fixes an issue when deleting the last listener from a load balancer
may trigger a failover.

Story: 2010652
Task: 47683
Change-Id: I02804b7075edac72776b0377b7b283d0c7bfd8a2
(cherry picked from commit ba92aeb946343c045e8363a2aae78e0a17a6cb82)
(cherry picked from commit e7f4b1b4c21d0a2b12022032caa38602f5341a20)
(cherry picked from commit 658173e5b7f5dcbe5e309801b7d8488442f858e4)
(cherry picked from commit 4e15e81208e198553163ff01e90a47ae0d481ced)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/54/880454/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia/amphorae/backends/health_daemon/health_daemon.py', 'releasenotes/notes/Fix-listener-delete-causing-failover-251efdb79af24c0a.yaml', 'octavia/tests/unit/amphorae/backends/health_daemon/test_health_daemon.py']",3,c58f2cb591055f5968f92d762abcd5005e68e324,," @mock.patch('octavia.amphorae.backends.utils.haproxy_query.HAProxyQuery') def test_get_stats_exception(self, mock_query): mock_query.side_effect = Exception('Boom') stats, pool_status = health_daemon.get_stats('TEST') self.assertEqual([], stats) self.assertEqual({}, pool_status) ",,22,3
openstack%2Foctavia~905484,openstack/octavia,stable/xena,I5698558857cbaa585f8a3d7ac37aaa31c0189d46,Fix health-monitors with ALPN members,ABANDONED,2024-01-12 15:54:18.000000000,2024-03-05 19:14:53.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2024-01-12 15:54:18.000000000', 'files': ['releasenotes/notes/fix-http-https-healthmonitor-with-alpn-pools-82249b2b9a025068.yaml', 'octavia/tests/unit/common/jinja/haproxy/combined_listeners/test_jinja_cfg.py', 'octavia/common/jinja/haproxy/combined_listeners/templates/macros.j2'], 'web_link': 'https://opendev.org/openstack/octavia/commit/b9f57923c81aba0cb187ac21c363d8405f95fad0', 'message': 'Fix health-monitors with ALPN members\n\nUsing HTTP or HTTPS health-monitor on a ALPN pool failed with SSL\nerrors.\nhaproxy doc mentions that when using ""check"" with ALPN servers, the\ncheck-alpn option must be enabled.\n\n[0] https://docs.haproxy.org/2.8/configuration.html#5.2-check\n\nCloses-Bug: #2043812\n\nChange-Id: I5698558857cbaa585f8a3d7ac37aaa31c0189d46\n(cherry picked from commit c28eb84dcafcb066746b04e9e6ef7a51decb68cd)\n(cherry picked from commit 7c468ca4c4d9ea89ba208e8287538ed4d5d1dee3)\n(cherry picked from commit 121e0533d0cdcf07327ef4894cb32400f5bdde78)\n(cherry picked from commit 778859a297299c39d05f69538b50e00c29a7d4d4)\n(cherry picked from commit 937bb928aa61e51ce38743921a1434770f4d844b)\n'}]",0,905484,b9f57923c81aba0cb187ac21c363d8405f95fad0,5,3,1,29244,,,0,"Fix health-monitors with ALPN members

Using HTTP or HTTPS health-monitor on a ALPN pool failed with SSL
errors.
haproxy doc mentions that when using ""check"" with ALPN servers, the
check-alpn option must be enabled.

[0] https://docs.haproxy.org/2.8/configuration.html#5.2-check

Closes-Bug: #2043812

Change-Id: I5698558857cbaa585f8a3d7ac37aaa31c0189d46
(cherry picked from commit c28eb84dcafcb066746b04e9e6ef7a51decb68cd)
(cherry picked from commit 7c468ca4c4d9ea89ba208e8287538ed4d5d1dee3)
(cherry picked from commit 121e0533d0cdcf07327ef4894cb32400f5bdde78)
(cherry picked from commit 778859a297299c39d05f69538b50e00c29a7d4d4)
(cherry picked from commit 937bb928aa61e51ce38743921a1434770f4d844b)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/84/905484/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/fix-http-https-healthmonitor-with-alpn-pools-82249b2b9a025068.yaml', 'octavia/tests/unit/common/jinja/haproxy/combined_listeners/test_jinja_cfg.py', 'octavia/common/jinja/haproxy/combined_listeners/templates/macros.j2']",3,b9f57923c81aba0cb187ac21c363d8405f95fad0,," {% if pool.alpn_protocols is defined %} {% set alpn_opt = "" check-alpn %s""|format(pool.alpn_protocols) %} {% else %} {% set alpn_opt = """" %} {% endif %} {% set hm_opt = "" check%s%s inter %ds fall %d rise %d%s%s""|format( monitor_ssl_opt, alpn_opt, pool.health_monitor.delay,"," {% set hm_opt = "" check%s inter %ds fall %d rise %d%s%s""|format( monitor_ssl_opt, pool.health_monitor.delay,",30,18
openstack%2Foctavia~905485,openstack/octavia,stable/xena,Ia681679e24437832e1e23e7399e1a34da8ab54c5,Fix TLS-HELLO healthmonitors in the amphora-driver,ABANDONED,2024-01-12 15:54:18.000000000,2024-03-05 19:14:45.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2024-01-12 15:54:18.000000000', 'files': ['octavia/tests/unit/common/jinja/haproxy/combined_listeners/test_jinja_cfg.py', 'releasenotes/notes/fix-tls-hello-healthmonitors-a4b98a80f6de8394.yaml', 'octavia/common/jinja/haproxy/combined_listeners/templates/macros.j2'], 'web_link': 'https://opendev.org/openstack/octavia/commit/d0bb5a80729f9bff59dacf294d5ebcdc6d4f68e1', 'message': 'Fix TLS-HELLO healthmonitors in the amphora-driver\n\nTLS-HELLO HMs were based on the ssl-hello-chk option of haproxy, which\nuses SSLv3 messages. SSLv3 is deprecated and most distributions have\ndisabled it, remove this option and rely only on the default checker\nwhen ssl is enabled [0]\n\n[0] https://docs.haproxy.org/2.8/configuration.html#5.2-check\n\nRelated-Bug: #2043812\n\nChange-Id: Ia681679e24437832e1e23e7399e1a34da8ab54c5\n(cherry picked from commit 8e7c2737b6c6c9ca08f9fce0867955c4c3740332)\n(cherry picked from commit 0f9bc3b8c68bd818bc5307186f7e0e78761fcb65)\n(cherry picked from commit 353cafd8d4663357d4ded57a87493d1ad00d2410)\n(cherry picked from commit beb6453413d1ac533283a1837bb093bfa924276f)\n(cherry picked from commit 714ef1c802d7d9ad16eb0ea726f6deb7575c6f44)\n'}]",1,905485,d0bb5a80729f9bff59dacf294d5ebcdc6d4f68e1,7,3,1,29244,,,0,"Fix TLS-HELLO healthmonitors in the amphora-driver

TLS-HELLO HMs were based on the ssl-hello-chk option of haproxy, which
uses SSLv3 messages. SSLv3 is deprecated and most distributions have
disabled it, remove this option and rely only on the default checker
when ssl is enabled [0]

[0] https://docs.haproxy.org/2.8/configuration.html#5.2-check

Related-Bug: #2043812

Change-Id: Ia681679e24437832e1e23e7399e1a34da8ab54c5
(cherry picked from commit 8e7c2737b6c6c9ca08f9fce0867955c4c3740332)
(cherry picked from commit 0f9bc3b8c68bd818bc5307186f7e0e78761fcb65)
(cherry picked from commit 353cafd8d4663357d4ded57a87493d1ad00d2410)
(cherry picked from commit beb6453413d1ac533283a1837bb093bfa924276f)
(cherry picked from commit 714ef1c802d7d9ad16eb0ea726f6deb7575c6f44)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/85/905485/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia/tests/unit/common/jinja/haproxy/combined_listeners/test_jinja_cfg.py', 'releasenotes/notes/fix-tls-hello-healthmonitors-a4b98a80f6de8394.yaml', 'octavia/common/jinja/haproxy/combined_listeners/templates/macros.j2']",3,d0bb5a80729f9bff59dacf294d5ebcdc6d4f68e1,,, {% if pool.health_monitor.type == constants.HEALTH_MONITOR_TLS_HELLO %} option ssl-hello-chk {% endif %},4,4
openstack%2Foctavia-dashboard~911318,openstack/octavia-dashboard,unmaintained/xena,Ia126a514ad06aa88cb9c3d1f49422e0d650f4a35,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:59:01.000000000,2024-03-05 19:14:40.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:59:01.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/octavia-dashboard/commit/16e3b58206da227b6a76453f571515390476af4e', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: Ia126a514ad06aa88cb9c3d1f49422e0d650f4a35\n'}]",0,911318,16e3b58206da227b6a76453f571515390476af4e,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: Ia126a514ad06aa88cb9c3d1f49422e0d650f4a35
",git fetch https://review.opendev.org/openstack/octavia-dashboard refs/changes/18/911318/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,16e3b58206da227b6a76453f571515390476af4e,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Foctavia~880437,openstack/octavia,stable/xena,I30b81866989c22b94fb77e62e7abd180f0f0af50,Pass config to castellan,ABANDONED,2023-04-14 05:46:11.000000000,2024-03-05 19:14:35.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2023-04-14 05:46:11.000000000', 'files': ['octavia/certificates/manager/castellan_mgr.py', 'releasenotes/notes/octavia_castellan_config-995e65f129e3e983.yaml'], 'web_link': 'https://opendev.org/openstack/octavia/commit/006e0c5ff0b1dc106e3585491e56bb307a8f908e', 'message': ""Pass config to castellan\n\nCurrently castellan can't be configured through octavia.conf as\nconf is not passed while initializing backend.\n\nAlso document castellan configuration options in reference.\n\nBackports on stable branches also include [0] which adds a release note.\n\n[0] Iacc796737bad8881873da7db5273338c2cff9e68\n\nConflicts:\n    etc/config/octavia-config-generator.conf (doesn't exist on stable\n    branches)\n\nChange-Id: I30b81866989c22b94fb77e62e7abd180f0f0af50\n(cherry picked from commit f5ac714a7b22687fbb5b12db7f41c283cee12aee)\n(cherry picked from commit e8ada397f9a7acc3d25d5557e7ecf6a7742ff319)\n(cherry picked from commit 8fbe035cd13920f174beb8f528cc93a52a96570f)\n""}]",0,880437,006e0c5ff0b1dc106e3585491e56bb307a8f908e,5,3,1,29244,,,0,"Pass config to castellan

Currently castellan can't be configured through octavia.conf as
conf is not passed while initializing backend.

Also document castellan configuration options in reference.

Backports on stable branches also include [0] which adds a release note.

[0] Iacc796737bad8881873da7db5273338c2cff9e68

Conflicts:
    etc/config/octavia-config-generator.conf (doesn't exist on stable
    branches)

Change-Id: I30b81866989c22b94fb77e62e7abd180f0f0af50
(cherry picked from commit f5ac714a7b22687fbb5b12db7f41c283cee12aee)
(cherry picked from commit e8ada397f9a7acc3d25d5557e7ecf6a7742ff319)
(cherry picked from commit 8fbe035cd13920f174beb8f528cc93a52a96570f)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/37/880437/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia/certificates/manager/castellan_mgr.py', 'releasenotes/notes/octavia_castellan_config-995e65f129e3e983.yaml']",2,006e0c5ff0b1dc106e3585491e56bb307a8f908e,,--- fixes: - | Usage of ``castellan_cert_manager`` as cert_manager has been significantly improved. Now you can define configuration options for castellan in octavia.conf and they will be passed properly to castellan beckend. This allows to use allowed castellan backends as for certificate storage. ,,11,1
openstack%2Foctavia~880445,openstack/octavia,stable/xena,Ic08ad89b4e07e0fe8a80b3e5db6d50276aafff82,Rename Context to RequestContext,ABANDONED,2023-04-14 06:01:42.000000000,2024-03-05 19:14:27.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2023-04-14 06:01:42.000000000', 'files': ['octavia/tests/functional/api/v2/test_health_monitor.py', 'octavia/common/context.py', 'octavia/tests/functional/api/v2/test_quotas.py', 'octavia/tests/functional/api/v2/test_amphora.py', 'octavia/tests/functional/api/v2/test_flavors.py', 'octavia/tests/functional/api/v2/test_l7policy.py', 'octavia/tests/functional/api/v2/test_flavor_profiles.py', 'octavia/tests/functional/api/v2/test_pool.py', 'octavia/tests/functional/api/v2/test_availability_zones.py', 'octavia/tests/unit/common/test_policy.py', 'octavia/tests/functional/api/v2/test_l7rule.py', 'octavia/tests/functional/api/v2/test_member.py', 'octavia/api/common/hooks.py', 'octavia/tests/functional/api/v2/test_load_balancer.py', 'octavia/tests/functional/api/v2/test_listener.py', 'octavia/tests/functional/api/v2/test_provider.py', 'octavia/tests/functional/api/v2/test_availability_zone_profiles.py'], 'web_link': 'https://opendev.org/openstack/octavia/commit/15b01f4c3d94d00017bab87035dc90d42922b900', 'message': 'Rename Context to RequestContext\n\nIf castellan is used, it requires one of the following context types to\nbe provided during init: KeystonePassword, KeystoneToken or\nRequestContext [1]\n\nAlso it makes sense to be consistent across projects and with\noslo_context regarding context class naming.\n\n[1] https://opendev.org/openstack/castellan/src/commit/86712360f345866e108e12eda1075101635dd1ec/castellan/key_manager/barbican_key_manager.py#L208-L210\n\nConflicts:\n\toctavia/controller/worker/v2/tasks/notification_tasks.py\n\toctavia/tests/unit/controller/worker/v2/tasks/test_notification_tasks.py\n\toctavia/tests/unit/common/test_policy.py\n\nChange-Id: Ic08ad89b4e07e0fe8a80b3e5db6d50276aafff82\n(cherry picked from commit 62e1d871cbbbeefc4919c0c12a3cfff606c53557)\n(cherry picked from commit 48b9d42a571659240dfa737d99781c9713edaf0b)\n(cherry picked from commit 111194847f0c0bc2fe672513485ba9ce70767db4)\n'}]",0,880445,15b01f4c3d94d00017bab87035dc90d42922b900,5,3,1,29244,,,0,"Rename Context to RequestContext

If castellan is used, it requires one of the following context types to
be provided during init: KeystonePassword, KeystoneToken or
RequestContext [1]

Also it makes sense to be consistent across projects and with
oslo_context regarding context class naming.

[1] https://opendev.org/openstack/castellan/src/commit/86712360f345866e108e12eda1075101635dd1ec/castellan/key_manager/barbican_key_manager.py#L208-L210

Conflicts:
	octavia/controller/worker/v2/tasks/notification_tasks.py
	octavia/tests/unit/controller/worker/v2/tasks/test_notification_tasks.py
	octavia/tests/unit/common/test_policy.py

Change-Id: Ic08ad89b4e07e0fe8a80b3e5db6d50276aafff82
(cherry picked from commit 62e1d871cbbbeefc4919c0c12a3cfff606c53557)
(cherry picked from commit 48b9d42a571659240dfa737d99781c9713edaf0b)
(cherry picked from commit 111194847f0c0bc2fe672513485ba9ce70767db4)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/45/880445/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia/tests/functional/api/v2/test_health_monitor.py', 'octavia/common/context.py', 'octavia/tests/functional/api/v2/test_quotas.py', 'octavia/tests/functional/api/v2/test_amphora.py', 'octavia/tests/functional/api/v2/test_flavors.py', 'octavia/tests/functional/api/v2/test_l7policy.py', 'octavia/tests/functional/api/v2/test_flavor_profiles.py', 'octavia/tests/functional/api/v2/test_pool.py', 'octavia/tests/functional/api/v2/test_availability_zones.py', 'octavia/tests/unit/common/test_policy.py', 'octavia/tests/functional/api/v2/test_l7rule.py', 'octavia/tests/functional/api/v2/test_member.py', 'octavia/api/common/hooks.py', 'octavia/tests/functional/api/v2/test_load_balancer.py', 'octavia/tests/functional/api/v2/test_listener.py', 'octavia/tests/functional/api/v2/test_provider.py', 'octavia/tests/functional/api/v2/test_availability_zone_profiles.py']",17,15b01f4c3d94d00017bab87035dc90d42922b900,," with mock.patch.object(octavia.common.context.RequestContext, 'project_id', with mock.patch.object(octavia.common.context.RequestContext, 'project_id', with mock.patch.object(octavia.common.context.RequestContext, 'project_id', with mock.patch.object(octavia.common.context.RequestContext, 'project_id', with mock.patch.object(octavia.common.context.RequestContext, 'project_id',"," with mock.patch.object(octavia.common.context.Context, 'project_id', with mock.patch.object(octavia.common.context.Context, 'project_id', with mock.patch.object(octavia.common.context.Context, 'project_id', with mock.patch.object(octavia.common.context.Context, 'project_id', with mock.patch.object(octavia.common.context.Context, 'project_id',",303,154
openstack%2Foctavia~906263,openstack/octavia,stable/xena,Iccae6ec561603653183911146a638272df631e92,Don't update the management port when calculating delta,ABANDONED,2024-01-22 12:43:44.000000000,2024-03-05 19:14:15.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2024-01-22 12:43:44.000000000', 'files': ['octavia/tests/unit/controller/worker/v2/tasks/test_network_tasks.py', 'octavia/controller/worker/v2/tasks/network_tasks.py', 'releasenotes/notes/fix-bad-management-port-update-3fa157f74ee8c7b2.yaml'], 'web_link': 'https://opendev.org/openstack/octavia/commit/ec1c9697620e427f5c4954024512bdcc5e361f63', 'message': ""Don't update the management port when calculating delta\n\nCalculateDelta should be used to get the list of subnets/networks to\nplug (or unplug) into the amphora for the VIP and the members.\nIt should never reconfigure the management port.\n\nStory 2010623\nTask 47564\n\nChange-Id: Iccae6ec561603653183911146a638272df631e92\n(cherry picked from commit 8ccc0d01764c234ce9d3dc0191b5a0952111e2ef)\n(cherry picked from commit 53a38d625d11b08ddfabcb9a3317f003367b1527)\n""}]",1,906263,ec1c9697620e427f5c4954024512bdcc5e361f63,6,3,1,29244,,,0,"Don't update the management port when calculating delta

CalculateDelta should be used to get the list of subnets/networks to
plug (or unplug) into the amphora for the VIP and the members.
It should never reconfigure the management port.

Story 2010623
Task 47564

Change-Id: Iccae6ec561603653183911146a638272df631e92
(cherry picked from commit 8ccc0d01764c234ce9d3dc0191b5a0952111e2ef)
(cherry picked from commit 53a38d625d11b08ddfabcb9a3317f003367b1527)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/63/906263/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia/tests/unit/controller/worker/v2/tasks/test_network_tasks.py', 'octavia/controller/worker/v2/tasks/network_tasks.py', 'releasenotes/notes/fix-bad-management-port-update-3fa157f74ee8c7b2.yaml']",3,ec1c9697620e427f5c4954024512bdcc5e361f63,,"--- fixes: - | Fixed an issue when adding or deleting a member, Octavia might have reconfigured the management port of the amphora by adding or removing additional subnets. Octavia no longer updates the management port during those tasks. ",,17,24
openstack%2Fpython-octaviaclient~911306,openstack/python-octaviaclient,unmaintained/victoria,Id01a7f92b36194777267288c0011ad9ab564e1e6,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:57:37.000000000,2024-03-05 19:14:10.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:57:37.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-octaviaclient/commit/6e68b8498739eb22a39bd4cfbf11ada67eb469b0', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: Id01a7f92b36194777267288c0011ad9ab564e1e6\n'}]",0,911306,6e68b8498739eb22a39bd4cfbf11ada67eb469b0,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: Id01a7f92b36194777267288c0011ad9ab564e1e6
",git fetch https://review.opendev.org/openstack/python-octaviaclient refs/changes/06/911306/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,6e68b8498739eb22a39bd4cfbf11ada67eb469b0,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fnova~817236,openstack/nova,stable/xena,Ifc070d19a18a2d66f1a7bd5898428b12901dfe9e,Remove SESSION_CONFIGURED global from DB fixture,ABANDONED,2021-11-09 15:32:31.000000000,2024-03-05 19:14:07.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-11-09 15:32:31.000000000', 'files': ['nova/tests/fixtures/nova.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/e2d6338caa60baa8917bbb8cd3ecf6ae9e47f673', 'message': 'Remove SESSION_CONFIGURED global from DB fixture\n\nThe SESSION_CONFIGURED global flag is used in the Database fixture to\nguard against the reconfiguration of the DB context in each test as the\nglobal transaction factory does not allow such reconfiguration. However\nthis global is error prone for multiple reasons:\n\n * there are tests that actually configure the factory outside of the\n   fixture causing tests to interfere\n\n * we use one single global flag but we always have two separate\n   Database fixture one for the api DB and one for the main DB. Still\n   the fixture instantiated first will do the configuration of both\n   DB factory.\n\nThis patch replaces the global with two individual oslo_db enginefacade\npatch_factory() calls that allows patching and resetting the global\nfactory per test case.\n\nChange-Id: Ifc070d19a18a2d66f1a7bd5898428b12901dfe9e\n(cherry picked from commit f318f822fcf6dec4c3cd9b7e5111f3e1371aa51a)\n'}]",0,817236,e2d6338caa60baa8917bbb8cd3ecf6ae9e47f673,5,1,1,9708,,,0,"Remove SESSION_CONFIGURED global from DB fixture

The SESSION_CONFIGURED global flag is used in the Database fixture to
guard against the reconfiguration of the DB context in each test as the
global transaction factory does not allow such reconfiguration. However
this global is error prone for multiple reasons:

 * there are tests that actually configure the factory outside of the
   fixture causing tests to interfere

 * we use one single global flag but we always have two separate
   Database fixture one for the api DB and one for the main DB. Still
   the fixture instantiated first will do the configuration of both
   DB factory.

This patch replaces the global with two individual oslo_db enginefacade
patch_factory() calls that allows patching and resetting the global
factory per test case.

Change-Id: Ifc070d19a18a2d66f1a7bd5898428b12901dfe9e
(cherry picked from commit f318f822fcf6dec4c3cd9b7e5111f3e1371aa51a)
",git fetch https://review.opendev.org/openstack/nova refs/changes/36/817236/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/fixtures/nova.py'],1,e2d6338caa60baa8917bbb8cd3ecf6ae9e47f673,bug/1948963,from oslo_db.sqlalchemy import enginefacade # NOTE(gibi): this inject a new factory for each test and # self.factory_reset is used to clean up the factory at the end # of the test case. This way we can let each test configure the # factory so we can avoid having a global flag guarding against # factory re-configuration self.factory_reset = main_db_api.context_manager.patch_factory( enginefacade._TransactionFactory()) main_db_api.configure(CONF) # NOTE(gibi): similar note applies here as for the main_db_api # above self.factory_reset = api_db_api.context_manager.patch_factory( enginefacade._TransactionFactory()) api_db_api.configure(CONF) self.factory_reset(),SESSION_CONFIGURED = False # NOTE(pkholkin): oslo_db.enginefacade is configured in tests the # same way as it is done for any other service that uses DB global SESSION_CONFIGURED if not SESSION_CONFIGURED: main_db_api.configure(CONF) api_db_api.configure(CONF) SESSION_CONFIGURED = True ,17,9
openstack%2Fpython-octaviaclient~911316,openstack/python-octaviaclient,unmaintained/wallaby,I1f742a6a8335bb5fd20a280aa049ecb7368895c3,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:58:46.000000000,2024-03-05 19:14:04.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:58:46.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-octaviaclient/commit/edd9f9c09ea4618febed044c52f7cfe40a56321a', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I1f742a6a8335bb5fd20a280aa049ecb7368895c3\n'}]",0,911316,edd9f9c09ea4618febed044c52f7cfe40a56321a,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I1f742a6a8335bb5fd20a280aa049ecb7368895c3
",git fetch https://review.opendev.org/openstack/python-octaviaclient refs/changes/16/911316/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,edd9f9c09ea4618febed044c52f7cfe40a56321a,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fnova~817237,openstack/nova,stable/xena,Ic58e93d6aafb88be4abeb6e52089f7ee43d8db01,Refactor Database fixture,ABANDONED,2021-11-09 15:33:48.000000000,2024-03-05 19:14:03.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-11-09 15:33:48.000000000', 'files': ['nova/tests/fixtures/nova.py', 'nova/tests/unit/test_fixtures.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/67a9eff24eeb461c38e13a3a36a4e84aef2a05a8', 'message': 'Refactor Database fixture\n\nThis patch apply the following changes to the fixture to make the\nintention clearer and remove some unnecessary complexity:\n\n* the fixture does a lot of dynamic thing in its __init__, these are\n  moved to setUp() instead to facilitate proper reset functionality of\n  the fixture\n\n* the caching and applying of the DB schema is made a explicit and\n  moved to setUp() too\n\n* the explicit reset() function is removed as it is probably\n  unintentionally overwrote the Fixture.reset(). Now the Fixture can be\n  properly reset by calling the Fixture.reset() which is by default\n  implemented by calling cleanUp() and setUp()\n\nChange-Id: Ic58e93d6aafb88be4abeb6e52089f7ee43d8db01\n(cherry picked from commit c7ccbfe403f100b5cb420fb12ac6244c4a7ae381)\n'}]",0,817237,67a9eff24eeb461c38e13a3a36a4e84aef2a05a8,5,1,1,9708,,,0,"Refactor Database fixture

This patch apply the following changes to the fixture to make the
intention clearer and remove some unnecessary complexity:

* the fixture does a lot of dynamic thing in its __init__, these are
  moved to setUp() instead to facilitate proper reset functionality of
  the fixture

* the caching and applying of the DB schema is made a explicit and
  moved to setUp() too

* the explicit reset() function is removed as it is probably
  unintentionally overwrote the Fixture.reset(). Now the Fixture can be
  properly reset by calling the Fixture.reset() which is by default
  implemented by calling cleanUp() and setUp()

Change-Id: Ic58e93d6aafb88be4abeb6e52089f7ee43d8db01
(cherry picked from commit c7ccbfe403f100b5cb420fb12ac6244c4a7ae381)
",git fetch https://review.opendev.org/openstack/nova refs/changes/37/817237/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/fixtures/nova.py', 'nova/tests/unit/test_fixtures.py']",2,67a9eff24eeb461c38e13a3a36a4e84aef2a05a8,bug/1948963, db_fixture = fixtures.Database() self.useFixture(db_fixture) db_fixture.reset() engine = main_db_api.get_engine() db_fixture = fixtures.Database(database='api') self.useFixture(db_fixture) db_fixture.reset() engine = api_db_api.get_engine(), self.useFixture(fixtures.Database()) # reset by invoking the fixture again # self.useFixture(fixtures.Database()) self.useFixture(fixtures.Database(database='api')) # reset by invoking the fixture again # self.useFixture(fixtures.Database(database='api')),39,38
openstack%2Fnova~817239,openstack/nova,stable/xena,Icd25adcc931cae2126e03c00af7e4420d3781b9a,Use ReplaceEngineFacade fixture,ABANDONED,2021-11-09 15:35:06.000000000,2024-03-05 19:13:59.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-11-09 15:35:06.000000000', 'files': ['nova/tests/fixtures/nova.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/95400ec6509e1b04fc27e5f3837d5a4d3341e265', 'message': 'Use ReplaceEngineFacade fixture\n\nNow that the previous patch Ifc070d19a18a2d66f1a7bd5898428b12901dfe9e moved\nmost of the logic to the setUp of the Database fixture we can replace\nour direct factory patching with the ReplaceEngineFacade fixture from\noslo_db.\n\nChange-Id: Icd25adcc931cae2126e03c00af7e4420d3781b9a\n(cherry picked from commit 063ed41174c27c20871696f7c6dcb1eddb4310ee)\n'}]",0,817239,95400ec6509e1b04fc27e5f3837d5a4d3341e265,5,1,1,9708,,,0,"Use ReplaceEngineFacade fixture

Now that the previous patch Ifc070d19a18a2d66f1a7bd5898428b12901dfe9e moved
most of the logic to the setUp of the Database fixture we can replace
our direct factory patching with the ReplaceEngineFacade fixture from
oslo_db.

Change-Id: Icd25adcc931cae2126e03c00af7e4420d3781b9a
(cherry picked from commit 063ed41174c27c20871696f7c6dcb1eddb4310ee)
",git fetch https://review.opendev.org/openstack/nova refs/changes/39/817239/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/fixtures/nova.py'],1,95400ec6509e1b04fc27e5f3837d5a4d3341e265,bug/1948963,"from oslo_db.sqlalchemy import test_fixtures as db_fixtures # NOTE(gibi): this injects a new factory for each test and # cleans it up at then end of the test case. This way we can # let each test configure the factory so we can avoid having a # global flag guarding against factory re-configuration new_engine = enginefacade.transaction_context() self.useFixture( db_fixtures.ReplaceEngineFacadeFixture( main_db_api.context_manager, new_engine)) new_engine = enginefacade.transaction_context() self.useFixture( db_fixtures.ReplaceEngineFacadeFixture( api_db_api.context_manager, new_engine))", # NOTE(gibi): this inject a new factory for each test and # registers a cleanup that cleans the factory at the end # of the test case. This way we can let each test configure the # factory so we can avoid having a global flag guarding against # factory re-configuration self.addCleanup(main_db_api.context_manager.patch_factory( enginefacade._TransactionFactory())) self.addCleanup(api_db_api.context_manager.patch_factory( enginefacade._TransactionFactory())),13,9
openstack%2Fnova~817240,openstack/nova,stable/xena,Id96f1795034490c13125ebbab49b029fb96af1c7,Fix interference in db unit test,ABANDONED,2021-11-09 15:35:06.000000000,2024-03-05 19:13:56.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-11-09 15:35:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a71c9d6d31dbbb1b4a728f758ccb4260fdbcdfde', 'message': 'Fix interference in db unit test\n\nWe discovered that two unit test cases added in\nI0647bb8545c1464b521a1d866cf5ee674aea2eae cause errors like\n  oslo_db.sqlalchemy.enginefacade.AlreadyStartedError:\n  this TransactionFactory is already started\n\nwhen the db tests run selectively with tox -e py38 nova.tests.unit.db\nbut does not cause errors if the whole unit test suit is run.\n\nThis error happened because our db code uses two global transaction\nfactory, one for the api DB and one for the main DB. There was a global\nflag SESSION_CONFIGURED in our Database fixture that guarded against\ndouble initialization of the factory. But the faulty test cases in\nquestion do not use our Database fixture but use the\nOpportunisticDBTestMixin from oslo_db. Obviously that fixture does not\nknow about our SESSION_CONFIGURED global. So if one of the offending\ntest case ran first in an executor then that initialized the\ntransaction factory globally and a later test that uses our Database\nfixture tried to configure it again leading to the error. For some\nunknown reason if these tests were run in the opposite order the faulty\nre-initialization did not happen. Probably the OpportunisticDBTestMixin\nwas able to prevent that.\n\nA previous patch already removed the global SESSION_CONFIGURED flag\nfrom our fixture and replaced it with a per DB specific patch_factory\ncalls that allow resetting the state of the factory at the end of each\ntest case. This would already solve the current test case issue as only\nour offending test cases would initialize the global factory without\ncleanup and we have one test case per DB. So there would be no\ninterference. However if in the future we add similar test cases then\nthose can still interfere through the global factory.\n\nSo this patch fixes the two offending test case. Also it extends the\nDatabasePoisonFixture used for the NoDbTestCase tesst. The poison now\ndetects if the test case starts any transaction factory.\n\nThis poison caught another offender test case,\ntest_db_sync_with_special_symbols_in_connection_string, that was marked\nNoDb but actually using the database. It is now changed to declare\nitself as a test that sets up the DB manually and also it is changed to\nuse the Database fixture instead of touching the global factory\ndirectly.\n\nConflicts:\n      nova/tests/unit/db/api/test_migrations.py\n      nova/tests/unit/db/main/test_migrations.py\n      nova/tests/unit/db/test_migration.py\n\nAll these conflicts are due to I2e970ec4a185cd28611855004b6d9786bf2ce217\nnot in stable/xena\n\nCloses-Bug: #1948963\n\nChange-Id: Id96f1795034490c13125ebbab49b029fb96af1c7\n(cherry picked from commit a7bccff06b871765fb87ee3e9edd9458c7f73701)\n'}, {'number': 2, 'created': '2021-11-10 15:05:10.000000000', 'files': ['nova/tests/fixtures/nova.py', 'nova/tests/unit/db/api/test_migrations.py', 'nova/tests/unit/db/main/test_migrations.py', 'nova/tests/unit/db/test_migration.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/6f0cf6550bbf2d0133a91ab6a13235ab18bdbc05', 'message': 'Fix interference in db unit test\n\nWe discovered that two unit test cases added in\nI0647bb8545c1464b521a1d866cf5ee674aea2eae cause errors like\n  oslo_db.sqlalchemy.enginefacade.AlreadyStartedError:\n  this TransactionFactory is already started\n\nwhen the db tests run selectively with tox -e py38 nova.tests.unit.db\nbut does not cause errors if the whole unit test suit is run.\n\nThis error happened because our db code uses two global transaction\nfactory, one for the api DB and one for the main DB. There was a global\nflag SESSION_CONFIGURED in our Database fixture that guarded against\ndouble initialization of the factory. But the faulty test cases in\nquestion do not use our Database fixture but use the\nOpportunisticDBTestMixin from oslo_db. Obviously that fixture does not\nknow about our SESSION_CONFIGURED global. So if one of the offending\ntest case ran first in an executor then that initialized the\ntransaction factory globally and a later test that uses our Database\nfixture tried to configure it again leading to the error. For some\nunknown reason if these tests were run in the opposite order the faulty\nre-initialization did not happen. Probably the OpportunisticDBTestMixin\nwas able to prevent that.\n\nA previous patch already removed the global SESSION_CONFIGURED flag\nfrom our fixture and replaced it with a per DB specific patch_factory\ncalls that allow resetting the state of the factory at the end of each\ntest case. This would already solve the current test case issue as only\nour offending test cases would initialize the global factory without\ncleanup and we have one test case per DB. So there would be no\ninterference. However if in the future we add similar test cases then\nthose can still interfere through the global factory.\n\nSo this patch fixes the two offending test case. Also it extends the\nDatabasePoisonFixture used for the NoDbTestCase tesst. The poison now\ndetects if the test case starts any transaction factory.\n\nThis poison caught another offender test case,\ntest_db_sync_with_special_symbols_in_connection_string, that was marked\nNoDb but actually using the database. It is now changed to declare\nitself as a test that sets up the DB manually and also it is changed to\nuse the Database fixture instead of touching the global factory\ndirectly.\n\nConflicts:\n      nova/tests/unit/db/api/test_migrations.py\n      nova/tests/unit/db/main/test_migrations.py\n      nova/tests/unit/db/test_migration.py\n\nAll these conflicts are due to I2e970ec4a185cd28611855004b6d9786bf2ce217\nnot in stable/xena\n\nCloses-Bug: #1948963\n\nChange-Id: Id96f1795034490c13125ebbab49b029fb96af1c7\n(cherry picked from commit a7bccff06b871765fb87ee3e9edd9458c7f73701)\n'}]",4,817240,6f0cf6550bbf2d0133a91ab6a13235ab18bdbc05,12,1,2,9708,,,0,"Fix interference in db unit test

We discovered that two unit test cases added in
I0647bb8545c1464b521a1d866cf5ee674aea2eae cause errors like
  oslo_db.sqlalchemy.enginefacade.AlreadyStartedError:
  this TransactionFactory is already started

when the db tests run selectively with tox -e py38 nova.tests.unit.db
but does not cause errors if the whole unit test suit is run.

This error happened because our db code uses two global transaction
factory, one for the api DB and one for the main DB. There was a global
flag SESSION_CONFIGURED in our Database fixture that guarded against
double initialization of the factory. But the faulty test cases in
question do not use our Database fixture but use the
OpportunisticDBTestMixin from oslo_db. Obviously that fixture does not
know about our SESSION_CONFIGURED global. So if one of the offending
test case ran first in an executor then that initialized the
transaction factory globally and a later test that uses our Database
fixture tried to configure it again leading to the error. For some
unknown reason if these tests were run in the opposite order the faulty
re-initialization did not happen. Probably the OpportunisticDBTestMixin
was able to prevent that.

A previous patch already removed the global SESSION_CONFIGURED flag
from our fixture and replaced it with a per DB specific patch_factory
calls that allow resetting the state of the factory at the end of each
test case. This would already solve the current test case issue as only
our offending test cases would initialize the global factory without
cleanup and we have one test case per DB. So there would be no
interference. However if in the future we add similar test cases then
those can still interfere through the global factory.

So this patch fixes the two offending test case. Also it extends the
DatabasePoisonFixture used for the NoDbTestCase tesst. The poison now
detects if the test case starts any transaction factory.

This poison caught another offender test case,
test_db_sync_with_special_symbols_in_connection_string, that was marked
NoDb but actually using the database. It is now changed to declare
itself as a test that sets up the DB manually and also it is changed to
use the Database fixture instead of touching the global factory
directly.

Conflicts:
      nova/tests/unit/db/api/test_migrations.py
      nova/tests/unit/db/main/test_migrations.py
      nova/tests/unit/db/test_migration.py

All these conflicts are due to I2e970ec4a185cd28611855004b6d9786bf2ce217
not in stable/xena

Closes-Bug: #1948963

Change-Id: Id96f1795034490c13125ebbab49b029fb96af1c7
(cherry picked from commit a7bccff06b871765fb87ee3e9edd9458c7f73701)
",git fetch https://review.opendev.org/openstack/nova refs/changes/40/817240/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/fixtures/nova.py', 'nova/tests/unit/db/api/test_migrations.py', 'nova/tests/unit/db/main/test_migrations.py', 'nova/tests/unit/db/test_migration.py']",4,a71c9d6d31dbbb1b4a728f758ccb4260fdbcdfde,bug/1948963,from nova.tests import fixtures as nova_fixtures USES_DB_SELF = True self.useFixture(nova_fixtures.Database()) ," import fixturesfrom oslo_db.sqlalchemy import enginefacade # since the engine.url is immutable it will never get updated # once its created so reusing the engine instance would break # this test. engine = enginefacade.writer.get_engine() self.useFixture( fixtures.MonkeyPatch( 'nova.db.migration._get_engine', mock.Mock(return_value=engine)))",30,20
openstack%2Fnova~827895,openstack/nova,stable/xena,Iae13b0ffcded76ef1712fdbad3fbff3dc774336c,Add check job for FIPS,ABANDONED,2022-02-04 19:59:05.000000000,2024-03-05 19:13:52.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-02-04 19:59:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/de7ed1dde457563e9156a427acdb75157d44f18a', 'message': 'Add check job for FIPS\n\nThe job makes sure that integration tests pass when the nodes are\nset to be in fips mode.\n\nChange-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c\n(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)\n'}, {'number': 2, 'created': '2022-02-04 20:00:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/cfc69b7cfd1d17eb43551bdcb23047c0ce81356f', 'message': 'Add check job for FIPS\n\nThe job makes sure that integration tests pass when the nodes are\nset to be in fips mode.\n\nChange-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c\n(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)\n'}, {'number': 3, 'created': '2022-02-10 14:52:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/3a6bb5b1fe8defaa5eacc5f0ae4b3cd666bc75c3', 'message': 'Add check job for FIPS\n\nThe job makes sure that integration tests pass when the nodes are\nset to be in fips mode.\n\nDepends-On: https://review.opendev.org/c/openstack/devstack/+/828661\nDepends-On: https://review.opendev.org/c/openstack/devstack/+/828723\n\nChange-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c\n(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)\n'}, {'number': 4, 'created': '2022-02-10 16:24:12.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/bdbe8dd53334ef9258bf231a5dedba9028c8cf81', 'message': 'Add check job for FIPS\n\nThe job makes sure that integration tests pass when the nodes are\nset to be in fips mode.\n\nDepends-On: https://review.opendev.org/c/openstack/devstack/+/828723\n\nChange-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c\n(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)\n'}]",6,827895,bdbe8dd53334ef9258bf231a5dedba9028c8cf81,37,2,4,9914,,,0,"Add check job for FIPS

The job makes sure that integration tests pass when the nodes are
set to be in fips mode.

Depends-On: https://review.opendev.org/c/openstack/devstack/+/828723

Change-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c
(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)
",git fetch https://review.opendev.org/openstack/nova refs/changes/95/827895/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,de7ed1dde457563e9156a427acdb75157d44f18a,fips-compatibility,<<<<<<< HEAD (a79c26 Update centos 8 py36 functional job nodeset to centos stream) ======= - tempest-integrated-compute-centos-8-stream: irrelevant-files: *nova-base-irrelevant-files - tempest-centos8-stream-fips: irrelevant-files: *nova-base-irrelevant-files voting: false >>>>>>> CHANGE (82c91e Add check job for FIPS),,8,0
openstack%2Fnova~838945,openstack/nova,stable/xena,I184ed3ad3d578780524fbaa3a0392607d1a50cdc,enable locking test fixture,ABANDONED,2022-04-21 19:55:10.000000000,2024-03-05 19:13:48.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-04-21 19:55:10.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/virt/test_block_device.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/d42262c8f0218b18d26506f242bb1d46b491f980', 'message': 'enable locking test fixture\n\nos-brick now uses file system locks by default.\nAs such we shoudl be enabling the locking fixture\nin the compute manager and block device unit tests.\n\nChange-Id: I184ed3ad3d578780524fbaa3a0392607d1a50cdc\nCloses-Bug: #1947370\n(cherry picked from commit aa5b8cff2b8154b04e89a0a284a598ea777f2321)\n(cherry picked from commit 6c22388c76173fc5ed52dde4bea06e6678452fa0)\n'}]",0,838945,d42262c8f0218b18d26506f242bb1d46b491f980,6,1,1,11604,,,0,"enable locking test fixture

os-brick now uses file system locks by default.
As such we shoudl be enabling the locking fixture
in the compute manager and block device unit tests.

Change-Id: I184ed3ad3d578780524fbaa3a0392607d1a50cdc
Closes-Bug: #1947370
(cherry picked from commit aa5b8cff2b8154b04e89a0a284a598ea777f2321)
(cherry picked from commit 6c22388c76173fc5ed52dde4bea06e6678452fa0)
",git fetch https://review.opendev.org/openstack/nova refs/changes/45/838945/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/virt/test_block_device.py']",2,d42262c8f0218b18d26506f242bb1d46b491f980,bug/1947370, # os-brick now uses external file system locks instead of internal # locks so we need to set up locking REQUIRES_LOCKING = True,,7,0
openstack%2Fnova~840834,openstack/nova,stable/xena,I20fb4ea96d5dfabfc4be3b5ecec0e4e6c5b3a318,Isolate PCI tracker unit tests,ABANDONED,2022-05-06 08:40:46.000000000,2024-03-05 19:13:45.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 08:40:46.000000000', 'files': ['nova/tests/unit/pci/test_manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/1023580f6d9008f5e56f6d3905b6e227bd2bff67', 'message': 'Isolate PCI tracker unit tests\n\nDuring the testing If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 we noticed\nthat the unit test cases of PciTracker._set_hvdev are changing and\nleaking global state leading to unstable tests.\n\nTo reproduce on master, duplicate the\ntest_set_hvdev_remove_tree_maintained_with_allocations test case and run\nPciDevTrackerTestCase serially. The duplicated test case will fail with\n\n  File ""/nova/nova/objects/pci_device.py"", line 238, in _from_db_object\n  setattr(pci_device, key, db_dev[key])\n  KeyError: \'id\'\n\nThis is caused by the fact that the test data is defined on module\nlevel, both _create_tracker and _set_hvdevs modifies the devices\npassed to them, and some test mixes passing db dicts to _set_hvdevs\nthat expects pci dicts from the hypervisor.\n\nThis patch fixes multiple related issues:\n* always deepcopy what _create_tracker takes as that list is later\n  returned to the PciTracker via a mock and the tracker might modify\n  what it got\n\n* ensure that _create_tracker takes db dicts (with id field) while\n  _set_hvdevs takes pci dicts in the hypervisor format (without id\n  field)\n\n* always deepcopy what is passed to _set_hvdevs as the PciTracker modify\n  what it gets.\n\n* normalize when the deepcopy happens to give a safe patter for future\n  test cases\n\nChange-Id: I20fb4ea96d5dfabfc4be3b5ecec0e4e6c5b3a318\n(cherry picked from commit c58376db75917444831934963fa75b4b57f08818)\n(cherry picked from commit f04cfd42359d555e746df0e2c48d989d0c3244f1)\n'}]",0,840834,1023580f6d9008f5e56f6d3905b6e227bd2bff67,6,1,1,9708,,,0,"Isolate PCI tracker unit tests

During the testing If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 we noticed
that the unit test cases of PciTracker._set_hvdev are changing and
leaking global state leading to unstable tests.

To reproduce on master, duplicate the
test_set_hvdev_remove_tree_maintained_with_allocations test case and run
PciDevTrackerTestCase serially. The duplicated test case will fail with

  File ""/nova/nova/objects/pci_device.py"", line 238, in _from_db_object
  setattr(pci_device, key, db_dev[key])
  KeyError: 'id'

This is caused by the fact that the test data is defined on module
level, both _create_tracker and _set_hvdevs modifies the devices
passed to them, and some test mixes passing db dicts to _set_hvdevs
that expects pci dicts from the hypervisor.

This patch fixes multiple related issues:
* always deepcopy what _create_tracker takes as that list is later
  returned to the PciTracker via a mock and the tracker might modify
  what it got

* ensure that _create_tracker takes db dicts (with id field) while
  _set_hvdevs takes pci dicts in the hypervisor format (without id
  field)

* always deepcopy what is passed to _set_hvdevs as the PciTracker modify
  what it gets.

* normalize when the deepcopy happens to give a safe patter for future
  test cases

Change-Id: I20fb4ea96d5dfabfc4be3b5ecec0e4e6c5b3a318
(cherry picked from commit c58376db75917444831934963fa75b4b57f08818)
(cherry picked from commit f04cfd42359d555e746df0e2c48d989d0c3244f1)
",git fetch https://review.opendev.org/openstack/nova refs/changes/34/840834/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/unit/pci/test_manager.py'],1,1023580f6d9008f5e56f6d3905b6e227bd2bff67,bug/1969496,"fake_pci_devs = [fake_pci, fake_pci_1, fake_pci_2] fake_pci_devs_tree = [fake_pci_3, fake_pci_4, fake_pci_5] self.fake_devs = copy.deepcopy(fake_devs) self.fake_devs = copy.deepcopy(fake_db_devs) self._create_tracker(fake_db_devs) fake_pci_devs = [fake_pci, fake_pci_1, fake_pci_2, fake_pci_3] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_devs = [fake_pci_3, fake_pci_4, fake_pci_5, fake_new_device] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_devs = [fake_pci, fake_pci_2, fake_pci_v2] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) self.tracker._set_hvdevs(copy.deepcopy([fake_pci])) fake_pci_devs = [fake_pci_3, fake_pci_4] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) all_db_devs = fake_db_devs_tree all_pci_devs = fake_pci_devs_tree self._create_tracker(all_db_devs) self.tracker._set_hvdevs(copy.deepcopy(all_pci_devs)) fake_pci_devs = [dev for dev in all_pci_devs self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_devs = [fake_pci, fake_pci_2, fake_pci_3] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_3 = dict(fake_pci_1, address='0000:00:00.4') fake_devs_numa = copy.deepcopy(fake_pci_devs) fake_devs_numa.append(fake_pci_3) self.tracker._set_hvdevs(copy.deepcopy(fake_devs_numa)) fake_pci_devs = [fake_pci, fake_pci_2, fake_pci_v3] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs))"," self.fake_devs = fake_devs self.fake_devs = fake_db_devs[:] self._create_tracker(fake_db_devs[:]) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_1), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_3)] self.tracker._set_hvdevs(fake_pci_devs) fake_pci_devs = [copy.deepcopy(fake_pci_3), copy.deepcopy(fake_pci_4), copy.deepcopy(fake_pci_5), copy.deepcopy(fake_new_device)] self.tracker._set_hvdevs(fake_pci_devs) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_v2)] self.tracker._set_hvdevs(fake_pci_devs) self.tracker._set_hvdevs([fake_pci]) fake_pci_devs = [copy.deepcopy(fake_pci_3), copy.deepcopy(fake_pci_4)] self.tracker._set_hvdevs(fake_pci_devs) all_devs = fake_db_devs_tree[:] self._create_tracker(all_devs) self.tracker._set_hvdevs(all_devs) fake_pci_devs = [dev for dev in all_devs self.tracker._set_hvdevs(fake_pci_devs) self.tracker._set_hvdevs(fake_pci_devs) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_3)] self.tracker._set_hvdevs(fake_pci_devs) fake_db_dev_3 = dict(fake_db_dev_1, id=4, address='0000:00:00.4') fake_devs_numa = copy.deepcopy(fake_db_devs) fake_devs_numa.append(fake_db_dev_3) self.tracker._set_hvdevs(fake_devs_numa) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_v3)] self.tracker._set_hvdevs(fake_pci_devs)",30,33
openstack%2Fnova~840835,openstack/nova,stable/xena,If9ab424cc7375a1f0d41b03f01c4a823216b3eb8,Remove unavailable but not reported PCI devices at startup,ABANDONED,2022-05-06 08:40:46.000000000,2024-03-05 19:13:41.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 08:40:46.000000000', 'files': ['nova/objects/pci_device.py', 'nova/pci/manager.py', 'nova/tests/unit/objects/test_pci_device.py', 'nova/tests/unit/pci/test_manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/580a4b14ae367e327229482decca0cb6cdf6e9d8', 'message': 'Remove unavailable but not reported PCI devices at startup\n\nWe saw in the field that the pci_devices table can end up in\ninconsistent state after a compute node HW failure and re-deployment.\nThere could be dependent devices where the parent PF is in available\nstate while the children VFs are in unavailable state. (Before the HW\nfault the PF was allocated hence the VFs was marked unavailable).\n\nIn this state this PF is still schedulable but during the\nPCI claim the handling of dependent devices in the PCI tracker fill fail\nwith the error: ""Attempt to consume PCI device XXX from empty pool"".\n\nThe reason of the failure is that when the PF is claimed, all the\nchildren VFs are marked unavailable. But if the VF is already\nunavailable such step fails.\n\nOne way the deployer might try to recover from this state is to remove\nthe VFs from the hypervisor and restart the compute agent. The compute\nstartup already has a logic to delete PCI devices that are unused and\nnot reported by the hypervisor. However this logic only removed devices\nin \'available\' state and ignored devices in \'unavailable\' state.\n\nIf a device is unused and the hypervisor is not reporting the device any\nmore then it is safe to delete that device from the PCI tracker. So this\npatch extends the logic to allow deleting \'unavailable\' devices. There\nis a small window when dependent PCI device is in \'unclaimable\' state.\nFrom cleanup perspective this is an analogous state. So it is also\nadded to the cleanup logic.\n\nRelated-Bug: #1969496\nChange-Id: If9ab424cc7375a1f0d41b03f01c4a823216b3eb8\n(cherry picked from commit 284ea72e96604bdf16d1c5c4db47247334841b2f)\n(cherry picked from commit d7bca631fea348fb56cc46c5680643bacd82513e)\n'}]",0,840835,580a4b14ae367e327229482decca0cb6cdf6e9d8,7,1,1,9708,,,0,"Remove unavailable but not reported PCI devices at startup

We saw in the field that the pci_devices table can end up in
inconsistent state after a compute node HW failure and re-deployment.
There could be dependent devices where the parent PF is in available
state while the children VFs are in unavailable state. (Before the HW
fault the PF was allocated hence the VFs was marked unavailable).

In this state this PF is still schedulable but during the
PCI claim the handling of dependent devices in the PCI tracker fill fail
with the error: ""Attempt to consume PCI device XXX from empty pool"".

The reason of the failure is that when the PF is claimed, all the
children VFs are marked unavailable. But if the VF is already
unavailable such step fails.

One way the deployer might try to recover from this state is to remove
the VFs from the hypervisor and restart the compute agent. The compute
startup already has a logic to delete PCI devices that are unused and
not reported by the hypervisor. However this logic only removed devices
in 'available' state and ignored devices in 'unavailable' state.

If a device is unused and the hypervisor is not reporting the device any
more then it is safe to delete that device from the PCI tracker. So this
patch extends the logic to allow deleting 'unavailable' devices. There
is a small window when dependent PCI device is in 'unclaimable' state.
From cleanup perspective this is an analogous state. So it is also
added to the cleanup logic.

Related-Bug: #1969496
Change-Id: If9ab424cc7375a1f0d41b03f01c4a823216b3eb8
(cherry picked from commit 284ea72e96604bdf16d1c5c4db47247334841b2f)
(cherry picked from commit d7bca631fea348fb56cc46c5680643bacd82513e)
",git fetch https://review.opendev.org/openstack/nova refs/changes/35/840835/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/pci_device.py', 'nova/pci/manager.py', 'nova/tests/unit/objects/test_pci_device.py', 'nova/tests/unit/pci/test_manager.py']",4,580a4b14ae367e327229482decca0cb6cdf6e9d8,bug/1969496," def _get_device_by_address(self, address): devs = [dev for dev in self.tracker.pci_devs if dev.address == address] if len(devs) == 1: return devs[0] if devs: raise ValueError('ambiguous address', devs) else: raise ValueError('device not found', address) def test_set_hvdevs_unavailable_vf_removed(self): # We start with a PF parent and two VF children self._create_tracker([fake_db_dev_3, fake_db_dev_4, fake_db_dev_5]) pci_requests_obj = self._create_pci_requests_object( [ { 'count': 1, 'spec': [{'dev_type': fields.PciDeviceType.SRIOV_PF}] } ], instance_uuid=uuidsentinel.instance1, ) # then claim and allocate the PF that makes the VFs unavailable self.tracker.claim_instance( mock.sentinel.context, pci_requests_obj, None) self.tracker.allocate_instance({'uuid': uuidsentinel.instance1}) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('allocated', dev3_pf.status) self.assertEqual(uuidsentinel.instance1, dev3_pf.instance_uuid) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('unavailable', dev4_vf.status) dev5_vf = self._get_device_by_address(fake_db_dev_5['address']) self.assertEqual('unavailable', dev5_vf.status) # now simulate that one VF (dev_5) is removed from the hypervisor and # the compute is restarted. As the VF is not claimed or allocated we # are free to remove it from the tracker. self.tracker._set_hvdevs(copy.deepcopy([fake_pci_3, fake_pci_4])) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('allocated', dev3_pf.status) self.assertEqual(uuidsentinel.instance1, dev3_pf.instance_uuid) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('unavailable', dev4_vf.status) dev5_vf = self._get_device_by_address(fake_db_dev_5['address']) self.assertEqual('removed', dev5_vf.status) def test_set_hvdevs_unavailable_pf_removed(self): # We start with one PF parent and one child VF self._create_tracker([fake_db_dev_3, fake_db_dev_4]) pci_requests_obj = self._create_pci_requests_object( [ { 'count': 1, 'spec': [{'dev_type': fields.PciDeviceType.SRIOV_VF}] } ], instance_uuid=uuidsentinel.instance1, ) # Then we claim and allocate the VF that makes the PF unavailable self.tracker.claim_instance( mock.sentinel.context, pci_requests_obj, None) self.tracker.allocate_instance({'uuid': uuidsentinel.instance1}) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('unavailable', dev3_pf.status) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('allocated', dev4_vf.status) self.assertEqual(uuidsentinel.instance1, dev4_vf.instance_uuid) # now simulate that the parent PF is removed from the hypervisor and # the compute is restarted. As the PF is not claimed or allocated we # are free to remove it from the tracker. self.tracker._set_hvdevs(copy.deepcopy([fake_pci_4])) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('removed', dev3_pf.status) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('allocated', dev4_vf.status) self.assertEqual(uuidsentinel.instance1, dev4_vf.instance_uuid) ",,123,7
openstack%2Fnova~840836,openstack/nova,stable/xena,I7b432d7a32aeb1ab765d1f731691c7841a8f1440,Simulate bug 1969496,ABANDONED,2022-05-06 08:40:46.000000000,2024-03-05 19:13:37.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 08:40:46.000000000', 'files': ['nova/tests/unit/pci/test_manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/96e00c30fc7356874a13f75eb5ee46c87fb448d0', 'message': ""Simulate bug 1969496\n\nAs If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for\nthe pci_device table to become inconsistent. Parent PF can be in\n'available' state while children VFs are still in 'unavailable' state.\nIn this situation the PF is schedulable but the PCI claim will fail to\nwhen try to mark the dependent VFs unavailable.\n\nThis patch adds a test case that shows the error.\n\nRelated-Bug: #1969496\n\nChange-Id: I7b432d7a32aeb1ab765d1f731691c7841a8f1440\n(cherry picked from commit 9ee5d2c66255f83cc8a66f1b5648fa13e1d73f47)\n(cherry picked from commit 23c48b670668e9cae886b5113c776077780f5581)\n""}]",0,840836,96e00c30fc7356874a13f75eb5ee46c87fb448d0,6,1,1,9708,,,0,"Simulate bug 1969496

As If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for
the pci_device table to become inconsistent. Parent PF can be in
'available' state while children VFs are still in 'unavailable' state.
In this situation the PF is schedulable but the PCI claim will fail to
when try to mark the dependent VFs unavailable.

This patch adds a test case that shows the error.

Related-Bug: #1969496

Change-Id: I7b432d7a32aeb1ab765d1f731691c7841a8f1440
(cherry picked from commit 9ee5d2c66255f83cc8a66f1b5648fa13e1d73f47)
(cherry picked from commit 23c48b670668e9cae886b5113c776077780f5581)
",git fetch https://review.opendev.org/openstack/nova refs/changes/36/840836/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/unit/pci/test_manager.py'],1,96e00c30fc7356874a13f75eb5ee46c87fb448d0,bug/1969496,"from nova import exception def test_claim_available_pf_while_child_vf_is_unavailable(self): # NOTE(gibi): this is bug 1969496. The state created here is # inconsistent and should not happen. But it did happen in some cases # where we were not able to track down the way how it happened. # We start with a PF parent and a VF child. The PF is available and # the VF is unavailable. pf = copy.deepcopy(fake_db_dev_3) vf = copy.deepcopy(fake_db_dev_4) vf['status'] = fields.PciDeviceStatus.UNAVAILABLE self._create_tracker([pf, vf]) pf_dev = self._get_device_by_address(pf['address']) self.assertEqual('available', pf_dev.status) vf_dev = self._get_device_by_address(vf['address']) self.assertEqual('unavailable', vf_dev.status) pci_requests_obj = self._create_pci_requests_object( [ { 'count': 1, 'spec': [{'dev_type': fields.PciDeviceType.SRIOV_PF}] } ], instance_uuid=uuidsentinel.instance1, ) # now try to claim and allocate the PF. It should work as it is # available # This is bug 1969496 as the claim fails with exception ex = self.assertRaises( exception.PciDevicePoolEmpty, self.tracker.claim_instance, mock.sentinel.context, pci_requests_obj, None ) self.assertIn( 'Attempt to consume PCI device 1:0000:00:02.1 from empty pool', str(ex) ) pf_dev = self._get_device_by_address(pf['address']) self.assertEqual('available', pf_dev.status) vf_dev = self._get_device_by_address(vf['address']) self.assertEqual('unavailable', vf_dev.status) # This should work when the bug is fixed # self.tracker.claim_instance( # mock.sentinel.context, pci_requests_obj, None) # self.tracker.allocate_instance({'uuid': uuidsentinel.instance1}) # pf_dev = self._get_device_by_address(pf['address']) # self.assertEqual('allocated', pf_dev.status) # vf_dev = self._get_device_by_address(vf['address']) # self.assertEqual('unavailable', vf_dev.status) ",,56,0
openstack%2Fnova~840837,openstack/nova,stable/xena,I575ce06bcc913add7db0849f85728371da2032fc,Allow claiming PCI PF if child VF is unavailable,ABANDONED,2022-05-06 08:40:46.000000000,2024-03-05 19:13:34.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 08:40:46.000000000', 'files': ['nova/objects/pci_device.py', 'nova/tests/unit/pci/test_manager.py', 'nova/pci/stats.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/1dbd45be4556c034eb469462698804984d95b503', 'message': ""Allow claiming PCI PF if child VF is unavailable\n\nAs If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for\nthe pci_device table to become inconsistent. Parent PF can be in\n'available' state while children VFs are still in 'unavailable' state.\nIn this situation the PF is schedulable but the PCI claim will fail\nwhen try to mark the dependent VFs unavailable.\n\nThis patch changes the PCI claim logic to allow claiming the parent PF\nin the inconsistent situation as we assume that it is safe to do so.\nThis claim also fixed the inconsistency so that when the parent PF is\nfreed the children VFs become available again.\n\nCloses-Bug: #1969496\nChange-Id: I575ce06bcc913add7db0849f85728371da2032fc\n(cherry picked from commit 3af2ecc13fa9334de8418accaed4fffefefb41da)\n(cherry picked from commit 4ca4b2e6bc84ca2c209653b46d7428c6c7cbd270)\n""}]",1,840837,1dbd45be4556c034eb469462698804984d95b503,12,1,1,9708,,,0,"Allow claiming PCI PF if child VF is unavailable

As If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for
the pci_device table to become inconsistent. Parent PF can be in
'available' state while children VFs are still in 'unavailable' state.
In this situation the PF is schedulable but the PCI claim will fail
when try to mark the dependent VFs unavailable.

This patch changes the PCI claim logic to allow claiming the parent PF
in the inconsistent situation as we assume that it is safe to do so.
This claim also fixed the inconsistency so that when the parent PF is
freed the children VFs become available again.

Closes-Bug: #1969496
Change-Id: I575ce06bcc913add7db0849f85728371da2032fc
(cherry picked from commit 3af2ecc13fa9334de8418accaed4fffefefb41da)
(cherry picked from commit 4ca4b2e6bc84ca2c209653b46d7428c6c7cbd270)
",git fetch https://review.opendev.org/openstack/nova refs/changes/37/840837/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/pci_device.py', 'nova/tests/unit/pci/test_manager.py', 'nova/pci/stats.py']",3,1dbd45be4556c034eb469462698804984d95b503,bug/1969496, free_devs = self.get_free_devs() for vf in vfs_list: # NOTE(gibi): do not try to remove a device that are # already removed if vf in free_devs: self.remove_device(vf), for vf in vfs_list: self.remove_device(vf),162,26
openstack%2Fnova~867913,openstack/nova,stable/xena,Iab92124b5776a799c7f90d07281d28fcf191c8fe,Ironic nodes with instance reserved in placement,ABANDONED,2022-12-15 23:23:24.000000000,2024-03-05 19:13:30.000000000,,"[{'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-12-15 23:23:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/4e6093b61d71e72e5e2a52f5543e6a2bdb295db6', 'message': ""Ironic nodes with instance reserved in placement\n\nCurrently, when you delete an ironic instance, we trigger\nand undeploy in ironic and we release our allocation in placement.\nWe do this well before the ironic node is actually available.\n\nWe have attempted to fix this my marking unavailable nodes\nas reserved in placement. This works great until you try\nand re-image lots of nodes.\n\nIt turns out, ironic nodes that are waiting for their automatic\nclean to finish, are returned as a valid allocation candidates\nfor quite some time. Eventually we mark then as reserved.\n\nThis patch takes a strange approach, if we mark all nodes as\nreserved as soon as the instance lands, we close the race.\nThat is, when the allocation is removed the node is still\nunavailable until the next update of placement is done and\nnotices that the node has become available. That may or may\nnot have been after automatic cleaning. The trade off is\nthat when you don't have automatic cleaning, we wait a bit\nlonger to notice the node is available again.\n\nNote, this is also useful when a broken Ironic node is\nmarked as in-maintainance while it is in-use by a nova\ninstance. In a similar way, we mark the Nova as reserved\nimmmeidately, rather than first waiting for the instance to be\ndeleted before reserving the resources in Placement.\n\nCloses-Bug: #1974070\nChange-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe\n(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)\n""}, {'number': 2, 'created': '2022-12-16 14:03:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/0fb7da36f17f4aee1b7c139867f8a531be84ec43', 'message': ""Ironic nodes with instance reserved in placement\n\nCurrently, when you delete an ironic instance, we trigger\nand undeploy in ironic and we release our allocation in placement.\nWe do this well before the ironic node is actually available.\n\nWe have attempted to fix this my marking unavailable nodes\nas reserved in placement. This works great until you try\nand re-image lots of nodes.\n\nIt turns out, ironic nodes that are waiting for their automatic\nclean to finish, are returned as a valid allocation candidates\nfor quite some time. Eventually we mark then as reserved.\n\nThis patch takes a strange approach, if we mark all nodes as\nreserved as soon as the instance lands, we close the race.\nThat is, when the allocation is removed the node is still\nunavailable until the next update of placement is done and\nnotices that the node has become available. That may or may\nnot have been after automatic cleaning. The trade off is\nthat when you don't have automatic cleaning, we wait a bit\nlonger to notice the node is available again.\n\nNote, this is also useful when a broken Ironic node is\nmarked as in-maintainance while it is in-use by a nova\ninstance. In a similar way, we mark the Nova as reserved\nimmmeidately, rather than first waiting for the instance to be\ndeleted before reserving the resources in Placement.\n\nConflicts:\n    nova/conf/workarounds.py\n\nNOTE(rloo): The conflict is because xena doesn't have these config\noptions that are in master:\n- unified_limits_count_pcpu_as_vcp\n- skip_cpu_compare_on_dest\n- skip_hypervisor_version_check_on_lm\n\nCloses-Bug: #1974070\nChange-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe\n(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)\n""}, {'number': 3, 'created': '2022-12-16 17:58:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/495c1ea7488b782cae2ab529bfa8919ae291873c', 'message': ""Ironic nodes with instance reserved in placement\n\nCurrently, when you delete an ironic instance, we trigger\nand undeploy in ironic and we release our allocation in placement.\nWe do this well before the ironic node is actually available.\n\nWe have attempted to fix this my marking unavailable nodes\nas reserved in placement. This works great until you try\nand re-image lots of nodes.\n\nIt turns out, ironic nodes that are waiting for their automatic\nclean to finish, are returned as a valid allocation candidates\nfor quite some time. Eventually we mark then as reserved.\n\nThis patch takes a strange approach, if we mark all nodes as\nreserved as soon as the instance lands, we close the race.\nThat is, when the allocation is removed the node is still\nunavailable until the next update of placement is done and\nnotices that the node has become available. That may or may\nnot have been after automatic cleaning. The trade off is\nthat when you don't have automatic cleaning, we wait a bit\nlonger to notice the node is available again.\n\nNote, this is also useful when a broken Ironic node is\nmarked as in-maintainance while it is in-use by a nova\ninstance. In a similar way, we mark the Nova as reserved\nimmmeidately, rather than first waiting for the instance to be\ndeleted before reserving the resources in Placement.\n\nConflicts:\n    nova/conf/workarounds.py\n\nNOTE(rloo): The conflict is because xena doesn't have these config\noptions that are in master:\n- unified_limits_count_pcpu_as_vcp\n- skip_cpu_compare_on_dest\n- skip_hypervisor_version_check_on_lm\n\nCloses-Bug: #1974070\nChange-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe\n(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)(cherry picked from commit c9de185ea1ac1e8d4435c5863b2ad7cefdb28c76)\n(cherry picked from commit 7fe4a7ab47086570a027e9c6d6664db8ae2340ab)\n""}, {'number': 4, 'created': '2022-12-16 18:06:03.000000000', 'files': ['nova/virt/ironic/driver.py', 'nova/tests/unit/virt/ironic/test_driver.py', 'releasenotes/notes/fix-ironic-scheduler-race-08cf8aba0365f512.yaml', 'nova/conf/workarounds.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/6168eab0810ccded27b08dcaec69175469adeb54', 'message': ""Ironic nodes with instance reserved in placement\n\nCurrently, when you delete an ironic instance, we trigger\nand undeploy in ironic and we release our allocation in placement.\nWe do this well before the ironic node is actually available.\n\nWe have attempted to fix this my marking unavailable nodes\nas reserved in placement. This works great until you try\nand re-image lots of nodes.\n\nIt turns out, ironic nodes that are waiting for their automatic\nclean to finish, are returned as a valid allocation candidates\nfor quite some time. Eventually we mark then as reserved.\n\nThis patch takes a strange approach, if we mark all nodes as\nreserved as soon as the instance lands, we close the race.\nThat is, when the allocation is removed the node is still\nunavailable until the next update of placement is done and\nnotices that the node has become available. That may or may\nnot have been after automatic cleaning. The trade off is\nthat when you don't have automatic cleaning, we wait a bit\nlonger to notice the node is available again.\n\nNote, this is also useful when a broken Ironic node is\nmarked as in-maintainance while it is in-use by a nova\ninstance. In a similar way, we mark the Nova as reserved\nimmmeidately, rather than first waiting for the instance to be\ndeleted before reserving the resources in Placement.\n\nConflicts:\n    nova/conf/workarounds.py\n\nNOTE(rloo): The conflict is because xena doesn't have these config\noptions that are in yoga:\n- unified_limits_count_pcpu_as_vcp\n- skip_cpu_compare_on_dest\n\nCloses-Bug: #1974070\nChange-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe\n(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)(cherry picked from commit c9de185ea1ac1e8d4435c5863b2ad7cefdb28c76)\n(cherry picked from commit 7fe4a7ab47086570a027e9c6d6664db8ae2340ab)\n""}]",14,867913,6168eab0810ccded27b08dcaec69175469adeb54,15,2,4,6618,,,0,"Ironic nodes with instance reserved in placement

Currently, when you delete an ironic instance, we trigger
and undeploy in ironic and we release our allocation in placement.
We do this well before the ironic node is actually available.

We have attempted to fix this my marking unavailable nodes
as reserved in placement. This works great until you try
and re-image lots of nodes.

It turns out, ironic nodes that are waiting for their automatic
clean to finish, are returned as a valid allocation candidates
for quite some time. Eventually we mark then as reserved.

This patch takes a strange approach, if we mark all nodes as
reserved as soon as the instance lands, we close the race.
That is, when the allocation is removed the node is still
unavailable until the next update of placement is done and
notices that the node has become available. That may or may
not have been after automatic cleaning. The trade off is
that when you don't have automatic cleaning, we wait a bit
longer to notice the node is available again.

Note, this is also useful when a broken Ironic node is
marked as in-maintainance while it is in-use by a nova
instance. In a similar way, we mark the Nova as reserved
immmeidately, rather than first waiting for the instance to be
deleted before reserving the resources in Placement.

Conflicts:
    nova/conf/workarounds.py

NOTE(rloo): The conflict is because xena doesn't have these config
options that are in yoga:
- unified_limits_count_pcpu_as_vcp
- skip_cpu_compare_on_dest

Closes-Bug: #1974070
Change-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe
(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)(cherry picked from commit c9de185ea1ac1e8d4435c5863b2ad7cefdb28c76)
(cherry picked from commit 7fe4a7ab47086570a027e9c6d6664db8ae2340ab)
",git fetch https://review.opendev.org/openstack/nova refs/changes/13/867913/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/ironic/driver.py', 'nova/tests/unit/virt/ironic/test_driver.py', 'releasenotes/notes/fix-ironic-scheduler-race-08cf8aba0365f512.yaml', 'nova/conf/workarounds.py']",4,4e6093b61d71e72e5e2a52f5543e6a2bdb295db6,fix-ironic-scheduler-race-stable/xena,"<<<<<<< HEAD (d3f3dd Merge ""Retry attachment delete API call for 504 Gateway Time) ======= cfg.BoolOpt('unified_limits_count_pcpu_as_vcpu', default=False, help="""""" When using unified limits, use VCPU + PCPU for VCPU quota usage. If the deployment is configured to use unified limits via ``[quota]driver=nova.quota.UnifiedLimitsDriver``, by default VCPU resources are counted independently from PCPU resources, consistent with how they are represented in the placement service. Legacy quota behavior counts PCPU as VCPU and returns the sum of VCPU + PCPU usage as the usage count for VCPU. Operators relying on the aggregation of VCPU and PCPU resource usage counts should set this option to True. Related options: * :oslo.config:option:`quota.driver` """"""), cfg.BoolOpt('skip_cpu_compare_on_dest', default=False, help="""""" With the libvirt driver, during live migration, skip comparing guest CPU with the destination host. When using QEMU >= 2.9 and libvirt >= 4.4.0, libvirt will do the correct thing with respect to checking CPU compatibility on the destination host during live migration. """"""), cfg.BoolOpt( 'skip_hypervisor_version_check_on_lm', default=False, help="""""" When this is enabled, it will skip version-checking of hypervisors during live migration. """"""), cfg.BoolOpt( 'skip_reserve_in_use_ironic_nodes', default=False, help="""""" This may be useful if you use the Ironic driver, but don't have automatic cleaning enabled in Ironic. Nova, by default, will mark Ironic nodes as reserved as soon as they are in use. When you free the Ironic node (by deleting the nova instance) it takes a while for Nova to un-reserve that Ironic node in placement. Usually this is a good idea, because it avoids placement providing an Ironic as a valid candidate when it is still being cleaned. Howerver, if you don't use automatic cleaning, it can cause an extra delay before and Ironic node is available for building a new Nova instance. """"""), >>>>>>> CHANGE (3c022e Ironic nodes with instance reserved in placement)",,125,11
openstack%2Fnova~871975,openstack/nova,stable/xena,I444991584118a969e9ea04d352821b07ec0ba88d,libvirt: Add a workaround to skip compareCPU() on destination,ABANDONED,2023-01-27 10:31:07.000000000,2024-03-05 19:13:26.000000000,,"[{'_account_id': 9708}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-01-27 10:31:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/814914842b5f22b241ba3a1d72ea60149081c306', 'message': ""libvirt: Add a workaround to skip compareCPU() on destination\n\nNova's use of libvirt's compareCPU() API served its purpose\nover the years, but its design limitations break live migration in\nsubtle ways.  For example, the compareCPU() API compares against the\nhost physical CPUID.  Some of the features from this CPUID aren not\nexposed by KVM, and then there are some features that KVM emulates that\nare not in the host CPUID.  The latter can cause bogus live migration\nfailures.\n\nWith QEMU >=2.9 and libvirt >= 4.4.0, libvirt will do the right thing in\nterms of CPU compatibility checks on the destination host during live\nmigration.  Nova satisfies these minimum version requirements by a good\nmargin.  So, provide a workaround to skip the CPU comparison check on\nthe destination host before migrating a guest, and let libvirt handle it\ncorrectly.  This workaround will be removed once Nova replaces the older\nlibvirt APIs with their newer and improved counterparts[1][2].\n\n                - - -\n\nNote that Nova's libvirt driver calls compareCPU() in another method,\n_check_cpu_compatibility(); I did not remove its usage yet.  As it needs\nmore careful combing of the code, and then:\n\n  - where possible, remove the usage of compareCPU() altogether, and\n    rely on libvirt doing the right thing under the hood; or\n\n  - where Nova _must_ do the CPU comparison checks, switch to the better\n    libvirt CPU APIs -- baselineHypervisorCPU() and\n    compareHypervisorCPU() -- that are described here[1].  This is work\n    in progress[2].\n\n[1] https://opendev.org/openstack/nova-specs/commit/70811da221035044e27\n[2] https://review.opendev.org/q/topic:bp%252Fcpu-selection-with-hypervisor-consideration\n\nChange-Id: I444991584118a969e9ea04d352821b07ec0ba88d\nCloses-Bug: #1913716\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\nSigned-off-by: Balazs Gibizer <bgibizer@redhat.com>\n(cherry picked from commit 267a40663cd8d0b94bbc5ebda4ece55a45753b64)\n(cherry picked from commit 277f88e3872ea41bce02d09c4537946a74d74533)\n""}, {'number': 2, 'created': '2023-02-01 09:57:22.000000000', 'files': ['nova/virt/libvirt/driver.py', 'releasenotes/notes/skip-compare-cpu-on-dest-6ae419ddd61fd0f8.yaml', 'nova/conf/workarounds.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/f187dd7a6ac994b0ddeac84b5bc9dcb45e3f3e59', 'message': ""libvirt: Add a workaround to skip compareCPU() on destination\n\nNova's use of libvirt's compareCPU() API served its purpose\nover the years, but its design limitations break live migration in\nsubtle ways.  For example, the compareCPU() API compares against the\nhost physical CPUID.  Some of the features from this CPUID aren not\nexposed by KVM, and then there are some features that KVM emulates that\nare not in the host CPUID.  The latter can cause bogus live migration\nfailures.\n\nWith QEMU >=2.9 and libvirt >= 4.4.0, libvirt will do the right thing in\nterms of CPU compatibility checks on the destination host during live\nmigration.  Nova satisfies these minimum version requirements by a good\nmargin.  So, provide a workaround to skip the CPU comparison check on\nthe destination host before migrating a guest, and let libvirt handle it\ncorrectly.  This workaround will be removed once Nova replaces the older\nlibvirt APIs with their newer and improved counterparts[1][2].\n\n                - - -\n\nNote that Nova's libvirt driver calls compareCPU() in another method,\n_check_cpu_compatibility(); I did not remove its usage yet.  As it needs\nmore careful combing of the code, and then:\n\n  - where possible, remove the usage of compareCPU() altogether, and\n    rely on libvirt doing the right thing under the hood; or\n\n  - where Nova _must_ do the CPU comparison checks, switch to the better\n    libvirt CPU APIs -- baselineHypervisorCPU() and\n    compareHypervisorCPU() -- that are described here[1].  This is work\n    in progress[2].\n\n[1] https://opendev.org/openstack/nova-specs/commit/70811da221035044e27\n[2] https://review.opendev.org/q/topic:bp%252Fcpu-selection-with-hypervisor-consideration\n\nChange-Id: I444991584118a969e9ea04d352821b07ec0ba88d\nCloses-Bug: #1913716\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\nSigned-off-by: Balazs Gibizer <bgibizer@redhat.com>\n(cherry picked from commit 267a40663cd8d0b94bbc5ebda4ece55a45753b64)\n(cherry picked from commit 277f88e3872ea41bce02d09c4537946a74d74533)\n""}]",3,871975,f187dd7a6ac994b0ddeac84b5bc9dcb45e3f3e59,11,2,2,6962,,,0,"libvirt: Add a workaround to skip compareCPU() on destination

Nova's use of libvirt's compareCPU() API served its purpose
over the years, but its design limitations break live migration in
subtle ways.  For example, the compareCPU() API compares against the
host physical CPUID.  Some of the features from this CPUID aren not
exposed by KVM, and then there are some features that KVM emulates that
are not in the host CPUID.  The latter can cause bogus live migration
failures.

With QEMU >=2.9 and libvirt >= 4.4.0, libvirt will do the right thing in
terms of CPU compatibility checks on the destination host during live
migration.  Nova satisfies these minimum version requirements by a good
margin.  So, provide a workaround to skip the CPU comparison check on
the destination host before migrating a guest, and let libvirt handle it
correctly.  This workaround will be removed once Nova replaces the older
libvirt APIs with their newer and improved counterparts[1][2].

                - - -

Note that Nova's libvirt driver calls compareCPU() in another method,
_check_cpu_compatibility(); I did not remove its usage yet.  As it needs
more careful combing of the code, and then:

  - where possible, remove the usage of compareCPU() altogether, and
    rely on libvirt doing the right thing under the hood; or

  - where Nova _must_ do the CPU comparison checks, switch to the better
    libvirt CPU APIs -- baselineHypervisorCPU() and
    compareHypervisorCPU() -- that are described here[1].  This is work
    in progress[2].

[1] https://opendev.org/openstack/nova-specs/commit/70811da221035044e27
[2] https://review.opendev.org/q/topic:bp%252Fcpu-selection-with-hypervisor-consideration

Change-Id: I444991584118a969e9ea04d352821b07ec0ba88d
Closes-Bug: #1913716
Signed-off-by: Kashyap Chamarthy <kchamart@redhat.com>
Signed-off-by: Balazs Gibizer <bgibizer@redhat.com>
(cherry picked from commit 267a40663cd8d0b94bbc5ebda4ece55a45753b64)
(cherry picked from commit 277f88e3872ea41bce02d09c4537946a74d74533)
",git fetch https://review.opendev.org/openstack/nova refs/changes/75/871975/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'releasenotes/notes/skip-compare-cpu-on-dest-6ae419ddd61fd0f8.yaml', 'nova/conf/workarounds.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",4,814914842b5f22b241ba3a1d72ea60149081c306,," def test_check_can_live_migrate_guest_cpu_none_model_skip_compare( self, mock_cpu, mock_test_file): self.flags(group='workarounds', skip_cpu_compare_on_dest=True) instance_ref = objects.Instance(**self.test_instance) instance_ref.vcpu_model = test_vcpu_model.fake_vcpumodel instance_ref.vcpu_model.model = None drvr = libvirt_driver.LibvirtDriver(fake.FakeVirtAPI(), False) compute_info = {'cpu_info': 'asdf', 'disk_available_least': 1} drvr.check_can_live_migrate_destination( self.context, instance_ref, compute_info, compute_info) mock_cpu.assert_not_called() @mock.patch( 'nova.network.neutron.API.has_port_binding_extension', new=mock.Mock(return_value=False)) @mock.patch.object(libvirt_driver.LibvirtDriver, '_create_shared_storage_test_file', return_value='fake') @mock.patch.object(libvirt_driver.LibvirtDriver, '_compare_cpu')",,61,9
openstack%2Foctavia-dashboard~911308,openstack/octavia-dashboard,unmaintained/wallaby,I032496c748ac62900e7e5f6c6a1f4cd168b3354b,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:57:52.000000000,2024-03-05 19:13:25.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:57:52.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/octavia-dashboard/commit/cb9162f0a4b6ccc4b2e78b741cbbdab960add97a', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I032496c748ac62900e7e5f6c6a1f4cd168b3354b\n'}]",0,911308,cb9162f0a4b6ccc4b2e78b741cbbdab960add97a,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I032496c748ac62900e7e5f6c6a1f4cd168b3354b
",git fetch https://review.opendev.org/openstack/octavia-dashboard refs/changes/08/911308/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,cb9162f0a4b6ccc4b2e78b741cbbdab960add97a,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fnova~851205,openstack/nova,stable/xena,Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1,Add a workaround to skip hypervisor version check on LM,ABANDONED,2022-07-27 10:12:52.000000000,2024-03-05 19:13:22.000000000,,"[{'_account_id': 7166}, {'_account_id': 9708}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-07-27 10:12:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/0f80a4fff27c28123d82927aacb2a72921e55484', 'message': ""Add a workaround to skip hypervisor version check on LM\n\nWhen turned on, this will disable the version-checking of hypervisors\nduring live-migration.  This can be useful for operators in certain\nscenarios when upgrading.  E.g. if you want to relocate all instances\noff a compute node due to an emergency hardware issue, and you only have\nanother old compute node ready at the time.\n\nNote, though: libvirt will do its own internal compatibility checks, and\nmight still reject live migration if the destination is incompatible.\n\nConflicts: nova/conf/workarounds.py\n - The other config 'skip_cpu_compare_on_dest' was not backported to\n   'stable/yoga' branch\n\nConflicts (stable/xena): nova/conf/workarounds.py\n - The config attribute 'unified_limits_count_pcpu_as_vcpu' is not\n   present in 'stable/xena'\n\nCloses-Bug: #1982853\n\nChange-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 5032cb62e6458282e1282ac64cf7dd49a2497ac1)\n(cherry picked from commit 0e3b4424b7f587e3e274a5ef81ac35cfd14f0c96)\n""}, {'number': 2, 'created': '2022-07-27 10:21:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/21f92d4b576fc2c309713c369041dd434d605cc6', 'message': ""Add a workaround to skip hypervisor version check on LM\n\nWhen turned on, this will disable the version-checking of hypervisors\nduring live-migration.  This can be useful for operators in certain\nscenarios when upgrading.  E.g. if you want to relocate all instances\noff a compute node due to an emergency hardware issue, and you only have\nanother old compute node ready at the time.\n\nNote, though: libvirt will do its own internal compatibility checks, and\nmight still reject live migration if the destination is incompatible.\n\nConflicts: nova/conf/workarounds.py\n - The other config 'skip_cpu_compare_on_dest' was not backported to\n   'stable/yoga' branch\n\nConflicts (stable/xena): nova/conf/workarounds.py\n - The config attribute 'unified_limits_count_pcpu_as_vcpu' is not\n   present in 'stable/xena'\n\nCloses-Bug: #1982853\n\nChange-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 5032cb62e6458282e1282ac64cf7dd49a2497ac1)\n(cherry picked from commit 0e3b4424b7f587e3e274a5ef81ac35cfd14f0c96)\n""}, {'number': 3, 'created': '2023-01-27 10:31:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/4818dfc875b50fdcfe8573817edd4d076e2ce3b8', 'message': 'Add a workaround to skip hypervisor version check on LM\n\nWhen turned on, this will disable the version-checking of hypervisors\nduring live-migration.  This can be useful for operators in certain\nscenarios when upgrading.  E.g. if you want to relocate all instances\noff a compute node due to an emergency hardware issue, and you only have\nanother old compute node ready at the time.\n\nNote, though: libvirt will do its own internal compatibility checks, and\nmight still reject live migration if the destination is incompatible.\n\nCloses-Bug: #1982853\n\nChange-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 00ed8a232bc22f48011e95a0b47750520a5b4d47)\n(cherry picked from commit c07495d9d64dd0635d72fc7ff67d73a656a40d13)\n'}, {'number': 4, 'created': '2023-02-01 09:57:22.000000000', 'files': ['releasenotes/notes/skip-hypervisor-version-check-on-lm-a87f2dcb4f8bf0f2.yaml', 'nova/conductor/tasks/live_migrate.py', 'nova/conf/workarounds.py', 'nova/tests/unit/conductor/tasks/test_live_migrate.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/3cba5aaba1da6bed73727c80a5f21dae2f82dfde', 'message': 'Add a workaround to skip hypervisor version check on LM\n\nWhen turned on, this will disable the version-checking of hypervisors\nduring live-migration.  This can be useful for operators in certain\nscenarios when upgrading.  E.g. if you want to relocate all instances\noff a compute node due to an emergency hardware issue, and you only have\nanother old compute node ready at the time.\n\nNote, though: libvirt will do its own internal compatibility checks, and\nmight still reject live migration if the destination is incompatible.\n\nCloses-Bug: #1982853\n\nChange-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 00ed8a232bc22f48011e95a0b47750520a5b4d47)\n(cherry picked from commit c07495d9d64dd0635d72fc7ff67d73a656a40d13)\n'}]",4,851205,3cba5aaba1da6bed73727c80a5f21dae2f82dfde,19,3,4,6962,,,0,"Add a workaround to skip hypervisor version check on LM

When turned on, this will disable the version-checking of hypervisors
during live-migration.  This can be useful for operators in certain
scenarios when upgrading.  E.g. if you want to relocate all instances
off a compute node due to an emergency hardware issue, and you only have
another old compute node ready at the time.

Note, though: libvirt will do its own internal compatibility checks, and
might still reject live migration if the destination is incompatible.

Closes-Bug: #1982853

Change-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1
Signed-off-by: Kashyap Chamarthy <kchamart@redhat.com>
(cherry picked from commit 00ed8a232bc22f48011e95a0b47750520a5b4d47)
(cherry picked from commit c07495d9d64dd0635d72fc7ff67d73a656a40d13)
",git fetch https://review.opendev.org/openstack/nova refs/changes/05/851205/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/skip-hypervisor-version-check-on-lm-a87f2dcb4f8bf0f2.yaml', 'nova/conductor/tasks/live_migrate.py', 'nova/conf/workarounds.py', 'nova/tests/unit/conductor/tasks/test_live_migrate.py']",4,0f80a4fff27c28123d82927aacb2a72921e55484,bug/1982853," @mock.patch.object(live_migrate.LiveMigrationTask, '_get_compute_info') def test_skip_hypervisor_version_check_on_lm_raise_ex(self, mock_get_info): host1 = {'hypervisor_type': 'a', 'hypervisor_version': 7} host2 = {'hypervisor_type': 'a', 'hypervisor_version': 6} self.flags(group='workarounds', skip_hypervisor_version_check_on_lm=False) mock_get_info.side_effect = [objects.ComputeNode(**host1), objects.ComputeNode(**host2)] self.assertRaises(exception.DestinationHypervisorTooOld, self.task._check_compatible_with_source_hypervisor, self.destination) self.assertEqual([mock.call(self.instance_host), mock.call(self.destination)], mock_get_info.call_args_list) @mock.patch.object(live_migrate.LiveMigrationTask, '_get_compute_info') def test_skip_hypervisor_version_check_on_lm_do_not_raise_ex( self, mock_get_info ): host1 = {'hypervisor_type': 'a', 'hypervisor_version': 7} host2 = {'hypervisor_type': 'a', 'hypervisor_version': 6} self.flags(group='workarounds', skip_hypervisor_version_check_on_lm=True) mock_get_info.side_effect = [objects.ComputeNode(**host1), objects.ComputeNode(**host2)] self.task._check_compatible_with_source_hypervisor(self.destination) self.assertEqual([mock.call(self.instance_host), mock.call(self.destination)], mock_get_info.call_args_list) ",,53,2
openstack%2Fnova~872011,openstack/nova,stable/xena,I8ef9db851b37c5249d2efbe09a15a1ddbae8205d,libvirt: At start-up rework compareCPU() usage with a workaround,ABANDONED,2023-01-27 12:13:11.000000000,2024-03-05 19:13:18.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-01-27 12:13:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/db9bc4ed90a17deaa1b435481f27247fb770f177', 'message': 'libvirt: At start-up rework compareCPU() usage with a workaround\n\nIn this patch:\n\n  - Remove the first compareCPU() call (called via the wrapper\n    _compare_cpu()) in _check_cpu_compatibility(), and let libvirt\n    handle it.  (QEMU >=2.9 and libvirt >= 4.4.0 are the mininum\n    required versions, and upstream Nova satisfies them by a good\n    margin.)\n\n  - Validate the user-configured CPU models from\n    _get_cpu_model_mapping().  And take into account all the CPU flags\n    before calling _compare_cpu().\n\n    (Suggested-by: Sean Mooney -- thanks!)\n\n  - Add a workaround to allow skipping the remaining compareCPU() call\n    in _check_cpu_compatibility() as a potential future-proof (because\n    we cannot test all possible CPU models and hardware).  Unlike the\n    removed first call, this call takes into account the extra CPU flags\n    provided by the user into account when evaluating guest CPU model\n    compatibility.\n\nAs a follow up comes the patch[1] that replaces the older libvirt CPU\nAPI with the newer one.\n\nConflicts (Xena):\n  - Remove mock for _register_all_undefined_instance_details() as it\n    does not exist in Xena release\n\n[1] https://review.opendev.org/c/openstack/nova/+/869950 -- libvirt:\n    Replace usage of compareCPU() with compareHypervisorCPU()\n\nChange-Id: I8ef9db851b37c5249d2efbe09a15a1ddbae8205d\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 9caaaf1f221063a4329c72c8b67a6015648644a2)\n(cherry picked from commit 7c7c8442d3b02f7bb296b79574610e6b6036aefa)\n'}, {'number': 2, 'created': '2023-02-01 09:57:22.000000000', 'files': ['nova/virt/libvirt/driver.py', 'nova/conf/workarounds.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/023244c83043b3cb1b1c2725e80b2955498e7971', 'message': 'libvirt: At start-up rework compareCPU() usage with a workaround\n\nIn this patch:\n\n  - Remove the first compareCPU() call (called via the wrapper\n    _compare_cpu()) in _check_cpu_compatibility(), and let libvirt\n    handle it.  (QEMU >=2.9 and libvirt >= 4.4.0 are the mininum\n    required versions, and upstream Nova satisfies them by a good\n    margin.)\n\n  - Validate the user-configured CPU models from\n    _get_cpu_model_mapping().  And take into account all the CPU flags\n    before calling _compare_cpu().\n\n    (Suggested-by: Sean Mooney -- thanks!)\n\n  - Add a workaround to allow skipping the remaining compareCPU() call\n    in _check_cpu_compatibility() as a potential future-proof (because\n    we cannot test all possible CPU models and hardware).  Unlike the\n    removed first call, this call takes into account the extra CPU flags\n    provided by the user into account when evaluating guest CPU model\n    compatibility.\n\nAs a follow up comes the patch[1] that replaces the older libvirt CPU\nAPI with the newer one.\n\nConflicts (Xena):\n  - Remove mock for _register_all_undefined_instance_details() as it\n    does not exist in Xena release\n\n[1] https://review.opendev.org/c/openstack/nova/+/869950 -- libvirt:\n    Replace usage of compareCPU() with compareHypervisorCPU()\n\nChange-Id: I8ef9db851b37c5249d2efbe09a15a1ddbae8205d\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 9caaaf1f221063a4329c72c8b67a6015648644a2)\n(cherry picked from commit 7c7c8442d3b02f7bb296b79574610e6b6036aefa)\n'}]",0,872011,023244c83043b3cb1b1c2725e80b2955498e7971,8,1,2,6962,,,0,"libvirt: At start-up rework compareCPU() usage with a workaround

In this patch:

  - Remove the first compareCPU() call (called via the wrapper
    _compare_cpu()) in _check_cpu_compatibility(), and let libvirt
    handle it.  (QEMU >=2.9 and libvirt >= 4.4.0 are the mininum
    required versions, and upstream Nova satisfies them by a good
    margin.)

  - Validate the user-configured CPU models from
    _get_cpu_model_mapping().  And take into account all the CPU flags
    before calling _compare_cpu().

    (Suggested-by: Sean Mooney -- thanks!)

  - Add a workaround to allow skipping the remaining compareCPU() call
    in _check_cpu_compatibility() as a potential future-proof (because
    we cannot test all possible CPU models and hardware).  Unlike the
    removed first call, this call takes into account the extra CPU flags
    provided by the user into account when evaluating guest CPU model
    compatibility.

As a follow up comes the patch[1] that replaces the older libvirt CPU
API with the newer one.

Conflicts (Xena):
  - Remove mock for _register_all_undefined_instance_details() as it
    does not exist in Xena release

[1] https://review.opendev.org/c/openstack/nova/+/869950 -- libvirt:
    Replace usage of compareCPU() with compareHypervisorCPU()

Change-Id: I8ef9db851b37c5249d2efbe09a15a1ddbae8205d
Signed-off-by: Kashyap Chamarthy <kchamart@redhat.com>
(cherry picked from commit 9caaaf1f221063a4329c72c8b67a6015648644a2)
(cherry picked from commit 7c7c8442d3b02f7bb296b79574610e6b6036aefa)
",git fetch https://review.opendev.org/openstack/nova refs/changes/11/872011/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'nova/conf/workarounds.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",3,db9bc4ed90a17deaa1b435481f27247fb770f177,," @mock.patch('nova.virt.libvirt.host.libvirt.Connection.compareCPU') def test__check_cpu_compatibility_skip_compare_at_init( self, mocked_compare ): self.flags(group='workarounds', skip_cpu_compare_at_startup=True) self.flags(cpu_mode=""custom"", cpu_models=[""Icelake-Server-noTSX""], cpu_model_extra_flags = [""-mpx""], group=""libvirt"") drvr = libvirt_driver.LibvirtDriver(fake.FakeVirtAPI(), True) drvr.init_host(""dummyhost"") mocked_compare.assert_not_called() mocked_compare.side_effect = (-1, 0) mocked_compare.side_effect = (-1, 0) mocked_compare.side_effect = (-1, 0)"," mocked_compare.side_effect = (2, 0) mocked_compare.side_effect = (2, 0) mocked_compare.side_effect = (2, 0)",43,30
openstack%2Fnova~877260,openstack/nova,stable/xena,I4d6dfca1efe10caebb017b6ec96820979018203f,Nova resize don't extend disk in one specific case,ABANDONED,2023-03-13 13:47:27.000000000,2024-03-05 19:13:15.000000000,,"[{'_account_id': 17685}, {'_account_id': 20733}, {'_account_id': 22348}, {'_account_id': 33607}]","[{'number': 1, 'created': '2023-03-13 13:47:27.000000000', 'files': ['nova/virt/libvirt/imagebackend.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/122b407ee6e41bd123eb401e167957bfbeeab521', 'message': ""Nova resize don't extend disk in one specific case\n\nNova resize not apply extend virtual size of the instance if the image\nis not accessible by the customer (public image use to build the\ninstance is now private image because this image is deprecated) and the\nsource compute of the resize don't have anymore the base image.\n\nRelated-Bug: #1558880\nChange-Id: I4d6dfca1efe10caebb017b6ec96820979018203f\n(cherry picked from commit f7af85dd7431eea61cdd2b1723a5dbcc3d9471ed)\n""}]",2,877260,122b407ee6e41bd123eb401e167957bfbeeab521,11,4,1,11604,,,0,"Nova resize don't extend disk in one specific case

Nova resize not apply extend virtual size of the instance if the image
is not accessible by the customer (public image use to build the
instance is now private image because this image is deprecated) and the
source compute of the resize don't have anymore the base image.

Related-Bug: #1558880
Change-Id: I4d6dfca1efe10caebb017b6ec96820979018203f
(cherry picked from commit f7af85dd7431eea61cdd2b1723a5dbcc3d9471ed)
",git fetch https://review.opendev.org/openstack/nova refs/changes/60/877260/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/imagebackend.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",2,122b407ee6e41bd123eb401e167957bfbeeab521,1558880," @mock.patch('nova.virt.libvirt.imagebackend.Image.exists', new=mock.Mock(return_value=True)) def test_create_images_backing_images_and_fallback_not_exist(self): self.flags(images_type='raw', group='libvirt') conn = libvirt_driver.LibvirtDriver(fake.FakeVirtAPI(), False) base_dir = os.path.join(CONF.instances_path, CONF.image_cache.subdirectory_name) self.test_instance.update({ 'user_id': 'fake-user', 'os_type': None, 'kernel_id': uuids.kernel_id, 'ramdisk_id': uuids.ramdisk_id, 'project_id': 'fake-project' }) instance = objects.Instance(**self.test_instance) backing_file = imagecache.get_cache_fname(instance.image_ref) backfile_path = os.path.join(base_dir, backing_file) disk_size = 10747904 virt_disk_size = 25165824 disk_info = [{ 'backing_file': backing_file, 'disk_size': disk_size, 'path': 'disk_path', 'type': 'raw', 'virt_disk_size': virt_disk_size }] with test.nested( mock.patch.object(libvirt_driver.libvirt_utils, 'copy_image'), mock.patch.object(libvirt_driver.libvirt_utils, 'fetch_image', side_effect=exception.ImageNotFound( image_id=uuids.fake_id)), mock.patch.object(imagebackend.Flat, 'resize_image'), ) as (copy_image_mock, fetch_image_mock, resize_image_mock): conn._create_images_and_backing( self.context, instance, ""/fake/instance/dir"", disk_info, fallback_from_host=""fake_host"") kernel_path = os.path.join(CONF.instances_path, self.test_instance['uuid'], 'kernel') ramdisk_path = os.path.join(CONF.instances_path, self.test_instance['uuid'], 'ramdisk') copy_image_mock.assert_has_calls([ mock.call(dest=kernel_path, src=kernel_path, host='fake_host', receive=True), mock.call(dest=ramdisk_path, src=ramdisk_path, host='fake_host', receive=True) ]) fetch_image_mock.assert_has_calls([ mock.call(context=self.context, target=backfile_path, image_id=self.test_instance['image_ref'], trusted_certs=None), mock.call(self.context, kernel_path, instance.kernel_id, None), mock.call(self.context, ramdisk_path, instance.ramdisk_id, None) ]) resize_image_mock.assert_called_once_with(virt_disk_size) ",,70,3
openstack%2Fnova~882319,openstack/nova,stable/xena,I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b,Reproduce bug 1995153,ABANDONED,2023-05-04 14:20:34.000000000,2024-03-05 19:13:11.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-04 14:20:34.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/af1f45655b4f636fc402cfe2ea0db419b952e8dd', 'message': ""Reproduce bug 1995153\n\nIf we first boot an instance with NUMA topology on a host, any\nsubsequent attempts to boot instances with the `socket` PCI NUMA\npolicy will fail with `Cannot load 'socket' in the base class`.\nDemonstrate this in a functional test.\n\nChange-Id: I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b\nRelated-bug: 1995153\n(cherry picked from commit 63d6ecd99b7dec06cf0cf8358b43b0d8fa607504)\n(cherry picked from commit 29e3f2f2ab69157d938cfe6895df352ef9a08d8c)\n(cherry picked from commit d9dfd0e0445ae82933eb75a38127186659041673)\n(cherry picked from commit 1c10bd62148aa6b98427209d16df091fd931996c)\n""}, {'number': 2, 'created': '2023-05-04 18:32:21.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1995153.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/ff903d6a75cf2ad80621ed6f584630e36fa4ad86', 'message': ""Reproduce bug 1995153\n\nIf we first boot an instance with NUMA topology on a host, any\nsubsequent attempts to boot instances with the `socket` PCI NUMA\npolicy will fail with `Cannot load 'socket' in the base class`.\nDemonstrate this in a functional test.\n\nChange-Id: I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b\nRelated-bug: 1995153\n(cherry picked from commit 63d6ecd99b7dec06cf0cf8358b43b0d8fa607504)\n(cherry picked from commit 29e3f2f2ab69157d938cfe6895df352ef9a08d8c)\n(cherry picked from commit d9dfd0e0445ae82933eb75a38127186659041673)\n(cherry picked from commit 8d717df2e7b26d7cf6e393089e989ce81fd5a209)\n""}]",0,882319,ff903d6a75cf2ad80621ed6f584630e36fa4ad86,7,1,2,8864,,,0,"Reproduce bug 1995153

If we first boot an instance with NUMA topology on a host, any
subsequent attempts to boot instances with the `socket` PCI NUMA
policy will fail with `Cannot load 'socket' in the base class`.
Demonstrate this in a functional test.

Change-Id: I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b
Related-bug: 1995153
(cherry picked from commit 63d6ecd99b7dec06cf0cf8358b43b0d8fa607504)
(cherry picked from commit 29e3f2f2ab69157d938cfe6895df352ef9a08d8c)
(cherry picked from commit d9dfd0e0445ae82933eb75a38127186659041673)
(cherry picked from commit 8d717df2e7b26d7cf6e393089e989ce81fd5a209)
",git fetch https://review.opendev.org/openstack/nova refs/changes/19/882319/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1995153.py'],1,af1f45655b4f636fc402cfe2ea0db419b952e8dd,,"# Copyright (C) 2023 Red Hat, Inc # All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import fixtures from unittest import mock from oslo_serialization import jsonutils from oslo_utils import units from nova.objects import fields from nova.tests.fixtures import libvirt as fakelibvirt from nova.tests.functional import integrated_helpers from nova.tests.functional.libvirt import base class Bug1995153RegressionTest( base.ServersTestBase, integrated_helpers.InstanceHelperMixin ): ADDITIONAL_FILTERS = ['NUMATopologyFilter', 'PciPassthroughFilter'] ALIAS_NAME = 'a1' PCI_DEVICE_SPEC = [jsonutils.dumps( { 'vendor_id': fakelibvirt.PCI_VEND_ID, 'product_id': fakelibvirt.PCI_PROD_ID, } )] # we set the numa_affinity policy to required to ensure strict affinity # between pci devices and the guest cpu and memory will be enforced. PCI_ALIAS = [jsonutils.dumps( { 'vendor_id': fakelibvirt.PCI_VEND_ID, 'product_id': fakelibvirt.PCI_PROD_ID, 'name': ALIAS_NAME, 'device_type': fields.PciDeviceType.STANDARD, 'numa_policy': fields.PCINUMAAffinityPolicy.REQUIRED, } )] def setUp(self): super(Bug1995153RegressionTest, self).setUp() self.flags( device_spec=self.PCI_DEVICE_SPEC, alias=self.PCI_ALIAS, group='pci' ) host_manager = self.scheduler.manager.host_manager pci_filter_class = host_manager.filter_cls_map['PciPassthroughFilter'] host_pass_mock = mock.Mock(wraps=pci_filter_class().host_passes) self.mock_filter = self.useFixture(fixtures.MockPatch( 'nova.scheduler.filters.pci_passthrough_filter' '.PciPassthroughFilter.host_passes', side_effect=host_pass_mock)).mock def test_socket_policy_bug_1995153(self): """"""The numa_usage_from_instance_numa() method in hardware.py saves the host NUMAToplogy object with NUMACells that have no `socket` set. This was an omission in the original implementation of the `socket` PCI NUMA affinity policy. The consequence is that any code path that calls into numa_usage_from_instance_numa() will clobber the host NUMA topology in the database with a socket-less version. Booting an instance with NUMA toplogy will do that, for example. If then a second instance is booted with the `socket` PCI NUMA affinity policy, it will read the socket-less host NUMATopology from the database, and error out with a NotImplementedError. This is bug 1995153. """""" host_info = fakelibvirt.HostInfo( cpu_nodes=2, cpu_sockets=1, cpu_cores=2, cpu_threads=2, kB_mem=(16 * units.Gi) // units.Ki) self.flags(cpu_dedicated_set='0-3', group='compute') pci_info = fakelibvirt.HostPCIDevicesInfo(num_pci=1, numa_node=1) self.start_compute(host_info=host_info, pci_info=pci_info) extra_spec = { 'hw:cpu_policy': 'dedicated', 'pci_passthrough:alias': '%s:1' % self.ALIAS_NAME, 'hw:pci_numa_affinity_policy': 'socket' } # Boot a first instance with a guest NUMA topology to run the buggy # code in numa_usage_from_instance_numa() and save the socket-less host # NUMATopology to the database. self._create_server( flavor_id=self._create_flavor( extra_spec={'hw:cpu_policy': 'dedicated'})) # FIXME(artom) Attempt to boot an instance with the `socket` PCI NUMA # affinity policy and observe the fireworks. flavor_id = self._create_flavor(extra_spec=extra_spec) server = self._create_server(flavor_id=flavor_id, expected_state='ERROR') self.assertIn('fault', server) self.assertIn('NotImplementedError', server['fault']['message']) self.assertTrue(self.mock_filter.called) ",,109,0
openstack%2Fnova~882320,openstack/nova,stable/xena,I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68,Save cell socket correctly when updating host NUMA topology,ABANDONED,2023-05-04 14:20:34.000000000,2024-03-05 19:13:07.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-04 14:20:34.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/9fb7f7792ffa7b9dd113635cad2593e362c185b0', 'message': 'Save cell socket correctly when updating host NUMA topology\n\nPreviously, in numa_usage_from_instance_numa(), any new NUMACell\nobjects we created did not have the `socket` attribute. In some cases\nthis was persisted all the way down to the database. Fix this by\ncopying `socket` from the old_cell.\n\nChange-Id: I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68\nCloses-Bug: 1995153\n(cherry picked from commit 04ebae9dc01ebd24552b5aacd1a0f8b129013a9e)\n(cherry picked from commit acb511652c1afb8253c66c29ca10f790f035229e)\n(cherry picked from commit 693318573cb7bbbcf074c3cc01339f07fe04ff24)\n(cherry picked from commit d690c1a9228f9cefbfc1a896758bfeccec52c420)\n'}, {'number': 2, 'created': '2023-05-04 18:32:21.000000000', 'files': ['nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'nova/tests/unit/compute/test_resource_tracker.py', 'nova/tests/functional/regressions/test_bug_1995153.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/scheduler/fakes.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/72ea89b4836ff218060c780af561f260588d48fb', 'message': 'Save cell socket correctly when updating host NUMA topology\n\nPreviously, in numa_usage_from_instance_numa(), any new NUMACell\nobjects we created did not have the `socket` attribute. In some cases\nthis was persisted all the way down to the database. Fix this by\ncopying `socket` from the old_cell.\n\nChange-Id: I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68\nCloses-Bug: 1995153\n(cherry picked from commit 04ebae9dc01ebd24552b5aacd1a0f8b129013a9e)\n(cherry picked from commit acb511652c1afb8253c66c29ca10f790f035229e)\n(cherry picked from commit 693318573cb7bbbcf074c3cc01339f07fe04ff24)\n(cherry picked from commit f7b2577620cfbbaf02a483a2f19a4bac35d4fa6b)\n'}]",0,882320,72ea89b4836ff218060c780af561f260588d48fb,8,1,2,8864,,,0,"Save cell socket correctly when updating host NUMA topology

Previously, in numa_usage_from_instance_numa(), any new NUMACell
objects we created did not have the `socket` attribute. In some cases
this was persisted all the way down to the database. Fix this by
copying `socket` from the old_cell.

Change-Id: I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68
Closes-Bug: 1995153
(cherry picked from commit 04ebae9dc01ebd24552b5aacd1a0f8b129013a9e)
(cherry picked from commit acb511652c1afb8253c66c29ca10f790f035229e)
(cherry picked from commit 693318573cb7bbbcf074c3cc01339f07fe04ff24)
(cherry picked from commit f7b2577620cfbbaf02a483a2f19a4bac35d4fa6b)
",git fetch https://review.opendev.org/openstack/nova refs/changes/20/882320/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'nova/tests/unit/compute/test_resource_tracker.py', 'nova/tests/functional/regressions/test_bug_1995153.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/scheduler/fakes.py']",6,9fb7f7792ffa7b9dd113635cad2593e362c185b0,," socket=0, socket=0,",,53,19
openstack%2Fnova~882534,openstack/nova,stable/xena,I52ee068377cc48ef4b4cdcb4b05fdc8d926faddf,Reproduce asym NUMA mixed CPU policy bug,ABANDONED,2023-05-08 09:00:05.000000000,2024-03-05 19:13:04.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-08 09:00:05.000000000', 'files': ['nova/tests/functional/libvirt/test_numa_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/b4d111eabf13bce571cb15be5d2e772ff88ee69e', 'message': 'Reproduce asym NUMA mixed CPU policy bug\n\nRelated-Bug: #1994526\nChange-Id: I52ee068377cc48ef4b4cdcb4b05fdc8d926faddf\n(cherry picked from commit 182c5be122868d4fe910309a868b044b0e71316b)\n(cherry picked from commit 2cf835be82e11505ae8609deba83d61a34ecaa8d)\n(cherry picked from commit 4fd163f698cc4991f731adc06f3e8601f9fbdce9)\n(cherry picked from commit a00f00a32af4072b37319fe82d36dbff7e59b355)\n'}]",0,882534,b4d111eabf13bce571cb15be5d2e772ff88ee69e,4,1,1,9708,,,0,"Reproduce asym NUMA mixed CPU policy bug

Related-Bug: #1994526
Change-Id: I52ee068377cc48ef4b4cdcb4b05fdc8d926faddf
(cherry picked from commit 182c5be122868d4fe910309a868b044b0e71316b)
(cherry picked from commit 2cf835be82e11505ae8609deba83d61a34ecaa8d)
(cherry picked from commit 4fd163f698cc4991f731adc06f3e8601f9fbdce9)
(cherry picked from commit a00f00a32af4072b37319fe82d36dbff7e59b355)
",git fetch https://review.opendev.org/openstack/nova refs/changes/34/882534/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/libvirt/test_numa_servers.py'],1,b4d111eabf13bce571cb15be5d2e772ff88ee69e,bug/1994526," def test_create_server_with_mixed_policy_asymmetric_multi_numa(self): """"""Boot an instance stretched to two NUMA nodes requesting only shared CPUs in one NUMA and only dedicated in the other NUMA node. """""" # shared dedicated # NUMA0 pCPU | 0 | 2 3 # NUMA1 pCPU | | 6 7 self.flags( cpu_shared_set='0', cpu_dedicated_set='2,3,6,7', group='compute', ) self.flags(vcpu_pin_set=None) host_info = fakelibvirt.HostInfo( cpu_nodes=2, cpu_sockets=1, cpu_cores=4, cpu_threads=1) self.start_compute(host_info=host_info, hostname='compute1') # sanity check the created host topology object; this is really just a # test of the fakelibvirt module host_numa = objects.NUMATopology.obj_from_db_obj( objects.ComputeNode.get_by_nodename( self.ctxt, 'compute1', ).numa_topology ) self.assertEqual(2, len(host_numa.cells)) self.assertEqual({0}, host_numa.cells[0].cpuset) self.assertEqual({2, 3}, host_numa.cells[0].pcpuset) self.assertEqual(set(), host_numa.cells[1].cpuset) self.assertEqual({6, 7}, host_numa.cells[1].pcpuset) # create a flavor with 1 shared and 2 dedicated CPUs stretched to # different NUMA nodes extra_spec = { 'hw:cpu_policy': 'mixed', 'hw:cpu_dedicated_mask': '^0', 'hw:numa_nodes': '2', 'hw:numa_cpus.0': '0', 'hw:numa_cpus.1': '1,2', 'hw:numa_mem.0': '256', 'hw:numa_mem.1': '768', } flavor_id = self._create_flavor( vcpu=3, memory_mb=1024, extra_spec=extra_spec) # The only possible solution (ignoring the order of vCPU1,2): # vCPU 0 => pCPU 0, NUMA0, shared # vCPU 1 => pCPU 6, NUMA1, dedicated # vCPU 2 => pCPU 7, NUMA1, dedicated # This is bug 1994526 as the scheduling fails self._run_build_test(flavor_id, end_status='ERROR') # # After bug 1994526 is fixed, this should pass # expected_usage = { # 'DISK_GB': 20, 'MEMORY_MB': 1024, 'PCPU': 2, 'VCPU': 1, # } # server = self._run_build_test( # flavor_id, expected_usage=expected_usage) # # # sanity check the instance topology # inst = objects.Instance.get_by_uuid(self.ctxt, server['id']) # self.assertEqual(2, len(inst.numa_topology.cells)) # # self.assertEqual({0}, inst.numa_topology.cells[0].cpuset) # self.assertEqual(set(), inst.numa_topology.cells[0].pcpuset) # self.assertEqual(None, inst.numa_topology.cells[0].cpu_pinning) # # self.assertEqual(set(), inst.numa_topology.cells[1].cpuset) # self.assertEqual({1, 2}, inst.numa_topology.cells[1].pcpuset) # self.assertEqual( # {6, 7}, # set(inst.numa_topology.cells[1].cpu_pinning.values()) # ) ",,74,0
openstack%2Fnova~882535,openstack/nova,stable/xena,I5a35a45abfcfbbb858a94927853777f112e73e5b,Handle zero pinned CPU in a cell with mixed policy,ABANDONED,2023-05-08 09:00:05.000000000,2024-03-05 19:13:00.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-08 09:00:05.000000000', 'files': ['nova/virt/hardware.py', 'nova/tests/functional/libvirt/test_numa_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/201435b1595914e44dd9f24fa345f1a15775c83d', 'message': 'Handle zero pinned CPU in a cell with mixed policy\n\nWhen cpu_policy is mixed the scheduler tries to find a valid CPU pinning\nfor each instance NUMA cell. However if there is an instance NUMA cell\nthat does not request any pinned CPUs then such logic will calculate\nempty pinning information for that cell. Then the scheduler logic\nwrongly assumes that an empty pinning result means there was no valid\npinning. However there is difference between a None result when no valid\npinning found, from an empty result [] which means there was nothing to\npin.\n\nThis patch makes sure that pinning == None is differentiated from\npinning == [].\n\nCloses-Bug: #1994526\nChange-Id: I5a35a45abfcfbbb858a94927853777f112e73e5b\n(cherry picked from commit cffe3971ce585a1ddc374a3ed067347857338831)\n(cherry picked from commit fa2ba3ab2c566337f5ad6ebd8fbcecc6aa930a40)\n(cherry picked from commit 9d11b6ae82b9dc709f3b856e50587d9713a70495)\n(cherry picked from commit c4e10fd7c1e928e94441b827504f49e94ad53676)\n'}]",0,882535,201435b1595914e44dd9f24fa345f1a15775c83d,5,1,1,9708,,,0,"Handle zero pinned CPU in a cell with mixed policy

When cpu_policy is mixed the scheduler tries to find a valid CPU pinning
for each instance NUMA cell. However if there is an instance NUMA cell
that does not request any pinned CPUs then such logic will calculate
empty pinning information for that cell. Then the scheduler logic
wrongly assumes that an empty pinning result means there was no valid
pinning. However there is difference between a None result when no valid
pinning found, from an empty result [] which means there was nothing to
pin.

This patch makes sure that pinning == None is differentiated from
pinning == [].

Closes-Bug: #1994526
Change-Id: I5a35a45abfcfbbb858a94927853777f112e73e5b
(cherry picked from commit cffe3971ce585a1ddc374a3ed067347857338831)
(cherry picked from commit fa2ba3ab2c566337f5ad6ebd8fbcecc6aa930a40)
(cherry picked from commit 9d11b6ae82b9dc709f3b856e50587d9713a70495)
(cherry picked from commit c4e10fd7c1e928e94441b827504f49e94ad53676)
",git fetch https://review.opendev.org/openstack/nova refs/changes/35/882535/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/hardware.py', 'nova/tests/functional/libvirt/test_numa_servers.py']",2,201435b1595914e44dd9f24fa345f1a15775c83d,bug/1994526," expected_usage = { 'DISK_GB': 20, 'MEMORY_MB': 1024, 'PCPU': 2, 'VCPU': 1, } server = self._run_build_test( flavor_id, expected_usage=expected_usage) # sanity check the instance topology inst = objects.Instance.get_by_uuid(self.ctxt, server['id']) self.assertEqual(2, len(inst.numa_topology.cells)) self.assertEqual({0}, inst.numa_topology.cells[0].cpuset) self.assertEqual(set(), inst.numa_topology.cells[0].pcpuset) self.assertIsNone(inst.numa_topology.cells[0].cpu_pinning) self.assertEqual(set(), inst.numa_topology.cells[1].cpuset) self.assertEqual({1, 2}, inst.numa_topology.cells[1].pcpuset) self.assertEqual( {6, 7}, set(inst.numa_topology.cells[1].cpu_pinning.values()) )"," # This is bug 1994526 as the scheduling fails self._run_build_test(flavor_id, end_status='ERROR') # # After bug 1994526 is fixed, this should pass # expected_usage = { # 'DISK_GB': 20, 'MEMORY_MB': 1024, 'PCPU': 2, 'VCPU': 1, # } # server = self._run_build_test( # flavor_id, expected_usage=expected_usage) # # # sanity check the instance topology # inst = objects.Instance.get_by_uuid(self.ctxt, server['id']) # self.assertEqual(2, len(inst.numa_topology.cells)) # # self.assertEqual({0}, inst.numa_topology.cells[0].cpuset) # self.assertEqual(set(), inst.numa_topology.cells[0].pcpuset) # self.assertEqual(None, inst.numa_topology.cells[0].cpu_pinning) # # self.assertEqual(set(), inst.numa_topology.cells[1].cpuset) # self.assertEqual({1, 2}, inst.numa_topology.cells[1].pcpuset) # self.assertEqual( # {6, 7}, # set(inst.numa_topology.cells[1].cpu_pinning.values()) # )",25,27
openstack%2Fnova~868011,openstack/nova,stable/xena,Ie5cdc17219c86927ab3769605808cb9d9fa9fa4d,Ironic: retry when node not available,ABANDONED,2022-12-16 21:30:50.000000000,2024-03-05 19:12:56.000000000,,"[{'_account_id': 17685}, {'_account_id': 20733}, {'_account_id': 22348}, {'_account_id': 34860}]","[{'number': 1, 'created': '2022-12-16 21:30:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/85e6aca53d7109e1dd1bd8fc04fe0642cf72093a', 'message': 'Ironic: retry when node not available\n\nAfter a baremetal instance is deleted, and its allocation is removed\nin placement, the ironic node might start cleaning. Eventually nova\nwill notice and update the inventory to be reserved.\nDuring this window, a new instance may have already picked this\nironic node.\n\nWhen that race happens today the build fails with an error:\n""Failed to reserve node ...""\n\nThis change tries to ensure the remaining alternative hosts are\nattempted before aborting the build.\nClearly the race is still there, but this makes it less painful.\n\nRelated-Bug: #1974070\nChange-Id: Ie5cdc17219c86927ab3769605808cb9d9fa9fa4d\n(cherry picked from commit 8a476061c5e034016668cd9e5a20c4430ef6b68d)\n(cherry picked from commit d71e9f6ec4933f9430db55537a36678b16ce895a)\n'}, {'number': 2, 'created': '2022-12-16 21:33:02.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/virt/ironic/driver.py', 'nova/tests/unit/virt/ironic/test_driver.py', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/8aa6f4f6685279bd314b1b50d614d02188124dd4', 'message': 'Ironic: retry when node not available\n\nAfter a baremetal instance is deleted, and its allocation is removed\nin placement, the ironic node might start cleaning. Eventually nova\nwill notice and update the inventory to be reserved.\nDuring this window, a new instance may have already picked this\nironic node.\n\nWhen that race happens today the build fails with an error:\n""Failed to reserve node ...""\n\nThis change tries to ensure the remaining alternative hosts are\nattempted before aborting the build.\nClearly the race is still there, but this makes it less painful.\n\nRelated-Bug: #1974070\nChange-Id: Ie5cdc17219c86927ab3769605808cb9d9fa9fa4d\n(cherry picked from commit 8a476061c5e034016668cd9e5a20c4430ef6b68d)\n(cherry picked from commit d71e9f6ec4933f9430db55537a36678b16ce895a)\n(cherry picked from commit b881dd25b4abb3c54934d8ebbccb2ac602c83177)\n'}]",2,868011,8aa6f4f6685279bd314b1b50d614d02188124dd4,10,4,2,6618,,,0,"Ironic: retry when node not available

After a baremetal instance is deleted, and its allocation is removed
in placement, the ironic node might start cleaning. Eventually nova
will notice and update the inventory to be reserved.
During this window, a new instance may have already picked this
ironic node.

When that race happens today the build fails with an error:
""Failed to reserve node ...""

This change tries to ensure the remaining alternative hosts are
attempted before aborting the build.
Clearly the race is still there, but this makes it less painful.

Related-Bug: #1974070
Change-Id: Ie5cdc17219c86927ab3769605808cb9d9fa9fa4d
(cherry picked from commit 8a476061c5e034016668cd9e5a20c4430ef6b68d)
(cherry picked from commit d71e9f6ec4933f9430db55537a36678b16ce895a)
(cherry picked from commit b881dd25b4abb3c54934d8ebbccb2ac602c83177)
",git fetch https://review.opendev.org/openstack/nova refs/changes/11/868011/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/virt/ironic/driver.py', 'nova/tests/unit/virt/ironic/test_driver.py', 'nova/compute/manager.py']",4,85e6aca53d7109e1dd1bd8fc04fe0642cf72093a,bug1974070," exception.UnexpectedDeletingTaskStateError, exception.ComputeResourcesUnavailable):", exception.UnexpectedDeletingTaskStateError):,70,3
openstack%2Fnova~887984,openstack/nova,stable/xena,If39f6afb6359c67aa38cf315ec90ffa386d5c142,testing: Fix and robustify archive_deleted_rows test,ABANDONED,2023-07-07 18:34:50.000000000,2024-03-05 19:12:53.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-07 18:34:50.000000000', 'files': ['nova/tests/functional/test_nova_manage.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/600dba5571e830c1e274e391fe86d498efcd7e53', 'message': 'testing: Fix and robustify archive_deleted_rows test\n\nThe regexes in test_archive_deleted_rows for multiple cells were\nincorrect in that they were not isolating the search pattern and rather\ncould match with other rows in the result table as well, resulting in a\nfalse positive.\n\nThis fixes the regexes and also adds one more server to the test\nscenario in order to make sure archive_deleted_rows iterates at least\nonce to expose bugs that may be present in its internal iteration.\n\nThis patch is in preparation for a future patch that will change the\nlogic in archive_deleted_rows. Making this test more robust will more\nthoroughly test for regression.\n\nChange-Id: If39f6afb6359c67aa38cf315ec90ffa386d5c142\n(cherry picked from commit f6620d48c86fb1c5034c09da6411ea46b4d9c2ed)\n(cherry picked from commit 8823da84e9d07309b860c3ce3ad4c9ebd3652f86)\n(cherry picked from commit ecfa7c405710451247018f189416ada7bba6fd36)\n(cherry picked from commit 956208d879ef2d49ac5a6f6c2067ff299114d193)\n'}]",0,887984,600dba5571e830c1e274e391fe86d498efcd7e53,4,1,1,4690,,,0,"testing: Fix and robustify archive_deleted_rows test

The regexes in test_archive_deleted_rows for multiple cells were
incorrect in that they were not isolating the search pattern and rather
could match with other rows in the result table as well, resulting in a
false positive.

This fixes the regexes and also adds one more server to the test
scenario in order to make sure archive_deleted_rows iterates at least
once to expose bugs that may be present in its internal iteration.

This patch is in preparation for a future patch that will change the
logic in archive_deleted_rows. Making this test more robust will more
thoroughly test for regression.

Change-Id: If39f6afb6359c67aa38cf315ec90ffa386d5c142
(cherry picked from commit f6620d48c86fb1c5034c09da6411ea46b4d9c2ed)
(cherry picked from commit 8823da84e9d07309b860c3ce3ad4c9ebd3652f86)
(cherry picked from commit ecfa7c405710451247018f189416ada7bba6fd36)
(cherry picked from commit 956208d879ef2d49ac5a6f6c2067ff299114d193)
",git fetch https://review.opendev.org/openstack/nova refs/changes/84/887984/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/test_nova_manage.py'],1,600dba5571e830c1e274e391fe86d498efcd7e53,," server_ids_by_cell = collections.defaultdict(list) # Create two servers per cell to make sure archive for table iterates # at least once. for i in range(2): # Boot a server to cell1 server = self._build_server(az='nova:host1') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids_by_cell['cell1'].append(created_server['id']) # Boot a server to cell2 server = self._build_server(az='nova:host2') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids_by_cell['cell2'].append(created_server['id']) # Boot a server to cell0 (cause ERROR state prior to schedule) server = self._build_server() # Flavor m1.xlarge cannot be fulfilled server['flavorRef'] = 'http://fake.server/5' created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ERROR') server_ids_by_cell['cell0'].append(created_server['id']) for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: with context.target_cell( admin_context, self.cell_mappings[cell_name] ) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: self.api.delete_server(server_id) for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: with context.target_cell( admin_context, self.cell_mappings[cell_name] ) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) # 6 instances should have been archived (cell0, cell1, cell2) r""\| cell0\.instances\s+\| 2"") r""\| cell1\.instances\s+\| 2"") r""\| cell2\.instances\s+\| 2"") r""\| API_DB\.instance_mappings\s+\| 6"") r""\| API_DB\.request_specs\s+\| 6"") for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: with context.target_cell( admin_context, self.cell_mappings[cell_name] ) as cctxt: self.assertRaises(exception.InstanceNotFound, objects.Instance.get_by_uuid, cctxt, server_id)"," # Boot a server to cell1 server_ids = {} server = self._build_server(az='nova:host1') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids['cell1'] = created_server['id'] # Boot a server to cell2 server = self._build_server(az='nova:host2') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids['cell2'] = created_server['id'] # Boot a server to cell0 (cause ERROR state prior to schedule) server = self._build_server() # Flavor m1.xlarge cannot be fulfilled server['flavorRef'] = 'http://fake.server/5' created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ERROR') server_ids['cell0'] = created_server['id'] for cell_name, server_id in server_ids.items(): with context.target_cell(admin_context, self.cell_mappings[cell_name]) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) for cell_name in server_ids.keys(): self.api.delete_server(server_ids[cell_name]) for cell_name, server_id in server_ids.items(): with context.target_cell(admin_context, self.cell_mappings[cell_name]) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) # Three instances should have been archived (cell0, cell1, cell2) r""| cell0\.instances.*\| 1.*"") r""| cell1\.instances.*\| 1.*"") r""| cell2\.instances.*\| 1.*"") r""| API_DB\.instance_mappings.*\| 3.*"") r""| API_DB\.request_specs.*\| 3.*"") for cell_name, server_id in server_ids.items(): with context.target_cell(admin_context, self.cell_mappings[cell_name]) as cctxt: self.assertRaises(exception.InstanceNotFound, objects.Instance.get_by_uuid, cctxt, server_id)",54,40
openstack%2Fnova~887985,openstack/nova,stable/xena,I2209bf1b3320901cf603ec39163cf923b25b0359,"database: Archive parent and child rows ""trees"" one at a time",ABANDONED,2023-07-07 18:34:50.000000000,2024-03-05 19:12:49.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-07 18:34:50.000000000', 'files': ['nova/tests/functional/db/test_archive.py', 'nova/db/main/api.py', 'releasenotes/notes/db-archive-performance-degradation-3fdabc43398149b1.yaml', 'nova/tests/unit/cmd/test_manage.py', 'nova/cmd/manage.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/4dc6ec9dccba2695536cb3cbd5534e64003904c9', 'message': 'database: Archive parent and child rows ""trees"" one at a time\n\nPreviously, we archived deleted rows in batches of max_rows parents +\ntheir child rows in a single database transaction. Doing it that way\nlimited how high a value of max_rows could be specified by the caller\nbecause of the size of the database transaction it could generate.\n\nFor example, in a large scale deployment with hundreds of thousands of\ndeleted rows and constant server creation and deletion activity, a\nvalue of max_rows=1000 might exceed the database\'s configured maximum\npacket size or timeout due to a database deadlock, forcing the operator\nto use a much lower max_rows value like 100 or 50.\n\nAnd when the operator has e.g. 500,000 deleted instances rows (and\nmillions of deleted rows total) they are trying to archive, being\nforced to use a max_rows value several orders of magnitude lower than\nthe number of rows they need to archive was a poor user experience.\n\nThis changes the logic to archive one parent row and its foreign key\nrelated child rows one at a time in a single database transaction\nwhile limiting the total number of rows per table as soon as it reaches\n>= max_rows. Doing this will allow operators to choose more predictable\nvalues for max_rows and get more progress per invocation of\narchive_deleted_rows.\n\nConflicts:\n    nova/db/main/api.py\n\nNOTE(melwitt): The conflicts are because the following changes are not\nin Xena:\n\n  * I36e43e30e07f4904c7b49925cefe804af45cff6c (db: Replace use of\n    legacy select() calling style)\n\n  * Ib5fcb841294b4e20fe085e8603d4132e97be7db9 (db: Replace\n    \'insert.inline\' parameter with \'Insert.inline()\' method)\n\nCloses-Bug: #2024258\n\nChange-Id: I2209bf1b3320901cf603ec39163cf923b25b0359\n(cherry picked from commit 697fa3c000696da559e52b664c04cbd8d261c037)\n(cherry picked from commit 75e4c86d90ae0229069fc2eb06bfb41436be7319)\n(cherry picked from commit 6972efdaa94d05952eb5b90e456b566c4c73360c)\n(cherry picked from commit b555279add583e6b0cee1bddb8d5642c68ad84a6)\n'}]",0,887985,4dc6ec9dccba2695536cb3cbd5534e64003904c9,4,1,1,4690,,,0,"database: Archive parent and child rows ""trees"" one at a time

Previously, we archived deleted rows in batches of max_rows parents +
their child rows in a single database transaction. Doing it that way
limited how high a value of max_rows could be specified by the caller
because of the size of the database transaction it could generate.

For example, in a large scale deployment with hundreds of thousands of
deleted rows and constant server creation and deletion activity, a
value of max_rows=1000 might exceed the database's configured maximum
packet size or timeout due to a database deadlock, forcing the operator
to use a much lower max_rows value like 100 or 50.

And when the operator has e.g. 500,000 deleted instances rows (and
millions of deleted rows total) they are trying to archive, being
forced to use a max_rows value several orders of magnitude lower than
the number of rows they need to archive was a poor user experience.

This changes the logic to archive one parent row and its foreign key
related child rows one at a time in a single database transaction
while limiting the total number of rows per table as soon as it reaches
>= max_rows. Doing this will allow operators to choose more predictable
values for max_rows and get more progress per invocation of
archive_deleted_rows.

Conflicts:
    nova/db/main/api.py

NOTE(melwitt): The conflicts are because the following changes are not
in Xena:

  * I36e43e30e07f4904c7b49925cefe804af45cff6c (db: Replace use of
    legacy select() calling style)

  * Ib5fcb841294b4e20fe085e8603d4132e97be7db9 (db: Replace
    'insert.inline' parameter with 'Insert.inline()' method)

Closes-Bug: #2024258

Change-Id: I2209bf1b3320901cf603ec39163cf923b25b0359
(cherry picked from commit 697fa3c000696da559e52b664c04cbd8d261c037)
(cherry picked from commit 75e4c86d90ae0229069fc2eb06bfb41436be7319)
(cherry picked from commit 6972efdaa94d05952eb5b90e456b566c4c73360c)
(cherry picked from commit b555279add583e6b0cee1bddb8d5642c68ad84a6)
",git fetch https://review.opendev.org/openstack/nova refs/changes/85/887985/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/db/test_archive.py', 'nova/db/main/api.py', 'releasenotes/notes/db-archive-performance-degradation-3fdabc43398149b1.yaml', 'nova/tests/unit/cmd/test_manage.py', 'nova/cmd/manage.py']",5,4dc6ec9dccba2695536cb3cbd5534e64003904c9,," help='Maximum number of deleted rows to archive per table. Defaults ' 'to 1000. Note that this number is a soft limit and does not ' 'include the corresponding rows, if any, that are removed ' 'from the API database for deleted instances.') :param max_rows: Maximum number of deleted rows to archive per table. Note that this number is a soft limit and does not include the corresponding rows, if any, that are removed from the API database for deleted instances. # table_to_rows = {table_name: number_of_rows_archived} # deleted_instance_uuids = ['uuid1', 'uuid2', ...] table_to_rows, deleted_instance_uuids, total_rows_archived = \ for table_name, rows_archived in table_to_rows.items(): # deleted_instance_uuids does not necessarily mean that any # instances rows were archived because it is obtained by a query # separate from the archive queries. For example, if a # DBReferenceError was raised while processing the instances table, # we would have skipped the table and had 0 rows archived even # though deleted instances rows were found. instances_archived = table_to_rows.get('instances', 0) if deleted_instance_uuids and instances_archived: # archive. We check the values() in case we get something like # table_to_rows = {'instances': 0} back somehow. if not until_complete or not any(table_to_rows.values()):"," help='Maximum number of deleted rows to archive. Defaults to 1000. ' 'Note that this number does not include the corresponding ' 'rows, if any, that are removed from the API database for ' 'deleted instances.') :param max_rows: Maximum number of deleted rows to archive run, deleted_instance_uuids, total_rows_archived = \ for table_name, rows_archived in run.items(): if deleted_instance_uuids: # archive. if not until_complete or not run:",201,43
openstack%2Foctavia-lib~911301,openstack/octavia-lib,unmaintained/victoria,If85d0ae83962db95761c7f0d4eb430f1194b0ac8,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:57:05.000000000,2024-03-05 19:12:48.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:57:05.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/octavia-lib/commit/b9dd067ecf8021d5543100238eadeeb4a7639aee', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: If85d0ae83962db95761c7f0d4eb430f1194b0ac8\n'}]",0,911301,b9dd067ecf8021d5543100238eadeeb4a7639aee,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: If85d0ae83962db95761c7f0d4eb430f1194b0ac8
",git fetch https://review.opendev.org/openstack/octavia-lib refs/changes/01/911301/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,b9dd067ecf8021d5543100238eadeeb4a7639aee,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fnova~888099,openstack/nova,stable/xena,Icc9b6366aebba2f8468e2127da7b7e099098513a,Reproducer for bug 2003991 unshelving offloaded instance,ABANDONED,2023-07-11 02:18:26.000000000,2024-03-05 19:12:45.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-11 02:18:26.000000000', 'files': ['nova/tests/functional/test_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/dc2d308118a126e087431d5c7810e1f958cbe895', 'message': 'Reproducer for bug 2003991 unshelving offloaded instance\n\nThis adds test coverage for:\n\n  * Shelve/unshelve offloaded with legacy quota usage\n  * Shelve/unshelve offloaded with quota usage from placement\n  * Shelve/unshelve with legacy quota usage\n  * Shelve/unshelve with quota usage from placement\n\nNOTE(melwitt): The difference from the cherry-picked change is to\nremove bits related to unified limits because unified limits support is\nnot present in Xena.\n\nRelated-Bug: #2003991\n\nChange-Id: Icc9b6366aebba2f8468e2127da7b7e099098513a\n(cherry picked from commit 427b2cb4d61cdfaf18b2467eb50b3772dffd3def)\n(cherry picked from commit 004a773a3a286f39889519bb5b2009fb9bf44fb1)\n(cherry picked from commit 710116f4beadb1553c9ad7991ea69b0e286657d6)\n(cherry picked from commit 291c02a7d51585551266fe5b7e7afd9726317671)\n'}]",0,888099,dc2d308118a126e087431d5c7810e1f958cbe895,4,1,1,4690,,,0,"Reproducer for bug 2003991 unshelving offloaded instance

This adds test coverage for:

  * Shelve/unshelve offloaded with legacy quota usage
  * Shelve/unshelve offloaded with quota usage from placement
  * Shelve/unshelve with legacy quota usage
  * Shelve/unshelve with quota usage from placement

NOTE(melwitt): The difference from the cherry-picked change is to
remove bits related to unified limits because unified limits support is
not present in Xena.

Related-Bug: #2003991

Change-Id: Icc9b6366aebba2f8468e2127da7b7e099098513a
(cherry picked from commit 427b2cb4d61cdfaf18b2467eb50b3772dffd3def)
(cherry picked from commit 004a773a3a286f39889519bb5b2009fb9bf44fb1)
(cherry picked from commit 710116f4beadb1553c9ad7991ea69b0e286657d6)
(cherry picked from commit 291c02a7d51585551266fe5b7e7afd9726317671)
",git fetch https://review.opendev.org/openstack/nova refs/changes/99/888099/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/test_servers.py'],1,dc2d308118a126e087431d5c7810e1f958cbe895,bug/2003991," def test_unshelve_offloaded_overquota(self): # Use a quota limit of 3 vcpus. self.flags(cores=3, group='quota') # Use flavor that has vcpus = 1. for i in range(0, 3): server = self._create_server(flavor_id=1) # We should be at the quota limit now. Shelve an instance and wait for # it to become SHELVED_OFFLOADED. self._shelve_server(server, expected_state='SHELVED_OFFLOADED') # Try to boot another instance. It should fail because shelved # offloaded instances still consume quota. ex = self.assertRaises(client.OpenStackApiException, self._create_server, flavor_id=1) self.assertEqual(403, ex.response.status_code) # Unshelving the instance should also succeed. self._unshelve_server(server) def _test_unshelve_offloaded_overquota_placement(self): # Use flavor that has vcpus = 1. for i in range(0, 3): server = self._create_server(flavor_id=1) # We should be at the quota limit now. Shelve an instance and wait for # it to become SHELVED_OFFLOADED. self._shelve_server(server, expected_state='SHELVED_OFFLOADED') # Try to boot another instance. It should succeed because with # placement, shelved offloaded instances do not consume cores/ram # quota. self._create_server(flavor_id=1) # FIXME(melwitt): This is bug #2003991, the unshelve is supposed to # fail if we would be over quota after unshelving. # Now try to unshelve the earlier instance. It should fail because it # would put us over quota to have 4 running instances. # ex = self.assertRaises(client.OpenStackApiException, # self._unshelve_server, # server) # self.assertEqual(403, ex.response.status_code) self._unshelve_server(server) def test_unshelve_offloaded_overquota_placement(self): # Count quota usage from placement. self.flags(count_usage_from_placement=True, group='quota') # Use a quota limit of 3 vcpus. self.flags(cores=3, group='quota') self._test_unshelve_offloaded_overquota_placement() def test_unshelve_overquota(self): # Test for behavior where the shelved instance is not offloaded. self.flags(shelved_offload_time=3600) # Use a quota limit of 3 vcpus. self.flags(cores=3, group='quota') # Use flavor that has vcpus = 1. for i in range(0, 3): server = self._create_server(flavor_id=1) # We should be at the quota limit now. Shelve an instance. self._shelve_server(server, expected_state='SHELVED') # Try to boot another instance. It should fail because shelved # instances still consume quota. ex = self.assertRaises(client.OpenStackApiException, self._create_server, flavor_id=1) self.assertEqual(403, ex.response.status_code) # Verify that it's still SHELVED. self._wait_for_state_change(server, 'SHELVED') # Unshelving the instance should also succeed. self._unshelve_server(server) def test_unshelve_overquota_placement(self): # Count quota usage from placement, should behave the same as legacy. self.flags(count_usage_from_placement=True, group='quota') self.test_unshelve_overquota() ",,84,0
openstack%2Fnova~888100,openstack/nova,stable/xena,I4ab97626c10052c7af9934a80ff8db9ddab82738,Enforce quota usage from placement when unshelving,ABANDONED,2023-07-11 02:18:26.000000000,2024-03-05 19:12:42.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-11 02:18:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/746bc7222276a8c6bb4f0f9317802e332d25b756', 'message': 'Enforce quota usage from placement when unshelving\n\nWhen [quota]count_usage_from_placement = true or\n[quota]driver = nova.quota.UnifiedLimitsDriver, cores and ram quota\nusage are counted from placement. When an instance is SHELVED_OFFLOADED,\nit will not have allocations in placement, so its cores and ram should\nnot count against quota during that time.\n\nThis means however that when an instance is unshelved, there is a\npossibility of going over quota if the cores and ram it needs were\nallocated by some other instance(s) while it was SHELVED_OFFLOADED.\n\nThis fixes a bug where quota was not being properly enforced during\nunshelve of a SHELVED_OFFLOADED instance when quota usage is counted\nfrom placement. Test coverage is also added for the ""recheck"" quota\ncases.\n\nConflicts:\n    nova/compute/api.py\n    nova/conductor/manager.py\n    nova/limit/placement.py\n\nNOTE(melwitt): The conflicts and differences from the cherry-picked\nchange are resolved by removing bits related to unified limits because\nunified limits support is not present in Xena..\n\nCloses-Bug: #2003991\n\nChange-Id: I4ab97626c10052c7af9934a80ff8db9ddab82738\n(cherry picked from commit 6f79d6321e7c3edaab2eb911198b7b7f851371b3)\n(cherry picked from commit c67e69c0e35d837fcefd7e4ea010a956569c3a55)\n(cherry picked from commit 490d5de6bb9ef3123cbbcea50e08ad0ad2edcbbe)\n(cherry picked from commit da4b7d1e70486402635a009724b263981cd22861)\n'}, {'number': 2, 'created': '2023-07-11 03:00:39.000000000', 'files': ['releasenotes/notes/quota-unshelve-offloaded-e4ea2d6a1449f549.yaml', 'nova/api/openstack/compute/shelve.py', 'nova/tests/unit/conductor/test_conductor.py', 'nova/conductor/manager.py', 'nova/tests/functional/test_servers.py', 'nova/compute/api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/b8875b17bb43795ec7f90ad14c60bb19976b89ab', 'message': 'Enforce quota usage from placement when unshelving\n\nWhen [quota]count_usage_from_placement = true or\n[quota]driver = nova.quota.UnifiedLimitsDriver, cores and ram quota\nusage are counted from placement. When an instance is SHELVED_OFFLOADED,\nit will not have allocations in placement, so its cores and ram should\nnot count against quota during that time.\n\nThis means however that when an instance is unshelved, there is a\npossibility of going over quota if the cores and ram it needs were\nallocated by some other instance(s) while it was SHELVED_OFFLOADED.\n\nThis fixes a bug where quota was not being properly enforced during\nunshelve of a SHELVED_OFFLOADED instance when quota usage is counted\nfrom placement. Test coverage is also added for the ""recheck"" quota\ncases.\n\nConflicts:\n    nova/compute/api.py\n    nova/conductor/manager.py\n    nova/limit/placement.py\n\nNOTE(melwitt): The conflicts and differences from the cherry-picked\nchange are resolved by removing bits related to unified limits because\nunified limits support is not present in Xena.\n\nCloses-Bug: #2003991\n\nChange-Id: I4ab97626c10052c7af9934a80ff8db9ddab82738\n(cherry picked from commit 6f79d6321e7c3edaab2eb911198b7b7f851371b3)\n(cherry picked from commit c67e69c0e35d837fcefd7e4ea010a956569c3a55)\n(cherry picked from commit 490d5de6bb9ef3123cbbcea50e08ad0ad2edcbbe)\n(cherry picked from commit da4b7d1e70486402635a009724b263981cd22861)\n'}]",0,888100,b8875b17bb43795ec7f90ad14c60bb19976b89ab,6,1,2,4690,,,0,"Enforce quota usage from placement when unshelving

When [quota]count_usage_from_placement = true or
[quota]driver = nova.quota.UnifiedLimitsDriver, cores and ram quota
usage are counted from placement. When an instance is SHELVED_OFFLOADED,
it will not have allocations in placement, so its cores and ram should
not count against quota during that time.

This means however that when an instance is unshelved, there is a
possibility of going over quota if the cores and ram it needs were
allocated by some other instance(s) while it was SHELVED_OFFLOADED.

This fixes a bug where quota was not being properly enforced during
unshelve of a SHELVED_OFFLOADED instance when quota usage is counted
from placement. Test coverage is also added for the ""recheck"" quota
cases.

Conflicts:
    nova/compute/api.py
    nova/conductor/manager.py
    nova/limit/placement.py

NOTE(melwitt): The conflicts and differences from the cherry-picked
change are resolved by removing bits related to unified limits because
unified limits support is not present in Xena.

Closes-Bug: #2003991

Change-Id: I4ab97626c10052c7af9934a80ff8db9ddab82738
(cherry picked from commit 6f79d6321e7c3edaab2eb911198b7b7f851371b3)
(cherry picked from commit c67e69c0e35d837fcefd7e4ea010a956569c3a55)
(cherry picked from commit 490d5de6bb9ef3123cbbcea50e08ad0ad2edcbbe)
(cherry picked from commit da4b7d1e70486402635a009724b263981cd22861)
",git fetch https://review.opendev.org/openstack/nova refs/changes/00/888100/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/quota-unshelve-offloaded-e4ea2d6a1449f549.yaml', 'nova/api/openstack/compute/shelve.py', 'nova/tests/unit/conductor/test_conductor.py', 'nova/conductor/manager.py', 'nova/tests/functional/test_servers.py', 'nova/compute/api.py']",6,746bc7222276a8c6bb4f0f9317802e332d25b756,bug/2003991," @staticmethod def _check_quota_unshelve_offloaded( context: nova_context.RequestContext, instance: 'objects.Instance', request_spec: 'objects.RequestSpec' ): if not CONF.quota.count_usage_from_placement: return # TODO(melwitt): This is ugly but we have to do it this way because # instances quota is currently counted from the API database but cores # and ram are counted from placement. That means while an instance is # SHELVED_OFFLOADED, it will still consume instances quota but it will # not consume cores and ram. So we need an instances delta of # 0 but cores and ram deltas from the flavor. # Once instances usage is also being counted from placement, we can # replace this method with a normal check_num_instances_quota() call. vcpus = instance.flavor.vcpus memory_mb = instance.flavor.memory_mb # We are not looking to create a new server, we are unshelving an # existing one. deltas = {'instances': 0, 'cores': vcpus, 'ram': memory_mb} objects.Quotas.check_deltas( context, deltas, context.project_id, user_id=context.user_id, check_project_id=instance.project_id, check_user_id=instance.user_id, ) # Check quota before we save any changes to the database, but only if # we are counting quota usage from placement. When an instance is # SHELVED_OFFLOADED, it will not consume cores or ram resources in # placement. This means it is possible that an unshelve would cause the # project/user to go over quota. if instance.vm_state == vm_states.SHELVED_OFFLOADED: self._check_quota_unshelve_offloaded( context, instance, request_spec) ",,215,22
openstack%2Fnova~874921,openstack/nova,stable/xena,I43612714b343d98320b19b5b38264afc700790e3,compute: Update volume_id within connection_info during swap_volume,ABANDONED,2023-02-23 13:08:22.000000000,2024-03-05 19:12:38.000000000,,"[{'_account_id': 14200}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 30568}, {'_account_id': 33855}]","[{'number': 1, 'created': '2023-02-23 13:08:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/0fc522cc6ae10b3dc57ed99add89ebe8dd31c526', 'message': ""compute: Update volume_id within connection_info during swap_volume\n\nWhen Cinder orchestrates a volume migration between backends it\ninitially creates a temporary volume on the destination before calling\nNova to swap to that volume. When this is complete Nova calls back to\nCinder and the temporary volume on the destination is renamed to the\noriginal volume UUID making the migration transparent to end users.\n\nPreviously Nova would not account for this within the connection_info\nstahed when connecting the new volume and would continue to point to the\noriginal UUID of the temporary volume. For most codepaths in Nova this\nisn't an issue but when dealing with multiattach volumes the libvirt\ndriver has a specific path that uses this stored volume_id within the\nconnection_info when an attempt is made to detach the volume,\nnova.virt.libvirt.LibvirtDriver._should_disconnect_target. In this case\nthis would lead to a failed lookup of the volume in Cinder and an\neventual 500 returned by Nova.\n\nThis change corrects this by ensuring any volume_id stashed in the\nnew connection_info we gather during a swap_volume is overwritten with\nthe correct id returned by the eventual call to Cinder's\nos-migrate_volume_completion API [1].\n\n[1] https://docs.openstack.org/api-ref/block-storage/v3/index.html?expanded=complete-migration-of-a-volume-detail#volumes-volumes\n\nCo-Authored-By: Lee Yarwood <lyarwood@redhat.com>\nCloses-Bug: #1943431\nChange-Id: I43612714b343d98320b19b5b38264afc700790e3\n(cherry picked from commit 6fd071b904282e106de7488a076d4f703636af21)\n""}, {'number': 2, 'created': '2023-02-27 09:55:09.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/functional/regressions/test_bug_1943431.py', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/629278d72a22e173a1ef705ca8405bd683592329', 'message': ""compute: Update volume_id within connection_info during swap_volume\n\nWhen Cinder orchestrates a volume migration between backends it\ninitially creates a temporary volume on the destination before calling\nNova to swap to that volume. When this is complete Nova calls back to\nCinder and the temporary volume on the destination is renamed to the\noriginal volume UUID making the migration transparent to end users.\n\nPreviously Nova would not account for this within the connection_info\nstahed when connecting the new volume and would continue to point to the\noriginal UUID of the temporary volume. For most codepaths in Nova this\nisn't an issue but when dealing with multiattach volumes the libvirt\ndriver has a specific path that uses this stored volume_id within the\nconnection_info when an attempt is made to detach the volume,\nnova.virt.libvirt.LibvirtDriver._should_disconnect_target. In this case\nthis would lead to a failed lookup of the volume in Cinder and an\neventual 500 returned by Nova.\n\nThis change corrects this by ensuring any volume_id stashed in the\nnew connection_info we gather during a swap_volume is overwritten with\nthe correct id returned by the eventual call to Cinder's\nos-migrate_volume_completion API [1].\n\n[1] https://docs.openstack.org/api-ref/block-storage/v3/index.html?expanded=complete-migration-of-a-volume-detail#volumes-volumes\n\nCo-Authored-By: Lee Yarwood <lyarwood@redhat.com>\nCloses-Bug: #1943431\nChange-Id: I43612714b343d98320b19b5b38264afc700790e3\n(cherry picked from commit 6fd071b904282e106de7488a076d4f703636af21)\n""}]",4,874921,629278d72a22e173a1ef705ca8405bd683592329,20,5,2,16198,,,0,"compute: Update volume_id within connection_info during swap_volume

When Cinder orchestrates a volume migration between backends it
initially creates a temporary volume on the destination before calling
Nova to swap to that volume. When this is complete Nova calls back to
Cinder and the temporary volume on the destination is renamed to the
original volume UUID making the migration transparent to end users.

Previously Nova would not account for this within the connection_info
stahed when connecting the new volume and would continue to point to the
original UUID of the temporary volume. For most codepaths in Nova this
isn't an issue but when dealing with multiattach volumes the libvirt
driver has a specific path that uses this stored volume_id within the
connection_info when an attempt is made to detach the volume,
nova.virt.libvirt.LibvirtDriver._should_disconnect_target. In this case
this would lead to a failed lookup of the volume in Cinder and an
eventual 500 returned by Nova.

This change corrects this by ensuring any volume_id stashed in the
new connection_info we gather during a swap_volume is overwritten with
the correct id returned by the eventual call to Cinder's
os-migrate_volume_completion API [1].

[1] https://docs.openstack.org/api-ref/block-storage/v3/index.html?expanded=complete-migration-of-a-volume-detail#volumes-volumes

Co-Authored-By: Lee Yarwood <lyarwood@redhat.com>
Closes-Bug: #1943431
Change-Id: I43612714b343d98320b19b5b38264afc700790e3
(cherry picked from commit 6fd071b904282e106de7488a076d4f703636af21)
",git fetch https://review.opendev.org/openstack/nova refs/changes/21/874921/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/functional/regressions/test_bug_1943431.py', 'nova/compute/manager.py']",3,0fc522cc6ae10b3dc57ed99add89ebe8dd31c526,bug/1943431, # NOTE(lyarwood): Overwrite the possibly stale serial and volume_id in # the connection_info with the volume_id returned from Cinder. This # could be the case during a volume migration where the new_cinfo here # refers to the temporary volume *before* Cinder renames it to the # original volume UUID at the end of the migration. new_cinfo['volume_id'] = save_volume_id if 'data' in new_cinfo: new_cinfo['data']['volume_id'] = save_volume_id,,168,2
openstack%2Fnova~875374,openstack/nova,stable/xena,Ic060523c30fd4dae086afcf7566452be0b2ff266,Add regression test for bug #1943431,ABANDONED,2023-02-27 09:55:09.000000000,2024-03-05 19:12:34.000000000,,"[{'_account_id': 14200}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-02-27 09:55:09.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1943431.py', 'nova/tests/functional/integrated_helpers.py', 'nova/tests/fixtures/cinder.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/93c5293b5b7d13a212dae5b2c14b41a4a6e622c9', 'message': 'Add regression test for bug #1943431\n\nThis regression test asserts the current broken behaviour of Nova during\na Cinder orchestrated volume migration that leaves the stashed\nconnection_info of the attachment pointing at a now deleted temporary\nvolume UUID used during the migration.\n\nThis is slightly different to the Nova orchestrated pure swap_volume\nflow so an additional test is included to assert the current correct\nbehaviour there and to hopefully illustrate the differences better to\nreviewers.\n\nNumerous TODOs are also left in place for clean ups in the regression\ntest, Cinder fixture and integrated helpers.\n\nChange-Id: Ic060523c30fd4dae086afcf7566452be0b2ff266\n(cherry picked from commit 674a5e8dca94d2a08970dd701d8066a109b72e2c)\n'}]",1,875374,93c5293b5b7d13a212dae5b2c14b41a4a6e622c9,6,3,1,16198,,,0,"Add regression test for bug #1943431

This regression test asserts the current broken behaviour of Nova during
a Cinder orchestrated volume migration that leaves the stashed
connection_info of the attachment pointing at a now deleted temporary
volume UUID used during the migration.

This is slightly different to the Nova orchestrated pure swap_volume
flow so an additional test is included to assert the current correct
behaviour there and to hopefully illustrate the differences better to
reviewers.

Numerous TODOs are also left in place for clean ups in the regression
test, Cinder fixture and integrated helpers.

Change-Id: Ic060523c30fd4dae086afcf7566452be0b2ff266
(cherry picked from commit 674a5e8dca94d2a08970dd701d8066a109b72e2c)
",git fetch https://review.opendev.org/openstack/nova refs/changes/74/875374/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/regressions/test_bug_1943431.py', 'nova/tests/functional/integrated_helpers.py', 'nova/tests/fixtures/cinder.py']",3,93c5293b5b7d13a212dae5b2c14b41a4a6e622c9,bug/1943431," MULTIATTACH_RO_SWAP_OLD_VOL = uuids.multiattach_ro_swap_old_vol MULTIATTACH_RO_SWAP_NEW_VOL = uuids.multiattach_ro_swap_new_vol MULTIATTACH_RO_MIGRATE_OLD_VOL = uuids.multiattach_ro_migrate_old_vol MULTIATTACH_RO_MIGRATE_NEW_VOL = uuids.multiattach_ro_migrate_new_vol self.multiattach_ro_migrated = False def _is_multiattach(volume_id): return volume_id in [ self.MULTIATTACH_VOL, self.MULTIATTACH_RO_SWAP_OLD_VOL, self.MULTIATTACH_RO_SWAP_NEW_VOL, self.MULTIATTACH_RO_MIGRATE_OLD_VOL, self.MULTIATTACH_RO_MIGRATE_NEW_VOL] def fake_get(self_api, context, volume_id, microversion=None): # TODO(lyarwood): Refactor this block into something sensible and # reusable by other tests. 'multiattach': _is_multiattach(volume_id), 'display_name': volume_id, 'multiattach': _is_multiattach(volume_id), # If we haven't called migrate_volume_completion then return # a migration_status of migrating if ( volume_id == self.MULTIATTACH_RO_MIGRATE_OLD_VOL and not self.multiattach_ro_migrated ): volume['migration_status'] = 'migrating' # If we have migrated and are still GET'ing the new volume # return raise VolumeNotFound if ( volume_id == self.MULTIATTACH_RO_MIGRATE_NEW_VOL and self.multiattach_ro_migrated ): raise exception.VolumeNotFound( volume_id=self.MULTIATTACH_RO_MIGRATE_NEW_VOL) if new_volume_id == self.MULTIATTACH_RO_MIGRATE_NEW_VOL: # Mimic the behaviour of Cinder here that renames the new # volume to the old UUID once the migration is complete. # This boolean is used above to signal that the old volume # has been deleted if callers try to GET it. self.multiattach_ro_migrated = True return {'save_volume_id': old_volume_id} with the volume_id but containing both the attachment_id and volume_id making it unique for the attachment. connection_info['data']['volume_id'] = volume_id if volume_id in [self.MULTIATTACH_RO_SWAP_OLD_VOL, self.MULTIATTACH_RO_SWAP_NEW_VOL, self.MULTIATTACH_RO_MIGRATE_OLD_VOL, self.MULTIATTACH_RO_MIGRATE_NEW_VOL]: attachment['attach_mode'] = 'ro' "," def fake_get(self_api, context, volume_id, microversion=None): 'multiattach': volume_id == self.MULTIATTACH_VOL, 'display_name': 'TEST2', 'multiattach': volume_id == self.MULTIATTACH_VOL, with the volume_id but containing the attachment_id, making it unique for the attachment.",235,6
openstack%2Fnova~879703,openstack/nova,stable/xena,Ib775c2210349b72b3dc033554ac6d8b35b8d2d79,Don't provide MTU value in metadata service if DHCP is enabled,ABANDONED,2023-04-06 13:51:10.000000000,2024-03-05 19:12:30.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-04-06 13:51:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/f2a52eea05918ebb98a433c61b6157005e54d78e', 'message': 'Don\'t provide MTU value in metadata service if DHCP is enabled\n\nFor networks with subnets with enabled DHCP service don\'t provide\nmtu value in the metadata. That way cloud-init will not configure it\n""statically"" in e.g. netplan\'s config file and guest OS will use MTU\nvalue provided by the DHCP service.\n\n\nCloses-Bug: #1899487\nChange-Id: Ib775c2210349b72b3dc033554ac6d8b35b8d2d79\n(cherry picked from commit 6bdc79af30151f683c0f462bc6c69da30ebcbcf9)\n'}, {'number': 2, 'created': '2023-08-29 14:57:03.000000000', 'files': ['releasenotes/notes/Do-not-send-mtu-value-in-metadata-for-networks-with-enabled-dhcp-641506f2a13b540f.yaml', 'nova/tests/unit/virt/test_netutils.py', 'nova/virt/netutils.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/ebae52aefcc9d5c4882668ce1375e940ce46a675', 'message': 'Don\'t provide MTU value in metadata service if DHCP is enabled\n\nFor networks with subnets with enabled DHCP service don\'t provide\nmtu value in the metadata. That way cloud-init will not configure it\n""statically"" in e.g. netplan\'s config file and guest OS will use MTU\nvalue provided by the DHCP service.\n\nCloses-Bug: #1899487\nChange-Id: Ib775c2210349b72b3dc033554ac6d8b35b8d2d79\n(cherry picked from commit 6bdc79af30151f683c0f462bc6c69da30ebcbcf9)\n(cherry picked from commit ec15df83d2d8eb9744438c7129f64a00e5c5694e)\n(cherry picked from commit 0aac193fe3f427eb5ca32e70df77dadaebd55bb9)\n'}]",0,879703,ebae52aefcc9d5c4882668ce1375e940ce46a675,10,1,2,16207,,,0,"Don't provide MTU value in metadata service if DHCP is enabled

For networks with subnets with enabled DHCP service don't provide
mtu value in the metadata. That way cloud-init will not configure it
""statically"" in e.g. netplan's config file and guest OS will use MTU
value provided by the DHCP service.

Closes-Bug: #1899487
Change-Id: Ib775c2210349b72b3dc033554ac6d8b35b8d2d79
(cherry picked from commit 6bdc79af30151f683c0f462bc6c69da30ebcbcf9)
(cherry picked from commit ec15df83d2d8eb9744438c7129f64a00e5c5694e)
(cherry picked from commit 0aac193fe3f427eb5ca32e70df77dadaebd55bb9)
",git fetch https://review.opendev.org/openstack/nova refs/changes/03/879703/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/Do-not-send-mtu-value-in-metadata-for-networks-with-enabled-dhcp-641506f2a13b540f.yaml', 'nova/tests/unit/virt/test_netutils.py', 'nova/virt/netutils.py']",3,f2a52eea05918ebb98a433c61b6157005e54d78e,bug/1899487," 'mtu': _get_link_mtu(vif),def _get_link_mtu(vif): for subnet in vif['network']['subnets']: if subnet['meta'].get('dhcp_server'): return None return vif['network']['meta'].get('mtu') "," 'mtu': vif['network']['meta'].get('mtu'),",36,1
openstack%2Fnova~829804,openstack/nova,stable/xena,I03c4db3c36a780aac19841b750ff59acd3572ec6,Fix to implement 'pack' or 'spread' VM's NUMA cells,ABANDONED,2022-02-17 20:33:49.000000000,2024-03-05 19:12:26.000000000,,"[{'_account_id': 4393}, {'_account_id': 9708}, {'_account_id': 11604}, {'_account_id': 14200}, {'_account_id': 16198}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-02-17 20:33:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ee5970e689bff559b01ea3d85db8cb4836b2c813', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}, {'number': 2, 'created': '2022-07-13 09:26:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/1263c707a363dacf7439b6a98745a95f4e5f7af0', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}, {'number': 3, 'created': '2022-08-16 14:53:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/bb549a4c2018f4c365036d7a6492511bd9c53743', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}, {'number': 4, 'created': '2022-10-03 12:39:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/5031e5f73099824e88c10da53bf255ec934828a1', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}, {'number': 5, 'created': '2022-12-05 10:54:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/12d2129ed824ebc89102175bc3ca4b2ad6080f4a', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}, {'number': 6, 'created': '2023-02-07 17:31:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/bc69c9fcce6f8df2ba325213806a499e57ba0d5c', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}, {'number': 7, 'created': '2023-02-28 09:49:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/221723123af5c32cd1b48779ad25d352605b427d', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}, {'number': 8, 'created': '2023-08-29 12:56:40.000000000', 'files': ['nova/conf/compute.py', 'nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'releasenotes/notes/extra-sorting-for-host-cells-c03e37de1e57043b.yaml', 'doc/source/admin/cpu-topologies.rst'], 'web_link': 'https://opendev.org/openstack/nova/commit/16d216442c540cb401dba241696756901ce30108', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}]",16,829804,16d216442c540cb401dba241696756901ce30108,60,7,8,16198,,,0,"Fix to implement 'pack' or 'spread' VM's NUMA cells

Cells mean NUMA cells below in text.

By default, first instance's cell are placed to the host's cell with
id 0, so it will be exhausted first. Than host's cell with id 1 will
be used and exhausted. It will lead to error placing instance with
number of cells in NUMA topology equal to host's cells number if
some instances with one cell topology are placed on cell with id 0
before. Fix will perform several sorts to put less used cells at
the beginning of host_cells list based on PCI devices, memory and
cpu usage when packing_host_numa_cells_allocation_strategy is set
to False (so called 'spread strategy'), or will try to place all
VM's cell to the same host's cell untill it will be completely
exhausted and only after will start to use next available host's
cell (so called 'pack strategy'), when the configuration option
packing_host_numa_cells_allocation_strategy is set to True.

Partial-Bug: #1940668
Change-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6
(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)
",git fetch https://review.opendev.org/openstack/nova refs/changes/04/829804/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/conf/compute.py', 'nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'releasenotes/notes/extra-sorting-for-host-cells-c03e37de1e57043b.yaml', 'doc/source/admin/cpu-topologies.rst']",5,ee5970e689bff559b01ea3d85db8cb4836b2c813,numa-balance,"The host's NUMA node(s) used are chosen based on some logic and controlled by ``packing_host_numa_cells_allocation_strategy`` configuration variable in nova.conf. By default ``packing_host_numa_cells_allocation_strategy`` variable is set to ``True``. It leads to attempt to chose NUMA node(s) with less amount of free resources (or in other words **more used** NUMA nodes) first. It is so-called ""pack"" strategy - we try to place as much as possible load at **more used** host's NUMA node until it will be completely exhausted. And only after we will choose **most used** host's NUMA node from the rest available nodes on host. ""Spread"" strategy is reverse to ""pack"" strategy. The NUMA node(s) with **more free** resources will be used first. So ""spread"" strategy will try to balance load between all NUMA nodes and keep number of free resources on all NUMA nodes as more equal as possible. Host's NUMA nodes are placed in list and list is sorted based on strategy chosen and resource available in each NUMA node. Sorts are performed on same list one after another, so the last sort implemented is the sort with most priority. The python performed so-called stable sort. It means that each sort executed on same list will change order of list items only if item's property we sort on differs. If this properties in all list's items are equal than elements order will not changed. Sorts are performed on host's NUMA nodes list in the following order: * sort based on available memory on node(first sort-less priority) * sort based on cpu usage (in case of shared CPUs requested by guest VM topology) or free pinned cpus otherwise. * sort based on number of free PCI device on node(last sort-top priority) Top sorting priority is for host's NUMA nodes with PCI devices attached. If VM requested PCI device(s) logic **always** puts host's NUMA nodes with more PCI devices at the beginnig of the host's NUMA nodes list. If PCI devices isn't requested by VM than NUMA nodes with no (or less) PCI device available will be placed at the beginnig of the list. .. caution:: The described logic for PCI devices is used **both** for ""pack"" and ""spread"" strategies. It is done to keep backward compatibility with previous nova versions. During ""pack"" logic implementation rest (two) sorts are performed with sort order to move NUMA nodes with more available resources (CPUs and memory) at the END of host's NUMA nodes list. Sort based on memory is the first sort implemented and has least priority. During ""spread"" logic implementation rest (two) sorts are performed with sort order to move NUMA nodes with more available resources (CPUs and memory) at the BEGINNING of host's NUMA nodes list. Sort based on memory is the first sort implemented and has least priority. Finally resulting list (after all sorts) is passed next and attempts to place VM's NUMA node to host's NUMA node are performed starting from the first host's NUMA node in list."," The NUMA node(s) used are normally chosen at random. However, if a PCI passthrough or SR-IOV device is attached to the instance, then the NUMA node that the device is associated with will be used. This can provide important performance improvements. However, booting a large number of similar instances can result in unbalanced NUMA node usage. Care should be taken to mitigate this issue. See this `discussion`_ for more details... _`discussion`: http://lists.openstack.org/pipermail/openstack-dev/2016-March/090367.html",389,17
openstack%2Fnova~900837,openstack/nova,stable/xena,I24a269f9809063f864a4f0443d6724dfa8703d9d,Fix exception catch when volume mount fails,ABANDONED,2023-11-14 01:14:57.000000000,2024-03-05 19:12:23.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-11-14 01:14:57.000000000', 'files': ['nova/tests/unit/virt/libvirt/volume/test_mount.py', 'nova/virt/libvirt/volume/mount.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/6a15fad96483f7907bcfa747e4b3a39a56ac1c4f', 'message': 'Fix exception catch when volume mount fails\n\nWhen we call nova.privsep.fs.mount(), we are catching\nProcessExecutionError() (an instance of a class) and that is not allowed\nin python3.\n\nThis changes the except statement to catch ProcessExecutionError\n(class) instead.\n\nCloses-Bug: #1984736\n\nChange-Id: I24a269f9809063f864a4f0443d6724dfa8703d9d\n(cherry picked from commit f996674c36fe1a109853d88113e27b44a7a5cf45)\n(cherry picked from commit baa0b4ff87a044228438cc32c27d4424fa6bc0c4)\n(cherry picked from commit 70f8d05947c9fb0ad3b3022b33efe6e823115a56)\n(cherry picked from commit 8ca7fcb6d9e9202019e3f317d3ba0821b1612422)\n'}]",0,900837,6a15fad96483f7907bcfa747e4b3a39a56ac1c4f,4,1,1,4690,,,0,"Fix exception catch when volume mount fails

When we call nova.privsep.fs.mount(), we are catching
ProcessExecutionError() (an instance of a class) and that is not allowed
in python3.

This changes the except statement to catch ProcessExecutionError
(class) instead.

Closes-Bug: #1984736

Change-Id: I24a269f9809063f864a4f0443d6724dfa8703d9d
(cherry picked from commit f996674c36fe1a109853d88113e27b44a7a5cf45)
(cherry picked from commit baa0b4ff87a044228438cc32c27d4424fa6bc0c4)
(cherry picked from commit 70f8d05947c9fb0ad3b3022b33efe6e823115a56)
(cherry picked from commit 8ca7fcb6d9e9202019e3f317d3ba0821b1612422)
",git fetch https://review.opendev.org/openstack/nova refs/changes/37/900837/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/libvirt/volume/test_mount.py', 'nova/virt/libvirt/volume/mount.py']",2,6a15fad96483f7907bcfa747e4b3a39a56ac1c4f,bug/1984736, except processutils.ProcessExecutionError:, except processutils.ProcessExecutionError():,27,1
openstack%2Fzaqar~911197,openstack/zaqar,unmaintained/xena,I53920b1f0ce9c975779a1e09e513d8aba387d27c,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:25:00.000000000,2024-03-05 19:12:21.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:25:00.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/zaqar/commit/0d47c557ed4798d4c1f45db923a7007ba02bba35', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I53920b1f0ce9c975779a1e09e513d8aba387d27c\n'}]",0,911197,0d47c557ed4798d4c1f45db923a7007ba02bba35,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I53920b1f0ce9c975779a1e09e513d8aba387d27c
",git fetch https://review.opendev.org/openstack/zaqar refs/changes/97/911197/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,0d47c557ed4798d4c1f45db923a7007ba02bba35,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fnova~900844,openstack/nova,stable/xena,I4d45f383b3c4794f8a114047455efb764f60f2a2,Improve logging at '_numa_cells_support_network_metadata',ABANDONED,2023-11-14 01:40:54.000000000,2024-03-05 19:12:19.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-11-14 01:40:54.000000000', 'files': ['nova/virt/hardware.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/9f6b9397a39670fd9b3f6213cff1d835d83781d2', 'message': ""Improve logging at '_numa_cells_support_network_metadata'\n\nThis adds 'debug' level messages at the branches of the function that\nlead to a 'False' result. These branches are:\n\n  - Physnet found affinity on a NUMA cell outside the chosen ones\n  - Tunneled networks found affinity on a NUMA cell outside the\n    chosen ones\n\nPartial-Bug: #1751784\n\nChange-Id: I4d45f383b3c4794f8a114047455efb764f60f2a2\n(cherry picked from commit 1915a3122a1df1f0dbe5edbaf25919f8875733af)\n(cherry picked from commit 0d970bfa5a73ef20dcedce4336140850fd4ea363)\n(cherry picked from commit 43273631d8dec01f25c622b9ac93fcd78aed8dd5)\n(cherry picked from commit 4b6f880e24115b50a54bd10a5d0930efd4def978)\n(cherry picked from commit b15ef7926c7f1d09754ed210717bf45f964d338d)\n""}]",0,900844,9f6b9397a39670fd9b3f6213cff1d835d83781d2,4,1,1,4690,,,0,"Improve logging at '_numa_cells_support_network_metadata'

This adds 'debug' level messages at the branches of the function that
lead to a 'False' result. These branches are:

  - Physnet found affinity on a NUMA cell outside the chosen ones
  - Tunneled networks found affinity on a NUMA cell outside the
    chosen ones

Partial-Bug: #1751784

Change-Id: I4d45f383b3c4794f8a114047455efb764f60f2a2
(cherry picked from commit 1915a3122a1df1f0dbe5edbaf25919f8875733af)
(cherry picked from commit 0d970bfa5a73ef20dcedce4336140850fd4ea363)
(cherry picked from commit 43273631d8dec01f25c622b9ac93fcd78aed8dd5)
(cherry picked from commit 4b6f880e24115b50a54bd10a5d0930efd4def978)
(cherry picked from commit b15ef7926c7f1d09754ed210717bf45f964d338d)
",git fetch https://review.opendev.org/openstack/nova refs/changes/44/900844/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/virt/hardware.py'],1,9f6b9397a39670fd9b3f6213cff1d835d83781d2,bug/1751784," removed_physnets = False removed_physnets = True if required_physnets and removed_physnets: LOG.debug('Not all requested physnets have affinity to one ' 'of the chosen host NUMA cells. Remaining physnets ' 'are: %(physnets)s.', {'physnets': required_physnets}) required_physnets_outside = required_physnets.intersection( host_cell.network_metadata.physnets) if required_physnets_outside: LOG.debug('One or more requested physnets require affinity to ' 'a NUMA cell outside of the chosen host cells. This ' 'host cell cannot satisfy network requests for ' 'these physnets: %(physnets)s', {'physnets': required_physnets_outside}) LOG.debug('Tunneled networks have no affinity to any of the chosen ' 'host NUMA cells.') LOG.debug('The host declares NUMA affinity for tunneled ' 'networks. The current instance requests a ' 'tunneled network but this host cell is out of ' 'the set declared to be local to the tunnel ' 'network endpoint. As such, this host cell cannot ' 'support the requested tunneled network.')", if required_physnets.intersection( host_cell.network_metadata.physnets):,25,2
openstack%2Fnova~900822,openstack/nova,stable/xena,I4bf83d1642b62ab103716aff6dae7438646e2b31,Decorate only Flavor.get_* methods that execute queries,ABANDONED,2023-11-13 19:25:14.000000000,2024-03-05 19:12:15.000000000,,"[{'_account_id': 20733}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-11-13 19:25:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/fb164c3a813c3c8833ce5b127ca0ae1ac6ef9170', 'message': ""Decorate only Flavor.get_* methods that execute queries\n\nThe get_* methods on the Flavor object use a common helper method to\nbuild a query object to execute later.\n\nCurrently, the @api_db_api.context_manager.reader decorator which\nmanages the session is located on the helper method instead of on the\nmethods that actually execute the database queries. Part of the context\nmanager's job is to close the session after the query is executed.\nBecause the decorator is not on the methods that actually execute the\nqueries, those database connections are not being closed and it will\neventually lead to errors like:\n\n  sqlalchemy.exc.TimeoutError: QueuePool limit of size 5 overflow 50\n  reached, connection timed out, timeout 30.00 (Background on this\n  error at: https://sqlalche.me/e/14/3o7r)\n\nwhich means the connection pool size plus the overflow size has been\nreached and the pool will block for a fixed period of time before\ntiming out and raising this error.\n\nThis removes the @api_db_api.context_manager.reader decorator from the\nquery build helper method and adds it to the Flavor.get_* methods that\nexecute the database queries.\n\nCloses-Bug: #2027755\n\nChange-Id: I4bf83d1642b62ab103716aff6dae7438646e2b31\n(cherry picked from commit 9ae6240c92e212b2fa96d5163f68ef1b30ee03b7)\n(cherry picked from commit 4f4f27be27cb202be6a8fb949ad21021a5cd735d)\n(cherry picked from commit 53e3afe3a6024be6ead35132230dc468dd808850)\n(cherry picked from commit 251ba720a1aed9a2444406238d352e9db1e5bce1)\n""}, {'number': 2, 'created': '2023-11-13 23:05:31.000000000', 'files': ['nova/objects/flavor.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/47f9606e00d78a7ef8fd5115eada1959b3773c75', 'message': ""Decorate only Flavor.get_* methods that execute queries\n\nThe get_* methods on the Flavor object use a common helper method to\nbuild a query object to execute later.\n\nCurrently, the @api_db_api.context_manager.reader decorator which\nmanages the session is located on the helper method instead of on the\nmethods that actually execute the database queries. Part of the context\nmanager's job is to close the session after the query is executed.\nBecause the decorator is not on the methods that actually execute the\nqueries, those database connections are not being closed and it will\neventually lead to errors like:\n\n  sqlalchemy.exc.TimeoutError: QueuePool limit of size 5 overflow 50\n  reached, connection timed out, timeout 30.00 (Background on this\n  error at: https://sqlalche.me/e/14/3o7r)\n\nwhich means the connection pool size plus the overflow size has been\nreached and the pool will block for a fixed period of time before\ntiming out and raising this error.\n\nThis removes the @api_db_api.context_manager.reader decorator from the\nquery build helper method and adds it to the Flavor.get_* methods that\nexecute the database queries.\n\nCloses-Bug: #2027755\n\nChange-Id: I4bf83d1642b62ab103716aff6dae7438646e2b31\n(cherry picked from commit 9ae6240c92e212b2fa96d5163f68ef1b30ee03b7)\n(cherry picked from commit 4f4f27be27cb202be6a8fb949ad21021a5cd735d)\n(cherry picked from commit 53e3afe3a6024be6ead35132230dc468dd808850)\n(cherry picked from commit 5f1f22c07a00021cacf97d74031c1033916f9b44)\n""}]",0,900822,47f9606e00d78a7ef8fd5115eada1959b3773c75,8,2,2,4690,,,0,"Decorate only Flavor.get_* methods that execute queries

The get_* methods on the Flavor object use a common helper method to
build a query object to execute later.

Currently, the @api_db_api.context_manager.reader decorator which
manages the session is located on the helper method instead of on the
methods that actually execute the database queries. Part of the context
manager's job is to close the session after the query is executed.
Because the decorator is not on the methods that actually execute the
queries, those database connections are not being closed and it will
eventually lead to errors like:

  sqlalchemy.exc.TimeoutError: QueuePool limit of size 5 overflow 50
  reached, connection timed out, timeout 30.00 (Background on this
  error at: https://sqlalche.me/e/14/3o7r)

which means the connection pool size plus the overflow size has been
reached and the pool will block for a fixed period of time before
timing out and raising this error.

This removes the @api_db_api.context_manager.reader decorator from the
query build helper method and adds it to the Flavor.get_* methods that
execute the database queries.

Closes-Bug: #2027755

Change-Id: I4bf83d1642b62ab103716aff6dae7438646e2b31
(cherry picked from commit 9ae6240c92e212b2fa96d5163f68ef1b30ee03b7)
(cherry picked from commit 4f4f27be27cb202be6a8fb949ad21021a5cd735d)
(cherry picked from commit 53e3afe3a6024be6ead35132230dc468dd808850)
(cherry picked from commit 5f1f22c07a00021cacf97d74031c1033916f9b44)
",git fetch https://review.opendev.org/openstack/nova refs/changes/22/900822/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/objects/flavor.py'],1,fb164c3a813c3c8833ce5b127ca0ae1ac6ef9170,bug/2027755," def _flavor_get_query_from_db(context): # We don't use a database context decorator on this method because this # method is not executing a query, it's only building one. query = context.session.query(api_models.Flavors).options( orm.joinedload(api_models.Flavors.extra_specs) ) @api_db_api.context_manager.reader @api_db_api.context_manager.reader @api_db_api.context_manager.reader", @api_db_api.context_manager.reader def _flavor_get_query_from_db(context): query = context.session.query(api_models.Flavors).\ options(orm.joinedload('extra_specs')),8,3
openstack%2Fnova~904081,openstack/nova,stable/xena,I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7,Fixed an error when caching multiple images in aggregate,ABANDONED,2023-12-20 07:45:07.000000000,2024-03-05 19:12:11.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-12-20 07:45:07.000000000', 'files': ['nova/tests/unit/api/openstack/compute/test_aggregates.py', 'nova/api/openstack/compute/aggregates.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/4fdcb53e45a362fabc9b1ee73d159c28b3816f3f', 'message': 'Fixed an error when caching multiple images in aggregate\n\nBecause in the process of judging whether the image id is Duplicate,there is only deduplication without sorting, so no duplicate image error is judged as duplicate and an error ""Duplicate images in request"" is reported.\n\nNow it is changed to sort after deduplication and then compare.\n\nTwo unit test cases were added to verify the fix\n\nRelated-Bug: #2034702\nChange-Id: I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7\n(cherry picked from commit aa500fbb31d2f7129c048460e57a3dff229cabc8)\n'}]",0,904081,4fdcb53e45a362fabc9b1ee73d159c28b3816f3f,4,1,1,36115,,,0,"Fixed an error when caching multiple images in aggregate

Because in the process of judging whether the image id is Duplicate,there is only deduplication without sorting, so no duplicate image error is judged as duplicate and an error ""Duplicate images in request"" is reported.

Now it is changed to sort after deduplication and then compare.

Two unit test cases were added to verify the fix

Related-Bug: #2034702
Change-Id: I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7
(cherry picked from commit aa500fbb31d2f7129c048460e57a3dff229cabc8)
",git fetch https://review.opendev.org/openstack/nova refs/changes/81/904081/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/api/openstack/compute/test_aggregates.py', 'nova/api/openstack/compute/aggregates.py']",2,4fdcb53e45a362fabc9b1ee73d159c28b3816f3f,bug/2034702-stable/2023.2-stable/2023.1-stable/zed-stable/yoga-stable/xena, if sorted(image_ids) != sorted(list(set(image_ids))):, if image_ids != list(set(image_ids)):,26,1
openstack%2Fnova~885347,openstack/nova,stable/xena,I2ba035c09ace20e9835d9d12a5c5bee17d616718,Fix failed count for anti-affinity check,ABANDONED,2023-06-06 08:45:16.000000000,2024-03-05 19:12:08.000000000,,"[{'_account_id': 7166}, {'_account_id': 11604}, {'_account_id': 17685}, {'_account_id': 20733}, {'_account_id': 22348}, {'_account_id': 34860}, {'_account_id': 34951}]","[{'number': 1, 'created': '2023-06-06 08:45:16.000000000', 'files': ['nova/tests/functional/test_server_group.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'nova/exception.py', 'nova/compute/manager.py', 'nova/compute/build_results.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/87488180e5633db5ef8d684684a4355de48ef428', 'message': 'Fix failed count for anti-affinity check\n\nThe late anti-affinity check runs in the compute manager to avoid\nparallel scheduling requests to invalidate the anti-affinity server\ngroup policy. When the check fails the instance is re-scheduled.\nHowever this failure counted as a real instance boot failure of the\ncompute host and can lead to de-prioritization of the compute host\nin the scheduler via BuildFailureWeigher. As the late anti-affinity\ncheck does not indicate any fault of the compute host itself it\nshould not be counted towards the build failure counter.\nThis patch adds new build results to handle this case.\n\nCloses-Bug: #1996732\nChange-Id: I2ba035c09ace20e9835d9d12a5c5bee17d616718\nSigned-off-by: Yusuke Okada <okada.yusuke@fujitsu.com>\n(cherry picked from commit 56d320a203a13f262a2e94e491af222032e453d3)\n(cherry picked from commit 1b56714e9119ab4152e6f33985a499b2d83a491b)\n(cherry picked from commit 2f1d65774fbcf5c25c4ba53583b6a802a03f4c4d)\n(cherry picked from commit cd0403dd3b1099bd13da503500a50249db8e49ea)\n'}]",2,885347,87488180e5633db5ef8d684684a4355de48ef428,8,7,1,9708,,,0,"Fix failed count for anti-affinity check

The late anti-affinity check runs in the compute manager to avoid
parallel scheduling requests to invalidate the anti-affinity server
group policy. When the check fails the instance is re-scheduled.
However this failure counted as a real instance boot failure of the
compute host and can lead to de-prioritization of the compute host
in the scheduler via BuildFailureWeigher. As the late anti-affinity
check does not indicate any fault of the compute host itself it
should not be counted towards the build failure counter.
This patch adds new build results to handle this case.

Closes-Bug: #1996732
Change-Id: I2ba035c09ace20e9835d9d12a5c5bee17d616718
Signed-off-by: Yusuke Okada <okada.yusuke@fujitsu.com>
(cherry picked from commit 56d320a203a13f262a2e94e491af222032e453d3)
(cherry picked from commit 1b56714e9119ab4152e6f33985a499b2d83a491b)
(cherry picked from commit 2f1d65774fbcf5c25c4ba53583b6a802a03f4c4d)
(cherry picked from commit cd0403dd3b1099bd13da503500a50249db8e49ea)
",git fetch https://review.opendev.org/openstack/nova refs/changes/47/885347/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/test_server_group.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'nova/exception.py', 'nova/compute/manager.py', 'nova/compute/build_results.py']",5,87488180e5633db5ef8d684684a4355de48ef428,bug/1996732,"# Instance failed by policy violation (such as affinity or anti-affinity) # and was not rescheduled. In this case, the node's failed count won't be # increased. FAILED_BY_POLICY = 'failed_by_policy' # Instance failed by policy violation (such as affinity or anti-affinity) # but was rescheduled. In this case, the node's failed count won't be # increased. RESCHEDULED_BY_POLICY = 'rescheduled_by_policy'",,265,14
openstack%2Fnova~875345,openstack/nova,stable/xena,Ia738a0972b050f549f446c85171d3f33e60ada4f,Handle InstanceInvalidState exception,ABANDONED,2023-02-27 12:29:26.000000000,2024-03-05 19:12:04.000000000,,"[{'_account_id': 4690}, {'_account_id': 8864}, {'_account_id': 9708}, {'_account_id': 11604}, {'_account_id': 15334}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 34860}]","[{'number': 1, 'created': '2023-02-27 12:29:26.000000000', 'files': ['nova/api/openstack/compute/remote_consoles.py', 'nova/tests/unit/api/openstack/compute/test_remote_consoles.py', 'nova/tests/functional/api_sample_tests/test_remote_consoles.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/bb696a3274f7891dc7def0a33ef9528f6df7b085', 'message': ""Handle InstanceInvalidState exception\n\nWhen instance task state is 'deleting' or 'migrating', then\nget_vnc_console throws 500 error, as InstanceInvalidState\nexception is not handled there.\n\nThis change handles InstanceInvalidState in api layer in\nget_vnc_console call.\n\nCloses-Bug: #1968618\nChange-Id: Ia738a0972b050f549f446c85171d3f33e60ada4f\n(cherry picked from commit ec40d5aee34e9428e2a19231fc3df4d23d75b779)\n(cherry picked from commit 71855163a944e437f9c48a5765f683b55a28c720)\n(cherry picked from commit 286aadf289ef1b001ba7816e20b8cd53ba7a8618)\n""}]",2,875345,bb696a3274f7891dc7def0a33ef9528f6df7b085,9,8,1,20733,,,0,"Handle InstanceInvalidState exception

When instance task state is 'deleting' or 'migrating', then
get_vnc_console throws 500 error, as InstanceInvalidState
exception is not handled there.

This change handles InstanceInvalidState in api layer in
get_vnc_console call.

Closes-Bug: #1968618
Change-Id: Ia738a0972b050f549f446c85171d3f33e60ada4f
(cherry picked from commit ec40d5aee34e9428e2a19231fc3df4d23d75b779)
(cherry picked from commit 71855163a944e437f9c48a5765f683b55a28c720)
(cherry picked from commit 286aadf289ef1b001ba7816e20b8cd53ba7a8618)
",git fetch https://review.opendev.org/openstack/nova refs/changes/45/875345/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/api/openstack/compute/remote_consoles.py', 'nova/tests/unit/api/openstack/compute/test_remote_consoles.py', 'nova/tests/functional/api_sample_tests/test_remote_consoles.py']",3,bb696a3274f7891dc7def0a33ef9528f6df7b085,lp_1968618,"from unittest import mock from nova.compute import api as compute from nova import exception @mock.patch.object(compute.API, 'get_vnc_console') def test_get_vnc_console_instance_invalid_state(self, mock_get_vnc_console): uuid = self._post_server() def fake_get_vnc_console(*args, **kwargs): raise exception.InstanceInvalidState( attr='fake_attr', state='fake_state', method='fake_method', instance_uuid=uuid) mock_get_vnc_console.side_effect = fake_get_vnc_console response = self._do_post('servers/%s/action' % uuid, 'get-vnc-console-post-req', {'action': 'os-getVNCConsole'}) self.assertEqual(409, response.status_code) ",,35,0
openstack%2Fdesignate~851875,openstack/designate,stable/xena,Ic6b3a3c6d2f5b648f00813191c30d03132e31503,Fix FIPS job - nslookup_target,ABANDONED,2022-08-02 22:26:23.000000000,2024-03-05 19:11:46.000000000,,"[{'_account_id': 5572}, {'_account_id': 13252}, {'_account_id': 22348}, {'_account_id': 22623}]","[{'number': 1, 'created': '2022-08-02 22:26:23.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/designate/commit/c9589f2ca31bf17a4c339ba15959d60dfacd1ea5', 'message': 'Fix FIPS job - nslookup_target\n\nThis patch sets a zuul variable ""nslookup_target"" to \'opendev.org\' to fix the FIPS jobs due to a new zuul-job change[1].\n\n[1] https://review.opendev.org/c/zuul/zuul-jobs/+/844704\n\nChange-Id: Ic6b3a3c6d2f5b648f00813191c30d03132e31503\n(cherry picked from commit 9ac645806613710ab03da7e1841537d1d28a6e8f)\n'}]",2,851875,c9589f2ca31bf17a4c339ba15959d60dfacd1ea5,6,4,1,11628,,,0,"Fix FIPS job - nslookup_target

This patch sets a zuul variable ""nslookup_target"" to 'opendev.org' to fix the FIPS jobs due to a new zuul-job change[1].

[1] https://review.opendev.org/c/zuul/zuul-jobs/+/844704

Change-Id: Ic6b3a3c6d2f5b648f00813191c30d03132e31503
(cherry picked from commit 9ac645806613710ab03da7e1841537d1d28a6e8f)
",git fetch https://review.opendev.org/openstack/designate refs/changes/75/851875/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,c9589f2ca31bf17a4c339ba15959d60dfacd1ea5,, vars: nslookup_target: 'opendev.org',,2,0
openstack%2Fdesignate~865843,openstack/designate,stable/xena,I052fb7ad90b4134ebe4c4e6a4784064c176eaaee,Specify AXFR transfer timeout for dnspython v1.,ABANDONED,2022-11-28 16:55:15.000000000,2024-03-05 19:11:38.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-11-28 16:55:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/designate/commit/df4a14336d56dfb1cdefa8c5468faddbdb3aa0ee', 'message': ""Specify AXFR transfer timeout for dnspython v1.\n\nIf we specify message timeout and do not specify AXFR transfer timeout\nwe face with error in dnspython v1:\nhttps://github.com/rthalley/dnspython/issues/390\nThe bug was fixed in v2:\nhttps://github.com/rthalley/dnspython/commit/9fbf9b223dc26262b1cf23f623f89283ee9c8375\nIt's risky to update dnspython to version 2 because there are changes in interfaces\nand eventlet requires updates too to be compatible with dnspython.\nSo it's simpler to set transfer timeout.\n\nCloses-Bug: 1940563\nChange-Id: I052fb7ad90b4134ebe4c4e6a4784064c176eaaee\n""}, {'number': 2, 'created': '2022-11-28 16:59:30.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/designate/commit/3ede80331db3894f99b9cbebbc17459849d7bd2d', 'message': ""Specify AXFR transfer timeout for dnspython v1.\n\nIf we specify message timeout and do not specify AXFR transfer timeout\nwe face with error in dnspython v1:\nhttps://github.com/rthalley/dnspython/issues/390\nThe bug was fixed in v2:\nhttps://github.com/rthalley/dnspython/commit/9fbf9b223dc26262b1cf23f623f89283ee9c8375\nIt's risky to update dnspython to version 2 because there are changes in interfaces\nand eventlet requires updates too to be compatible with dnspython.\nSo it's simpler to set transfer timeout.\n\nCloses-Bug: 1940563\nChange-Id: I052fb7ad90b4134ebe4c4e6a4784064c176eaaee\n""}, {'number': 3, 'created': '2022-11-28 17:00:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/designate/commit/a526c12ccc116f51db69855126dadfd54e4f805e', 'message': ""Specify AXFR transfer timeout for dnspython v1.\n\nIf we specify message timeout and do not specify AXFR transfer timeout\nwe face with error in dnspython v1:\nhttps://github.com/rthalley/dnspython/issues/390\nThe bug was fixed in v2:\nhttps://github.com/rthalley/dnspython/commit/9fbf9b223dc26262b1cf23f623f89283ee9c8375\nIt's risky to update dnspython to version 2 because there are changes in interfaces\nand eventlet requires updates too to be compatible with dnspython.\nSo it's simpler to set transfer timeout.\n\nCloses-Bug: 1940563\nChange-Id: I052fb7ad90b4134ebe4c4e6a4784064c176eaaee\n""}, {'number': 4, 'created': '2022-11-28 21:18:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/designate/commit/6292b50067b6ce34dabe41798ab37a07562baf00', 'message': ""Specify AXFR transfer timeout for dnspython v1.\n\nIf we specify message timeout and do not specify AXFR transfer timeout\nwe face with error in dnspython v1:\nhttps://github.com/rthalley/dnspython/issues/390\nThe bug was fixed in v2:\nhttps://github.com/rthalley/dnspython/commit/9fbf9b223dc26262b1cf23f623f89283ee9c8375\nIt's risky to update dnspython to version 2 because there are changes in interfaces\nand eventlet requires updates too to be compatible with dnspython.\nSo it's simpler to set transfer timeout.\n\nCloses-Bug: 1940563\nChange-Id: I052fb7ad90b4134ebe4c4e6a4784064c176eaaee\n""}, {'number': 5, 'created': '2022-11-29 14:49:32.000000000', 'files': ['designate/tests/unit/test_dnsutils.py', 'designate/dnsutils.py', 'releasenotes/notes/bug-1940563-bdb902050e545223.yaml'], 'web_link': 'https://opendev.org/openstack/designate/commit/a232ae1cfd3029c0709f02295d106e89bcab2f2a', 'message': ""Specify AXFR transfer timeout for dnspython v1.\n\nIf we specify message timeout and do not specify AXFR transfer timeout\nwe face with error in dnspython v1:\nhttps://github.com/rthalley/dnspython/issues/390\nThe bug was fixed in v2:\nhttps://github.com/rthalley/dnspython/commit/9fbf9b223dc26262b1cf23f623f89283ee9c8375\nIt's risky to update dnspython to version 2 because there are changes in interfaces\nand eventlet requires updates too to be compatible with dnspython.\nSo it's simpler to set transfer timeout.\n\nCloses-Bug: 1940563\nChange-Id: I052fb7ad90b4134ebe4c4e6a4784064c176eaaee\n""}]",1,865843,a232ae1cfd3029c0709f02295d106e89bcab2f2a,12,1,5,32927,,,0,"Specify AXFR transfer timeout for dnspython v1.

If we specify message timeout and do not specify AXFR transfer timeout
we face with error in dnspython v1:
https://github.com/rthalley/dnspython/issues/390
The bug was fixed in v2:
https://github.com/rthalley/dnspython/commit/9fbf9b223dc26262b1cf23f623f89283ee9c8375
It's risky to update dnspython to version 2 because there are changes in interfaces
and eventlet requires updates too to be compatible with dnspython.
So it's simpler to set transfer timeout.

Closes-Bug: 1940563
Change-Id: I052fb7ad90b4134ebe4c4e6a4784064c176eaaee
",git fetch https://review.opendev.org/openstack/designate refs/changes/43/865843/1 && git format-patch -1 --stdout FETCH_HEAD,['designate/dnsutils.py'],1,df4a14336d56dfb1cdefa8c5468faddbdb3aa0ee,bug/1940563-stable/xena,"<<<<<<< HEAD (019b1a CI: Move queue configuration into project-template)======= to = eventlet.Timeout(timeout) log_info = {'name': zone_name, 'host': srv} try: LOG.info(""Doing AXFR for %(name)s from %(host)s"", log_info) xfr = dns.query.xfr(srv['host'], zone_name, relativize=False, timeout=1, port=srv['port'], source=source, lifetime=60) raw_zone = dns.zone.from_xfr(xfr, relativize=False) break except eventlet.Timeout as t: if t == to: LOG.error(""AXFR timed out for %(name)s from %(host)s"", log_info) continue except dns.exception.FormError: LOG.error(""Zone %(name)s is not present on %(host)s."" ""Trying next server."", log_info) except socket.error: LOG.error(""Connection error when doing AXFR for %(name)s from "" ""%(host)s"", log_info) except Exception: LOG.exception(""Problem doing AXFR %(name)s from %(host)s. "" >>>>>>> CHANGE (dda3c3 Specify AXFR transfer timeout for dnspython v1.)",,26,0
openstack%2Fcharm-openstack-dashboard~910097,openstack/charm-openstack-dashboard,master,I951e0a2b9e44158dd0d2586554d5380c981f46f6,Updates for caracal tox.ini,MERGED,2024-02-24 20:12:27.000000000,2024-03-05 19:11:28.000000000,2024-03-05 19:11:28.000000000,"[{'_account_id': 8992}, {'_account_id': 20648}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-24 20:12:27.000000000', 'files': ['build-requirements.txt', 'tox.ini'], 'web_link': 'https://opendev.org/openstack/charm-openstack-dashboard/commit/63d0ffc1570dc3de0e95bcc31ac5dd02528db9d8', 'message': 'Updates for caracal tox.ini\n\nUpdate the tox.ini file(s) to use the constraints file from\nzaza-openstack-tests.\n\nChange-Id: I951e0a2b9e44158dd0d2586554d5380c981f46f6\n'}]",2,910097,63d0ffc1570dc3de0e95bcc31ac5dd02528db9d8,11,3,1,20870,,,0,"Updates for caracal tox.ini

Update the tox.ini file(s) to use the constraints file from
zaza-openstack-tests.

Change-Id: I951e0a2b9e44158dd0d2586554d5380c981f46f6
",git fetch https://review.opendev.org/openstack/charm-openstack-dashboard refs/changes/97/910097/1 && git format-patch -1 --stdout FETCH_HEAD,"['build-requirements.txt', 'tox.ini']",2,63d0ffc1570dc3de0e95bcc31ac5dd02528db9d8,caracal-updates,deps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} -r{toxinidir}/test-requirements.txtdeps =deps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} -r{toxinidir}/requirements.txtdeps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} -r{toxinidir}/requirements.txtdeps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} -r{toxinidir}/requirements.txt,deps = -r{toxinidir}/test-requirements.txtdeps = -r{toxinidir}/build-requirements.txtdeps = -r{toxinidir}/requirements.txtdeps = -r{toxinidir}/requirements.txtdeps = -r{toxinidir}/requirements.txt,13,12
openstack%2Ftacker~911248,openstack/tacker,unmaintained/xena,I1508bba7fda0a5d29e251dd7d65e9bf8726c5bd0,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:38:32.000000000,2024-03-05 19:11:04.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:38:32.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/tacker/commit/e4f1968331282be3b761e477683dbdfa42c9bbc0', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I1508bba7fda0a5d29e251dd7d65e9bf8726c5bd0\n'}]",0,911248,e4f1968331282be3b761e477683dbdfa42c9bbc0,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I1508bba7fda0a5d29e251dd7d65e9bf8726c5bd0
",git fetch https://review.opendev.org/openstack/tacker refs/changes/48/911248/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,e4f1968331282be3b761e477683dbdfa42c9bbc0,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fzaqar~809568,openstack/zaqar,stable/wallaby,Id4c6a44417276950bd1fb92c2abc7c943960818a,Run TripleO jobs on CentOS8 instead of CentOS7,ABANDONED,2021-09-17 12:33:58.000000000,2024-03-05 19:10:04.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-09-17 12:33:58.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/zaqar/commit/9e1cfc9ebb3522d8ee6140fa5ba705af97fe3a24', 'message': 'Run TripleO jobs on CentOS8 instead of CentOS7\n\nAs we are cleaning up the c7 jobs and obselete featuresets [1].\nThis change replaces usage of CentOS7 in TripleO jobs by CentOS8.\n\n[1]: https://review.opendev.org/q/topic:%22cleanup_featuresets%22+(status:open%20OR%20status:merged)\n\nChange-Id: Id4c6a44417276950bd1fb92c2abc7c943960818a\n'}]",0,809568,9e1cfc9ebb3522d8ee6140fa5ba705af97fe3a24,3,1,1,20182,,,0,"Run TripleO jobs on CentOS8 instead of CentOS7

As we are cleaning up the c7 jobs and obselete featuresets [1].
This change replaces usage of CentOS7 in TripleO jobs by CentOS8.

[1]: https://review.opendev.org/q/topic:%22cleanup_featuresets%22+(status:open%20OR%20status:merged)

Change-Id: Id4c6a44417276950bd1fb92c2abc7c943960818a
",git fetch https://review.opendev.org/openstack/zaqar refs/changes/68/809568/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,9e1cfc9ebb3522d8ee6140fa5ba705af97fe3a24,c7-to-c8-stable/xena-stable/wallaby, - tripleo-ci-centos-8-scenario002-standalone, - tripleo-ci-centos-7-scenario002-standalone,1,1
openstack%2Fzaqar~835495,openstack/zaqar,stable/wallaby,I9cbe9f03c32e4f42822def727aa2871d502641f4,Update json module to jsonutils,ABANDONED,2022-03-29 06:51:58.000000000,2024-03-05 19:10:01.000000000,,"[{'_account_id': 8846}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-03-29 06:51:58.000000000', 'files': ['zaqar/bench/producer.py', 'zaqar/notification/tasks/webhook.py', 'zaqar/tests/functional/http.py', 'zaqar/tests/unit/transport/websocket/v2/test_subscriptions.py', 'zaqar/transport/wsgi/v1_1/homedoc.py', 'zaqar/tests/unit/transport/wsgi/v1_1/test_claims.py', 'zaqar/tests/unit/transport/wsgi/v2_0/test_claims.py', 'zaqar/transport/websocket/protocol.py', 'zaqar/tests/unit/transport/websocket/v2/test_auth.py', 'zaqar/tests/functional/websocket/test_queues.py', 'samples/html/confirmation_web_service_sample.py', 'zaqar/tests/unit/transport/websocket/v2/test_messages.py', 'zaqar/storage/utils.py', 'samples/zaqar/sendmail.py', 'zaqar/tests/unit/transport/wsgi/v2_0/test_validation.py', 'zaqar/tests/unit/transport/wsgi/v1/test_validation.py', 'zaqar/tests/functional/wsgi/v1/test_messages.py', 'zaqar/tests/functional/wsgi/v1_1/test_messages.py', 'zaqar/tests/unit/notification/test_notifier.py', 'zaqar/bench/conductor.py', 'zaqar/tests/unit/transport/wsgi/test_utils.py', 'zaqar/transport/utils.py', 'zaqar/tests/unit/transport/websocket/utils.py', 'zaqar/tests/unit/transport/websocket/v2/test_queue_lifecycle.py', 'zaqar/transport/websocket/factory.py', 'zaqar/tests/unit/storage/base.py', 'zaqar/tests/unit/transport/websocket/v2/test_claims.py', 'zaqar/transport/wsgi/v2_0/homedoc.py', 'zaqar/notification/tasks/mailto.py', 'zaqar/transport/wsgi/v1_0/homedoc.py', 'zaqar/tests/unit/transport/wsgi/v1_1/test_validation.py', 'zaqar/storage/swift/claims.py', 'samples/zaqar/subscriber_service_sample.py', 'zaqar/tests/unit/transport/websocket/test_protocol.py'], 'web_link': 'https://opendev.org/openstack/zaqar/commit/d1e42af93dd76cdd8bfe8634abd8752644cdf186', 'message': 'Update json module to jsonutils\n\noslo project provide jsonutils, the others project use it\nthis PS to update the json moudule to oslo jsonutils.\n\nCloses-bug: #1966401\nChange-Id: I9cbe9f03c32e4f42822def727aa2871d502641f4\n(cherry picked from commit 2abe46ae21fe0fa83587328ffb2f44075d3a44fc)\n'}]",58,835495,d1e42af93dd76cdd8bfe8634abd8752644cdf186,4,2,1,24849,,,0,"Update json module to jsonutils

oslo project provide jsonutils, the others project use it
this PS to update the json moudule to oslo jsonutils.

Closes-bug: #1966401
Change-Id: I9cbe9f03c32e4f42822def727aa2871d502641f4
(cherry picked from commit 2abe46ae21fe0fa83587328ffb2f44075d3a44fc)
",git fetch https://review.opendev.org/openstack/zaqar refs/changes/95/835495/1 && git format-patch -1 --stdout FETCH_HEAD,"['zaqar/bench/producer.py', 'zaqar/notification/tasks/webhook.py', 'zaqar/tests/functional/http.py', 'zaqar/tests/unit/transport/websocket/v2/test_subscriptions.py', 'zaqar/transport/wsgi/v1_1/homedoc.py', 'zaqar/tests/unit/transport/wsgi/v1_1/test_claims.py', 'zaqar/tests/unit/transport/wsgi/v2_0/test_claims.py', 'zaqar/transport/websocket/protocol.py', 'zaqar/tests/unit/transport/websocket/v2/test_auth.py', 'zaqar/tests/functional/websocket/test_queues.py', 'samples/html/confirmation_web_service_sample.py', 'zaqar/tests/unit/transport/websocket/v2/test_messages.py', 'zaqar/storage/utils.py', 'samples/zaqar/sendmail.py', 'zaqar/tests/unit/transport/wsgi/v2_0/test_validation.py', 'zaqar/tests/unit/transport/wsgi/v1/test_validation.py', 'zaqar/tests/functional/wsgi/v1/test_messages.py', 'zaqar/tests/functional/wsgi/v1_1/test_messages.py', 'zaqar/tests/unit/notification/test_notifier.py', 'zaqar/bench/conductor.py', 'zaqar/tests/unit/transport/wsgi/test_utils.py', 'zaqar/transport/utils.py', 'zaqar/tests/unit/transport/websocket/utils.py', 'zaqar/tests/unit/transport/websocket/v2/test_queue_lifecycle.py', 'zaqar/transport/websocket/factory.py', 'zaqar/tests/unit/storage/base.py', 'zaqar/tests/unit/transport/websocket/v2/test_claims.py', 'zaqar/transport/wsgi/v2_0/homedoc.py', 'zaqar/notification/tasks/mailto.py', 'zaqar/transport/wsgi/v1_0/homedoc.py', 'zaqar/tests/unit/transport/wsgi/v1_1/test_validation.py', 'zaqar/storage/swift/claims.py', 'samples/zaqar/subscriber_service_sample.py', 'zaqar/tests/unit/transport/websocket/test_protocol.py']",34,d1e42af93dd76cdd8bfe8634abd8752644cdf186,bug/1966401-stable/wallaby,from oslo_serialization import jsonutils resp = jsonutils.loads(send_mock.call_args[0][0]) resp = jsonutils.loads(send_mock.call_args[0][0]),import json resp = json.loads(send_mock.call_args[0][0].decode()) resp = json.loads(send_mock.call_args[0][0].decode()) if not in_binary: arg = arg.decode(),273,246
openstack%2Fzaqar~892307,openstack/zaqar,stable/wallaby,I16436aa19da2cf53951c9ad27bca14033194651a,Use processutils to fix TypeError in subprocess,ABANDONED,2023-08-22 13:12:00.000000000,2024-03-05 19:09:53.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-08-22 13:12:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/zaqar/commit/7843f590765bf63189bd58b6be1912254282401f', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}, {'number': 2, 'created': '2023-08-22 14:28:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/zaqar/commit/93b5bab6871fe39e5b4a2a9f2601b3a38f92ef18', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}, {'number': 3, 'created': '2023-08-23 03:07:36.000000000', 'files': ['requirements.txt', 'zaqar/tests/unit/notification/test_notifier.py', 'zaqar/notification/tasks/mailto.py', 'lower-constraints.txt'], 'web_link': 'https://opendev.org/openstack/zaqar/commit/08a8e625ff838ffbcf152c1a9120f2a9b0b7d896', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}]",0,892307,08a8e625ff838ffbcf152c1a9120f2a9b0b7d896,6,1,3,21757,,,0,"Use processutils to fix TypeError in subprocess

Calling processutils.execute() other than subprocess to
fix bytes-like and str issue in python3.

Closes-bug: #2029392
Change-Id: I16436aa19da2cf53951c9ad27bca14033194651a
(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)
",git fetch https://review.opendev.org/openstack/zaqar refs/changes/07/892307/1 && git format-patch -1 --stdout FETCH_HEAD,"['requirements.txt', 'zaqar/tests/unit/notification/test_notifier.py', 'zaqar/notification/tasks/mailto.py']",3,7843f590765bf63189bd58b6be1912254282401f,bug/2029392-stable/2023.1-stable/zed-stable/yoga-stable/xena-stable/wallaby,"from oslo_concurrency import processutils cmd = conf_n.smtp_command.split(' ') processutils.execute(*cmd, process_input=msg.as_string())","import subprocess p = subprocess.Popen(conf_n.smtp_command.split(' '), stdin=subprocess.PIPE) p.communicate(msg.as_string())",15,10
openstack%2Fpython-zaqarclient~780222,openstack/python-zaqarclient,stable/wallaby,I1ac89e8946e36a563adaa0daaa8172b13875fac5,Update .gitreview for stable/wallaby,ABANDONED,2021-03-12 11:07:57.000000000,2024-03-05 19:09:36.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-03-12 11:07:57.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/33719d777eb65d19eca7886e9e62f75db51173c1', 'message': 'Update .gitreview for stable/wallaby\n\nChange-Id: I1ac89e8946e36a563adaa0daaa8172b13875fac5\n'}]",0,780222,33719d777eb65d19eca7886e9e62f75db51173c1,3,1,1,22816,,,0,"Update .gitreview for stable/wallaby

Change-Id: I1ac89e8946e36a563adaa0daaa8172b13875fac5
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/22/780222/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,33719d777eb65d19eca7886e9e62f75db51173c1,create-wallaby,defaultbranch=stable/wallaby,,1,0
openstack%2Fpython-novaclient~911277,openstack/python-novaclient,unmaintained/victoria,Ibe1a965dbcfb04d6e53f89b010790d5c045b50d1,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:48:45.000000000,2024-03-05 19:09:30.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:48:45.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-novaclient/commit/6052669b40a326fcb630aa140b353cc4d812c491', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: Ibe1a965dbcfb04d6e53f89b010790d5c045b50d1\n'}]",0,911277,6052669b40a326fcb630aa140b353cc4d812c491,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: Ibe1a965dbcfb04d6e53f89b010790d5c045b50d1
",git fetch https://review.opendev.org/openstack/python-novaclient refs/changes/77/911277/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,6052669b40a326fcb630aa140b353cc4d812c491,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fpython-zaqarclient~780223,openstack/python-zaqarclient,stable/wallaby,Ic6cb5dd2d98e8ccc61f6e5aac8f46366741d0315,Update TOX_CONSTRAINTS_FILE for stable/wallaby,ABANDONED,2021-03-12 11:08:00.000000000,2024-03-05 19:09:29.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-03-12 11:08:00.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/8bf8ec13b71271fd3cc66f4c0d940eecde9dce4d', 'message': 'Update TOX_CONSTRAINTS_FILE for stable/wallaby\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as stable/wallaby branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: Ic6cb5dd2d98e8ccc61f6e5aac8f46366741d0315\n'}]",0,780223,8bf8ec13b71271fd3cc66f4c0d940eecde9dce4d,3,1,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for stable/wallaby

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as stable/wallaby branch, tests will
continue to use the upper-constraints list on master.

Change-Id: Ic6cb5dd2d98e8ccc61f6e5aac8f46366741d0315
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/23/780223/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,8bf8ec13b71271fd3cc66f4c0d940eecde9dce4d,create-wallaby, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/wallaby}, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master},1,1
openstack%2Foctavia-dashboard~911299,openstack/octavia-dashboard,unmaintained/victoria,I6af300249725ec8874fba0b830c0916034396178,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:56:53.000000000,2024-03-05 19:09:26.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:56:53.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/octavia-dashboard/commit/de058bea02e3ce1c33b471d9b1f7c7dad62e0c10', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I6af300249725ec8874fba0b830c0916034396178\n'}]",0,911299,de058bea02e3ce1c33b471d9b1f7c7dad62e0c10,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I6af300249725ec8874fba0b830c0916034396178
",git fetch https://review.opendev.org/openstack/octavia-dashboard refs/changes/99/911299/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,de058bea02e3ce1c33b471d9b1f7c7dad62e0c10,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fpython-novaclient~911287,openstack/python-novaclient,unmaintained/wallaby,I887f8e00ba6b1deab612718858c0c04ead654ff1,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:50:43.000000000,2024-03-05 19:09:26.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:50:43.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-novaclient/commit/9d5dd2ba78626e07609ab7a1e087bcdadd1083f9', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I887f8e00ba6b1deab612718858c0c04ead654ff1\n'}]",0,911287,9d5dd2ba78626e07609ab7a1e087bcdadd1083f9,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I887f8e00ba6b1deab612718858c0c04ead654ff1
",git fetch https://review.opendev.org/openstack/python-novaclient refs/changes/87/911287/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,9d5dd2ba78626e07609ab7a1e087bcdadd1083f9,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fpython-zaqarclient~855861,openstack/python-zaqarclient,stable/wallaby,I7b6fc7af500f77a3e38ba98ef5960913ec60131f,Stable-only: Fix missing updates for stable branch creation,ABANDONED,2022-09-05 09:07:29.000000000,2024-03-05 19:09:21.000000000,,"[{'_account_id': 9816}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-09-05 09:07:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/2b81e09b9a0b49c9153346a8186cd995b3d0ccf8', 'message': 'Stable-only: Fix missing updates for stable branch creation\n\nThis change fixes the following items still outdated in stable\nbranches.\n - .gitreview\n - TOX_CONSTRAINTS_FILE\n - supported python runtimes\n - job template\n\nThis also removes the broken lower constraints job.\n\nChange-Id: I7b6fc7af500f77a3e38ba98ef5960913ec60131f\n'}, {'number': 2, 'created': '2022-09-05 09:48:05.000000000', 'files': ['.gitreview', '.zuul.yaml', 'setup.cfg', 'tox.ini'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/7ab6274befaa6626bf028be22e754a581b4b28d2', 'message': 'Stable-only: Fix missing updates for stable branch creation\n\nThis change fixes the following items still outdated in stable\nbranches.\n - .gitreview\n - TOX_CONSTRAINTS_FILE\n - supported python runtimes\n - job template\n\nThis also removes the broken lower constraints job.\n\nChange-Id: I7b6fc7af500f77a3e38ba98ef5960913ec60131f\n'}]",1,855861,7ab6274befaa6626bf028be22e754a581b4b28d2,8,2,2,9816,,,0,"Stable-only: Fix missing updates for stable branch creation

This change fixes the following items still outdated in stable
branches.
 - .gitreview
 - TOX_CONSTRAINTS_FILE
 - supported python runtimes
 - job template

This also removes the broken lower constraints job.

Change-Id: I7b6fc7af500f77a3e38ba98ef5960913ec60131f
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/61/855861/1 && git format-patch -1 --stdout FETCH_HEAD,"['.gitreview', '.zuul.yaml', 'setup.cfg', 'tox.ini']",4,2b81e09b9a0b49c9153346a8186cd995b3d0ccf8,, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/wallaby}, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master},4,2
openstack%2Fos-vif~887017,openstack/os-vif,stable/wallaby,I1acd74efc100c6f949b5c72525c455aebfa2c50e,Move mtu update request into ovsdb transaction,ABANDONED,2023-06-27 05:39:02.000000000,2024-03-05 19:08:58.000000000,,"[{'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-06-27 05:39:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/e33db6cc431b71f24bdccd7a94ac1abb17737ec6', 'message': 'Move mtu update request into ovsdb transaction\n\nos-vif currently set the requested mtu as part of separate request\nto the port add command. As a result the port is initially created\nwith mbufer pool for the jumboframe size, which results in an\nerror in openvswitch-vswitch logs.\n\nThis change moves the mtu update request into ovsdb transaction.\n\nConflicts:\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n\nNOTE(auniyal):\nupdated update_device_mtu to accept transaction var to set mtu request\n\nCloses-Bug: #1959586\nChange-Id: I1acd74efc100c6f949b5c72525c455aebfa2c50e\n(cherry picked from commit 2f55e9ea06f975240e3ff5aff21195ec6af76193)\n(cherry picked from commit 51b7f486318d1b2d61f2079b615cc406dca10188)\n(cherry picked from commit cf9c15d034b534e50b456a8a2f6b6a4d5b89a24b)\n(cherry picked from commit 8d14a1c6a9eeaef0fdae9ea1210d3310a3498d78)\n'}, {'number': 2, 'created': '2023-06-27 18:39:12.000000000', 'files': ['vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py', 'vif_plug_ovs/ovsdb/ovsdb_lib.py', 'vif_plug_ovs/tests/unit/ovsdb/test_ovsdb_lib.py'], 'web_link': 'https://opendev.org/openstack/os-vif/commit/f816b9909364fa74bb965d1cc5a67c2283eb04c4', 'message': 'Move mtu update request into ovsdb transaction\n\nos-vif currently set the requested mtu as part of separate request\nto the port add command. As a result the port is initially created\nwith mbufer pool for the jumboframe size, which results in an\nerror in openvswitch-vswitch logs.\n\nThis change moves the mtu update request into ovsdb transaction.\n\nConflicts:\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n\nNOTE(auniyal):\nupdated update_device_mtu to accept transaction var to set mtu request\n\nCloses-Bug: #1959586\nChange-Id: I1acd74efc100c6f949b5c72525c455aebfa2c50e\n(cherry picked from commit 2f55e9ea06f975240e3ff5aff21195ec6af76193)\n(cherry picked from commit 51b7f486318d1b2d61f2079b615cc406dca10188)\n(cherry picked from commit cf9c15d034b534e50b456a8a2f6b6a4d5b89a24b)\n(cherry picked from commit 8d14a1c6a9eeaef0fdae9ea1210d3310a3498d78)\n'}]",1,887017,f816b9909364fa74bb965d1cc5a67c2283eb04c4,6,2,2,34860,,,0,"Move mtu update request into ovsdb transaction

os-vif currently set the requested mtu as part of separate request
to the port add command. As a result the port is initially created
with mbufer pool for the jumboframe size, which results in an
error in openvswitch-vswitch logs.

This change moves the mtu update request into ovsdb transaction.

Conflicts:
      vif_plug_ovs/ovsdb/ovsdb_lib.py

NOTE(auniyal):
updated update_device_mtu to accept transaction var to set mtu request

Closes-Bug: #1959586
Change-Id: I1acd74efc100c6f949b5c72525c455aebfa2c50e
(cherry picked from commit 2f55e9ea06f975240e3ff5aff21195ec6af76193)
(cherry picked from commit 51b7f486318d1b2d61f2079b615cc406dca10188)
(cherry picked from commit cf9c15d034b534e50b456a8a2f6b6a4d5b89a24b)
(cherry picked from commit 8d14a1c6a9eeaef0fdae9ea1210d3310a3498d78)
",git fetch https://review.opendev.org/openstack/os-vif refs/changes/17/887017/1 && git format-patch -1 --stdout FETCH_HEAD,"['vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py', 'vif_plug_ovs/ovsdb/ovsdb_lib.py', 'vif_plug_ovs/tests/unit/ovsdb/test_ovsdb_lib.py']",3,e33db6cc431b71f24bdccd7a94ac1abb17737ec6,bug/2017868," self.br._set_mtu_request(self.mock_transaction, 'device', 1500) self.br.update_device_mtu( self.mock_transaction, 'device', 1500, 'not_vhost' ) self.br.update_device_mtu( self.mock_transaction, 'device', 1500, 'not_vhost' ) self.br.update_device_mtu( self.mock_transaction, 'device', 1500, constants.OVS_VHOSTUSER_INTERFACE_TYPE ) mock_set_mtu_request.assert_has_calls( [ mock.call( self.mock_transaction, 'device', 1500 ) ] ) self.br.update_device_mtu( self.mock_transaction, 'device', 1500, constants.OVS_VHOSTUSER_INTERFACE_TYPE ) with self.br._ovsdb.transaction() as txn: mock_update_device_mtu.assert_has_calls( [ mock.call( txn, device, mtu, interface_type=interface_type ) ] ) with self.br._ovsdb.transaction() as txn: mock_update_device_mtu.assert_has_calls( [ mock.call( txn, device, mtu, interface_type=interface_type ) ] ) with self.br._ovsdb.transaction() as txn: mock_update_device_mtu.assert_has_calls([mock.call( txn, 'device', 1500,"," self.br._set_mtu_request('device', 1500) self.br.update_device_mtu('device', 1500, 'not_vhost') self.br.update_device_mtu('device', 1500, 'not_vhost') self.br.update_device_mtu('device', 1500, constants.OVS_VHOSTUSER_INTERFACE_TYPE) mock_set_mtu_request.assert_has_calls([mock.call('device', 1500)]) self.br.update_device_mtu('device', 1500, constants.OVS_VHOSTUSER_INTERFACE_TYPE) mock_update_device_mtu.assert_has_calls( [mock.call(device, mtu, interface_type=interface_type)]) mock_update_device_mtu.assert_has_calls( [mock.call(device, mtu, interface_type=interface_type)]) mock_update_device_mtu.assert_has_calls( [mock.call( 'device', 1500,",62,24
openstack%2Fos-vif~886778,openstack/os-vif,stable/wallaby,Id9ef7074634a0f23d67a4401fa8fca363b51bb43,set default qos policy,ABANDONED,2023-06-22 18:30:20.000000000,2024-03-05 19:08:50.000000000,,"[{'_account_id': 8864}, {'_account_id': 22348}, {'_account_id': 34860}]","[{'number': 1, 'created': '2023-06-22 18:30:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/7c43ab06bef0e9b030c2cf3b424d7f0a609a1c85', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\n  ovs.py: added _get_qos_type\n  ovsdb_lib.py: updated _set_mtu_request\n\nConflicts Xena to wallaby:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py\n      vif_plug_ovs/tests/unit/test_plugin.py\n\nNOTE(auniyal):\nNo major changes because of conflicts, mostly addition of function in between\ntwo functions created conflicts\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 2af40e77a813e29e3066fe4188220d3a524e19c3)\n(cherry picked from commit 9e5dd4062bff79a945b2ab8bacd93b2f2d3bb088)\n'}, {'number': 2, 'created': '2023-06-23 06:18:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/1e46fe179248d345151aaa6bb52bad02221b8726', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\n  ovs.py: added _get_qos_type\n  ovsdb_lib.py: updated _set_mtu_request\n\nConflicts Xena to wallaby:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py\n      vif_plug_ovs/tests/unit/test_plugin.py\n\nNOTE(auniyal):\nNo major changes because of conflicts, mostly addition of function in between\ntwo functions created conflicts\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 2af40e77a813e29e3066fe4188220d3a524e19c3)\n(cherry picked from commit 9e5dd4062bff79a945b2ab8bacd93b2f2d3bb088)\n'}, {'number': 3, 'created': '2023-06-23 06:23:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/33ee3d9a7199403cd8a129ac7f03e648404530eb', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\n  ovs.py: added _get_qos_type\n  ovsdb_lib.py: updated _set_mtu_request\n\nConflicts Xena to wallaby:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py\n      vif_plug_ovs/tests/unit/test_plugin.py\n\nNOTE(auniyal):\nNo major changes because of conflicts, mostly addition of function in between\ntwo functions created conflicts\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 2af40e77a813e29e3066fe4188220d3a524e19c3)\n(cherry picked from commit 9e5dd4062bff79a945b2ab8bacd93b2f2d3bb088)\n'}, {'number': 4, 'created': '2023-06-27 05:39:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/611cbb26cbfc52e7aad4609e3a6ee9625feb757c', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\n  ovs.py: added _get_qos_type\n  ovsdb_lib.py: updated _set_mtu_request\n\nConflicts: Xena to Wallaby\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py\n      vif_plug_ovs/tests/unit/test_plugin.py\n\nNOTE(auniyal):\novs.py: adds config option default_qos_type\novsdb_lib.py: updated create ovs vif port\ntest_ovsdb_lib.py: added tests for vif port and qos\ntest_plugin.py: did not added tests for plug and unplug port bridge\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 2af40e77a813e29e3066fe4188220d3a524e19c3)\n(cherry picked from commit 9e5dd4062bff79a945b2ab8bacd93b2f2d3bb088)\n'}, {'number': 5, 'created': '2023-06-27 07:30:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/f95b89917765ab9143d1efbe7c7e5be8ce365c96', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\n  ovs.py: added _get_qos_type\n  ovsdb_lib.py: updated _set_mtu_request\n\nConflicts: Xena to Wallaby\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py\n      vif_plug_ovs/tests/unit/test_plugin.py\n\nNOTE(auniyal):\novs.py: adds config option default_qos_type, did not added\nunplug_port_bridge function\novsdb_lib.py: updated create ovs vif port\ntest_ovsdb_lib.py: added tests for vif port and qos\ntest_plugin.py: did not added tests for plug and unplug port bridge\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 2af40e77a813e29e3066fe4188220d3a524e19c3)\n(cherry picked from commit 9e5dd4062bff79a945b2ab8bacd93b2f2d3bb088)\n'}, {'number': 6, 'created': '2023-06-27 10:58:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/os-vif/commit/b17ab29fce429c6ce4e4a6731227cf7882fd788f', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts:\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\n  ovs.py: added _get_qos_type\n  ovsdb_lib.py: updated _set_mtu_request\n\nConflicts: Xena to Wallaby\n\t  vif_plug_ovs/ovs.py\n\t  vif_plug_ovs/ovsdb/ovsdb_lib.py\n\t  vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py\n\t  vif_plug_ovs/tests/unit/test_plugin.py\n\nNOTE(auniyal):\novs.py: adds config option default_qos_type\novsdb_lib.py: updated create ovs vif port\ntest_ovsdb_lib.py: added tests for vif port and qos\ntest_plugin.py: did not added tests for plug and unplug port bridge\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 2af40e77a813e29e3066fe4188220d3a524e19c3)\n(cherry picked from commit 9e5dd4062bff79a945b2ab8bacd93b2f2d3bb088)\n'}, {'number': 7, 'created': '2023-06-27 18:39:12.000000000', 'files': ['vif_plug_ovs/tests/functional/test_plugin.py', 'vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py', 'releasenotes/notes/default-qos-policy-for-ovs-26f8806046a59c82.yaml', 'vif_plug_ovs/tests/unit/test_plugin.py', 'vif_plug_ovs/ovs.py', 'vif_plug_ovs/ovsdb/ovsdb_lib.py', 'vif_plug_ovs/tests/functional/base.py', 'vif_plug_ovs/ovsdb/impl_idl.py', 'os_vif/tests/functional/internal/command/ip/test_impl_pyroute2.py'], 'web_link': 'https://opendev.org/openstack/os-vif/commit/b68632a43fd7fa276bc1674da6861462c01127f8', 'message': 'set default qos policy\n\nThis change modifies the os-vif ovs plugin to set a default\ntc qdisc on ovs interface when the host os is not windows\nand the system datapath is used.\n\nThis change fixes a ""silent"" bug in the functional test code due\nto a change in an ovsdbapp function signiture to accpet a new paramater.\n\nConflicts: Zed to Yoga\n      vif_plug_ovs/ovs.py\n      vif_plug_ovs/ovsdb/ovsdb_lib.py\n      vif_plug_ovs/tests/functional/base.py\n      vif_plug_ovs/tests/functional/test_plugin.py\n\nNOTE(auniyal):\novs.py: added _get_qos_type config option\novsdb_lib.py: updated delete_ovs_vif_port\nadded funtional test module test_plugin\n\nConflicts: Xena to Wallaby\n\t  vif_plug_ovs/ovs.py\n\t  vif_plug_ovs/ovsdb/ovsdb_lib.py\n\t  vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py\n\t  vif_plug_ovs/tests/unit/test_plugin.py\n\nNOTE(auniyal):\novs.py: adds config option default_qos_type\novsdb_lib.py: updated create ovs vif port\ntest_ovsdb_lib.py: added tests for vif port and qos\n\nCloses-Bug: #2017868\nChange-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43\n(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)\n(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)\n(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)\n(cherry picked from commit 57df00f746c9faf5416b02160fdfa277bc4ca388)\n(cherry picked from commit 4490c4d97f397b99f1804b7dac564b8626d132a2)\n'}]",6,886778,b68632a43fd7fa276bc1674da6861462c01127f8,18,3,7,34860,,,0,"set default qos policy

This change modifies the os-vif ovs plugin to set a default
tc qdisc on ovs interface when the host os is not windows
and the system datapath is used.

This change fixes a ""silent"" bug in the functional test code due
to a change in an ovsdbapp function signiture to accpet a new paramater.

Conflicts: Zed to Yoga
      vif_plug_ovs/ovs.py
      vif_plug_ovs/ovsdb/ovsdb_lib.py
      vif_plug_ovs/tests/functional/base.py
      vif_plug_ovs/tests/functional/test_plugin.py

NOTE(auniyal):
ovs.py: added _get_qos_type config option
ovsdb_lib.py: updated delete_ovs_vif_port
added funtional test module test_plugin

Conflicts: Xena to Wallaby
	  vif_plug_ovs/ovs.py
	  vif_plug_ovs/ovsdb/ovsdb_lib.py
	  vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py
	  vif_plug_ovs/tests/unit/test_plugin.py

NOTE(auniyal):
ovs.py: adds config option default_qos_type
ovsdb_lib.py: updated create ovs vif port
test_ovsdb_lib.py: added tests for vif port and qos

Closes-Bug: #2017868
Change-Id: Id9ef7074634a0f23d67a4401fa8fca363b51bb43
(cherry picked from commit c0d101aa81cff200e1db2a0746598b72e26748e4)
(cherry picked from commit 7fff20c973b54aebcadd103ccae563e5d9793508)
(cherry picked from commit 84b68f5586ab70f29e4def020561b33932c82749)
(cherry picked from commit 57df00f746c9faf5416b02160fdfa277bc4ca388)
(cherry picked from commit 4490c4d97f397b99f1804b7dac564b8626d132a2)
",git fetch https://review.opendev.org/openstack/os-vif refs/changes/78/886778/1 && git format-patch -1 --stdout FETCH_HEAD,"['vif_plug_ovs/tests/functional/test_plugin.py', 'vif_plug_ovs/tests/functional/ovsdb/test_ovsdb_lib.py', 'releasenotes/notes/default-qos-policy-for-ovs-26f8806046a59c82.yaml', 'vif_plug_ovs/constants.py', 'vif_plug_ovs/tests/unit/test_plugin.py', 'vif_plug_ovs/ovs.py', 'vif_plug_ovs/ovsdb/ovsdb_lib.py', 'vif_plug_ovs/tests/functional/base.py', 'vif_plug_ovs/ovsdb/impl_idl.py', 'os_vif/tests/functional/internal/command/ip/test_impl_pyroute2.py']",10,7c43ab06bef0e9b030c2cf3b424d7f0a609a1c85,bug/2017868,import time # ensure that the device exists to prevent racing # with other ip commands for _ in range(10): if self.exist_device(device): return time.sleep(0.1),,731,32
openstack%2Foctavia~835780,openstack/octavia,stable/wallaby,I658a4097e120d4f6a49fa1a7945a8d999709d1bd,Switch centos8 jobs to centos-8-stream,ABANDONED,2022-03-30 06:38:55.000000000,2024-03-05 19:08:40.000000000,,"[{'_account_id': 22348}, {'_account_id': 29244}]","[{'number': 1, 'created': '2022-03-30 06:38:55.000000000', 'files': ['zuul.d/projects.yaml', 'zuul.d/jobs.yaml'], 'web_link': 'https://opendev.org/openstack/octavia/commit/455f7276b54682eb4811cc9533d8cf064aaac4f0', 'message': 'Switch centos8 jobs to centos-8-stream\n\nChange-Id: I658a4097e120d4f6a49fa1a7945a8d999709d1bd\n(cherry picked from commit 76617f883e535a77008aac80d5350d0f0c889f8d)\n(cherry picked from commit 1755832a309c84050499d66768060f0ff237e29c)\n'}]",1,835780,455f7276b54682eb4811cc9533d8cf064aaac4f0,4,2,1,29244,,,0,"Switch centos8 jobs to centos-8-stream

Change-Id: I658a4097e120d4f6a49fa1a7945a8d999709d1bd
(cherry picked from commit 76617f883e535a77008aac80d5350d0f0c889f8d)
(cherry picked from commit 1755832a309c84050499d66768060f0ff237e29c)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/80/835780/1 && git format-patch -1 --stdout FETCH_HEAD,"['zuul.d/projects.yaml', 'zuul.d/jobs.yaml']",2,455f7276b54682eb4811cc9533d8cf064aaac4f0,, name: publish-openstack-octavia-amphora-image-centos-8-stream nodeset: centos-8-stream Publish CentOS 8 Stream based amphora image to tarballs.o.o. amphora_os_release: 8-stream name: octavia-amphora-image-build-live-centos-8-stream nodeset: centos-8-stream Builds a CentOS 8 Stream amphora image using diskimage-builder from Git amphora_os_release: 8-stream, name: publish-openstack-octavia-amphora-image-centos8 nodeset: centos-8 Publish CentOS 8 based amphora image to tarballs.o.o. amphora_os_release: 8 name: octavia-amphora-image-build-live-centos8 nodeset: centos-8 Builds a CentOS 8 amphora image using diskimage-builder from Git amphora_os_release: 8,10,10
openstack%2Foctavia~900983,openstack/octavia,stable/wallaby,I3fe9bb584c8522482e9d7289ae8ea1aab205dd4d,Fix incorrect removal of IP rules in the amphora,ABANDONED,2023-11-15 08:13:33.000000000,2024-03-05 19:08:33.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2023-11-15 08:13:33.000000000', 'files': ['octavia/common/constants.py', 'octavia/amphorae/backends/utils/interface.py', 'octavia/tests/unit/amphorae/backends/utils/test_interface.py', 'octavia/tests/unit/amphorae/backends/utils/test_interface_file.py', 'octavia/tests/unit/cmd/test_interface.py', 'octavia/amphorae/backends/agent/api_server/osutils.py', 'octavia/tests/unit/amphorae/backends/agent/api_server/test_osutils.py', 'octavia/amphorae/backends/utils/interface_file.py', 'releasenotes/notes/fix-ip-rules-in-amphora-b74b7b616752c13b.yaml'], 'web_link': 'https://opendev.org/openstack/octavia/commit/9d07f5b0744a8ec2a05d230c800ee2f249c951c9', 'message': ""Fix incorrect removal of IP rules in the amphora\n\nWhen plugging a member, an IP rule was deleted from the amphora. It\ntriggered connectivity issue when a client on subnet1 sends a request to\nthe VIP (on subnet2) while subnet1 is also plugged to the amp as a\nmember subnet.\nThe IP rules should be updated only when plugging/updating the VIP\ninterface. The JSON files that store the configuration of the interfaces\nnow contain the type of the interface ('vip', 'lo' or 'member') and the\nrules update step is skipped when the type is not 'vip'.\n\nCloses-Bug: #2016475\n\nChange-Id: I3fe9bb584c8522482e9d7289ae8ea1aab205dd4d\n(cherry picked from commit b3bf1779929eebdcf66d38cdd386fb5d785698f5)\n""}]",2,900983,9d07f5b0744a8ec2a05d230c800ee2f249c951c9,6,3,1,29244,,,0,"Fix incorrect removal of IP rules in the amphora

When plugging a member, an IP rule was deleted from the amphora. It
triggered connectivity issue when a client on subnet1 sends a request to
the VIP (on subnet2) while subnet1 is also plugged to the amp as a
member subnet.
The IP rules should be updated only when plugging/updating the VIP
interface. The JSON files that store the configuration of the interfaces
now contain the type of the interface ('vip', 'lo' or 'member') and the
rules update step is skipped when the type is not 'vip'.

Closes-Bug: #2016475

Change-Id: I3fe9bb584c8522482e9d7289ae8ea1aab205dd4d
(cherry picked from commit b3bf1779929eebdcf66d38cdd386fb5d785698f5)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/83/900983/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia/common/constants.py', 'octavia/amphorae/backends/utils/interface.py', 'octavia/tests/unit/amphorae/backends/utils/test_interface.py', 'octavia/tests/unit/amphorae/backends/utils/test_interface_file.py', 'octavia/tests/unit/cmd/test_interface.py', 'octavia/amphorae/backends/agent/api_server/osutils.py', 'octavia/tests/unit/amphorae/backends/agent/api_server/test_osutils.py', 'octavia/amphorae/backends/utils/interface_file.py', 'releasenotes/notes/fix-ip-rules-in-amphora-b74b7b616752c13b.yaml']",9,9d07f5b0744a8ec2a05d230c800ee2f249c951c9,,--- fixes: - | Fixed a bug that could have made the VIP port unreachable because of the removal of some IP rules in the Amphora. It could have been triggered only when sending a request from a subnet that is not the VIP subnet but that is plugged as a member subnet. upgrade: - | A patch that fixes an issue making the VIP port unreachable because of missing IP rules requires an update of the Amphora image. ,,117,12
openstack%2Foctavia~905486,openstack/octavia,stable/wallaby,I5698558857cbaa585f8a3d7ac37aaa31c0189d46,Fix health-monitors with ALPN members,ABANDONED,2024-01-12 15:54:49.000000000,2024-03-05 19:08:25.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2024-01-12 15:54:49.000000000', 'files': ['releasenotes/notes/fix-http-https-healthmonitor-with-alpn-pools-82249b2b9a025068.yaml', 'octavia/tests/unit/common/jinja/haproxy/combined_listeners/test_jinja_cfg.py', 'octavia/common/jinja/haproxy/combined_listeners/templates/macros.j2'], 'web_link': 'https://opendev.org/openstack/octavia/commit/8234ef7de7e636331e4599158492192b62c8c6c1', 'message': 'Fix health-monitors with ALPN members\n\nUsing HTTP or HTTPS health-monitor on a ALPN pool failed with SSL\nerrors.\nhaproxy doc mentions that when using ""check"" with ALPN servers, the\ncheck-alpn option must be enabled.\n\n[0] https://docs.haproxy.org/2.8/configuration.html#5.2-check\n\nCloses-Bug: #2043812\n\nChange-Id: I5698558857cbaa585f8a3d7ac37aaa31c0189d46\n(cherry picked from commit c28eb84dcafcb066746b04e9e6ef7a51decb68cd)\n(cherry picked from commit 7c468ca4c4d9ea89ba208e8287538ed4d5d1dee3)\n(cherry picked from commit 121e0533d0cdcf07327ef4894cb32400f5bdde78)\n(cherry picked from commit 778859a297299c39d05f69538b50e00c29a7d4d4)\n(cherry picked from commit 937bb928aa61e51ce38743921a1434770f4d844b)\n(cherry picked from commit b9f57923c81aba0cb187ac21c363d8405f95fad0)\n'}]",0,905486,8234ef7de7e636331e4599158492192b62c8c6c1,5,3,1,29244,,,0,"Fix health-monitors with ALPN members

Using HTTP or HTTPS health-monitor on a ALPN pool failed with SSL
errors.
haproxy doc mentions that when using ""check"" with ALPN servers, the
check-alpn option must be enabled.

[0] https://docs.haproxy.org/2.8/configuration.html#5.2-check

Closes-Bug: #2043812

Change-Id: I5698558857cbaa585f8a3d7ac37aaa31c0189d46
(cherry picked from commit c28eb84dcafcb066746b04e9e6ef7a51decb68cd)
(cherry picked from commit 7c468ca4c4d9ea89ba208e8287538ed4d5d1dee3)
(cherry picked from commit 121e0533d0cdcf07327ef4894cb32400f5bdde78)
(cherry picked from commit 778859a297299c39d05f69538b50e00c29a7d4d4)
(cherry picked from commit 937bb928aa61e51ce38743921a1434770f4d844b)
(cherry picked from commit b9f57923c81aba0cb187ac21c363d8405f95fad0)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/86/905486/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/fix-http-https-healthmonitor-with-alpn-pools-82249b2b9a025068.yaml', 'octavia/tests/unit/common/jinja/haproxy/combined_listeners/test_jinja_cfg.py', 'octavia/common/jinja/haproxy/combined_listeners/templates/macros.j2']",3,8234ef7de7e636331e4599158492192b62c8c6c1,," {% if pool.alpn_protocols is defined %} {% set alpn_opt = "" check-alpn %s""|format(pool.alpn_protocols) %} {% else %} {% set alpn_opt = """" %} {% endif %} {% set hm_opt = "" check%s%s inter %ds fall %d rise %d%s%s""|format( monitor_ssl_opt, alpn_opt, pool.health_monitor.delay,"," {% set hm_opt = "" check%s inter %ds fall %d rise %d%s%s""|format( monitor_ssl_opt, pool.health_monitor.delay,",30,18
openstack%2Foctavia~905487,openstack/octavia,stable/wallaby,Ia681679e24437832e1e23e7399e1a34da8ab54c5,Fix TLS-HELLO healthmonitors in the amphora-driver,ABANDONED,2024-01-12 15:54:49.000000000,2024-03-05 19:08:17.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2024-01-12 15:54:49.000000000', 'files': ['octavia/tests/unit/common/jinja/haproxy/combined_listeners/test_jinja_cfg.py', 'releasenotes/notes/fix-tls-hello-healthmonitors-a4b98a80f6de8394.yaml', 'octavia/common/jinja/haproxy/combined_listeners/templates/macros.j2'], 'web_link': 'https://opendev.org/openstack/octavia/commit/a6014820abca8bc7fe072813a2d4aa76d777ab0b', 'message': 'Fix TLS-HELLO healthmonitors in the amphora-driver\n\nTLS-HELLO HMs were based on the ssl-hello-chk option of haproxy, which\nuses SSLv3 messages. SSLv3 is deprecated and most distributions have\ndisabled it, remove this option and rely only on the default checker\nwhen ssl is enabled [0]\n\n[0] https://docs.haproxy.org/2.8/configuration.html#5.2-check\n\nRelated-Bug: #2043812\n\nChange-Id: Ia681679e24437832e1e23e7399e1a34da8ab54c5\n(cherry picked from commit 8e7c2737b6c6c9ca08f9fce0867955c4c3740332)\n(cherry picked from commit 0f9bc3b8c68bd818bc5307186f7e0e78761fcb65)\n(cherry picked from commit 353cafd8d4663357d4ded57a87493d1ad00d2410)\n(cherry picked from commit beb6453413d1ac533283a1837bb093bfa924276f)\n(cherry picked from commit 714ef1c802d7d9ad16eb0ea726f6deb7575c6f44)\n(cherry picked from commit d0bb5a80729f9bff59dacf294d5ebcdc6d4f68e1)\n'}]",0,905487,a6014820abca8bc7fe072813a2d4aa76d777ab0b,5,3,1,29244,,,0,"Fix TLS-HELLO healthmonitors in the amphora-driver

TLS-HELLO HMs were based on the ssl-hello-chk option of haproxy, which
uses SSLv3 messages. SSLv3 is deprecated and most distributions have
disabled it, remove this option and rely only on the default checker
when ssl is enabled [0]

[0] https://docs.haproxy.org/2.8/configuration.html#5.2-check

Related-Bug: #2043812

Change-Id: Ia681679e24437832e1e23e7399e1a34da8ab54c5
(cherry picked from commit 8e7c2737b6c6c9ca08f9fce0867955c4c3740332)
(cherry picked from commit 0f9bc3b8c68bd818bc5307186f7e0e78761fcb65)
(cherry picked from commit 353cafd8d4663357d4ded57a87493d1ad00d2410)
(cherry picked from commit beb6453413d1ac533283a1837bb093bfa924276f)
(cherry picked from commit 714ef1c802d7d9ad16eb0ea726f6deb7575c6f44)
(cherry picked from commit d0bb5a80729f9bff59dacf294d5ebcdc6d4f68e1)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/87/905487/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia/tests/unit/common/jinja/haproxy/combined_listeners/test_jinja_cfg.py', 'releasenotes/notes/fix-tls-hello-healthmonitors-a4b98a80f6de8394.yaml', 'octavia/common/jinja/haproxy/combined_listeners/templates/macros.j2']",3,a6014820abca8bc7fe072813a2d4aa76d777ab0b,,, {% if pool.health_monitor.type == constants.HEALTH_MONITOR_TLS_HELLO %} option ssl-hello-chk {% endif %},4,4
openstack%2Foctavia~880446,openstack/octavia,stable/wallaby,Ic08ad89b4e07e0fe8a80b3e5db6d50276aafff82,Rename Context to RequestContext,ABANDONED,2023-04-14 06:01:57.000000000,2024-03-05 19:08:08.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2023-04-14 06:01:57.000000000', 'files': ['octavia/tests/functional/api/v2/test_health_monitor.py', 'octavia/common/context.py', 'octavia/tests/functional/api/v2/test_quotas.py', 'octavia/tests/functional/api/v2/test_amphora.py', 'octavia/tests/functional/api/v2/test_flavors.py', 'octavia/tests/functional/api/v2/test_l7policy.py', 'octavia/tests/functional/api/v2/test_flavor_profiles.py', 'octavia/tests/functional/api/v2/test_pool.py', 'octavia/tests/functional/api/v2/test_availability_zones.py', 'octavia/tests/unit/common/test_policy.py', 'octavia/tests/functional/api/v2/test_l7rule.py', 'octavia/tests/functional/api/v2/test_member.py', 'octavia/api/common/hooks.py', 'octavia/tests/functional/api/v2/test_load_balancer.py', 'octavia/tests/functional/api/v2/test_listener.py', 'octavia/tests/functional/api/v2/test_provider.py', 'octavia/tests/functional/api/v2/test_availability_zone_profiles.py'], 'web_link': 'https://opendev.org/openstack/octavia/commit/a1e909db4e94c5422244f7ab1a7bf3545a7e9e37', 'message': 'Rename Context to RequestContext\n\nIf castellan is used, it requires one of the following context types to\nbe provided during init: KeystonePassword, KeystoneToken or\nRequestContext [1]\n\nAlso it makes sense to be consistent across projects and with\noslo_context regarding context class naming.\n\n[1] https://opendev.org/openstack/castellan/src/commit/86712360f345866e108e12eda1075101635dd1ec/castellan/key_manager/barbican_key_manager.py#L208-L210\n\nConflicts:\n\toctavia/controller/worker/v2/tasks/notification_tasks.py\n\toctavia/tests/unit/controller/worker/v2/tasks/test_notification_tasks.py\n\toctavia/tests/unit/common/test_policy.py\n\nChange-Id: Ic08ad89b4e07e0fe8a80b3e5db6d50276aafff82\n(cherry picked from commit 62e1d871cbbbeefc4919c0c12a3cfff606c53557)\n(cherry picked from commit 48b9d42a571659240dfa737d99781c9713edaf0b)\n(cherry picked from commit 111194847f0c0bc2fe672513485ba9ce70767db4)\n(cherry picked from commit 15b01f4c3d94d00017bab87035dc90d42922b900)\n'}]",0,880446,a1e909db4e94c5422244f7ab1a7bf3545a7e9e37,5,3,1,29244,,,0,"Rename Context to RequestContext

If castellan is used, it requires one of the following context types to
be provided during init: KeystonePassword, KeystoneToken or
RequestContext [1]

Also it makes sense to be consistent across projects and with
oslo_context regarding context class naming.

[1] https://opendev.org/openstack/castellan/src/commit/86712360f345866e108e12eda1075101635dd1ec/castellan/key_manager/barbican_key_manager.py#L208-L210

Conflicts:
	octavia/controller/worker/v2/tasks/notification_tasks.py
	octavia/tests/unit/controller/worker/v2/tasks/test_notification_tasks.py
	octavia/tests/unit/common/test_policy.py

Change-Id: Ic08ad89b4e07e0fe8a80b3e5db6d50276aafff82
(cherry picked from commit 62e1d871cbbbeefc4919c0c12a3cfff606c53557)
(cherry picked from commit 48b9d42a571659240dfa737d99781c9713edaf0b)
(cherry picked from commit 111194847f0c0bc2fe672513485ba9ce70767db4)
(cherry picked from commit 15b01f4c3d94d00017bab87035dc90d42922b900)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/46/880446/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia/tests/functional/api/v2/test_health_monitor.py', 'octavia/common/context.py', 'octavia/tests/functional/api/v2/test_quotas.py', 'octavia/tests/functional/api/v2/test_amphora.py', 'octavia/tests/functional/api/v2/test_flavors.py', 'octavia/tests/functional/api/v2/test_l7policy.py', 'octavia/tests/functional/api/v2/test_flavor_profiles.py', 'octavia/tests/functional/api/v2/test_pool.py', 'octavia/tests/functional/api/v2/test_availability_zones.py', 'octavia/tests/unit/common/test_policy.py', 'octavia/tests/functional/api/v2/test_l7rule.py', 'octavia/tests/functional/api/v2/test_member.py', 'octavia/api/common/hooks.py', 'octavia/tests/functional/api/v2/test_load_balancer.py', 'octavia/tests/functional/api/v2/test_listener.py', 'octavia/tests/functional/api/v2/test_provider.py', 'octavia/tests/functional/api/v2/test_availability_zone_profiles.py']",17,a1e909db4e94c5422244f7ab1a7bf3545a7e9e37,," with mock.patch.object(octavia.common.context.RequestContext, 'project_id', with mock.patch.object(octavia.common.context.RequestContext, 'project_id', with mock.patch.object(octavia.common.context.RequestContext, 'project_id', with mock.patch.object(octavia.common.context.RequestContext, 'project_id', with mock.patch.object(octavia.common.context.RequestContext, 'project_id',"," with mock.patch.object(octavia.common.context.Context, 'project_id', with mock.patch.object(octavia.common.context.Context, 'project_id', with mock.patch.object(octavia.common.context.Context, 'project_id', with mock.patch.object(octavia.common.context.Context, 'project_id', with mock.patch.object(octavia.common.context.Context, 'project_id',",303,154
openstack%2Foctavia~906264,openstack/octavia,stable/wallaby,Iccae6ec561603653183911146a638272df631e92,Don't update the management port when calculating delta,ABANDONED,2024-01-22 12:47:46.000000000,2024-03-05 19:07:56.000000000,,"[{'_account_id': 22348}, {'_account_id': 27442}, {'_account_id': 34429}]","[{'number': 1, 'created': '2024-01-22 12:47:46.000000000', 'files': ['octavia/tests/unit/controller/worker/v2/tasks/test_network_tasks.py', 'octavia/controller/worker/v2/tasks/network_tasks.py', 'releasenotes/notes/fix-bad-management-port-update-3fa157f74ee8c7b2.yaml'], 'web_link': 'https://opendev.org/openstack/octavia/commit/d520aed5c327b3c4fdbb9212718bf3ef331ef6e1', 'message': ""Don't update the management port when calculating delta\n\nCalculateDelta should be used to get the list of subnets/networks to\nplug (or unplug) into the amphora for the VIP and the members.\nIt should never reconfigure the management port.\n\nStory 2010623\nTask 47564\n\nChange-Id: Iccae6ec561603653183911146a638272df631e92\n(cherry picked from commit 8ccc0d01764c234ce9d3dc0191b5a0952111e2ef)\n(cherry picked from commit 53a38d625d11b08ddfabcb9a3317f003367b1527)\n(cherry picked from commit ec1c9697620e427f5c4954024512bdcc5e361f63)\n""}]",1,906264,d520aed5c327b3c4fdbb9212718bf3ef331ef6e1,6,3,1,29244,,,0,"Don't update the management port when calculating delta

CalculateDelta should be used to get the list of subnets/networks to
plug (or unplug) into the amphora for the VIP and the members.
It should never reconfigure the management port.

Story 2010623
Task 47564

Change-Id: Iccae6ec561603653183911146a638272df631e92
(cherry picked from commit 8ccc0d01764c234ce9d3dc0191b5a0952111e2ef)
(cherry picked from commit 53a38d625d11b08ddfabcb9a3317f003367b1527)
(cherry picked from commit ec1c9697620e427f5c4954024512bdcc5e361f63)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/64/906264/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia/tests/unit/controller/worker/v2/tasks/test_network_tasks.py', 'octavia/controller/worker/v2/tasks/network_tasks.py', 'releasenotes/notes/fix-bad-management-port-update-3fa157f74ee8c7b2.yaml']",3,d520aed5c327b3c4fdbb9212718bf3ef331ef6e1,,"--- fixes: - | Fixed an issue when adding or deleting a member, Octavia might have reconfigured the management port of the amphora by adding or removing additional subnets. Octavia no longer updates the management port during those tasks. ",,17,24
openstack%2Fnova~791477,openstack/nova,stable/wallaby,I7fa75a0d2e2555d99c3d2c16b333a21462837580,Add regression test for bug #1922053,ABANDONED,2021-05-14 13:16:17.000000000,2024-03-05 19:07:48.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-05-14 13:16:17.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1922053.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/1a82ee80e6c213e741fa6ed9d6f3de7f0ce27d4c', 'message': 'Add regression test for bug #1922053\n\nRelated-Bug: #1922053\nChange-Id: I7fa75a0d2e2555d99c3d2c16b333a21462837580\n(cherry picked from commit db333070b61caef62ea5b68e5bf75f92d879db74)\n'}]",0,791477,1a82ee80e6c213e741fa6ed9d6f3de7f0ce27d4c,5,1,1,10135,,,0,"Add regression test for bug #1922053

Related-Bug: #1922053
Change-Id: I7fa75a0d2e2555d99c3d2c16b333a21462837580
(cherry picked from commit db333070b61caef62ea5b68e5bf75f92d879db74)
",git fetch https://review.opendev.org/openstack/nova refs/changes/77/791477/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1922053.py'],1,1a82ee80e6c213e741fa6ed9d6f3de7f0ce27d4c,,"# Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. from nova.tests.functional import integrated_helpers class ForceUpWithDoneEvacuations(integrated_helpers._IntegratedTestBase): """"""Regression test for bug 1922053. This regression test aims to assert the behaviour of n-api when forcing a compute service up when it is associated with evacuation migration records still marked as `done`. This suggests that the compute service was not correctly fenced when the evacuation was requested and has not restarted since allowing the evacuation migration records to move to a state of `completed`. """""" ADMIN_API = True microversion = 'latest' def _create_test_server(self, compute_host): return self._create_server(host=compute_host, networks='none') def _force_down_compute(self, hostname): compute_id = self.api.get_services( host=hostname, binary='nova-compute')[0]['id'] self.api.put_service(compute_id, {'forced_down': 'true'}) def _force_up_compute(self, hostname): compute_id = self.api.get_services( host=hostname, binary='nova-compute')[0]['id'] self.api.put_service(compute_id, {'forced_down': 'false'}) def test_force_up_with_done_evacuation_records(self): # Launch a second compute to host the evacuated instance self._start_compute('compute2') # Create a test server to evacuate server = self._create_test_server('compute') # Assert we've landed on the first compute self.assertEqual('compute', server['OS-EXT-SRV-ATTR:host']) # Force down the first compute to allow the evacuation self._force_down_compute('compute') # Evacuate then assert the instance moves to compute2 and that the # migration record is moved to done server = self._evacuate_server( server, expected_host='compute2', expected_migration_status='done' ) # FIXME(lyarwood): This is bug #1922053, this shouldn't be allowed with # `done` evacuation migration records still associated with the host. # Replace this with the following assertion once fixed: # ex = self.assertRaises( # client.OpenStackApiException, # self._force_up_compute, # 'compute', # ) # self.assertEqual(400, ex.response.status_code) self._force_up_compute('compute') # Assert that the evacuation migration record remains `done` self._wait_for_migration_status(server, [""done""]) # Restart the source compute to move the migration record along self.computes['compute'].stop() self.computes['compute'].start() # Assert that the evacuation migration record is now `completed` self._wait_for_migration_status(server, [""completed""]) class ForceUpWithDoneEvacuationsv252(ForceUpWithDoneEvacuations): """"""Regression test for bug 1922053 using microversion 2.52. Required as the PUT /os-services/force-down API used by this test via self.api.force_down_service is superseeded by PUT /os-services/{service_id} API used by our parent ForceUpWithDoneEvacuations class from >=2.53. This test also uses the 'availability_zone' parameter to force the server to spawn on the first compute as 'host' is only available from 2.74. """""" microversion = '2.52' def _create_test_server(self, compute_host): return self._create_server(az='nova:compute', networks='none') def _force_down_compute(self, hostname): self.api.force_down_service(hostname, 'nova-compute', forced_down=True) def _force_up_compute(self, hostname): self.api.force_down_service( hostname, 'nova-compute', forced_down=False) ",,108,0
openstack%2Fnova~792501,openstack/nova,stable/wallaby,Ib6c8fc1e3d90b79b10066c429670fcb957bddd23,Use the new type HostDomainOpt.,ABANDONED,2021-05-21 05:54:46.000000000,2024-03-05 19:07:44.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-05-21 05:54:46.000000000', 'files': ['requirements.txt', 'nova/conf/netconf.py', 'nova/conf/libvirt.py', 'lower-constraints.txt'], 'web_link': 'https://opendev.org/openstack/nova/commit/0712c108ebb11d0a022393ea2a511d9d03e1dc03', 'message': 'Use the new type HostDomainOpt.\n\nUse the new oslo.confg type HostDomainOpt to support underscore in the\nname. You can see the bugzilla[1] to have more information.\n\n[1] https://bugzilla.redhat.com/show_bug.cgi?id=1868940\n\nRelated-Bug: #1892044\nChange-Id: Ib6c8fc1e3d90b79b10066c429670fcb957bddd23\n(cherry picked from commit 0d84833e9688e0df97f3d24e06025e512bca3ce3)\n'}]",0,792501,0712c108ebb11d0a022393ea2a511d9d03e1dc03,26,2,1,31245,,,0,"Use the new type HostDomainOpt.

Use the new oslo.confg type HostDomainOpt to support underscore in the
name. You can see the bugzilla[1] to have more information.

[1] https://bugzilla.redhat.com/show_bug.cgi?id=1868940

Related-Bug: #1892044
Change-Id: Ib6c8fc1e3d90b79b10066c429670fcb957bddd23
(cherry picked from commit 0d84833e9688e0df97f3d24e06025e512bca3ce3)
",git fetch https://review.opendev.org/openstack/nova refs/changes/01/792501/1 && git format-patch -1 --stdout FETCH_HEAD,"['requirements.txt', 'nova/conf/netconf.py', 'nova/conf/libvirt.py', 'lower-constraints.txt']",4,0712c108ebb11d0a022393ea2a511d9d03e1dc03,,oslo.config==8.6.0,oslo.config==6.8.0,4,4
openstack%2Fnova~792902,openstack/nova,stable/wallaby,Ieb19b4e5ffde56b7f72805aa231f595f45989e60,Add regression test for bug #1928063,ABANDONED,2021-05-25 08:01:35.000000000,2024-03-05 19:07:40.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-05-25 08:01:35.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1928063.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/75f223097f9744edb93db0fedb0b16a0e4860c01', 'message': 'Add regression test for bug #1928063\n\nRelated-Bug: #1928063\nChange-Id: Ieb19b4e5ffde56b7f72805aa231f595f45989e60\n(cherry picked from commit e1cc0ed978d40596d368ba19063fb5b51e96421e)\n'}]",0,792902,75f223097f9744edb93db0fedb0b16a0e4860c01,10,2,1,10135,,,0,"Add regression test for bug #1928063

Related-Bug: #1928063
Change-Id: Ieb19b4e5ffde56b7f72805aa231f595f45989e60
(cherry picked from commit e1cc0ed978d40596d368ba19063fb5b51e96421e)
",git fetch https://review.opendev.org/openstack/nova refs/changes/02/792902/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1928063.py'],1,75f223097f9744edb93db0fedb0b16a0e4860c01,bug/1928063,"# Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import copy import mock from oslo_utils.fixture import uuidsentinel as uuids from nova import test from nova.tests.functional.api import client from nova.tests.functional.libvirt import base from nova.tests.unit.virt.libvirt import fakelibvirt from nova.virt.libvirt.host import SEV_KERNEL_PARAM_FILE class TestSEVInstanceReboot(base.ServersTestBase): """"""Regression test for bug #1899835 This regression test aims to assert the failure to hard reboot SEV based instances due to the use of image_meta.name within nova.virt.hardware.get_mem_encryption_constraint. """""" microversion = 'latest' @test.patch_exists(SEV_KERNEL_PARAM_FILE, True) @test.patch_open(SEV_KERNEL_PARAM_FILE, ""1\n"") @mock.patch.object( fakelibvirt.virConnect, '_domain_capability_features', new=fakelibvirt.virConnect._domain_capability_features_with_SEV) def setUp(self): super().setUp() # Configure the compute to allow SEV based instances and then start self.flags(num_memory_encrypted_guests=16, group='libvirt') self.start_compute() # Create a SEV enabled image for the test sev_image = copy.deepcopy(self.glance.image1) sev_image['id'] = uuids.sev_image_id sev_image['properties']['hw_firmware_type'] = 'uefi' sev_image['properties']['hw_machine_type'] = 'q35' sev_image['properties']['hw_mem_encryption'] = 'True' self.glance.create(None, sev_image) def test_hard_reboot(self): # Launch a SEV based instance and then attempt to hard reboot server = self._create_server( image_uuid=uuids.sev_image_id, networks='none' ) # FIXME(lyarwood): This is bug #1928063, the instance fails to reboot # due to a NotImplementedError exception being raised when we try to # access image_meta.name as this isn't stashed in the system_metadata # of the instance and as a result is not provided in the image_meta # associated with the instance during this flow. ex = self.assertRaises( client.OpenStackApiException, self._reboot_server, server, hard=True) self.assertEqual(500, ex.response.status_code) ",,69,0
openstack%2Fnova~793956,openstack/nova,stable/wallaby,I66299e97bdb5b95e149b1780231a1c1bbdbd9865,hardware: Use image_meta.id within get_mem_encryption_constraint,ABANDONED,2021-06-01 12:15:15.000000000,2024-03-05 19:07:37.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-06-01 12:15:15.000000000', 'files': ['nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'nova/tests/functional/regressions/test_bug_1928063.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/625e4e0fab5a34aa9f0b2f4a94f1559362821a37', 'message': 'hardware: Use image_meta.id within get_mem_encryption_constraint\n\nThis change resolves bug #1928063 by replacing the use of\nimage_meta.name with image_meta.id as\nI55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea should ensure it is always\navailable. The removal of other references to image_meta.name within\nvirt.hardware is left for follow ups to keep this change small and\nbackportable.\n\nNOTE(lyarwood): A simple func test conflict caused by\nI921c812ac03f7d32eec31200772020c17f292851 not being present in\nstable/wallaby.\n\nConflicts:\n    nova/tests/functional/regressions/test_bug_1928063.py\n\nCloses-Bug: #1928063\nChange-Id: I66299e97bdb5b95e149b1780231a1c1bbdbd9865\n(cherry picked from commit e98994027f0af0b22277bcfaed4ab6e6f4a2c74e)\n'}]",0,793956,625e4e0fab5a34aa9f0b2f4a94f1559362821a37,11,2,1,10135,,,0,"hardware: Use image_meta.id within get_mem_encryption_constraint

This change resolves bug #1928063 by replacing the use of
image_meta.name with image_meta.id as
I55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea should ensure it is always
available. The removal of other references to image_meta.name within
virt.hardware is left for follow ups to keep this change small and
backportable.

NOTE(lyarwood): A simple func test conflict caused by
I921c812ac03f7d32eec31200772020c17f292851 not being present in
stable/wallaby.

Conflicts:
    nova/tests/functional/regressions/test_bug_1928063.py

Closes-Bug: #1928063
Change-Id: I66299e97bdb5b95e149b1780231a1c1bbdbd9865
(cherry picked from commit e98994027f0af0b22277bcfaed4ab6e6f4a2c74e)
",git fetch https://review.opendev.org/openstack/nova refs/changes/56/793956/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'nova/tests/functional/regressions/test_bug_1928063.py']",3,625e4e0fab5a34aa9f0b2f4a94f1559362821a37,bug/1928063," # Hard reboot the server self._reboot_server(server, hard=True)","from nova.tests.functional.api import client # FIXME(lyarwood): This is bug #1928063, the instance fails to reboot # due to a NotImplementedError exception being raised when we try to # access image_meta.name as this isn't stashed in the system_metadata # of the instance and as a result is not provided in the image_meta # associated with the instance during this flow. ex = self.assertRaises( client.OpenStackApiException, self._reboot_server, server, hard=True) self.assertEqual(500, ex.response.status_code)",7,15
openstack%2Fnova~793354,openstack/nova,stable/wallaby,I55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea,image_meta: Provide image_ref as the id when fetching from instance,ABANDONED,2021-05-27 09:54:41.000000000,2024-03-05 19:07:33.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-05-27 09:54:41.000000000', 'files': ['nova/tests/unit/virt/vmwareapi/test_driver_api.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/virt/libvirt/test_machine_type_utils.py', 'nova/tests/unit/api/openstack/compute/test_server_actions.py', 'nova/tests/unit/compute/test_api.py', 'nova/tests/unit/virt/libvirt/test_driver.py', 'nova/tests/unit/virt/libvirt/test_vif.py', 'nova/tests/unit/api/openstack/fakes.py', 'nova/tests/unit/virt/test_configdrive.py', 'nova/objects/image_meta.py', 'nova/tests/unit/api/openstack/compute/test_servers.py', 'nova/tests/unit/objects/test_instance.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/a2791fb5d2ae30d2861c2f04627eb48df01a30e7', 'message': 'image_meta: Provide image_ref as the id when fetching from instance\n\nAt present various users of instance.image_meta expect it to be a fully\npopulated ImageMeta object. However when the instance is pulled from the\ndatabase the ImageMeta object is only partially populated via\ninstance.system_metadata with a limited set of attributes such as\nmin_ram, min_disk, disk_format and container_format. This can result in\nNotImplementedErrors being raised by o.vo as seen in bug #1928063 when\nan attempt is made to access common attributes such as id or name.\n\nTo avoid this the id is now provided by instance.image_ref when\navailable.\n\nThe majority of the change is test fallout and ensuring that valid UUIDs\nare provided as instance.image_ref and used by instance.image_meta.\n\nRelated-Bug: #1928063\nChange-Id: I55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea\n(cherry picked from commit 9d037f7d199443da0f2c6c1755704e589d52e730)\n'}]",0,793354,a2791fb5d2ae30d2861c2f04627eb48df01a30e7,14,2,1,10135,,,0,"image_meta: Provide image_ref as the id when fetching from instance

At present various users of instance.image_meta expect it to be a fully
populated ImageMeta object. However when the instance is pulled from the
database the ImageMeta object is only partially populated via
instance.system_metadata with a limited set of attributes such as
min_ram, min_disk, disk_format and container_format. This can result in
NotImplementedErrors being raised by o.vo as seen in bug #1928063 when
an attempt is made to access common attributes such as id or name.

To avoid this the id is now provided by instance.image_ref when
available.

The majority of the change is test fallout and ensuring that valid UUIDs
are provided as instance.image_ref and used by instance.image_meta.

Related-Bug: #1928063
Change-Id: I55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea
(cherry picked from commit 9d037f7d199443da0f2c6c1755704e589d52e730)
",git fetch https://review.opendev.org/openstack/nova refs/changes/54/793354/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/vmwareapi/test_driver_api.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/virt/libvirt/test_machine_type_utils.py', 'nova/tests/unit/api/openstack/compute/test_server_actions.py', 'nova/tests/unit/compute/test_api.py', 'nova/tests/unit/virt/libvirt/test_driver.py', 'nova/tests/unit/virt/libvirt/test_vif.py', 'nova/tests/unit/api/openstack/fakes.py', 'nova/tests/unit/virt/test_configdrive.py', 'nova/objects/image_meta.py', 'nova/tests/unit/api/openstack/compute/test_servers.py', 'nova/tests/unit/objects/test_instance.py']",12,a2791fb5d2ae30d2861c2f04627eb48df01a30e7,bug/1928063," db_inst['image_ref'] = uuids.image_ref 'image_id': uuids.image_id, inst = instance.Instance.get_by_uuid( self.context, fake_inst['uuid'], expected_attrs=['image_meta']) self.assertEqual(uuids.image_ref, image_meta.id)"," inst = instance.Instance.get_by_uuid(self.context, fake_inst['uuid'], expected_attrs=['image_meta'])",149,105
openstack%2Fnova~805997,openstack/nova,stable/wallaby,I887417967365a076db4b0ef97dee302cf7ff9152,nova-api add flavorid value to server's flavor part,ABANDONED,2021-08-25 13:29:57.000000000,2024-03-05 19:07:29.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 33154}]","[{'number': 1, 'created': '2021-08-25 13:29:57.000000000', 'files': ['nova/api/openstack/compute/views/servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/9349de07afaa51cbd918efdf887ca0075c88b1a9', 'message': ""nova-api add flavorid value to server's flavor part\n\nChange-Id: I887417967365a076db4b0ef97dee302cf7ff9152\n""}]",0,805997,9349de07afaa51cbd918efdf887ca0075c88b1a9,9,3,1,33154,,,0,"nova-api add flavorid value to server's flavor part

Change-Id: I887417967365a076db4b0ef97dee302cf7ff9152
",git fetch https://review.opendev.org/openstack/nova refs/changes/97/805997/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/api/openstack/compute/views/servers.py'],1,9349de07afaa51cbd918efdf887ca0075c88b1a9,," ""id"": instance_type.flavorid,",,1,0
openstack%2Fnova~791478,openstack/nova,stable/wallaby,I95882ea28564a31a6b4f8b665de462774d84edfc,api: Reject requests to force up computes when `done` evacuation records exist,ABANDONED,2021-05-14 13:16:17.000000000,2024-03-05 19:07:26.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-05-14 13:16:17.000000000', 'files': ['nova/tests/functional/notification_sample_tests/test_instance.py', 'nova/tests/functional/regressions/test_bug_1922053.py', 'nova/api/openstack/compute/services.py', 'nova/tests/functional/test_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/f9b1c1f9b046745276046b6e940d01211a323913', 'message': 'api: Reject requests to force up computes when `done` evacuation records exist\n\nWhen evacuating an instance the evacuation migration record moves from a\nstate of `accepted` to `pre-migrating` and eventually `done` once the\ninstance has been rebuilt on the new compute host. At present the\nmigration record remains in this state until the original compute host\nis restarted and the service cleans up any leftovers of the instance\nbefore it is moved to a state of `completed`.\n\nBug #1922053 details a use case where an operator might unintentionally\nforget to ensure the compute service is restarted before forcing the\nservice up leaving evacuation migration records stuck as `done`.\n\nThis could become an issue in the future if the instance is moved back\nto this compute before the service is restarted. Any future restart\ninvoking the cleanup logic and potentially damaging the running\ninstance.\n\nThis change aims to address this by blocking requests to force up\ncomputes associated to `done` evacuation records. Forcing operators to\nrestart the service allowing them to move to a `completed` state before\nthe service can be forced up again.\n\nTo allow this to be backportable these requests are rejected with a 400\nBadRequest return code from the API. A TODO is left to move this to a\n409 Conflict during the Xena release under a new microversion.\n\nFinally, some additional functional tests have been updated to ensure\nthey restart the source compute service of an evacuation before\nattempting to force up the service, ensuring any migration records are\nmarked as completed.\n\nCloses-Bug: #1922053\nChange-Id: I95882ea28564a31a6b4f8b665de462774d84edfc\n(cherry picked from commit bf89a23d91f01a29ba9b19bd0accf8de8c05f2f7)\n'}]",0,791478,f9b1c1f9b046745276046b6e940d01211a323913,18,1,1,10135,,,0,"api: Reject requests to force up computes when `done` evacuation records exist

When evacuating an instance the evacuation migration record moves from a
state of `accepted` to `pre-migrating` and eventually `done` once the
instance has been rebuilt on the new compute host. At present the
migration record remains in this state until the original compute host
is restarted and the service cleans up any leftovers of the instance
before it is moved to a state of `completed`.

Bug #1922053 details a use case where an operator might unintentionally
forget to ensure the compute service is restarted before forcing the
service up leaving evacuation migration records stuck as `done`.

This could become an issue in the future if the instance is moved back
to this compute before the service is restarted. Any future restart
invoking the cleanup logic and potentially damaging the running
instance.

This change aims to address this by blocking requests to force up
computes associated to `done` evacuation records. Forcing operators to
restart the service allowing them to move to a `completed` state before
the service can be forced up again.

To allow this to be backportable these requests are rejected with a 400
BadRequest return code from the API. A TODO is left to move this to a
409 Conflict during the Xena release under a new microversion.

Finally, some additional functional tests have been updated to ensure
they restart the source compute service of an evacuation before
attempting to force up the service, ensuring any migration records are
marked as completed.

Closes-Bug: #1922053
Change-Id: I95882ea28564a31a6b4f8b665de462774d84edfc
(cherry picked from commit bf89a23d91f01a29ba9b19bd0accf8de8c05f2f7)
",git fetch https://review.opendev.org/openstack/nova refs/changes/78/791478/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/notification_sample_tests/test_instance.py', 'nova/tests/functional/regressions/test_bug_1922053.py', 'nova/api/openstack/compute/services.py', 'nova/tests/functional/test_servers.py']",4,f9b1c1f9b046745276046b6e940d01211a323913,, self.compute1 = self.restart_compute_service(self.compute1) self.compute1 = self.restart_compute_service(self.compute1), self.compute1 = self.restart_compute_service(self.compute1) self.compute1 = self.restart_compute_service(self.compute1),40,12
openstack%2Fnova~827896,openstack/nova,stable/wallaby,Iae13b0ffcded76ef1712fdbad3fbff3dc774336c,Add check job for FIPS,ABANDONED,2022-02-04 20:01:24.000000000,2024-03-05 19:07:22.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-02-04 20:01:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/17a588c2fb8f5f827ffee2160c2b015678a4ac09', 'message': 'Add check job for FIPS\n\nThe job makes sure that integration tests pass when the nodes are\nset to be in fips mode.\n\nChange-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c\n(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)\n'}, {'number': 2, 'created': '2022-02-04 21:28:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/aed5662be29853e5e7b66b48ac8a2fd5d717dced', 'message': 'Add check job for FIPS\n\nThe job makes sure that integration tests pass when the nodes are\nset to be in fips mode.\n\nChange-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c\n(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)\n'}, {'number': 3, 'created': '2022-02-04 22:11:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/576ce3e6d5bbbc61feeca82696a8b39e7ec97c75', 'message': 'Add check job for FIPS\n\nThe job makes sure that integration tests pass when the nodes are\nset to be in fips mode.\n\nChange-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c\n(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)\n'}, {'number': 4, 'created': '2022-02-10 16:29:40.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/97c2187213caae7c0c3fea381f32e6ddbd8db3b1', 'message': 'Add check job for FIPS\n\nThe job makes sure that integration tests pass when the nodes are\nset to be in fips mode.\n\nDepends-On: https://review.opendev.org/c/openstack/devstack/+/828752\n\nChange-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c\n(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)\n'}]",4,827896,97c2187213caae7c0c3fea381f32e6ddbd8db3b1,35,1,4,9914,,,0,"Add check job for FIPS

The job makes sure that integration tests pass when the nodes are
set to be in fips mode.

Depends-On: https://review.opendev.org/c/openstack/devstack/+/828752

Change-Id: Iae13b0ffcded76ef1712fdbad3fbff3dc774336c
(cherry picked from commit 82c91e8cd8e7ebc2d6d0b49fa22bdf6a1660a5bc)
",git fetch https://review.opendev.org/openstack/nova refs/changes/96/827896/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,17a588c2fb8f5f827ffee2160c2b015678a4ac09,fips-compatibility, - tempest-centos8-stream-fips: irrelevant-files: *nova-base-irrelevant-files voting: false,,3,0
openstack%2Fnova~827121,openstack/nova,stable/wallaby,Ie90fb83662dd06e7188f042fc6340596f93c5ef9,api: Reject duplicate port IDs in server create,ABANDONED,2022-01-31 15:07:54.000000000,2024-03-05 19:07:18.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-01-31 15:07:54.000000000', 'files': ['releasenotes/notes/bug-1821088-reject-duplicate-port-ids-a38739d67d5d7c5d.yaml', 'nova/tests/unit/api/openstack/compute/test_servers.py', 'nova/api/openstack/compute/servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/fcbe6eecd7358dfa22b2dca8eca2afaa11f882f3', 'message': 'api: Reject duplicate port IDs in server create\n\nSpecifying a duplicate port ID is currently ""allowed"" but results in an\nintegrity error when nova attempts to create a duplicate\n\'VirtualInterface\' entry. Start rejecting these requests by checking for\nduplicate IDs and rejecting offending requests. This is arguably an API\nchange because there isn\'t a HTTP 5xx error (server create is an async\noperation), however, users shouldn\'t have to opt in to non-broken\nbehavior and the underlying instance was never actually created\npreviously, meaning automation that relied on this ""feature"" was always\ngoing to fail in a later step. We\'re also silently failing to do what\nthe user asked (per flow chart at [1]).\n\n[1] https://docs.openstack.org/nova/latest/contributor/microversions.html#when-do-i-need-a-new-microversion\n\nConflicts:\n  nova/tests/unit/api/openstack/compute/test_servers.py\n\nNOTE(stephenfin): Conflicts are due to the absence of change\nIe09969a26ad03cb29ed717ea86bd5ae7ec761586 (""tests: Speed up \'servers\'\nAPI tests"") which we don\'t want to backport.\n\nChange-Id: Ie90fb83662dd06e7188f042fc6340596f93c5ef9\nSigned-off-by: Stephen Finucane <stephenfin@redhat.com>\nCloses-Bug: #1821088\n(cherry picked from commit 9fe465427310f8215890d26bf169617653605e23)\n(cherry picked from commit d4c92bc2314c6402c4e3464a5aa61a94293eaf91)\n'}]",5,827121,fcbe6eecd7358dfa22b2dca8eca2afaa11f882f3,21,1,1,15334,,,0,"api: Reject duplicate port IDs in server create

Specifying a duplicate port ID is currently ""allowed"" but results in an
integrity error when nova attempts to create a duplicate
'VirtualInterface' entry. Start rejecting these requests by checking for
duplicate IDs and rejecting offending requests. This is arguably an API
change because there isn't a HTTP 5xx error (server create is an async
operation), however, users shouldn't have to opt in to non-broken
behavior and the underlying instance was never actually created
previously, meaning automation that relied on this ""feature"" was always
going to fail in a later step. We're also silently failing to do what
the user asked (per flow chart at [1]).

[1] https://docs.openstack.org/nova/latest/contributor/microversions.html#when-do-i-need-a-new-microversion

Conflicts:
  nova/tests/unit/api/openstack/compute/test_servers.py

NOTE(stephenfin): Conflicts are due to the absence of change
Ie09969a26ad03cb29ed717ea86bd5ae7ec761586 (""tests: Speed up 'servers'
API tests"") which we don't want to backport.

Change-Id: Ie90fb83662dd06e7188f042fc6340596f93c5ef9
Signed-off-by: Stephen Finucane <stephenfin@redhat.com>
Closes-Bug: #1821088
(cherry picked from commit 9fe465427310f8215890d26bf169617653605e23)
(cherry picked from commit d4c92bc2314c6402c4e3464a5aa61a94293eaf91)
",git fetch https://review.opendev.org/openstack/nova refs/changes/21/827121/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/bug-1821088-reject-duplicate-port-ids-a38739d67d5d7c5d.yaml', 'nova/tests/unit/api/openstack/compute/test_servers.py', 'nova/api/openstack/compute/servers.py']",3,fcbe6eecd7358dfa22b2dca8eca2afaa11f882f3,bug/1821088," port_uuids = [] if request.port_id in port_uuids: msg = _( ""Port ID '%(port)s' was specified twice: you "" ""cannot attach a port multiple times."" ) % { ""port"": request.port_id, } if request.address is not None: msg = _( ""Specified Fixed IP '%(addr)s' cannot be used "" ""with port '%(port)s': the two cannot be "" ""specified together."" ) % { ""addr"": request.address, ""port"": request.port_id, } raise exc.HTTPBadRequest(explanation=msg) request.network_id = None port_uuids.append(request.port_id)"," request.network_id = None if request.address is not None: msg = _(""Specified Fixed IP '%(addr)s' cannot be used "" ""with port '%(port)s': the two cannot be "" ""specified together."") % { ""addr"": request.address, ""port"": request.port_id}",56,16
openstack%2Fnova~828148,openstack/nova,stable/wallaby,I014c5a81752f86c6b99d19d769c42f318e18e676,libvirt: Always delegate OVS plug to os-vif,ABANDONED,2022-02-08 00:58:43.000000000,2024-03-05 19:07:14.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-02-08 00:58:43.000000000', 'files': ['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/78676e626ec60af411bb3a20fba771248612c4b8', 'message': ""libvirt: Always delegate OVS plug to os-vif\n\nIn change I11fb5d3ada7f27b39c183157ea73c8b72b4e672e, we started\ndelegating plugging of OVS ports to os-vif to work around a number of\nbugs. However, this was only introduced for live migration. Plugging is\nstill handled by libvirt for spawn. This results in an odd situation,\nwhereby an interface of type 'bridge' will be use when creating the\ninstance initially, only for this to change to 'ethernet' on live\nmigration. Resolve this by *always* delegating plugging to os-vif. This\nis achieved by consistently setting the 'delegate_create' attribute of\n'nova.network.model.VIF' to 'True', which will later get transformed to\nthe 'create_port' attribute of the 'os_vif.objects.vif.VIFOpenVSwitch'\nobject(s) created in 'nova.network.os_vif_util._nova_to_osvif_vif_ovs'\nand ultimately result in delegate port creation.\n\nNote that we don't need to worry about making the setting of\n'delegate_create' conditional on whether we're looking at an OVS port or\nnot: this will be handled by '_nova_to_osvif_vif_ovs'. We also don't\nneed to worry about unsetting this attribute before a live migration:\nthe 'delegate_create' attribute is always overridden as part of\n'nova.objects.migrate_data.VIFMigrateData.get_dest_vif'.\n\nChange-Id: I014c5a81752f86c6b99d19d769c42f318e18e676\nSigned-off-by: Stephen Finucane <stephenfin@redhat.com>\nRelated-Bug: #1734320\nRelated-Bug: #1815989\n(cherry picked from commit fa0fb2fe3d61de1cb871c48ee97053cf2fb5827a)\n""}]",3,828148,78676e626ec60af411bb3a20fba771248612c4b8,17,1,1,25613,,,0,"libvirt: Always delegate OVS plug to os-vif

In change I11fb5d3ada7f27b39c183157ea73c8b72b4e672e, we started
delegating plugging of OVS ports to os-vif to work around a number of
bugs. However, this was only introduced for live migration. Plugging is
still handled by libvirt for spawn. This results in an odd situation,
whereby an interface of type 'bridge' will be use when creating the
instance initially, only for this to change to 'ethernet' on live
migration. Resolve this by *always* delegating plugging to os-vif. This
is achieved by consistently setting the 'delegate_create' attribute of
'nova.network.model.VIF' to 'True', which will later get transformed to
the 'create_port' attribute of the 'os_vif.objects.vif.VIFOpenVSwitch'
object(s) created in 'nova.network.os_vif_util._nova_to_osvif_vif_ovs'
and ultimately result in delegate port creation.

Note that we don't need to worry about making the setting of
'delegate_create' conditional on whether we're looking at an OVS port or
not: this will be handled by '_nova_to_osvif_vif_ovs'. We also don't
need to worry about unsetting this attribute before a live migration:
the 'delegate_create' attribute is always overridden as part of
'nova.objects.migrate_data.VIFMigrateData.get_dest_vif'.

Change-Id: I014c5a81752f86c6b99d19d769c42f318e18e676
Signed-off-by: Stephen Finucane <stephenfin@redhat.com>
Related-Bug: #1734320
Related-Bug: #1815989
(cherry picked from commit fa0fb2fe3d61de1cb871c48ee97053cf2fb5827a)
",git fetch https://review.opendev.org/openstack/nova refs/changes/48/828148/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py']",2,78676e626ec60af411bb3a20fba771248612c4b8,bug/1815989-stable/wallaby," preserve_on_delete=preserve_on_delete, delegate_create=True,", preserve_on_delete=preserve_on_delete,3,1
openstack%2Fnova~838946,openstack/nova,stable/wallaby,I184ed3ad3d578780524fbaa3a0392607d1a50cdc,enable locking test fixture,ABANDONED,2022-04-21 19:55:47.000000000,2024-03-05 19:07:11.000000000,,[],"[{'number': 1, 'created': '2022-04-21 19:55:47.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/virt/test_block_device.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/a6478aec99aa162595cbcf6b726ee603ce477cdb', 'message': 'enable locking test fixture\n\nos-brick now uses file system locks by default.\nAs such we shoudl be enabling the locking fixture\nin the compute manager and block device unit tests.\n\nChange-Id: I184ed3ad3d578780524fbaa3a0392607d1a50cdc\nCloses-Bug: #1947370\n(cherry picked from commit aa5b8cff2b8154b04e89a0a284a598ea777f2321)\n(cherry picked from commit 6c22388c76173fc5ed52dde4bea06e6678452fa0)\n(cherry picked from commit d42262c8f0218b18d26506f242bb1d46b491f980)\n'}]",0,838946,a6478aec99aa162595cbcf6b726ee603ce477cdb,3,0,1,11604,,,0,"enable locking test fixture

os-brick now uses file system locks by default.
As such we shoudl be enabling the locking fixture
in the compute manager and block device unit tests.

Change-Id: I184ed3ad3d578780524fbaa3a0392607d1a50cdc
Closes-Bug: #1947370
(cherry picked from commit aa5b8cff2b8154b04e89a0a284a598ea777f2321)
(cherry picked from commit 6c22388c76173fc5ed52dde4bea06e6678452fa0)
(cherry picked from commit d42262c8f0218b18d26506f242bb1d46b491f980)
",git fetch https://review.opendev.org/openstack/nova refs/changes/46/838946/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/virt/test_block_device.py']",2,a6478aec99aa162595cbcf6b726ee603ce477cdb,bug/1947370, # os-brick now uses external file system locks instead of internal # locks so we need to set up locking REQUIRES_LOCKING = True,,7,0
openstack%2Fnova~842587,openstack/nova,stable/wallaby,Id04e0df12829df4d8929e03a8b76b5cbe0549059,neutron: Unbind remaining ports after PortNotFound,ABANDONED,2022-05-19 17:57:20.000000000,2024-03-05 19:07:07.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-19 17:57:20.000000000', 'files': ['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/a49a0b970a0072bfddc1b403c75c3c4cd6636f83', 'message': 'neutron: Unbind remaining ports after PortNotFound\n\nJust because we encountered a PortNotFound error when unbinding a port\ndoesn\'t mean we should stop unbinding the remaining ports. If this error\nis encountered, simply continue with the other ports.\n\nWhile we\'re here, we clean up some other tests related to \'_unbind_port\'\nsince they\'re clearly duplicates.\n\nConflicts:\n  nova/network/neutron.py\n  nova/tests/unit/network/test_neutron.py\n\nNOTE(stephenfin): Conflicts are due to the absence of change\nI82705e035c49fc88ed0dc0df4db135f51c4c7fbf (""Turn on mypy for\nnova/network/neutron.py"") and change\nIdaf92c54df0f39d177d7acaabbfcf254ff5a4d0f (""smartnic support - create\narqs""), neither of which we want to backport.\n\nChange-Id: Id04e0df12829df4d8929e03a8b76b5cbe0549059\nSigned-off-by: Stephen Finucane <sfinucan@redhat.com>\nCloses-Bug: #1974173\n(cherry picked from commit 9e0dcb52ab308a63c6a18e47d1850cc3ade4d807)\n(cherry picked from commit 6f32b118640ee466b58155b5ecd50e041b4a2e7e)\n(cherry picked from commit d322f8e8b5a95fd60dab9c6c543b4c77ea893836)\n'}]",1,842587,a49a0b970a0072bfddc1b403c75c3c4cd6636f83,12,1,1,15334,,,0,"neutron: Unbind remaining ports after PortNotFound

Just because we encountered a PortNotFound error when unbinding a port
doesn't mean we should stop unbinding the remaining ports. If this error
is encountered, simply continue with the other ports.

While we're here, we clean up some other tests related to '_unbind_port'
since they're clearly duplicates.

Conflicts:
  nova/network/neutron.py
  nova/tests/unit/network/test_neutron.py

NOTE(stephenfin): Conflicts are due to the absence of change
I82705e035c49fc88ed0dc0df4db135f51c4c7fbf (""Turn on mypy for
nova/network/neutron.py"") and change
Idaf92c54df0f39d177d7acaabbfcf254ff5a4d0f (""smartnic support - create
arqs""), neither of which we want to backport.

Change-Id: Id04e0df12829df4d8929e03a8b76b5cbe0549059
Signed-off-by: Stephen Finucane <sfinucan@redhat.com>
Closes-Bug: #1974173
(cherry picked from commit 9e0dcb52ab308a63c6a18e47d1850cc3ade4d807)
(cherry picked from commit 6f32b118640ee466b58155b5ecd50e041b4a2e7e)
(cherry picked from commit d322f8e8b5a95fd60dab9c6c543b4c77ea893836)
",git fetch https://review.opendev.org/openstack/nova refs/changes/87/842587/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py']",2,a49a0b970a0072bfddc1b403c75c3c4cd6636f83,bug/1974173, continue, return,64,23
openstack%2Fnova~811414,openstack/nova,stable/wallaby,I7db075145435ed4e832aca197a48c56264ac56ce,Reproduce bug 1945310,ABANDONED,2021-09-28 13:20:19.000000000,2024-03-05 19:07:03.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-09-28 13:20:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/04ecc443b4a00daece7fcd4a02160b2b887a66f9', 'message': ""Reproduce bug 1945310\n\nTo properly reproduce the bug we need to modify nova's neutron fixture\nto act like a real neutron when a port is queried with a non-admin\nclient.\n\nA wide set of tests are added to exercise all the resource request\ndependent nova code paths with a non-admin user.\n\nstable/wallaby: It is not a direct backport from stable/xena due to a\nsizable change in the functional tests. But logically this patch tries\nto add the same test coverage. However it turned out that not all the\nissues exists in stable/wallaby. The interface attach and detach issue\nare present but the live migration issue is not present as in the\nstable/wallaby code the binding profile update during live migration\ndoes not query neutron. During Xena the query is introduced and with it\nthe bug as well [1]\n\n[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py\n\nChange-Id: I7db075145435ed4e832aca197a48c56264ac56ce\nRelated-Bug: #1945310\n(cherry picked from commit 6b1e624bed074c4eee529bd03210862657e9b7de)\n(cherry picked from commit cd3878668165cca86e2f5c6cbf44ebcb5e01ed22)\n""}, {'number': 2, 'created': '2021-11-02 15:54:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ed04b01fe233cca1ec5b1ba907f767132e018e61', 'message': ""Reproduce bug 1945310\n\nTo properly reproduce the bug we need to modify nova's neutron fixture\nto act like a real neutron when a port is queried with a non-admin\nclient.\n\nA wide set of tests are added to exercise all the resource request\ndependent nova code paths with a non-admin user.\n\nstable/wallaby: It is not a direct backport from stable/xena due to a\nsizable change in the functional tests. But logically this patch tries\nto add the same test coverage. However it turned out that not all the\nissues exists in stable/wallaby. The interface attach and detach issue\nare present but the live migration issue is not present as in the\nstable/wallaby code the binding profile update during live migration\ndoes not query neutron. During Xena the query is introduced and with it\nthe bug as well [1]\n\n[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py\n\nChange-Id: I7db075145435ed4e832aca197a48c56264ac56ce\nRelated-Bug: #1945310\n(cherry picked from commit 6b1e624bed074c4eee529bd03210862657e9b7de)\n(cherry picked from commit 1066353d19862b87b51946119cf5d4f1bf9d841e)\n""}, {'number': 3, 'created': '2022-04-21 09:45:45.000000000', 'files': ['nova/tests/fixtures.py', 'nova/tests/functional/test_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/4e9a7a8dd09783a4630669c215051b2829851f13', 'message': ""Reproduce bug 1945310\n\nTo properly reproduce the bug we need to modify nova's neutron fixture\nto act like a real neutron when a port is queried with a non-admin\nclient.\n\nA wide set of tests are added to exercise all the resource request\ndependent nova code paths with a non-admin user.\n\nstable/wallaby: It is not a direct backport from stable/xena due to a\nsizable change in the functional tests. But logically this patch tries\nto add the same test coverage. However it turned out that not all the\nissues exists in stable/wallaby. The interface attach and detach issue\nare present but the live migration issue is not present as in the\nstable/wallaby code the binding profile update during live migration\ndoes not query neutron. During Xena the query is introduced and with it\nthe bug as well [1]\n\n[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py\n\nChange-Id: I7db075145435ed4e832aca197a48c56264ac56ce\nRelated-Bug: #1945310\n(cherry picked from commit 6b1e624bed074c4eee529bd03210862657e9b7de)\n(cherry picked from commit 1066353d19862b87b51946119cf5d4f1bf9d841e)\n""}]",0,811414,4e9a7a8dd09783a4630669c215051b2829851f13,13,1,3,9708,,,0,"Reproduce bug 1945310

To properly reproduce the bug we need to modify nova's neutron fixture
to act like a real neutron when a port is queried with a non-admin
client.

A wide set of tests are added to exercise all the resource request
dependent nova code paths with a non-admin user.

stable/wallaby: It is not a direct backport from stable/xena due to a
sizable change in the functional tests. But logically this patch tries
to add the same test coverage. However it turned out that not all the
issues exists in stable/wallaby. The interface attach and detach issue
are present but the live migration issue is not present as in the
stable/wallaby code the binding profile update during live migration
does not query neutron. During Xena the query is introduced and with it
the bug as well [1]

[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py

Change-Id: I7db075145435ed4e832aca197a48c56264ac56ce
Related-Bug: #1945310
(cherry picked from commit 6b1e624bed074c4eee529bd03210862657e9b7de)
(cherry picked from commit 1066353d19862b87b51946119cf5d4f1bf9d841e)
",git fetch https://review.opendev.org/openstack/nova refs/changes/14/811414/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/fixtures.py', 'nova/tests/functional/test_servers.py']",2,04ecc443b4a00daece7fcd4a02160b2b887a66f9,bug/1945310,"import unittest 'os_compute_api:os-attach-interfaces:show': '@', # this is bug 1945310 @unittest.expectedFailure def test_interface_attach_with_resource_request_old_compute(self): super().test_interface_attach_with_resource_request_old_compute() class NonAdminPortResourceRequestTests( PortResourceRequestBasedSchedulingTest ): def setUp(self): super().setUp() # switch to non admin api self.api = self.api_fixture.api self.api.microversion = self.microversion # allow non-admin to call the operations self.policy.set_rules({ 'os_compute_api:servers:create': '@', 'os_compute_api:servers:delete': '@', 'os_compute_api:servers:create:attach_network': '@', 'os_compute_api:servers:show': '@', 'os_compute_api:os-attach-interfaces': '@', 'os_compute_api:os-attach-interfaces:create': '@', 'os_compute_api:os-attach-interfaces:delete': '@', 'os_compute_api:os-attach-interfaces:show': '@', 'os_compute_api:os-server-external-events:create': '@', 'os_compute_api:os-hypervisors:list': '@', 'os_compute_api:os-migrations:index': '@', 'os_compute_api:os-services:list': '@', }) # this is bug 1945310 @unittest.expectedFailure def test_interface_detach_with_port_with_bandwidth_request(self): super().test_interface_detach_with_port_with_bandwidth_request() class NonAdminServerMoveWithPortResourceRequestTests( ServerMoveWithPortResourceRequestTest ): def setUp(self): super().setUp() # switch to non admin api self.api = self.api_fixture.api self.api.microversion = self.microversion # allow non-admin to call the operations self.policy.set_rules({ 'os_compute_api:servers:create': '@', 'os_compute_api:servers:delete': '@', 'os_compute_api:os-services:update': '@', 'os_compute_api:servers:create:attach_network': '@', 'os_compute_api:servers:show': '@', 'os_compute_api:os-extended-server-attributes': '@', 'os_compute_api:os-shelve:shelve': '@', 'os_compute_api:os-shelve:unshelve': '@', 'os_compute_api:os-migrate-server:migrate': '@', 'os_compute_api:os-migrate-server:migrate_live': '@', 'os_compute_api:servers:resize': '@', 'os_compute_api:servers:confirm_resize': '@', 'os_compute_api:servers:revert_resize': '@', 'os_compute_api:os-evacuate': '@', 'os_compute_api:os-hypervisors:list': '@', 'os_compute_api:os-migrations:index': '@', 'os_compute_api:os-services:list': '@', 'compute:servers:create:requested_destination': '@', 'os_compute_api:os-instance-actions:show': '@', 'os_compute_api:os-instance-actions:list': '@', }) ",,83,0
openstack%2Fnova~811416,openstack/nova,stable/wallaby,Icb35e20179572fb713a397b4605312cf3294b41b,Query ports with admin client to get resource_request,ABANDONED,2021-09-28 13:21:37.000000000,2024-03-05 19:07:00.000000000,,"[{'_account_id': 6062}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-09-28 13:21:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/2bb457ea786f7fa83e3faf7d6b3eb1578ae6e730', 'message': 'Query ports with admin client to get resource_request\n\nThe port.resource_request field is admin only. Nova depends on the\nvalue of this field to do a proper scheduling and resource allocation\nand deallocation for ports with resource request as well as to update\nthe port.binding:profile.allocation field with the resource providers\nthe requested resources are fulfilled from. However in some cases nova\ndoes not use a neutron admin client / elevated context to read the\nport. In this case neutron returns None for the port.resource_request\nfield and nova thinks that the port has no resource request.\n\nThis patch fixes all the places where previous testing showed that\ncontext elevation was missing.\n\nstable/wallaby: This is not a direct backport of the stable/xena change\nas parts of the original bug does not exists on stable/wallaby. Namely\nthe live migration issue is not reproducible as the bug there only\nintroduced during Xena [1]\n\n[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py\n\nChange-Id: Icb35e20179572fb713a397b4605312cf3294b41b\nCloses-Bug: #1945310\n(cherry picked from commit 9798cfb9a803e97c6af71aeef3d923199437fe21)\n'}, {'number': 2, 'created': '2021-09-28 13:31:34.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ebfd88ce276aa9b2770fa7e3b868a763613d7d54', 'message': 'Query ports with admin client to get resource_request\n\nThe port.resource_request field is admin only. Nova depends on the\nvalue of this field to do a proper scheduling and resource allocation\nand deallocation for ports with resource request as well as to update\nthe port.binding:profile.allocation field with the resource providers\nthe requested resources are fulfilled from. However in some cases nova\ndoes not use a neutron admin client / elevated context to read the\nport. In this case neutron returns None for the port.resource_request\nfield and nova thinks that the port has no resource request.\n\nThis patch fixes all the places where previous testing showed that\ncontext elevation was missing.\n\nstable/wallaby: This is not a direct backport of the stable/xena change\nas parts of the original bug does not exists on stable/wallaby. Namely\nthe live migration issue is not reproducible as the bug there only\nintroduced during Xena [1]\n\n[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py\n\nChange-Id: Icb35e20179572fb713a397b4605312cf3294b41b\nCloses-Bug: #1945310\n(cherry picked from commit 9798cfb9a803e97c6af71aeef3d923199437fe21)\n(cherry picked from commit 98ce8c9afd9fc66a9cd4bfe63ad5131210184947)\n'}, {'number': 3, 'created': '2021-11-02 15:49:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/3403d9a835752e46adc59f57aa255ee3cc8f84fa', 'message': 'Query ports with admin client to get resource_request\n\nThe port.resource_request field is admin only. Nova depends on the\nvalue of this field to do a proper scheduling and resource allocation\nand deallocation for ports with resource request as well as to update\nthe port.binding:profile.allocation field with the resource providers\nthe requested resources are fulfilled from. However in some cases nova\ndoes not use a neutron admin client / elevated context to read the\nport. In this case neutron returns None for the port.resource_request\nfield and nova thinks that the port has no resource request.\n\nThis patch fixes all the places where previous testing showed that\ncontext elevation was missing.\n\nstable/wallaby: This is not a direct backport of the stable/xena change\nas parts of the original bug does not exists on stable/wallaby. Namely\nthe live migration issue is not reproducible as the bug there only\nintroduced during Xena [1]\n\n[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py\n\nChange-Id: Icb35e20179572fb713a397b4605312cf3294b41b\nCloses-Bug: #1945310\n(cherry picked from commit 9798cfb9a803e97c6af71aeef3d923199437fe21)\n(cherry picked from commit 98ce8c9afd9fc66a9cd4bfe63ad5131210184947)\n'}, {'number': 4, 'created': '2021-11-02 15:55:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/f5770814863dc31ad59220d88ff5bac667ac643f', 'message': 'Query ports with admin client to get resource_request\n\nThe port.resource_request field is admin only. Nova depends on the\nvalue of this field to do a proper scheduling and resource allocation\nand deallocation for ports with resource request as well as to update\nthe port.binding:profile.allocation field with the resource providers\nthe requested resources are fulfilled from. However in some cases nova\ndoes not use a neutron admin client / elevated context to read the\nport. In this case neutron returns None for the port.resource_request\nfield and nova thinks that the port has no resource request.\n\nThis patch fixes all the places where previous testing showed that\ncontext elevation was missing.\n\nstable/wallaby: This is not a direct backport of the stable/xena change\nas parts of the original bug does not exists on stable/wallaby. Namely\nthe live migration issue is not reproducible as the bug there only\nintroduced during Xena [1]\n\n[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py\n\nChange-Id: Icb35e20179572fb713a397b4605312cf3294b41b\nCloses-Bug: #1945310\n(cherry picked from commit 49b481ec98087351ce1366d3afb9f4a79cd16ae3)\n(cherry picked from commit d960c24130baf27921ef9231c1f962b6486a3523)\n'}, {'number': 5, 'created': '2021-11-02 15:55:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/7059769eadb88657e50ab3afa090e4d5db086b00', 'message': 'Query ports with admin client to get resource_request\n\nThe port.resource_request field is admin only. Nova depends on the\nvalue of this field to do a proper scheduling and resource allocation\nand deallocation for ports with resource request as well as to update\nthe port.binding:profile.allocation field with the resource providers\nthe requested resources are fulfilled from. However in some cases nova\ndoes not use a neutron admin client / elevated context to read the\nport. In this case neutron returns None for the port.resource_request\nfield and nova thinks that the port has no resource request.\n\nThis patch fixes all the places where previous testing showed that\ncontext elevation was missing.\n\nstable/wallaby: This is not a direct backport of the stable/xena change\nas parts of the original bug does not exists on stable/wallaby. Namely\nthe live migration issue is not reproducible as the bug there only\nintroduced during Xena [1]\n\n[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py\n\nChange-Id: Icb35e20179572fb713a397b4605312cf3294b41b\nCloses-Bug: #1945310\n(cherry picked from commit 49b481ec98087351ce1366d3afb9f4a79cd16ae3)\n(cherry picked from commit d960c24130baf27921ef9231c1f962b6486a3523)\n'}, {'number': 6, 'created': '2022-04-21 09:45:45.000000000', 'files': ['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py', 'nova/tests/functional/test_servers.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/bb9323b7ec8c06da39222921c38d6e95fde30dc1', 'message': 'Query ports with admin client to get resource_request\n\nThe port.resource_request field is admin only. Nova depends on the\nvalue of this field to do a proper scheduling and resource allocation\nand deallocation for ports with resource request as well as to update\nthe port.binding:profile.allocation field with the resource providers\nthe requested resources are fulfilled from. However in some cases nova\ndoes not use a neutron admin client / elevated context to read the\nport. In this case neutron returns None for the port.resource_request\nfield and nova thinks that the port has no resource request.\n\nThis patch fixes all the places where previous testing showed that\ncontext elevation was missing.\n\nstable/wallaby: This is not a direct backport of the stable/xena change\nas parts of the original bug does not exists on stable/wallaby. Namely\nthe live migration issue is not reproducible as the bug there only\nintroduced during Xena [1]\n\n[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py\n\nChange-Id: Icb35e20179572fb713a397b4605312cf3294b41b\nCloses-Bug: #1945310\n(cherry picked from commit 49b481ec98087351ce1366d3afb9f4a79cd16ae3)\n(cherry picked from commit d960c24130baf27921ef9231c1f962b6486a3523)\n'}]",7,811416,bb9323b7ec8c06da39222921c38d6e95fde30dc1,40,2,6,9708,,,0,"Query ports with admin client to get resource_request

The port.resource_request field is admin only. Nova depends on the
value of this field to do a proper scheduling and resource allocation
and deallocation for ports with resource request as well as to update
the port.binding:profile.allocation field with the resource providers
the requested resources are fulfilled from. However in some cases nova
does not use a neutron admin client / elevated context to read the
port. In this case neutron returns None for the port.resource_request
field and nova thinks that the port has no resource request.

This patch fixes all the places where previous testing showed that
context elevation was missing.

stable/wallaby: This is not a direct backport of the stable/xena change
as parts of the original bug does not exists on stable/wallaby. Namely
the live migration issue is not reproducible as the bug there only
introduced during Xena [1]

[1] https://review.opendev.org/c/openstack/nova/+/800087/23/nova/conductor/tasks/live_migrate.py

Change-Id: Icb35e20179572fb713a397b4605312cf3294b41b
Closes-Bug: #1945310
(cherry picked from commit 49b481ec98087351ce1366d3afb9f4a79cd16ae3)
(cherry picked from commit d960c24130baf27921ef9231c1f962b6486a3523)
",git fetch https://review.opendev.org/openstack/nova refs/changes/16/811416/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py', 'nova/tests/functional/test_servers.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",5,2bb457ea786f7fa83e3faf7d6b3eb1578ae6e730,bug/1945310," @mock.patch( 'nova.context.RequestContext.elevated', new=mock.Mock(return_value=mock.sentinel.admin_context) ) mock_show_port.assert_called_once_with( mock.sentinel.admin_context, 'foo_port_id') @mock.patch( 'nova.context.RequestContext.elevated', new=mock.Mock(return_value=mock.sentinel.admin_context) ) mock.sentinel.admin_context, mock.sentinel.port_id)"," mock_show_port.assert_called_once_with(self.context, 'foo_port_id') self.context, mock.sentinel.port_id)",23,16
openstack%2Fnova~840841,openstack/nova,stable/wallaby,I20fb4ea96d5dfabfc4be3b5ecec0e4e6c5b3a318,Isolate PCI tracker unit tests,ABANDONED,2022-05-06 09:01:55.000000000,2024-03-05 19:06:56.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 09:01:55.000000000', 'files': ['nova/tests/unit/pci/test_manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/3335d9317994ea3490fbc9945e0e961c42aef907', 'message': 'Isolate PCI tracker unit tests\n\nDuring the testing If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 we noticed\nthat the unit test cases of PciTracker._set_hvdev are changing and\nleaking global state leading to unstable tests.\n\nTo reproduce on master, duplicate the\ntest_set_hvdev_remove_tree_maintained_with_allocations test case and run\nPciDevTrackerTestCase serially. The duplicated test case will fail with\n\n  File ""/nova/nova/objects/pci_device.py"", line 238, in _from_db_object\n  setattr(pci_device, key, db_dev[key])\n  KeyError: \'id\'\n\nThis is caused by the fact that the test data is defined on module\nlevel, both _create_tracker and _set_hvdevs modifies the devices\npassed to them, and some test mixes passing db dicts to _set_hvdevs\nthat expects pci dicts from the hypervisor.\n\nThis patch fixes multiple related issues:\n* always deepcopy what _create_tracker takes as that list is later\n  returned to the PciTracker via a mock and the tracker might modify\n  what it got\n\n* ensure that _create_tracker takes db dicts (with id field) while\n  _set_hvdevs takes pci dicts in the hypervisor format (without id\n  field)\n\n* always deepcopy what is passed to _set_hvdevs as the PciTracker modify\n  what it gets.\n\n* normalize when the deepcopy happens to give a safe patter for future\n  test cases\n\nConflicts:\n      nova/tests/unit/pci/test_manager.py due to\n      Iad2e4da4546b80a016e477577d23accb2606a6e4 is not in stable/wallaby\n\nChange-Id: I20fb4ea96d5dfabfc4be3b5ecec0e4e6c5b3a318\n(cherry picked from commit c58376db75917444831934963fa75b4b57f08818)\n(cherry picked from commit f04cfd42359d555e746df0e2c48d989d0c3244f1)\n(cherry picked from commit 1023580f6d9008f5e56f6d3905b6e227bd2bff67)\n'}]",0,840841,3335d9317994ea3490fbc9945e0e961c42aef907,6,1,1,9708,,,0,"Isolate PCI tracker unit tests

During the testing If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 we noticed
that the unit test cases of PciTracker._set_hvdev are changing and
leaking global state leading to unstable tests.

To reproduce on master, duplicate the
test_set_hvdev_remove_tree_maintained_with_allocations test case and run
PciDevTrackerTestCase serially. The duplicated test case will fail with

  File ""/nova/nova/objects/pci_device.py"", line 238, in _from_db_object
  setattr(pci_device, key, db_dev[key])
  KeyError: 'id'

This is caused by the fact that the test data is defined on module
level, both _create_tracker and _set_hvdevs modifies the devices
passed to them, and some test mixes passing db dicts to _set_hvdevs
that expects pci dicts from the hypervisor.

This patch fixes multiple related issues:
* always deepcopy what _create_tracker takes as that list is later
  returned to the PciTracker via a mock and the tracker might modify
  what it got

* ensure that _create_tracker takes db dicts (with id field) while
  _set_hvdevs takes pci dicts in the hypervisor format (without id
  field)

* always deepcopy what is passed to _set_hvdevs as the PciTracker modify
  what it gets.

* normalize when the deepcopy happens to give a safe patter for future
  test cases

Conflicts:
      nova/tests/unit/pci/test_manager.py due to
      Iad2e4da4546b80a016e477577d23accb2606a6e4 is not in stable/wallaby

Change-Id: I20fb4ea96d5dfabfc4be3b5ecec0e4e6c5b3a318
(cherry picked from commit c58376db75917444831934963fa75b4b57f08818)
(cherry picked from commit f04cfd42359d555e746df0e2c48d989d0c3244f1)
(cherry picked from commit 1023580f6d9008f5e56f6d3905b6e227bd2bff67)
",git fetch https://review.opendev.org/openstack/nova refs/changes/41/840841/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/unit/pci/test_manager.py'],1,3335d9317994ea3490fbc9945e0e961c42aef907,bug/1969496,"fake_pci_devs = [fake_pci, fake_pci_1, fake_pci_2] fake_pci_devs_tree = [fake_pci_3, fake_pci_4, fake_pci_5] self.fake_devs = copy.deepcopy(fake_devs) self.fake_devs = copy.deepcopy(fake_db_devs) self._create_tracker(fake_db_devs) fake_pci_devs = [fake_pci, fake_pci_1, fake_pci_2, fake_pci_3] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_devs = [fake_pci_3, fake_pci_4, fake_pci_5, fake_new_device] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_devs = [fake_pci, fake_pci_2, fake_pci_v2] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) self.tracker._set_hvdevs(copy.deepcopy([fake_pci])) fake_pci_devs = [fake_pci_3, fake_pci_4] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) all_db_devs = fake_db_devs_tree all_pci_devs = fake_pci_devs_tree self._create_tracker(all_db_devs) self.tracker._set_hvdevs(copy.deepcopy(all_pci_devs)) fake_pci_devs = [dev for dev in all_pci_devs self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_devs = [fake_pci, fake_pci_2, fake_pci_3] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_3 = dict(fake_pci_1, address='0000:00:00.4') fake_devs_numa = copy.deepcopy(fake_pci_devs) fake_devs_numa.append(fake_pci_3) self.tracker._set_hvdevs(copy.deepcopy(fake_devs_numa)) fake_pci_devs = [fake_pci, fake_pci_2, fake_pci_v3] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs))"," self.fake_devs = fake_devs self.fake_devs = fake_db_devs[:] self._create_tracker(fake_db_devs[:]) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_1), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_3)] self.tracker._set_hvdevs(fake_pci_devs) fake_pci_devs = [copy.deepcopy(fake_pci_3), copy.deepcopy(fake_pci_4), copy.deepcopy(fake_pci_5), copy.deepcopy(fake_new_device)] self.tracker._set_hvdevs(fake_pci_devs) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_v2)] self.tracker._set_hvdevs(fake_pci_devs) self.tracker._set_hvdevs([fake_pci]) fake_pci_devs = [copy.deepcopy(fake_pci_3), copy.deepcopy(fake_pci_4)] self.tracker._set_hvdevs(fake_pci_devs) all_devs = fake_db_devs_tree[:] self._create_tracker(all_devs) self.tracker._set_hvdevs(all_devs) fake_pci_devs = [dev for dev in all_devs self.tracker._set_hvdevs(fake_pci_devs) self.tracker._set_hvdevs(fake_pci_devs) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_3)] self.tracker._set_hvdevs(fake_pci_devs) fake_db_dev_3 = dict(fake_db_dev_1, id=4, address='0000:00:00.4') fake_devs_numa = copy.deepcopy(fake_db_devs) fake_devs_numa.append(fake_db_dev_3) self.tracker._set_hvdevs(fake_devs_numa) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_v3)] self.tracker._set_hvdevs(fake_pci_devs)",30,33
openstack%2Fnova~840843,openstack/nova,stable/wallaby,I7b432d7a32aeb1ab765d1f731691c7841a8f1440,Simulate bug 1969496,ABANDONED,2022-05-06 09:01:55.000000000,2024-03-05 19:06:52.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 09:01:55.000000000', 'files': ['nova/tests/unit/pci/test_manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/e153335a5e70f7e694d344665614279fc6d58136', 'message': ""Simulate bug 1969496\n\nAs If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for\nthe pci_device table to become inconsistent. Parent PF can be in\n'available' state while children VFs are still in 'unavailable' state.\nIn this situation the PF is schedulable but the PCI claim will fail to\nwhen try to mark the dependent VFs unavailable.\n\nThis patch adds a test case that shows the error.\n\nRelated-Bug: #1969496\n\nChange-Id: I7b432d7a32aeb1ab765d1f731691c7841a8f1440\n(cherry picked from commit 9ee5d2c66255f83cc8a66f1b5648fa13e1d73f47)\n(cherry picked from commit 23c48b670668e9cae886b5113c776077780f5581)\n(cherry picked from commit 96e00c30fc7356874a13f75eb5ee46c87fb448d0)\n""}]",0,840843,e153335a5e70f7e694d344665614279fc6d58136,6,1,1,9708,,,0,"Simulate bug 1969496

As If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for
the pci_device table to become inconsistent. Parent PF can be in
'available' state while children VFs are still in 'unavailable' state.
In this situation the PF is schedulable but the PCI claim will fail to
when try to mark the dependent VFs unavailable.

This patch adds a test case that shows the error.

Related-Bug: #1969496

Change-Id: I7b432d7a32aeb1ab765d1f731691c7841a8f1440
(cherry picked from commit 9ee5d2c66255f83cc8a66f1b5648fa13e1d73f47)
(cherry picked from commit 23c48b670668e9cae886b5113c776077780f5581)
(cherry picked from commit 96e00c30fc7356874a13f75eb5ee46c87fb448d0)
",git fetch https://review.opendev.org/openstack/nova refs/changes/43/840843/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/unit/pci/test_manager.py'],1,e153335a5e70f7e694d344665614279fc6d58136,bug/1969496,"from nova import exception def test_claim_available_pf_while_child_vf_is_unavailable(self): # NOTE(gibi): this is bug 1969496. The state created here is # inconsistent and should not happen. But it did happen in some cases # where we were not able to track down the way how it happened. # We start with a PF parent and a VF child. The PF is available and # the VF is unavailable. pf = copy.deepcopy(fake_db_dev_3) vf = copy.deepcopy(fake_db_dev_4) vf['status'] = fields.PciDeviceStatus.UNAVAILABLE self._create_tracker([pf, vf]) pf_dev = self._get_device_by_address(pf['address']) self.assertEqual('available', pf_dev.status) vf_dev = self._get_device_by_address(vf['address']) self.assertEqual('unavailable', vf_dev.status) pci_requests_obj = self._create_pci_requests_object( [ { 'count': 1, 'spec': [{'dev_type': fields.PciDeviceType.SRIOV_PF}] } ], instance_uuid=uuidsentinel.instance1, ) # now try to claim and allocate the PF. It should work as it is # available # This is bug 1969496 as the claim fails with exception ex = self.assertRaises( exception.PciDevicePoolEmpty, self.tracker.claim_instance, mock.sentinel.context, pci_requests_obj, None ) self.assertIn( 'Attempt to consume PCI device 1:0000:00:02.1 from empty pool', str(ex) ) pf_dev = self._get_device_by_address(pf['address']) self.assertEqual('available', pf_dev.status) vf_dev = self._get_device_by_address(vf['address']) self.assertEqual('unavailable', vf_dev.status) # This should work when the bug is fixed # self.tracker.claim_instance( # mock.sentinel.context, pci_requests_obj, None) # self.tracker.allocate_instance({'uuid': uuidsentinel.instance1}) # pf_dev = self._get_device_by_address(pf['address']) # self.assertEqual('allocated', pf_dev.status) # vf_dev = self._get_device_by_address(vf['address']) # self.assertEqual('unavailable', vf_dev.status) ",,56,0
openstack%2Fnova~840842,openstack/nova,stable/wallaby,If9ab424cc7375a1f0d41b03f01c4a823216b3eb8,Remove unavailable but not reported PCI devices at startup,ABANDONED,2022-05-06 09:01:55.000000000,2024-03-05 19:06:48.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 09:01:55.000000000', 'files': ['nova/objects/pci_device.py', 'nova/pci/manager.py', 'nova/tests/unit/objects/test_pci_device.py', 'nova/tests/unit/pci/test_manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/59ae44754ebce106b23bc697a822d181cdda41c6', 'message': 'Remove unavailable but not reported PCI devices at startup\n\nWe saw in the field that the pci_devices table can end up in\ninconsistent state after a compute node HW failure and re-deployment.\nThere could be dependent devices where the parent PF is in available\nstate while the children VFs are in unavailable state. (Before the HW\nfault the PF was allocated hence the VFs was marked unavailable).\n\nIn this state this PF is still schedulable but during the\nPCI claim the handling of dependent devices in the PCI tracker fill fail\nwith the error: ""Attempt to consume PCI device XXX from empty pool"".\n\nThe reason of the failure is that when the PF is claimed, all the\nchildren VFs are marked unavailable. But if the VF is already\nunavailable such step fails.\n\nOne way the deployer might try to recover from this state is to remove\nthe VFs from the hypervisor and restart the compute agent. The compute\nstartup already has a logic to delete PCI devices that are unused and\nnot reported by the hypervisor. However this logic only removed devices\nin \'available\' state and ignored devices in \'unavailable\' state.\n\nIf a device is unused and the hypervisor is not reporting the device any\nmore then it is safe to delete that device from the PCI tracker. So this\npatch extends the logic to allow deleting \'unavailable\' devices. There\nis a small window when dependent PCI device is in \'unclaimable\' state.\nFrom cleanup perspective this is an analogous state. So it is also\nadded to the cleanup logic.\n\nRelated-Bug: #1969496\nChange-Id: If9ab424cc7375a1f0d41b03f01c4a823216b3eb8\n(cherry picked from commit 284ea72e96604bdf16d1c5c4db47247334841b2f)\n(cherry picked from commit d7bca631fea348fb56cc46c5680643bacd82513e)\n(cherry picked from commit 580a4b14ae367e327229482decca0cb6cdf6e9d8)\n'}]",0,840842,59ae44754ebce106b23bc697a822d181cdda41c6,7,1,1,9708,,,0,"Remove unavailable but not reported PCI devices at startup

We saw in the field that the pci_devices table can end up in
inconsistent state after a compute node HW failure and re-deployment.
There could be dependent devices where the parent PF is in available
state while the children VFs are in unavailable state. (Before the HW
fault the PF was allocated hence the VFs was marked unavailable).

In this state this PF is still schedulable but during the
PCI claim the handling of dependent devices in the PCI tracker fill fail
with the error: ""Attempt to consume PCI device XXX from empty pool"".

The reason of the failure is that when the PF is claimed, all the
children VFs are marked unavailable. But if the VF is already
unavailable such step fails.

One way the deployer might try to recover from this state is to remove
the VFs from the hypervisor and restart the compute agent. The compute
startup already has a logic to delete PCI devices that are unused and
not reported by the hypervisor. However this logic only removed devices
in 'available' state and ignored devices in 'unavailable' state.

If a device is unused and the hypervisor is not reporting the device any
more then it is safe to delete that device from the PCI tracker. So this
patch extends the logic to allow deleting 'unavailable' devices. There
is a small window when dependent PCI device is in 'unclaimable' state.
From cleanup perspective this is an analogous state. So it is also
added to the cleanup logic.

Related-Bug: #1969496
Change-Id: If9ab424cc7375a1f0d41b03f01c4a823216b3eb8
(cherry picked from commit 284ea72e96604bdf16d1c5c4db47247334841b2f)
(cherry picked from commit d7bca631fea348fb56cc46c5680643bacd82513e)
(cherry picked from commit 580a4b14ae367e327229482decca0cb6cdf6e9d8)
",git fetch https://review.opendev.org/openstack/nova refs/changes/42/840842/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/pci_device.py', 'nova/pci/manager.py', 'nova/tests/unit/objects/test_pci_device.py', 'nova/tests/unit/pci/test_manager.py']",4,59ae44754ebce106b23bc697a822d181cdda41c6,bug/1969496," def _get_device_by_address(self, address): devs = [dev for dev in self.tracker.pci_devs if dev.address == address] if len(devs) == 1: return devs[0] if devs: raise ValueError('ambiguous address', devs) else: raise ValueError('device not found', address) def test_set_hvdevs_unavailable_vf_removed(self): # We start with a PF parent and two VF children self._create_tracker([fake_db_dev_3, fake_db_dev_4, fake_db_dev_5]) pci_requests_obj = self._create_pci_requests_object( [ { 'count': 1, 'spec': [{'dev_type': fields.PciDeviceType.SRIOV_PF}] } ], instance_uuid=uuidsentinel.instance1, ) # then claim and allocate the PF that makes the VFs unavailable self.tracker.claim_instance( mock.sentinel.context, pci_requests_obj, None) self.tracker.allocate_instance({'uuid': uuidsentinel.instance1}) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('allocated', dev3_pf.status) self.assertEqual(uuidsentinel.instance1, dev3_pf.instance_uuid) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('unavailable', dev4_vf.status) dev5_vf = self._get_device_by_address(fake_db_dev_5['address']) self.assertEqual('unavailable', dev5_vf.status) # now simulate that one VF (dev_5) is removed from the hypervisor and # the compute is restarted. As the VF is not claimed or allocated we # are free to remove it from the tracker. self.tracker._set_hvdevs(copy.deepcopy([fake_pci_3, fake_pci_4])) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('allocated', dev3_pf.status) self.assertEqual(uuidsentinel.instance1, dev3_pf.instance_uuid) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('unavailable', dev4_vf.status) dev5_vf = self._get_device_by_address(fake_db_dev_5['address']) self.assertEqual('removed', dev5_vf.status) def test_set_hvdevs_unavailable_pf_removed(self): # We start with one PF parent and one child VF self._create_tracker([fake_db_dev_3, fake_db_dev_4]) pci_requests_obj = self._create_pci_requests_object( [ { 'count': 1, 'spec': [{'dev_type': fields.PciDeviceType.SRIOV_VF}] } ], instance_uuid=uuidsentinel.instance1, ) # Then we claim and allocate the VF that makes the PF unavailable self.tracker.claim_instance( mock.sentinel.context, pci_requests_obj, None) self.tracker.allocate_instance({'uuid': uuidsentinel.instance1}) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('unavailable', dev3_pf.status) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('allocated', dev4_vf.status) self.assertEqual(uuidsentinel.instance1, dev4_vf.instance_uuid) # now simulate that the parent PF is removed from the hypervisor and # the compute is restarted. As the PF is not claimed or allocated we # are free to remove it from the tracker. self.tracker._set_hvdevs(copy.deepcopy([fake_pci_4])) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('removed', dev3_pf.status) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('allocated', dev4_vf.status) self.assertEqual(uuidsentinel.instance1, dev4_vf.instance_uuid) ",,123,7
openstack%2Fnova~840844,openstack/nova,stable/wallaby,I575ce06bcc913add7db0849f85728371da2032fc,Allow claiming PCI PF if child VF is unavailable,ABANDONED,2022-05-06 09:01:55.000000000,2024-03-05 19:06:45.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 09:01:55.000000000', 'files': ['nova/objects/pci_device.py', 'nova/tests/unit/pci/test_manager.py', 'nova/pci/stats.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/a763104217f2188b398d7eddaf3d21b91c66d2fa', 'message': ""Allow claiming PCI PF if child VF is unavailable\n\nAs If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for\nthe pci_device table to become inconsistent. Parent PF can be in\n'available' state while children VFs are still in 'unavailable' state.\nIn this situation the PF is schedulable but the PCI claim will fail\nwhen try to mark the dependent VFs unavailable.\n\nThis patch changes the PCI claim logic to allow claiming the parent PF\nin the inconsistent situation as we assume that it is safe to do so.\nThis claim also fixed the inconsistency so that when the parent PF is\nfreed the children VFs become available again.\n\nCloses-Bug: #1969496\nChange-Id: I575ce06bcc913add7db0849f85728371da2032fc\n(cherry picked from commit 3af2ecc13fa9334de8418accaed4fffefefb41da)\n(cherry picked from commit 4ca4b2e6bc84ca2c209653b46d7428c6c7cbd270)\n(cherry picked from commit 1dbd45be4556c034eb469462698804984d95b503)\n""}]",2,840844,a763104217f2188b398d7eddaf3d21b91c66d2fa,16,1,1,9708,,,0,"Allow claiming PCI PF if child VF is unavailable

As If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for
the pci_device table to become inconsistent. Parent PF can be in
'available' state while children VFs are still in 'unavailable' state.
In this situation the PF is schedulable but the PCI claim will fail
when try to mark the dependent VFs unavailable.

This patch changes the PCI claim logic to allow claiming the parent PF
in the inconsistent situation as we assume that it is safe to do so.
This claim also fixed the inconsistency so that when the parent PF is
freed the children VFs become available again.

Closes-Bug: #1969496
Change-Id: I575ce06bcc913add7db0849f85728371da2032fc
(cherry picked from commit 3af2ecc13fa9334de8418accaed4fffefefb41da)
(cherry picked from commit 4ca4b2e6bc84ca2c209653b46d7428c6c7cbd270)
(cherry picked from commit 1dbd45be4556c034eb469462698804984d95b503)
",git fetch https://review.opendev.org/openstack/nova refs/changes/44/840844/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/pci_device.py', 'nova/tests/unit/pci/test_manager.py', 'nova/pci/stats.py']",3,a763104217f2188b398d7eddaf3d21b91c66d2fa,bug/1969496, free_devs = self.get_free_devs() for vf in vfs_list: # NOTE(gibi): do not try to remove a device that are # already removed if vf in free_devs: self.remove_device(vf), for vf in vfs_list: self.remove_device(vf),162,26
openstack%2Fnova~845838,openstack/nova,stable/wallaby,Ic46345ceeb445164aea6ae9b35c457c6150765f6,Fix eventlet.tpool import,ABANDONED,2022-06-15 10:43:27.000000000,2024-03-05 19:06:41.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-06-15 10:43:27.000000000', 'files': ['nova/utils.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/33663379018907ae8c931978ee5608eb93881bea', 'message': 'Fix eventlet.tpool import\n\nCurrently nova.utils.tpool_execute() only works by chance. And as the\nbug report shows there are env where it fails.\n\nThe nova.utils.tpool_execute() call tries to uses eventlet.tpool.execute\nbut the tpool module is not imported by the utils module only eventlet.\nIn devstack it works by chance as the wsgi init actually imports\neventlet.tpool indirectly via:\n\nTraceback (most recent call last):\n  File ""<stdin>"", line 1, in <module>\n  File ""/opt/stack/nova/nova/api/openstack/compute/__init__.py"", line 21, in <module>\n    from nova.api.openstack.compute.routes import APIRouterV21 # noqa\n  File ""/opt/stack/nova/nova/api/openstack/compute/routes.py"", line 20, in <module>\n    from nova.api.openstack.compute import admin_actions\n  File ""/opt/stack/nova/nova/api/openstack/compute/admin_actions.py"", line 17, in <module>\n    from nova.api.openstack import common\n  File ""/opt/stack/nova/nova/api/openstack/common.py"", line 27, in <module>\n    from nova.compute import task_states\n  File ""/opt/stack/nova/nova/compute/task_states.py"", line 26, in <module>\n    from nova.objects import fields\n  File ""/opt/stack/nova/nova/objects/fields.py"", line 24, in <module>\n    from nova.network import model as network_model\n  File ""/opt/stack/nova/nova/network/model.py"", line 23, in <module>\n    from nova import utils\n  File ""/opt/stack/nova/nova/utils.py"", line 39, in <module>\n    from oslo_concurrency import processutils\n  File ""/usr/local/lib/python3.8/dist-packages/oslo_concurrency/processutils.py"", line 57, in <module>\n    from eventlet import tpool\n\nThis was broken since I8dbc579e0037969aab4f2bb500fccfbde4190726. This\npatch adds the correct import statement.\n\nChange-Id: Ic46345ceeb445164aea6ae9b35c457c6150765f6\nCloses-Bug: #1915400\n(cherry picked from commit b2d28f890872747d099a262e4a208e146b882f3f)\n(cherry picked from commit a9f444a997cd0a26aae3dac821299adf0e944121)\n(cherry picked from commit b57fce8d14b94059c65526450468d48dab736983)\n'}]",2,845838,33663379018907ae8c931978ee5608eb93881bea,20,2,1,9708,,,0,"Fix eventlet.tpool import

Currently nova.utils.tpool_execute() only works by chance. And as the
bug report shows there are env where it fails.

The nova.utils.tpool_execute() call tries to uses eventlet.tpool.execute
but the tpool module is not imported by the utils module only eventlet.
In devstack it works by chance as the wsgi init actually imports
eventlet.tpool indirectly via:

Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""/opt/stack/nova/nova/api/openstack/compute/__init__.py"", line 21, in <module>
    from nova.api.openstack.compute.routes import APIRouterV21 # noqa
  File ""/opt/stack/nova/nova/api/openstack/compute/routes.py"", line 20, in <module>
    from nova.api.openstack.compute import admin_actions
  File ""/opt/stack/nova/nova/api/openstack/compute/admin_actions.py"", line 17, in <module>
    from nova.api.openstack import common
  File ""/opt/stack/nova/nova/api/openstack/common.py"", line 27, in <module>
    from nova.compute import task_states
  File ""/opt/stack/nova/nova/compute/task_states.py"", line 26, in <module>
    from nova.objects import fields
  File ""/opt/stack/nova/nova/objects/fields.py"", line 24, in <module>
    from nova.network import model as network_model
  File ""/opt/stack/nova/nova/network/model.py"", line 23, in <module>
    from nova import utils
  File ""/opt/stack/nova/nova/utils.py"", line 39, in <module>
    from oslo_concurrency import processutils
  File ""/usr/local/lib/python3.8/dist-packages/oslo_concurrency/processutils.py"", line 57, in <module>
    from eventlet import tpool

This was broken since I8dbc579e0037969aab4f2bb500fccfbde4190726. This
patch adds the correct import statement.

Change-Id: Ic46345ceeb445164aea6ae9b35c457c6150765f6
Closes-Bug: #1915400
(cherry picked from commit b2d28f890872747d099a262e4a208e146b882f3f)
(cherry picked from commit a9f444a997cd0a26aae3dac821299adf0e944121)
(cherry picked from commit b57fce8d14b94059c65526450468d48dab736983)
",git fetch https://review.opendev.org/openstack/nova refs/changes/38/845838/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/utils.py'],1,33663379018907ae8c931978ee5608eb93881bea,bug/1915400,"from eventlet import tpool tpool.execute(func, *args, **kwargs)"," eventlet.tpool.execute(func, *args, **kwargs)",2,1
openstack%2Fnova~819180,openstack/nova,stable/wallaby,Iae4fd0579f71d3ba6793dbdb037275352d7e57b0,Retry image download if it's corrupted,ABANDONED,2021-11-25 13:55:23.000000000,2024-03-05 19:06:38.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-11-25 13:55:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/26a49045344ff3ed7a36dbb6e6f5e866e8190cc5', 'message': 'Retry image download if it\'s corrupted\n\nAdding IOError in list of catching exceptions in order to\nfix behavior when nova-compute wouldn\'t retry image download\nwhen got ""Corrupt image download"" error from glanceclient\nand had num_retries config option set.\n\nCloses-Bug: #1950657\nChange-Id: Iae4fd0579f71d3ba6793dbdb037275352d7e57b0\n(cherry picked from commit ce493273b9404530dfa8ecfe3eaa3d6c81a20e39)\n'}, {'number': 2, 'created': '2022-10-27 13:21:30.000000000', 'files': ['nova/image/glance.py', 'releasenotes/notes/bug-retry-corrupted-download-5798b0df44a00e4e.yaml', 'nova/tests/unit/image/test_glance.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/8e05222fd221501aac004d64f59783eb01bddf29', 'message': 'Retry image download if it\'s corrupted\n\nAdding IOError in list of catching exceptions in order to\nfix behavior when nova-compute wouldn\'t retry image download\nwhen got ""Corrupt image download"" error from glanceclient\nand had num_retries config option set.\n\nCloses-Bug: #1950657\nChange-Id: Iae4fd0579f71d3ba6793dbdb037275352d7e57b0\n(cherry picked from commit ce493273b9404530dfa8ecfe3eaa3d6c81a20e39)\n(cherry picked from commit b44ec0dc4927046d15525af78ab9d534cea9ce69)\n'}]",1,819180,8e05222fd221501aac004d64f59783eb01bddf29,13,2,2,30609,,,0,"Retry image download if it's corrupted

Adding IOError in list of catching exceptions in order to
fix behavior when nova-compute wouldn't retry image download
when got ""Corrupt image download"" error from glanceclient
and had num_retries config option set.

Closes-Bug: #1950657
Change-Id: Iae4fd0579f71d3ba6793dbdb037275352d7e57b0
(cherry picked from commit ce493273b9404530dfa8ecfe3eaa3d6c81a20e39)
(cherry picked from commit b44ec0dc4927046d15525af78ab9d534cea9ce69)
",git fetch https://review.opendev.org/openstack/nova refs/changes/80/819180/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/image/glance.py', 'releasenotes/notes/bug-retry-corrupted-download-5798b0df44a00e4e.yaml', 'nova/tests/unit/image/test_glance.py']",3,26a49045344ff3ed7a36dbb6e6f5e866e8190cc5,bug/1950657," def test_retry_works_for_corrupted_image(self, create_client_mock, sleep_mock, shuffle_mock): side_effect = [ IOError, None ] self._mock_client_images_response(create_client_mock, side_effect) self.flags(num_retries=1, group='glance') client = glance.GlanceClientWrapper() self.assert_retry_attempted(sleep_mock, client, 'https://host2:9293') @mock.patch('random.shuffle') @mock.patch('time.sleep') @mock.patch('nova.image.glance._glanceclient_from_endpoint')",,23,1
openstack%2Fnova~842925,openstack/nova,stable/wallaby,I8f7f26e10519c87e06de47bd4d9845151f889129,Reproducer unit test for bug 1934094,ABANDONED,2022-05-23 09:11:55.000000000,2024-03-05 19:06:34.000000000,,"[{'_account_id': 22348}, {'_account_id': 29037}, {'_account_id': 34860}]","[{'number': 1, 'created': '2022-05-23 09:11:55.000000000', 'files': ['nova/tests/unit/compute/test_shelve.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/77b9bbd0e5926ffad382ae97099cc829153000a5', 'message': 'Reproducer unit test for bug 1934094\n\nRelated bug: #1934094\n\nSigned-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>\nChange-Id: I8f7f26e10519c87e06de47bd4d9845151f889129\n(cherry picked from commit 78e10f5f14a018fd1d96ea242923631459acb62c)\n(cherry picked from commit ec73ff1f78714eb62686d0f39fc4e79ffdf559af)\n'}]",2,842925,77b9bbd0e5926ffad382ae97099cc829153000a5,8,3,1,9708,,,0,"Reproducer unit test for bug 1934094

Related bug: #1934094

Signed-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>
Change-Id: I8f7f26e10519c87e06de47bd4d9845151f889129
(cherry picked from commit 78e10f5f14a018fd1d96ea242923631459acb62c)
(cherry picked from commit ec73ff1f78714eb62686d0f39fc4e79ffdf559af)
",git fetch https://review.opendev.org/openstack/nova refs/changes/25/842925/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/unit/compute/test_shelve.py'],1,77b9bbd0e5926ffad382ae97099cc829153000a5,bug/1934094," def test_unshelve_spawn_fails_cleanup_instance_image_ref(self): """"""Tests error handling when a instance fails to unshelve and makes sure to revert instance.image_ref to the initial value instead of keeping the one of shelved image https://bugs.launchpad.net/nova/+bug/1934094 """""" instance = self._create_fake_instance_obj() # TODO(pslestang) to uncomment when bug 1934094 is fixed # initial_image_ref = instance.image_ref fake_spec = objects.RequestSpec() shelved_image = {'id': uuids.image_id} with mock.patch.object(self.compute.driver, 'spawn', side_effect=test.TestingException('Spawn Failed')): self.assertRaises(test.TestingException, self.compute.unshelve_instance, self.context, instance, image=shelved_image, filter_properties={}, node='fake-node', request_spec=fake_spec, accel_uuids=[]) # FIXME(pslestang) Until bug 1934094 is fixed # The instance.image_ref is set to shelved_image.id but should be # equal to initial_image_ref self.assertEqual(instance.image_ref, shelved_image['id']) ",,24,0
openstack%2Fnova~842926,openstack/nova,stable/wallaby,Id908a7224ff3378b3b51726bbfa8b5805d38ca59,Fix instance's image_ref lost on failed unshelving,ABANDONED,2022-05-23 09:11:55.000000000,2024-03-05 19:06:30.000000000,,"[{'_account_id': 22348}, {'_account_id': 29037}, {'_account_id': 34860}]","[{'number': 1, 'created': '2022-05-23 09:11:55.000000000', 'files': ['nova/tests/unit/compute/test_shelve.py', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/328cf1073dca4c092f29cf192aaab14eae03143b', 'message': ""Fix instance's image_ref lost on failed unshelving\n\nCloses-Bug: #1934094\n\nSigned-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>\nChange-Id: Id908a7224ff3378b3b51726bbfa8b5805d38ca59\n(cherry picked from commit 518b952bdeb6ec29252b56527b8c8d7b32abe1b5)\n(cherry picked from commit 076f95371a093a0e594c0d08e410676c9a73c9d0)\n""}]",2,842926,328cf1073dca4c092f29cf192aaab14eae03143b,9,3,1,9708,,,0,"Fix instance's image_ref lost on failed unshelving

Closes-Bug: #1934094

Signed-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>
Change-Id: Id908a7224ff3378b3b51726bbfa8b5805d38ca59
(cherry picked from commit 518b952bdeb6ec29252b56527b8c8d7b32abe1b5)
(cherry picked from commit 076f95371a093a0e594c0d08e410676c9a73c9d0)
",git fetch https://review.opendev.org/openstack/nova refs/changes/26/842926/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_shelve.py', 'nova/compute/manager.py']",2,328cf1073dca4c092f29cf192aaab14eae03143b,bug/1934094, # Set the image_ref back to initial image_ref because instance # object might have been saved with image['id'] # https://bugs.launchpad.net/nova/+bug/1934094 instance.image_ref = shelved_image_ref,,6,6
openstack%2Fnova~838332,openstack/nova,stable/wallaby,Ia208ef0dd0bab1c59d025234f4da7537c39cda61,Adds regression test for bug LP#1944619,ABANDONED,2022-04-18 18:02:43.000000000,2024-03-05 19:06:26.000000000,,"[{'_account_id': 4690}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-04-18 18:02:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/7efb2921fd3c795a7038cf82af6ff610ab335e27', 'message': 'Adds regression test for bug LP#1944619\n\nRelated-bug: #1944619\nChange-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61\n(cherry picked from commit d43538712c034023bdb3e25cd7adfdee409ed596)\n(cherry picked from commit fd6b8da64e7d0cb6bc1c7c5e8221ea5e7d7de97e)\n'}, {'number': 2, 'created': '2022-04-18 19:09:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/7045b7042d884e05e9c172490310154a9bd94a59', 'message': 'Adds regression test for bug LP#1944619\n\nRelated-bug: #1944619\nChange-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61\n(cherry picked from commit d43538712c034023bdb3e25cd7adfdee409ed596)\n(cherry picked from commit fd6b8da64e7d0cb6bc1c7c5e8221ea5e7d7de97e)\n'}, {'number': 3, 'created': '2022-04-19 13:21:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/44a0023e8a86ec1011f2cfc4abd234b6ffa3a622', 'message': 'Adds regression test for bug LP#1944619\n\nRelated-bug: #1944619\nChange-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61\n(cherry picked from commit d43538712c034023bdb3e25cd7adfdee409ed596)\n(cherry picked from commit fd6b8da64e7d0cb6bc1c7c5e8221ea5e7d7de97e)\n'}, {'number': 4, 'created': '2022-05-25 17:33:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/9d75069eef74c5fd92e0de0b619eecdef120bb6c', 'message': 'Adds regression test for bug LP#1944619\n\nRelated-bug: #1944619\nChange-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61\n(cherry picked from commit 2ddb8bf53fdf9a17c09afc4987ab6efe8ba97696)\n(cherry picked from commit 29b94aa34ad954e617c2a0d6df0809765dced188)\n'}, {'number': 5, 'created': '2022-05-25 17:36:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a7edf3a96442f5112320c5918db8845bdb74d1bf', 'message': 'Adds regression test for bug LP#1944619\n\nRelated-bug: #1944619\nChange-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61\n(cherry picked from commit 2ddb8bf53fdf9a17c09afc4987ab6efe8ba97696)\n(cherry picked from commit 3402aa7a53a48e6abc0fb8a2620cd449fd3f75fe)\n'}, {'number': 6, 'created': '2022-10-21 19:18:38.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1944619.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/311ac46f3003fc541aef57211efdba0bd3420d6c', 'message': 'Adds regression test for bug LP#1944619\n\nRelated-bug: #1944619\nCloses-bug: #1964472\nChange-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61\n(cherry picked from commit 2ddb8bf53fdf9a17c09afc4987ab6efe8ba97696)\n(cherry picked from commit 3402aa7a53a48e6abc0fb8a2620cd449fd3f75fe)\n'}]",8,838332,311ac46f3003fc541aef57211efdba0bd3420d6c,37,2,6,10058,,,0,"Adds regression test for bug LP#1944619

Related-bug: #1944619
Closes-bug: #1964472
Change-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61
(cherry picked from commit 2ddb8bf53fdf9a17c09afc4987ab6efe8ba97696)
(cherry picked from commit 3402aa7a53a48e6abc0fb8a2620cd449fd3f75fe)
",git fetch https://review.opendev.org/openstack/nova refs/changes/32/838332/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1944619.py'],1,7efb2921fd3c795a7038cf82af6ff610ab335e27,bug/1944619,"# Copyright 2021, Canonical, Inc. All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import fixtures from nova import exception as nova_exceptions from nova.tests.fixtures import libvirt as fakelibvirt from nova.tests.functional import integrated_helpers from nova.tests.functional.libvirt import base class TestRollbackWithHWOffloadedOVS( base.LibvirtMigrationMixin, base.ServersTestBase, integrated_helpers.InstanceHelperMixin ): """"""Regression test for bug LP#1944619 Assert the behaviour observed in bug LP#1944619 caused by the live migration cleanup code being used to cleanup pre-live migration failures. When SRIOV devices are in use on a VM, that will cause the source host to try to re-attach a VIF not actually de-attached causing a failure. The exception mocked in pre_live_migration reproduce an arbitrary error that might cause the pre-live migration process to fail and rollback_live_migration_at_source reproduce the device re-attach failure. """""" api_major_version = 'v2.1' microversion = 'latest' ADMIN_API = True def setUp(self): super().setUp() self.start_compute( hostname='src', host_info=fakelibvirt.HostInfo( cpu_nodes=1, cpu_sockets=1, cpu_cores=4, cpu_threads=1)) self.start_compute( hostname='dest', host_info=fakelibvirt.HostInfo( cpu_nodes=1, cpu_sockets=1, cpu_cores=4, cpu_threads=1)) self.src = self.computes['src'] self.dest = self.computes['dest'] lib_path = ""nova.virt.libvirt.driver.LibvirtDriver"" funtion_path = ""rollback_live_migration_at_source"" mock_lib_path = ""%s.%s"" % (lib_path, funtion_path) self.libvirt_mock = self.useFixture( fixtures.MockPatch(mock_lib_path, side_effect=fakelibvirt.libvirtError( defmsg=""libVirt duplicated dev error""))) funtion_path = ""pre_live_migration"" mock_lib_path = ""%s.%s"" % (lib_path, funtion_path) self.useFixture(fixtures.MockPatch( mock_lib_path, side_effect=nova_exceptions.DestinationDiskExists( path='/var/non/existent')) ) def test_rollback_pre_live_migration(self): self.server = self._create_server(host='src', networks='none') # Live migrate the instance to another host self._live_migrate(self.server, migration_expected_state='error', server_expected_state='MIGRATING') # FIXME(erlon): In the current behavior, # rollback_live_migration_at_source is called if an error happens # during the pre_live_migration phase on the destination and therefore # triggers the observed bug. rollback_live_migration_at_source should # *not* be called for when errors happen during pre_live_migration # phase. self.libvirt_mock.mock.assert_called_once() ",,87,0
openstack%2Fos-vif~911291,openstack/os-vif,unmaintained/xena,I3dc474bd3040d2a617253afd903a2e9081bef397,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:51:42.000000000,2024-03-05 19:06:24.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:51:42.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/os-vif/commit/1ba057fd2f879c2807ecb5e4de19cfc0a4b09118', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I3dc474bd3040d2a617253afd903a2e9081bef397\n'}]",0,911291,1ba057fd2f879c2807ecb5e4de19cfc0a4b09118,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I3dc474bd3040d2a617253afd903a2e9081bef397
",git fetch https://review.opendev.org/openstack/os-vif refs/changes/91/911291/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,1ba057fd2f879c2807ecb5e4de19cfc0a4b09118,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fnova~836016,openstack/nova,stable/wallaby,I784190ac356695dd508e0ad8ec31d8eaa3ebee56,Fix pre_live_migration rollback,ABANDONED,2022-03-31 13:10:17.000000000,2024-03-05 19:06:22.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-03-31 13:10:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a09d29b0bc537b9770d8dc4d7c1a6584798539f7', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 379e54fe49b3343a0734c96574789614e3d83b49)\n""}, {'number': 2, 'created': '2022-04-18 18:02:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/11350c7fac11c832b6d130747e3ecbdb8af4de2f', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 379e54fe49b3343a0734c96574789614e3d83b49)\n(cherry picked from commit c277636a96f4525ed6eb0530aa576f2156c8b99d)\n""}, {'number': 3, 'created': '2022-04-18 19:09:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/2b2a2aeb2e90c8721fc23c53da4b92f344b7e907', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 379e54fe49b3343a0734c96574789614e3d83b49)\n(cherry picked from commit c277636a96f4525ed6eb0530aa576f2156c8b99d)\n""}, {'number': 4, 'created': '2022-04-19 13:21:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d91051269a3230f3e2ec7609ec2a5d378143703c', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 379e54fe49b3343a0734c96574789614e3d83b49)\n(cherry picked from commit c277636a96f4525ed6eb0530aa576f2156c8b99d)\n""}, {'number': 5, 'created': '2022-10-21 19:14:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d27e7405b42df024c4ce762937cb230da9b6454d', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 29b94aa34ad954e617c2a0d6df0809765dced188)\n""}, {'number': 6, 'created': '2022-10-21 19:18:38.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1944619.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'releasenotes/notes/bug-1944619-fix-live-migration-rollback.yaml', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/9042eb9810487bbdf99b2a287e5b9b39201c87e5', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 29b94aa34ad954e617c2a0d6df0809765dced188)\n""}]",3,836016,9042eb9810487bbdf99b2a287e5b9b39201c87e5,37,1,6,10058,,,0,"Fix pre_live_migration rollback

During the pre live migration process, Nova performs most of the
tasks related to the creation and operation of the VM in the destination
host. That is done without interrupting any of the hardware in the source
host. If the pre_live_migration fails, those same operations should be
rolled back.

Currently nova is sharing the _rollback_live_migration for both
live and pre_live migration rollbacks, and that is causing the source
host to try to re-attach network interfaces on the source host where
they weren't actually de-attached.

This patch fixes that by adding a conditional to allow nova to do
different paths for migration and pre_live_migration rollbacks.

Closes-bug: #1944619
Change-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56
(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)
(cherry picked from commit 29b94aa34ad954e617c2a0d6df0809765dced188)
",git fetch https://review.opendev.org/openstack/nova refs/changes/16/836016/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/regressions/test_bug_1944619.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'releasenotes/notes/bug-1944619-fix-live-migration-rollback.yaml', 'nova/compute/manager.py']",4,a09d29b0bc537b9770d8dc4d7c1a6584798539f7,bug/1944619," source_bdms=source_bdms, pre_live_migration=True) source_bdms=None, pre_live_migration=False): # NOTE(erlon): We should make sure that rollback_live_migration_at_src # is not called in the pre_live_migration rollback as that will trigger # the src host to re-attach interfaces which were not detached # previously. if not pre_live_migration: self.driver.rollback_live_migration_at_source(context, instance, migrate_data)"," source_bdms=source_bdms) source_bdms=None): self.driver.rollback_live_migration_at_source(context, instance, migrate_data)",102,6
openstack%2Fosc-placement~911283,openstack/osc-placement,unmaintained/wallaby,Ic46734f9a954c15d8c286db28c0bb5b7e0b449a3,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:50:17.000000000,2024-03-05 19:06:19.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:50:17.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/osc-placement/commit/9be3954acd5c4a153b66f6c9f1554c77e6b7f73e', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: Ic46734f9a954c15d8c286db28c0bb5b7e0b449a3\n'}]",0,911283,9be3954acd5c4a153b66f6c9f1554c77e6b7f73e,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: Ic46734f9a954c15d8c286db28c0bb5b7e0b449a3
",git fetch https://review.opendev.org/openstack/osc-placement refs/changes/83/911283/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,9be3954acd5c4a153b66f6c9f1554c77e6b7f73e,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fnova~867914,openstack/nova,stable/wallaby,Iab92124b5776a799c7f90d07281d28fcf191c8fe,Ironic nodes with instance reserved in placement,ABANDONED,2022-12-15 23:24:13.000000000,2024-03-05 19:06:19.000000000,,"[{'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-12-15 23:24:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8db52ae444ea53462c26435eeecef83615f85706', 'message': ""Ironic nodes with instance reserved in placement\n\nCurrently, when you delete an ironic instance, we trigger\nand undeploy in ironic and we release our allocation in placement.\nWe do this well before the ironic node is actually available.\n\nWe have attempted to fix this my marking unavailable nodes\nas reserved in placement. This works great until you try\nand re-image lots of nodes.\n\nIt turns out, ironic nodes that are waiting for their automatic\nclean to finish, are returned as a valid allocation candidates\nfor quite some time. Eventually we mark then as reserved.\n\nThis patch takes a strange approach, if we mark all nodes as\nreserved as soon as the instance lands, we close the race.\nThat is, when the allocation is removed the node is still\nunavailable until the next update of placement is done and\nnotices that the node has become available. That may or may\nnot have been after automatic cleaning. The trade off is\nthat when you don't have automatic cleaning, we wait a bit\nlonger to notice the node is available again.\n\nNote, this is also useful when a broken Ironic node is\nmarked as in-maintainance while it is in-use by a nova\ninstance. In a similar way, we mark the Nova as reserved\nimmmeidately, rather than first waiting for the instance to be\ndeleted before reserving the resources in Placement.\n\nCloses-Bug: #1974070\nChange-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe\n(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)\n""}, {'number': 2, 'created': '2022-12-16 14:07:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e3e024030e1bb9825bb1616d87f09a1d1165ed06', 'message': ""Ironic nodes with instance reserved in placement\n\nCurrently, when you delete an ironic instance, we trigger\nand undeploy in ironic and we release our allocation in placement.\nWe do this well before the ironic node is actually available.\n\nWe have attempted to fix this my marking unavailable nodes\nas reserved in placement. This works great until you try\nand re-image lots of nodes.\n\nIt turns out, ironic nodes that are waiting for their automatic\nclean to finish, are returned as a valid allocation candidates\nfor quite some time. Eventually we mark then as reserved.\n\nThis patch takes a strange approach, if we mark all nodes as\nreserved as soon as the instance lands, we close the race.\nThat is, when the allocation is removed the node is still\nunavailable until the next update of placement is done and\nnotices that the node has become available. That may or may\nnot have been after automatic cleaning. The trade off is\nthat when you don't have automatic cleaning, we wait a bit\nlonger to notice the node is available again.\n\nNote, this is also useful when a broken Ironic node is\nmarked as in-maintainance while it is in-use by a nova\ninstance. In a similar way, we mark the Nova as reserved\nimmmeidately, rather than first waiting for the instance to be\ndeleted before reserving the resources in Placement.\n\nConflicts:\n    nova/conf/workarounds.py\n\nNOTE(rloo): The conflict is because wallaby doesn't have these\nconfig options that are in master:\n- unified_limits_count_pcpu_as_vcpu\n- skip_cpu_compare_on_dest\n- skip_hypervisor_version_check_on_lm\n\nCloses-Bug: #1974070\nChange-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe\n(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)\n""}, {'number': 3, 'created': '2022-12-16 18:00:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/fa5ddf586d431d30970fa930499559b4378f7e68', 'message': ""Ironic nodes with instance reserved in placement\n\nCurrently, when you delete an ironic instance, we trigger\nand undeploy in ironic and we release our allocation in placement.\nWe do this well before the ironic node is actually available.\n\nWe have attempted to fix this my marking unavailable nodes\nas reserved in placement. This works great until you try\nand re-image lots of nodes.\n\nIt turns out, ironic nodes that are waiting for their automatic\nclean to finish, are returned as a valid allocation candidates\nfor quite some time. Eventually we mark then as reserved.\n\nThis patch takes a strange approach, if we mark all nodes as\nreserved as soon as the instance lands, we close the race.\nThat is, when the allocation is removed the node is still\nunavailable until the next update of placement is done and\nnotices that the node has become available. That may or may\nnot have been after automatic cleaning. The trade off is\nthat when you don't have automatic cleaning, we wait a bit\nlonger to notice the node is available again.\n\nNote, this is also useful when a broken Ironic node is\nmarked as in-maintainance while it is in-use by a nova\ninstance. In a similar way, we mark the Nova as reserved\nimmmeidately, rather than first waiting for the instance to be\ndeleted before reserving the resources in Placement.\n\nConflicts:\n    nova/conf/workarounds.py\n\nNOTE(rloo): The conflict is because wallaby doesn't have these\nconfig options that are in master:\n- unified_limits_count_pcpu_as_vcpu\n- skip_cpu_compare_on_dest\n- skip_hypervisor_version_check_on_lm\n\nCloses-Bug: #1974070\nChange-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe\n(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)\n(cherry picked from commit c9de185ea1ac1e8d4435c5863b2ad7cefdb28c76)\n(cherry picked from commit 7fe4a7ab47086570a027e9c6d6664db8ae2340ab)\n(cherry picked from commit 0fb7da36f17f4aee1b7c139867f8a531be84ec43)\n""}, {'number': 4, 'created': '2022-12-16 18:07:46.000000000', 'files': ['nova/virt/ironic/driver.py', 'nova/tests/unit/virt/ironic/test_driver.py', 'releasenotes/notes/fix-ironic-scheduler-race-08cf8aba0365f512.yaml', 'nova/conf/workarounds.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/e3b95a54fea7d31905dff14b74ef7ed69bc8a857', 'message': ""Ironic nodes with instance reserved in placement\n\nCurrently, when you delete an ironic instance, we trigger\nand undeploy in ironic and we release our allocation in placement.\nWe do this well before the ironic node is actually available.\n\nWe have attempted to fix this my marking unavailable nodes\nas reserved in placement. This works great until you try\nand re-image lots of nodes.\n\nIt turns out, ironic nodes that are waiting for their automatic\nclean to finish, are returned as a valid allocation candidates\nfor quite some time. Eventually we mark then as reserved.\n\nThis patch takes a strange approach, if we mark all nodes as\nreserved as soon as the instance lands, we close the race.\nThat is, when the allocation is removed the node is still\nunavailable until the next update of placement is done and\nnotices that the node has become available. That may or may\nnot have been after automatic cleaning. The trade off is\nthat when you don't have automatic cleaning, we wait a bit\nlonger to notice the node is available again.\n\nNote, this is also useful when a broken Ironic node is\nmarked as in-maintainance while it is in-use by a nova\ninstance. In a similar way, we mark the Nova as reserved\nimmmeidately, rather than first waiting for the instance to be\ndeleted before reserving the resources in Placement.\n\nCloses-Bug: #1974070\nChange-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe\n(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)\n(cherry picked from commit c9de185ea1ac1e8d4435c5863b2ad7cefdb28c76)\n(cherry picked from commit 7fe4a7ab47086570a027e9c6d6664db8ae2340ab)\n(cherry picked from commit 0fb7da36f17f4aee1b7c139867f8a531be84ec43)\n""}]",15,867914,e3b95a54fea7d31905dff14b74ef7ed69bc8a857,16,2,4,6618,,,0,"Ironic nodes with instance reserved in placement

Currently, when you delete an ironic instance, we trigger
and undeploy in ironic and we release our allocation in placement.
We do this well before the ironic node is actually available.

We have attempted to fix this my marking unavailable nodes
as reserved in placement. This works great until you try
and re-image lots of nodes.

It turns out, ironic nodes that are waiting for their automatic
clean to finish, are returned as a valid allocation candidates
for quite some time. Eventually we mark then as reserved.

This patch takes a strange approach, if we mark all nodes as
reserved as soon as the instance lands, we close the race.
That is, when the allocation is removed the node is still
unavailable until the next update of placement is done and
notices that the node has become available. That may or may
not have been after automatic cleaning. The trade off is
that when you don't have automatic cleaning, we wait a bit
longer to notice the node is available again.

Note, this is also useful when a broken Ironic node is
marked as in-maintainance while it is in-use by a nova
instance. In a similar way, we mark the Nova as reserved
immmeidately, rather than first waiting for the instance to be
deleted before reserving the resources in Placement.

Closes-Bug: #1974070
Change-Id: Iab92124b5776a799c7f90d07281d28fcf191c8fe
(cherry picked from commit 3c022e968375c1b2eadf3c2dd7190b9434c6d4c1)
(cherry picked from commit c9de185ea1ac1e8d4435c5863b2ad7cefdb28c76)
(cherry picked from commit 7fe4a7ab47086570a027e9c6d6664db8ae2340ab)
(cherry picked from commit 0fb7da36f17f4aee1b7c139867f8a531be84ec43)
",git fetch https://review.opendev.org/openstack/nova refs/changes/14/867914/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/ironic/driver.py', 'nova/tests/unit/virt/ironic/test_driver.py', 'releasenotes/notes/fix-ironic-scheduler-race-08cf8aba0365f512.yaml', 'nova/conf/workarounds.py']",4,8db52ae444ea53462c26435eeecef83615f85706,fix-ironic-scheduler-race-stable/wallaby,"<<<<<<< HEAD (d6512e Merge ""Retry attachment delete API call for 504 Gateway Time) ======= cfg.BoolOpt('unified_limits_count_pcpu_as_vcpu', default=False, help="""""" When using unified limits, use VCPU + PCPU for VCPU quota usage. If the deployment is configured to use unified limits via ``[quota]driver=nova.quota.UnifiedLimitsDriver``, by default VCPU resources are counted independently from PCPU resources, consistent with how they are represented in the placement service. Legacy quota behavior counts PCPU as VCPU and returns the sum of VCPU + PCPU usage as the usage count for VCPU. Operators relying on the aggregation of VCPU and PCPU resource usage counts should set this option to True. Related options: * :oslo.config:option:`quota.driver` """"""), cfg.BoolOpt('skip_cpu_compare_on_dest', default=False, help="""""" With the libvirt driver, during live migration, skip comparing guest CPU with the destination host. When using QEMU >= 2.9 and libvirt >= 4.4.0, libvirt will do the correct thing with respect to checking CPU compatibility on the destination host during live migration. """"""), cfg.BoolOpt( 'skip_hypervisor_version_check_on_lm', default=False, help="""""" When this is enabled, it will skip version-checking of hypervisors during live migration. """"""), cfg.BoolOpt( 'skip_reserve_in_use_ironic_nodes', default=False, help="""""" This may be useful if you use the Ironic driver, but don't have automatic cleaning enabled in Ironic. Nova, by default, will mark Ironic nodes as reserved as soon as they are in use. When you free the Ironic node (by deleting the nova instance) it takes a while for Nova to un-reserve that Ironic node in placement. Usually this is a good idea, because it avoids placement providing an Ironic as a valid candidate when it is still being cleaned. Howerver, if you don't use automatic cleaning, it can cause an extra delay before and Ironic node is available for building a new Nova instance. """"""), >>>>>>> CHANGE (3c022e Ironic nodes with instance reserved in placement)",,125,11
openstack%2Fnova~859002,openstack/nova,stable/wallaby,Idb7fcbce0c9562e7b9bd3e80f2a6d4b9bc286830,Avoid n-cond startup abort for keystone failures,ABANDONED,2022-09-22 23:23:39.000000000,2024-03-05 19:06:15.000000000,,"[{'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-09-22 23:23:39.000000000', 'files': ['nova/tests/unit/conductor/test_conductor.py', 'nova/tests/unit/scheduler/client/test_report.py', 'nova/conductor/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/b90eaf45d8c948992599ad6f25e7ff8b35cbec04', 'message': 'Avoid n-cond startup abort for keystone failures\n\nConductor creates a placement client for the potential case where\nit needs to make a call for certain operations. A transient network\nor keystone failure will currently cause it to abort startup, which\nmeans it is not available for other unrelated activities, such as\nDB proxying for compute.\n\nThis makes conductor test the placement client on startup, but only\nabort startup on errors that are highly likely to be permanent\nconfiguration errors, and only warn about things like being unable\nto contact keystone/placement during initialization. If a non-fatal\nerror is encountered at startup, later operations needing the\nplacement client will retry initialization.\n\nCloses-Bug: #1846820\nChange-Id: Idb7fcbce0c9562e7b9bd3e80f2a6d4b9bc286830\n(cherry picked from commit 232684b44022f1bc4d72b07045900780de456e63)\n(cherry picked from commit 19346082058d51c78bb157ca5e1304d15691dd9a)\n(cherry picked from commit 6027a097caf51428425dc4616898302460f833a1)\n'}]",1,859002,b90eaf45d8c948992599ad6f25e7ff8b35cbec04,6,2,1,4690,,,0,"Avoid n-cond startup abort for keystone failures

Conductor creates a placement client for the potential case where
it needs to make a call for certain operations. A transient network
or keystone failure will currently cause it to abort startup, which
means it is not available for other unrelated activities, such as
DB proxying for compute.

This makes conductor test the placement client on startup, but only
abort startup on errors that are highly likely to be permanent
configuration errors, and only warn about things like being unable
to contact keystone/placement during initialization. If a non-fatal
error is encountered at startup, later operations needing the
placement client will retry initialization.

Closes-Bug: #1846820
Change-Id: Idb7fcbce0c9562e7b9bd3e80f2a6d4b9bc286830
(cherry picked from commit 232684b44022f1bc4d72b07045900780de456e63)
(cherry picked from commit 19346082058d51c78bb157ca5e1304d15691dd9a)
(cherry picked from commit 6027a097caf51428425dc4616898302460f833a1)
",git fetch https://review.opendev.org/openstack/nova refs/changes/02/859002/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/conductor/test_conductor.py', 'nova/tests/unit/scheduler/client/test_report.py', 'nova/conductor/manager.py']",3,b90eaf45d8c948992599ad6f25e7ff8b35cbec04,bug/1846820,"from keystoneauth1 import exceptions as ks_exc try: # Test our placement client during initialization self.report_client except (ks_exc.EndpointNotFound, ks_exc.DiscoveryFailure, ks_exc.RequestTimeout, ks_exc.GatewayTimeout, ks_exc.ConnectFailure) as e: # Non-fatal, likely transient (although not definitely); # continue startup but log the warning so that when things # fail later, it will be clear why we can not do certain # things. LOG.warning('Unable to initialize placement client (%s); ' 'Continuing with startup, but some operations ' 'will not be possible.', e) except (ks_exc.MissingAuthPlugin, ks_exc.Unauthorized) as e: # This is almost definitely fatal mis-configuration. The # Unauthorized error might be transient, but it is # probably reasonable to consider it fatal. LOG.error('Fatal error initializing placement client; ' 'config is incorrect or incomplete: %s', e) raise except Exception as e: # Unknown/unexpected errors here are fatal LOG.error('Fatal error initializing placement client: %s', e) raise @property def report_client(self): return report.report_client_singleton() ", self.report_client = report.report_client_singleton(),87,1
openstack%2Fnova~802766,openstack/nova,stable/wallaby,Ibed67854a693c930effd4dba7aca6cd03b65bd92,Add --task-log option to nova-manage db archive_deleted_rows,ABANDONED,2021-07-28 18:00:27.000000000,2024-03-05 19:06:11.000000000,,"[{'_account_id': 4690}, {'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-07-28 18:00:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/1c6a4b70f35e80358bbcaab5a5370be62cb81bcd', 'message': 'Add --task-log option to nova-manage db archive_deleted_rows\n\nNOTE(melwitt): This is a combination of three changes to avoid\nnondeterminstic test failure that was introduced by the original bug\nfix and was fixed by change I9b16a3a849937aba5b90ed1ab9a80b7f0103f673.\nIt also contains a followup change to correct the release note in the\noriginal bug fix.\n\nThe task_log table contains instance usage audit records if\nnova-compute has been configured with [DEFAULT]instance_usage_audit =\nTrue. This will be the case if OpenStack Telemetry is being used in the\ndeployment, as the option causes nova to generate audit information\nthat Telemetry then retrieves from the server usage audit log API [1].\n\nHistorically, there has been no way to delete task_log table records\nother than manual database modification. Because of this, task_log\nrecords could pile up over time and operators are forced to perform\nmanual steps to periodically truncate the table.\n\nThis adds a --task-log option to the \'nova-manage db\narchive_deleted_rows\' CLI to also archive task_log records while\narchiving the database. --task-log works in conjunction with --before\nif operators desire archving only records that are older than <date>.\nThe \'updated_at\' field is used by --task-log --before <date> to\ndetermine the age of a task_log record for archival.\n\nConflicts:\n    doc/source/cli/nova-manage.rst\n\nNOTE(melwitt): The conflict is because change\nI84d54a246fecbd2f7d2950d6c6044f7cd1b8e9df is not in Wallaby.\n\nCloses-Bug: #1877189\n\n[1] https://docs.openstack.org/api-ref/compute/#server-usage-audit-log-os-instance-usage-audit-log\n\nMake test_archive_task_logs deterministic\n\nThe \'nova-manage db archive_deleted_rows --task-log\' functional tests\ninvolve manipulating time to assert archive behaviors when the --before\nflag is also used.\n\nWhile timedelta was used, set_time_override was not, so depending on\nthe date the test ran on + the number of days in the current month and\nnext two months, the test could fail. Task log audit periods are one\ncalendar month by default and the compute manager calls\nlast_completed_audit_period() without specifying a unit.\n\nThis changes the tests to use a time override to ensure predictable\nbehavior with regard to the audit period boundaries. The tests were\nmoved into their own test case classes in order to override the time\nbefore services were started, so that the ""service up"" calculations\nwork as expected.\n\nCloses-Bug: #1934519\n\nChange-Id: I9b16a3a849937aba5b90ed1ab9a80b7f0103f673\n(cherry picked from commit 87dba379aca6ec4613986cfa4e749a3ada2b44d0)\n\nCorrect reno for archiving task_log database records\n\nThe release note incorrectly stated that the Telemetry service calls\nthe /os-instance_usage_audit_log REST API to retrieve instance usage\ndata. Telemetry rather consumes the notifications that are only generated\nwhen [DEFAULT]instance_usage_audit=True.\n\nRelated-Bug: #1877189\n\nChange-Id: Iea358090c42877bedfdcc4a04019f6dc406176c2\n(cherry picked from commit d093849c3c70e46bf409b1051454cbf70bc12a1f)\n\nChange-Id: Ibed67854a693c930effd4dba7aca6cd03b65bd92\n(cherry picked from commit bc71331bcaa92718fce06ac3d2ecda6a4c9d2d20)\n'}, {'number': 2, 'created': '2022-09-16 19:56:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/f6dbb394f11cf6d580cecb6c3542ac91b47922ac', 'message': 'Add --task-log option to nova-manage db archive_deleted_rows\n\nNOTE(melwitt): This is a combination of three changes to avoid\nnondeterminstic test failure that was introduced by the original bug\nfix and was fixed by change I9b16a3a849937aba5b90ed1ab9a80b7f0103f673.\nIt also contains a followup change to correct the release note in the\noriginal bug fix.\n\nThe task_log table contains instance usage audit records if\nnova-compute has been configured with [DEFAULT]instance_usage_audit =\nTrue. This will be the case if OpenStack Telemetry is being used in the\ndeployment, as the option causes nova to generate audit information\nthat Telemetry then retrieves from the server usage audit log API [1].\n\nHistorically, there has been no way to delete task_log table records\nother than manual database modification. Because of this, task_log\nrecords could pile up over time and operators are forced to perform\nmanual steps to periodically truncate the table.\n\nThis adds a --task-log option to the \'nova-manage db\narchive_deleted_rows\' CLI to also archive task_log records while\narchiving the database. --task-log works in conjunction with --before\nif operators desire archving only records that are older than <date>.\nThe \'updated_at\' field is used by --task-log --before <date> to\ndetermine the age of a task_log record for archival.\n\nConflicts:\n    doc/source/cli/nova-manage.rst\n\nNOTE(melwitt): The conflict is because change\nI84d54a246fecbd2f7d2950d6c6044f7cd1b8e9df is not in Wallaby.\n\nCloses-Bug: #1877189\n\n[1] https://docs.openstack.org/api-ref/compute/#server-usage-audit-log-os-instance-usage-audit-log\n\nMake test_archive_task_logs deterministic\n\nThe \'nova-manage db archive_deleted_rows --task-log\' functional tests\ninvolve manipulating time to assert archive behaviors when the --before\nflag is also used.\n\nWhile timedelta was used, set_time_override was not, so depending on\nthe date the test ran on + the number of days in the current month and\nnext two months, the test could fail. Task log audit periods are one\ncalendar month by default and the compute manager calls\nlast_completed_audit_period() without specifying a unit.\n\nThis changes the tests to use a time override to ensure predictable\nbehavior with regard to the audit period boundaries. The tests were\nmoved into their own test case classes in order to override the time\nbefore services were started, so that the ""service up"" calculations\nwork as expected.\n\nCloses-Bug: #1934519\n\nChange-Id: I9b16a3a849937aba5b90ed1ab9a80b7f0103f673\n(cherry picked from commit 87dba379aca6ec4613986cfa4e749a3ada2b44d0)\n\nCorrect reno for archiving task_log database records\n\nThe release note incorrectly stated that the Telemetry service calls\nthe /os-instance_usage_audit_log REST API to retrieve instance usage\ndata. Telemetry rather consumes the notifications that are only generated\nwhen [DEFAULT]instance_usage_audit=True.\n\nRelated-Bug: #1877189\n\nChange-Id: Iea358090c42877bedfdcc4a04019f6dc406176c2\n(cherry picked from commit d093849c3c70e46bf409b1051454cbf70bc12a1f)\n\nChange-Id: Ibed67854a693c930effd4dba7aca6cd03b65bd92\n(cherry picked from commit bc71331bcaa92718fce06ac3d2ecda6a4c9d2d20)\n'}, {'number': 3, 'created': '2022-09-16 20:06:40.000000000', 'files': ['nova/tests/functional/test_nova_manage.py', 'nova/tests/functional/db/test_archive.py', 'nova/tests/unit/cmd/test_manage.py', 'releasenotes/notes/archive-task-logs-fa9dd7c5859b5e30.yaml', 'doc/source/cli/nova-manage.rst', 'nova/test.py', 'nova/cmd/manage.py', 'nova/db/api.py', 'nova/tests/unit/db/test_db_api.py', 'nova/db/sqlalchemy/api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/58cda0f1075b6f06aeebfe492ba522e23597fcf2', 'message': 'Add --task-log option to nova-manage db archive_deleted_rows\n\nNOTE(melwitt): This is a combination of 4 changes to avoid\nnondeterminstic test failure that was introduced by the original bug\nfix and was fixed by changes:\n\n  * I9b16a3a849937aba5b90ed1ab9a80b7f0103f673 (Make\n    test_archive_task_logs deterministic)\n\n  * Ic28d2e53d5f50e89635e19df08699f2b8c5cea84 (Restore original time\n    override in test_archive_task_logs)\n\nIt also contains a followup change to correct the release note in the\noriginal bug fix.\n\nThe task_log table contains instance usage audit records if\nnova-compute has been configured with [DEFAULT]instance_usage_audit =\nTrue. This will be the case if OpenStack Telemetry is being used in the\ndeployment, as the option causes nova to generate audit information\nthat Telemetry then retrieves from the server usage audit log API [1].\n\nHistorically, there has been no way to delete task_log table records\nother than manual database modification. Because of this, task_log\nrecords could pile up over time and operators are forced to perform\nmanual steps to periodically truncate the table.\n\nThis adds a --task-log option to the \'nova-manage db\narchive_deleted_rows\' CLI to also archive task_log records while\narchiving the database. --task-log works in conjunction with --before\nif operators desire archving only records that are older than <date>.\nThe \'updated_at\' field is used by --task-log --before <date> to\ndetermine the age of a task_log record for archival.\n\nConflicts:\n    doc/source/cli/nova-manage.rst\n\nNOTE(melwitt): The conflict is because change\nI84d54a246fecbd2f7d2950d6c6044f7cd1b8e9df (docs: Rewrite \'nova-manage\ndb\' docs to use proper directives) is not in Wallaby.\n\nCloses-Bug: #1877189\n\n[1] https://docs.openstack.org/api-ref/compute/#server-usage-audit-log-os-instance-usage-audit-log\n\nMake test_archive_task_logs deterministic\n\nThe \'nova-manage db archive_deleted_rows --task-log\' functional tests\ninvolve manipulating time to assert archive behaviors when the --before\nflag is also used.\n\nWhile timedelta was used, set_time_override was not, so depending on\nthe date the test ran on + the number of days in the current month and\nnext two months, the test could fail. Task log audit periods are one\ncalendar month by default and the compute manager calls\nlast_completed_audit_period() without specifying a unit.\n\nThis changes the tests to use a time override to ensure predictable\nbehavior with regard to the audit period boundaries. The tests were\nmoved into their own test case classes in order to override the time\nbefore services were started, so that the ""service up"" calculations\nwork as expected.\n\nCloses-Bug: #1934519\n\nChange-Id: I9b16a3a849937aba5b90ed1ab9a80b7f0103f673\n(cherry picked from commit 87dba379aca6ec4613986cfa4e749a3ada2b44d0)\n\nCorrect reno for archiving task_log database records\n\nThe release note incorrectly stated that the Telemetry service calls\nthe /os-instance_usage_audit_log REST API to retrieve instance usage\ndata. Telemetry rather consumes the notifications that are only generated\nwhen [DEFAULT]instance_usage_audit=True.\n\nRelated-Bug: #1877189\n\nChange-Id: Iea358090c42877bedfdcc4a04019f6dc406176c2\n(cherry picked from commit d093849c3c70e46bf409b1051454cbf70bc12a1f)\n\nRestore original time override in test_archive_task_logs\n\nChange I9b16a3a849937aba5b90ed1ab9a80b7f0103f673 attempted to fix a\nnon-determinstic failure in the test_archive_task_logs functional test\nby adding a time override. That fix however missed that the\nosloutils_fixture.TimeFixture clears the time override when it exits\nand that does not mean a previous time override will be restored.\n\nThis removes usage of the osloutils_fixture.TimeFixture and instead\nsets time overrides and restores previous time overrides. Restoration\nof the original time overrides also made an adjustment to the --before\noption value necessary in order to pick up the first task_log record.\n\nCloses-Bug: #1934519\n\nChange-Id: Ic28d2e53d5f50e89635e19df08699f2b8c5cea84\n(cherry picked from commit 39ef1ad774859562183190f74831a115698e6836)\n\nChange-Id: Ibed67854a693c930effd4dba7aca6cd03b65bd92\n(cherry picked from commit bc71331bcaa92718fce06ac3d2ecda6a4c9d2d20)\n'}]",3,802766,58cda0f1075b6f06aeebfe492ba522e23597fcf2,16,3,3,4690,,,0,"Add --task-log option to nova-manage db archive_deleted_rows

NOTE(melwitt): This is a combination of 4 changes to avoid
nondeterminstic test failure that was introduced by the original bug
fix and was fixed by changes:

  * I9b16a3a849937aba5b90ed1ab9a80b7f0103f673 (Make
    test_archive_task_logs deterministic)

  * Ic28d2e53d5f50e89635e19df08699f2b8c5cea84 (Restore original time
    override in test_archive_task_logs)

It also contains a followup change to correct the release note in the
original bug fix.

The task_log table contains instance usage audit records if
nova-compute has been configured with [DEFAULT]instance_usage_audit =
True. This will be the case if OpenStack Telemetry is being used in the
deployment, as the option causes nova to generate audit information
that Telemetry then retrieves from the server usage audit log API [1].

Historically, there has been no way to delete task_log table records
other than manual database modification. Because of this, task_log
records could pile up over time and operators are forced to perform
manual steps to periodically truncate the table.

This adds a --task-log option to the 'nova-manage db
archive_deleted_rows' CLI to also archive task_log records while
archiving the database. --task-log works in conjunction with --before
if operators desire archving only records that are older than <date>.
The 'updated_at' field is used by --task-log --before <date> to
determine the age of a task_log record for archival.

Conflicts:
    doc/source/cli/nova-manage.rst

NOTE(melwitt): The conflict is because change
I84d54a246fecbd2f7d2950d6c6044f7cd1b8e9df (docs: Rewrite 'nova-manage
db' docs to use proper directives) is not in Wallaby.

Closes-Bug: #1877189

[1] https://docs.openstack.org/api-ref/compute/#server-usage-audit-log-os-instance-usage-audit-log

Make test_archive_task_logs deterministic

The 'nova-manage db archive_deleted_rows --task-log' functional tests
involve manipulating time to assert archive behaviors when the --before
flag is also used.

While timedelta was used, set_time_override was not, so depending on
the date the test ran on + the number of days in the current month and
next two months, the test could fail. Task log audit periods are one
calendar month by default and the compute manager calls
last_completed_audit_period() without specifying a unit.

This changes the tests to use a time override to ensure predictable
behavior with regard to the audit period boundaries. The tests were
moved into their own test case classes in order to override the time
before services were started, so that the ""service up"" calculations
work as expected.

Closes-Bug: #1934519

Change-Id: I9b16a3a849937aba5b90ed1ab9a80b7f0103f673
(cherry picked from commit 87dba379aca6ec4613986cfa4e749a3ada2b44d0)

Correct reno for archiving task_log database records

The release note incorrectly stated that the Telemetry service calls
the /os-instance_usage_audit_log REST API to retrieve instance usage
data. Telemetry rather consumes the notifications that are only generated
when [DEFAULT]instance_usage_audit=True.

Related-Bug: #1877189

Change-Id: Iea358090c42877bedfdcc4a04019f6dc406176c2
(cherry picked from commit d093849c3c70e46bf409b1051454cbf70bc12a1f)

Restore original time override in test_archive_task_logs

Change I9b16a3a849937aba5b90ed1ab9a80b7f0103f673 attempted to fix a
non-determinstic failure in the test_archive_task_logs functional test
by adding a time override. That fix however missed that the
osloutils_fixture.TimeFixture clears the time override when it exits
and that does not mean a previous time override will be restored.

This removes usage of the osloutils_fixture.TimeFixture and instead
sets time overrides and restores previous time overrides. Restoration
of the original time overrides also made an adjustment to the --before
option value necessary in order to pick up the first task_log record.

Closes-Bug: #1934519

Change-Id: Ic28d2e53d5f50e89635e19df08699f2b8c5cea84
(cherry picked from commit 39ef1ad774859562183190f74831a115698e6836)

Change-Id: Ibed67854a693c930effd4dba7aca6cd03b65bd92
(cherry picked from commit bc71331bcaa92718fce06ac3d2ecda6a4c9d2d20)
",git fetch https://review.opendev.org/openstack/nova refs/changes/66/802766/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/test_nova_manage.py', 'nova/tests/functional/db/test_archive.py', 'nova/tests/unit/cmd/test_manage.py', 'releasenotes/notes/archive-task-logs-fa9dd7c5859b5e30.yaml', 'doc/source/cli/nova-manage.rst', 'nova/test.py', 'nova/cmd/manage.py', 'nova/db/api.py', 'nova/tests/unit/db/test_db_api.py', 'nova/db/sqlalchemy/api.py']",10,1c6a4b70f35e80358bbcaab5a5370be62cb81bcd,bug/1877189,"def _archive_deleted_rows_for_table(metadata, tablename, max_rows, before, task_log): if tablename == ""task_log"" and task_log: # task_log table records are never deleted by anything, so we won't # base our select statement on the 'deleted' column status. select = sql.select([column]) if before: if tablename != ""task_log"": select = select.where(table.c.deleted_at < before) elif task_log: # task_log table records are never deleted by anything, so we won't # base our select statement on the 'deleted_at' column status. select = select.where(table.c.updated_at < before)def archive_deleted_rows(context=None, max_rows=None, before=None, task_log=False): :param task_log: Optional for whether to archive task_log table records before=before, task_log=task_log)) 'shadow_task_log': 'updated_at',","def _archive_deleted_rows_for_table(metadata, tablename, max_rows, before): if before: select = select.where(table.c.deleted_at < before)def archive_deleted_rows(context=None, max_rows=None, before=None): before=before))",454,47
openstack%2Fnova~859001,openstack/nova,stable/wallaby,Iab8a791f64323f996e1d6e6d5a7e7a7c34eb4fb3,Unify placement client singleton implementations,ABANDONED,2022-09-22 23:23:39.000000000,2024-03-05 19:06:07.000000000,,"[{'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-09-22 23:23:39.000000000', 'files': ['nova/scheduler/manager.py', 'nova/scheduler/client/report.py', 'nova/tests/unit/compute/test_compute.py', 'nova/cmd/manage.py', 'nova/tests/unit/compute/test_api.py', 'nova/test.py', 'nova/conductor/tasks/migrate.py', 'nova/tests/unit/scheduler/client/test_report.py', 'nova/scheduler/request_filter.py', 'nova/conductor/manager.py', 'nova/quota.py', 'nova/api/openstack/compute/services.py', 'nova/compute/manager.py', 'nova/compute/api.py', 'nova/compute/resource_tracker.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/0046e186cbecb9b4c729e5f90634bc088a721554', 'message': ""Unify placement client singleton implementations\n\nWe have many places where we implement singleton behavior for the\nplacement client. This unifies them into a single place and\nimplementation. Not only does this DRY things up, but may cause us\nto initialize it fewer times and also allows for emitting a common\nset of error messages about expected failures for better\ntroubleshooting.\n\nConflicts:\n    nova/compute/api.py\n    nova/scheduler/manager.py\n\nNOTE(melwitt): The conflicts are because the following changes are not\nin Wallaby:\n\n  * I216cabcde5311abd46fdad9c95bb72c31b414010\n    (db: Remove'nova.db.base' module)\n\n  * I609df5b707e05ea70c8a738701423ca751682575\n    (scheduler: Merge driver into manager)\n\nChange-Id: Iab8a791f64323f996e1d6e6d5a7e7a7c34eb4fb3\nRelated-Bug: #1846820\n(cherry picked from commit c178d9360665c219cbcc71c9f37b9e6e3055a5e5)\n(cherry picked from commit 77273f067d96a4ec401c3b36f2922d63c4ad7103)\n(cherry picked from commit 87f67df721a4a46bf145f217525cc001582764ca)\n""}]",2,859001,0046e186cbecb9b4c729e5f90634bc088a721554,9,2,1,4690,,,0,"Unify placement client singleton implementations

We have many places where we implement singleton behavior for the
placement client. This unifies them into a single place and
implementation. Not only does this DRY things up, but may cause us
to initialize it fewer times and also allows for emitting a common
set of error messages about expected failures for better
troubleshooting.

Conflicts:
    nova/compute/api.py
    nova/scheduler/manager.py

NOTE(melwitt): The conflicts are because the following changes are not
in Wallaby:

  * I216cabcde5311abd46fdad9c95bb72c31b414010
    (db: Remove'nova.db.base' module)

  * I609df5b707e05ea70c8a738701423ca751682575
    (scheduler: Merge driver into manager)

Change-Id: Iab8a791f64323f996e1d6e6d5a7e7a7c34eb4fb3
Related-Bug: #1846820
(cherry picked from commit c178d9360665c219cbcc71c9f37b9e6e3055a5e5)
(cherry picked from commit 77273f067d96a4ec401c3b36f2922d63c4ad7103)
(cherry picked from commit 87f67df721a4a46bf145f217525cc001582764ca)
",git fetch https://review.opendev.org/openstack/nova refs/changes/01/859001/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/scheduler/manager.py', 'nova/scheduler/client/report.py', 'nova/tests/unit/compute/test_compute.py', 'nova/cmd/manage.py', 'nova/tests/unit/compute/test_api.py', 'nova/test.py', 'nova/conductor/tasks/migrate.py', 'nova/tests/unit/scheduler/client/test_report.py', 'nova/scheduler/request_filter.py', 'nova/conductor/manager.py', 'nova/quota.py', 'nova/api/openstack/compute/services.py', 'nova/compute/manager.py', 'nova/compute/api.py', 'nova/compute/resource_tracker.py']",15,0046e186cbecb9b4c729e5f90634bc088a721554,bug/1846820, self.reportclient = reportclient or report.report_client_singleton(), self.reportclient = reportclient or report.SchedulerReportClient(),113,40
openstack%2Fnova~868012,openstack/nova,stable/wallaby,Ie5cdc17219c86927ab3769605808cb9d9fa9fa4d,Ironic: retry when node not available,ABANDONED,2022-12-16 21:33:30.000000000,2024-03-05 19:06:03.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-12-16 21:33:30.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/31e3d6fa87745ac4bb5f9b89c2566a60595aa025', 'message': 'Ironic: retry when node not available\n\nAfter a baremetal instance is deleted, and its allocation is removed\nin placement, the ironic node might start cleaning. Eventually nova\nwill notice and update the inventory to be reserved.\nDuring this window, a new instance may have already picked this\nironic node.\n\nWhen that race happens today the build fails with an error:\n""Failed to reserve node ...""\n\nThis change tries to ensure the remaining alternative hosts are\nattempted before aborting the build.\nClearly the race is still there, but this makes it less painful.\n\nRelated-Bug: #1974070\nChange-Id: Ie5cdc17219c86927ab3769605808cb9d9fa9fa4d\n(cherry picked from commit 8a476061c5e034016668cd9e5a20c4430ef6b68d)\n(cherry picked from commit d71e9f6ec4933f9430db55537a36678b16ce895a)\n(cherry picked from commit b881dd25b4abb3c54934d8ebbccb2ac602c83177)\n'}, {'number': 2, 'created': '2022-12-16 21:36:13.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/virt/ironic/driver.py', 'nova/tests/unit/virt/ironic/test_driver.py', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/3570136e4baf04815007626cbcc23a447429790e', 'message': 'Ironic: retry when node not available\n\nAfter a baremetal instance is deleted, and its allocation is removed\nin placement, the ironic node might start cleaning. Eventually nova\nwill notice and update the inventory to be reserved.\nDuring this window, a new instance may have already picked this\nironic node.\n\nWhen that race happens today the build fails with an error:\n""Failed to reserve node ...""\n\nThis change tries to ensure the remaining alternative hosts are\nattempted before aborting the build.\nClearly the race is still there, but this makes it less painful.\n\nRelated-Bug: #1974070\nChange-Id: Ie5cdc17219c86927ab3769605808cb9d9fa9fa4d\n(cherry picked from commit 8a476061c5e034016668cd9e5a20c4430ef6b68d)\n(cherry picked from commit d71e9f6ec4933f9430db55537a36678b16ce895a)\n(cherry picked from commit b881dd25b4abb3c54934d8ebbccb2ac602c83177)\n(cherry picked from commit 8aa6f4f6685279bd314b1b50d614d02188124dd4)\n'}]",0,868012,3570136e4baf04815007626cbcc23a447429790e,7,1,2,6618,,,0,"Ironic: retry when node not available

After a baremetal instance is deleted, and its allocation is removed
in placement, the ironic node might start cleaning. Eventually nova
will notice and update the inventory to be reserved.
During this window, a new instance may have already picked this
ironic node.

When that race happens today the build fails with an error:
""Failed to reserve node ...""

This change tries to ensure the remaining alternative hosts are
attempted before aborting the build.
Clearly the race is still there, but this makes it less painful.

Related-Bug: #1974070
Change-Id: Ie5cdc17219c86927ab3769605808cb9d9fa9fa4d
(cherry picked from commit 8a476061c5e034016668cd9e5a20c4430ef6b68d)
(cherry picked from commit d71e9f6ec4933f9430db55537a36678b16ce895a)
(cherry picked from commit b881dd25b4abb3c54934d8ebbccb2ac602c83177)
(cherry picked from commit 8aa6f4f6685279bd314b1b50d614d02188124dd4)
",git fetch https://review.opendev.org/openstack/nova refs/changes/12/868012/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/virt/ironic/driver.py', 'nova/tests/unit/virt/ironic/test_driver.py', 'nova/compute/manager.py']",4,31e3d6fa87745ac4bb5f9b89c2566a60595aa025,bug1974070," exception.UnexpectedDeletingTaskStateError, exception.ComputeResourcesUnavailable):", exception.UnexpectedDeletingTaskStateError):,70,3
openstack%2Fnova~859320,openstack/nova,stable/wallaby,I9367b7ed475917bdb05eb3f209ce1a4e646534e2,Reproduce bug 1981813 in func env,ABANDONED,2022-09-26 16:54:19.000000000,2024-03-05 19:06:00.000000000,,"[{'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-09-26 16:54:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/c9087eb5ec4637902e79abc2d4e5f4ff24eca677', 'message': 'Reproduce bug 1981813 in func env\n\nRelated-Bug: #1981813\nChange-Id: I9367b7ed475917bdb05eb3f209ce1a4e646534e2\n(cherry picked from commit f8c91eb75fc5504a37fc3b4be1d65d33dbc9b511)\n(cherry picked from commit a5287d75bf895b13625583bd00c30a44a435fcf6)\n(cherry picked from commit b1a8b63d40bf80934c38366c6481e7045302f4e3)\n'}, {'number': 2, 'created': '2022-10-17 16:35:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ece728687707c4c3588d06eb3e2705ff5a755cb2', 'message': 'Reproduce bug 1981813 in func env\n\nRelated-Bug: #1981813\nChange-Id: I9367b7ed475917bdb05eb3f209ce1a4e646534e2\n(cherry picked from commit f8c91eb75fc5504a37fc3b4be1d65d33dbc9b511)\n(cherry picked from commit 8ec3abe58ef3b21c37765b9ce4314af625967df5)\n(cherry picked from commit 536c795799ea550113de9fb08a3a7be2fbb29f42)\n'}, {'number': 3, 'created': '2023-01-09 17:22:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/4663dd7ded5610630c39a8678e57d96430ae0842', 'message': 'Reproduce bug 1981813 in func env\n\nThere stable/yoga only change in test_pci_sriov_servers.py due to\nunittest.mock switch[1] only happened in zed.\n\n[1] https://review.opendev.org/q/topic:unittest.mock+status:merged+project:openstack/nova\n\nRelated-Bug: #1981813\nChange-Id: I9367b7ed475917bdb05eb3f209ce1a4e646534e2\n(cherry picked from commit f8c91eb75fc5504a37fc3b4be1d65d33dbc9b511)\n(cherry picked from commit 76bcc21e0a47221ce8fdfa126172af546f7028cc)\n(cherry picked from commit d25b2a94e5cf84550dc05c377c12a1fe88e2a74f)\n'}, {'number': 4, 'created': '2023-01-25 16:34:58.000000000', 'files': ['nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/tests/unit/virt/libvirt/fakelibvirt.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/cb4c2b6c04232901f4c5adae724697fec3aed4e8', 'message': 'Reproduce bug 1981813 in func env\n\nThere stable/yoga only change in test_pci_sriov_servers.py due to\nunittest.mock switch[1] only happened in zed.\n\n[1] https://review.opendev.org/q/topic:unittest.mock+status:merged+project:openstack/nova\n\nRelated-Bug: #1981813\nChange-Id: I9367b7ed475917bdb05eb3f209ce1a4e646534e2\n(cherry picked from commit f8c91eb75fc5504a37fc3b4be1d65d33dbc9b511)\n(cherry picked from commit 4954f993680c75fd9d3d507f2dcd00300c9b3d44)\n(cherry picked from commit 0c87681135cfb3ce61d2a0392928c1dbc1fe5fde)\n'}]",2,859320,cb4c2b6c04232901f4c5adae724697fec3aed4e8,17,2,4,9708,,,0,"Reproduce bug 1981813 in func env

There stable/yoga only change in test_pci_sriov_servers.py due to
unittest.mock switch[1] only happened in zed.

[1] https://review.opendev.org/q/topic:unittest.mock+status:merged+project:openstack/nova

Related-Bug: #1981813
Change-Id: I9367b7ed475917bdb05eb3f209ce1a4e646534e2
(cherry picked from commit f8c91eb75fc5504a37fc3b4be1d65d33dbc9b511)
(cherry picked from commit 4954f993680c75fd9d3d507f2dcd00300c9b3d44)
(cherry picked from commit 0c87681135cfb3ce61d2a0392928c1dbc1fe5fde)
",git fetch https://review.opendev.org/openstack/nova refs/changes/20/859320/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/tests/unit/virt/libvirt/fakelibvirt.py']",2,c9087eb5ec4637902e79abc2d4e5f4ff24eca677,bug/1981813," self.mock_get_ifname_by_pci_address = self.useFixture( fixtures.MockPatch( ""nova.pci.utils.get_ifname_by_pci_address"", return_value=""fake_pf_interface_name"", ) ).mock"," self.useFixture(fixtures.MockPatch( 'nova.pci.utils.get_ifname_by_pci_address', return_value='fake_pf_interface_name'))",78,3
openstack%2Fnova~861832,openstack/nova,stable/wallaby,I03c4db3c36a780aac19841b750ff59acd3572ec6,Fix to implement 'pack' or 'spread' VM's NUMA cells,ABANDONED,2022-10-19 10:53:11.000000000,2024-03-05 19:05:56.000000000,,"[{'_account_id': 11604}, {'_account_id': 14200}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-10-19 10:53:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ab7aa7fd7db43bd16d8949dffaa6e5adc5bbb8e5', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}, {'number': 2, 'created': '2023-02-07 17:37:03.000000000', 'files': ['nova/conf/compute.py', 'nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'releasenotes/notes/extra-sorting-for-host-cells-c03e37de1e57043b.yaml', 'doc/source/admin/cpu-topologies.rst'], 'web_link': 'https://opendev.org/openstack/nova/commit/1fad29725789fe0aaafb2a9d85209ef915b54574', 'message': ""Fix to implement 'pack' or 'spread' VM's NUMA cells\n\nCells mean NUMA cells below in text.\n\nBy default, first instance's cell are placed to the host's cell with\nid 0, so it will be exhausted first. Than host's cell with id 1 will\nbe used and exhausted. It will lead to error placing instance with\nnumber of cells in NUMA topology equal to host's cells number if\nsome instances with one cell topology are placed on cell with id 0\nbefore. Fix will perform several sorts to put less used cells at\nthe beginning of host_cells list based on PCI devices, memory and\ncpu usage when packing_host_numa_cells_allocation_strategy is set\nto False (so called 'spread strategy'), or will try to place all\nVM's cell to the same host's cell untill it will be completely\nexhausted and only after will start to use next available host's\ncell (so called 'pack strategy'), when the configuration option\npacking_host_numa_cells_allocation_strategy is set to True.\n\nPartial-Bug: #1940668\nChange-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6\n(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)\n""}]",2,861832,1fad29725789fe0aaafb2a9d85209ef915b54574,16,3,2,22629,,,0,"Fix to implement 'pack' or 'spread' VM's NUMA cells

Cells mean NUMA cells below in text.

By default, first instance's cell are placed to the host's cell with
id 0, so it will be exhausted first. Than host's cell with id 1 will
be used and exhausted. It will lead to error placing instance with
number of cells in NUMA topology equal to host's cells number if
some instances with one cell topology are placed on cell with id 0
before. Fix will perform several sorts to put less used cells at
the beginning of host_cells list based on PCI devices, memory and
cpu usage when packing_host_numa_cells_allocation_strategy is set
to False (so called 'spread strategy'), or will try to place all
VM's cell to the same host's cell untill it will be completely
exhausted and only after will start to use next available host's
cell (so called 'pack strategy'), when the configuration option
packing_host_numa_cells_allocation_strategy is set to True.

Partial-Bug: #1940668
Change-Id: I03c4db3c36a780aac19841b750ff59acd3572ec6
(cherry picked from commit d13412648d011994a146dac1e7214ead3b82b31b)
",git fetch https://review.opendev.org/openstack/nova refs/changes/32/861832/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/conf/compute.py', 'nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'releasenotes/notes/extra-sorting-for-host-cells-c03e37de1e57043b.yaml', 'doc/source/admin/cpu-topologies.rst']",5,ab7aa7fd7db43bd16d8949dffaa6e5adc5bbb8e5,numa-balance,"The host's NUMA node(s) used are chosen based on some logic and controlled by ``packing_host_numa_cells_allocation_strategy`` configuration variable in nova.conf. By default ``packing_host_numa_cells_allocation_strategy`` variable is set to ``True``. It leads to attempt to chose NUMA node(s) with less amount of free resources (or in other words **more used** NUMA nodes) first. It is so-called ""pack"" strategy - we try to place as much as possible load at **more used** host's NUMA node until it will be completely exhausted. And only after we will choose **most used** host's NUMA node from the rest available nodes on host. ""Spread"" strategy is reverse to ""pack"" strategy. The NUMA node(s) with **more free** resources will be used first. So ""spread"" strategy will try to balance load between all NUMA nodes and keep number of free resources on all NUMA nodes as more equal as possible. Host's NUMA nodes are placed in list and list is sorted based on strategy chosen and resource available in each NUMA node. Sorts are performed on same list one after another, so the last sort implemented is the sort with most priority. The python performed so-called stable sort. It means that each sort executed on same list will change order of list items only if item's property we sort on differs. If this properties in all list's items are equal than elements order will not changed. Sorts are performed on host's NUMA nodes list in the following order: * sort based on available memory on node(first sort-less priority) * sort based on cpu usage (in case of shared CPUs requested by guest VM topology) or free pinned cpus otherwise. * sort based on number of free PCI device on node(last sort-top priority) Top sorting priority is for host's NUMA nodes with PCI devices attached. If VM requested PCI device(s) logic **always** puts host's NUMA nodes with more PCI devices at the beginnig of the host's NUMA nodes list. If PCI devices isn't requested by VM than NUMA nodes with no (or less) PCI device available will be placed at the beginnig of the list. .. caution:: The described logic for PCI devices is used **both** for ""pack"" and ""spread"" strategies. It is done to keep backward compatibility with previous nova versions. During ""pack"" logic implementation rest (two) sorts are performed with sort order to move NUMA nodes with more available resources (CPUs and memory) at the END of host's NUMA nodes list. Sort based on memory is the first sort implemented and has least priority. During ""spread"" logic implementation rest (two) sorts are performed with sort order to move NUMA nodes with more available resources (CPUs and memory) at the BEGINNING of host's NUMA nodes list. Sort based on memory is the first sort implemented and has least priority. Finally resulting list (after all sorts) is passed next and attempts to place VM's NUMA node to host's NUMA node are performed starting from the first host's NUMA node in list."," The NUMA node(s) used are normally chosen at random. However, if a PCI passthrough or SR-IOV device is attached to the instance, then the NUMA node that the device is associated with will be used. This can provide important performance improvements. However, booting a large number of similar instances can result in unbalanced NUMA node usage. Care should be taken to mitigate this issue. See this `discussion`_ for more details... _`discussion`: http://lists.openstack.org/pipermail/openstack-dev/2016-March/090367.html",389,17
openstack%2Fnova~836604,openstack/nova,stable/wallaby,Id0539d2ee909d86ffef07ae566697db8ae0f83b4,extend_volume of libvirt/volume/iscsi should not use device_path,ABANDONED,2022-04-05 19:16:49.000000000,2024-03-05 19:05:52.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 26286}]","[{'number': 1, 'created': '2022-04-05 19:16:49.000000000', 'files': ['nova/virt/libvirt/volume/iscsi.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/8b82298b03bec3a0d58d62c99116179642f0c18d', 'message': ""extend_volume of libvirt/volume/iscsi should not use device_path\n\nThe connection_info['data']['device_path'] field is not always\navailable. In cases that it was not available, it would cause\nthe debug code to raise a KeyError instead of proceeding.\n\nOther similar debug messages in the same file do not include\ndevice_path. As a simple fix, just drop the device_path from\nthe log.\n\nCloses-Bug: #1936439\n\nChange-Id: Id0539d2ee909d86ffef07ae566697db8ae0f83b4\nSigned-off-by: Mark Mielke <mark.mielke@gmail.com>\n(cherry picked from commit ad60f23be3d562422b350aade04aa92ade39fb32)\n""}]",2,836604,8b82298b03bec3a0d58d62c99116179642f0c18d,12,3,1,8864,,,0,"extend_volume of libvirt/volume/iscsi should not use device_path

The connection_info['data']['device_path'] field is not always
available. In cases that it was not available, it would cause
the debug code to raise a KeyError instead of proceeding.

Other similar debug messages in the same file do not include
device_path. As a simple fix, just drop the device_path from
the log.

Closes-Bug: #1936439

Change-Id: Id0539d2ee909d86ffef07ae566697db8ae0f83b4
Signed-off-by: Mark Mielke <mark.mielke@gmail.com>
(cherry picked from commit ad60f23be3d562422b350aade04aa92ade39fb32)
",git fetch https://review.opendev.org/openstack/nova refs/changes/04/836604/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/virt/libvirt/volume/iscsi.py'],1,8b82298b03bec3a0d58d62c99116179642f0c18d,libvirt_iscsi_extend_volume_device_path_failure-stable/wallaby," LOG.debug(""Extend iSCSI Volume: new_size=%s"","," LOG.debug(""Extend iSCSI Volume %s; new_size=%s"", connection_info['data']['device_path'],",1,2
openstack%2Fnova~872402,openstack/nova,stable/wallaby,I8ef9db851b37c5249d2efbe09a15a1ddbae8205d,libvirt: At start-up rework compareCPU() usage with a workaround,ABANDONED,2023-02-01 11:47:30.000000000,2024-03-05 19:05:49.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-02-01 11:47:30.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/b6526563d4718a589f9f5645842cdbd69c759cad', 'message': 'libvirt: At start-up rework compareCPU() usage with a workaround\n\nIn this patch:\n\n  - Remove the first compareCPU() call (called via the wrapper\n    _compare_cpu()) in _check_cpu_compatibility(), and let libvirt\n    handle it.  (QEMU >=2.9 and libvirt >= 4.4.0 are the mininum\n    required versions, and upstream Nova satisfies them by a good\n    margin.)\n\n  - Validate the user-configured CPU models from\n    _get_cpu_model_mapping().  And take into account all the CPU flags\n    before calling _compare_cpu().\n\n    (Suggested-by: Sean Mooney -- thanks!)\n\n  - Add a workaround to allow skipping the remaining compareCPU() call\n    in _check_cpu_compatibility() as a potential future-proof (because\n    we cannot test all possible CPU models and hardware).  Unlike the\n    removed first call, this call takes into account the extra CPU flags\n    provided by the user into account when evaluating guest CPU model\n    compatibility.\n\nAs a follow up comes the patch[1] that replaces the older libvirt CPU\nAPI with the newer one.\n\nConflicts (Xena):\n  - Remove mock for _register_all_undefined_instance_details() as it\n    does not exist in Xena release\n\n[1] https://review.opendev.org/c/openstack/nova/+/869950 -- libvirt:\n    Replace usage of compareCPU() with compareHypervisorCPU()\n\nChange-Id: I8ef9db851b37c5249d2efbe09a15a1ddbae8205d\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 9caaaf1f221063a4329c72c8b67a6015648644a2)\n(cherry picked from commit 7c7c8442d3b02f7bb296b79574610e6b6036aefa)\n(cherry picked from commit 023244c83043b3cb1b1c2725e80b2955498e7971)\n'}, {'number': 2, 'created': '2023-02-17 13:41:16.000000000', 'files': ['nova/virt/libvirt/driver.py', 'nova/conf/workarounds.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/06c98bdbec975f751c102d6216fe9c52f9310bc1', 'message': 'libvirt: At start-up rework compareCPU() usage with a workaround\n\nIn this patch:\n\n  - Remove the first compareCPU() call (called via the wrapper\n    _compare_cpu()) in _check_cpu_compatibility(), and let libvirt\n    handle it.  (QEMU >=2.9 and libvirt >= 4.4.0 are the mininum\n    required versions, and upstream Nova satisfies them by a good\n    margin.)\n\n  - Validate the user-configured CPU models from\n    _get_cpu_model_mapping().  And take into account all the CPU flags\n    before calling _compare_cpu().\n\n    (Suggested-by: Sean Mooney -- thanks!)\n\n  - Add a workaround to allow skipping the remaining compareCPU() call\n    in _check_cpu_compatibility() as a potential future-proof (because\n    we cannot test all possible CPU models and hardware).  Unlike the\n    removed first call, this call takes into account the extra CPU flags\n    provided by the user into account when evaluating guest CPU model\n    compatibility.\n\nAs a follow up comes the patch[1] that replaces the older libvirt CPU\nAPI with the newer one.\n\nConflicts (Xena):\n  - Remove mock for _register_all_undefined_instance_details() as it\n    does not exist in Xena release\n\n[1] https://review.opendev.org/c/openstack/nova/+/869950 -- libvirt:\n    Replace usage of compareCPU() with compareHypervisorCPU()\n\nChange-Id: I8ef9db851b37c5249d2efbe09a15a1ddbae8205d\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 9caaaf1f221063a4329c72c8b67a6015648644a2)\n(cherry picked from commit 7c7c8442d3b02f7bb296b79574610e6b6036aefa)\n(cherry picked from commit 023244c83043b3cb1b1c2725e80b2955498e7971)\n'}]",0,872402,06c98bdbec975f751c102d6216fe9c52f9310bc1,9,1,2,6962,,,0,"libvirt: At start-up rework compareCPU() usage with a workaround

In this patch:

  - Remove the first compareCPU() call (called via the wrapper
    _compare_cpu()) in _check_cpu_compatibility(), and let libvirt
    handle it.  (QEMU >=2.9 and libvirt >= 4.4.0 are the mininum
    required versions, and upstream Nova satisfies them by a good
    margin.)

  - Validate the user-configured CPU models from
    _get_cpu_model_mapping().  And take into account all the CPU flags
    before calling _compare_cpu().

    (Suggested-by: Sean Mooney -- thanks!)

  - Add a workaround to allow skipping the remaining compareCPU() call
    in _check_cpu_compatibility() as a potential future-proof (because
    we cannot test all possible CPU models and hardware).  Unlike the
    removed first call, this call takes into account the extra CPU flags
    provided by the user into account when evaluating guest CPU model
    compatibility.

As a follow up comes the patch[1] that replaces the older libvirt CPU
API with the newer one.

Conflicts (Xena):
  - Remove mock for _register_all_undefined_instance_details() as it
    does not exist in Xena release

[1] https://review.opendev.org/c/openstack/nova/+/869950 -- libvirt:
    Replace usage of compareCPU() with compareHypervisorCPU()

Change-Id: I8ef9db851b37c5249d2efbe09a15a1ddbae8205d
Signed-off-by: Kashyap Chamarthy <kchamart@redhat.com>
(cherry picked from commit 9caaaf1f221063a4329c72c8b67a6015648644a2)
(cherry picked from commit 7c7c8442d3b02f7bb296b79574610e6b6036aefa)
(cherry picked from commit 023244c83043b3cb1b1c2725e80b2955498e7971)
",git fetch https://review.opendev.org/openstack/nova refs/changes/02/872402/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'nova/conf/workarounds.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",3,b6526563d4718a589f9f5645842cdbd69c759cad,," @mock.patch('nova.virt.libvirt.host.libvirt.Connection.compareCPU') def test__check_cpu_compatibility_skip_compare_at_init( self, mocked_compare ): self.flags(group='workarounds', skip_cpu_compare_at_startup=True) self.flags(cpu_mode=""custom"", cpu_models=[""Icelake-Server-noTSX""], cpu_model_extra_flags = [""-mpx""], group=""libvirt"") drvr = libvirt_driver.LibvirtDriver(fake.FakeVirtAPI(), True) drvr.init_host(""dummyhost"") mocked_compare.assert_not_called() mocked_compare.side_effect = (-1, 0) mocked_compare.side_effect = (-1, 0) mocked_compare.side_effect = (-1, 0)"," mocked_compare.side_effect = (2, 0) mocked_compare.side_effect = (2, 0) mocked_compare.side_effect = (2, 0)",42,30
openstack%2Fnova~851206,openstack/nova,stable/wallaby,Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1,Add a workaround to skip hypervisor version check on LM,ABANDONED,2022-07-27 10:36:41.000000000,2024-03-05 19:05:44.000000000,,"[{'_account_id': 7166}, {'_account_id': 9708}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-07-27 10:36:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d04e925a029f38c3d38f52e40d5bc5d8db41cf9f', 'message': ""Add a workaround to skip hypervisor version check on LM\n\nWhen turned on, this will disable the version-checking of hypervisors\nduring live-migration.  This can be useful for operators in certain\nscenarios when upgrading.  E.g. if you want to relocate all instances\noff a compute node due to an emergency hardware issue, and you only have\nanother old compute node ready at the time.\n\nNote, though: libvirt will do its own internal compatibility checks, and\nmight still reject live migration if the destination is incompatible.\n\nConflicts: nova/conf/workarounds.py\n - The other config 'skip_cpu_compare_on_dest' was not backported to\n   'stable/yoga' branch\n\nConflicts (stable/xena): nova/conf/workarounds.py\n - The config attribute 'unified_limits_count_pcpu_as_vcpu' is not\n   present in 'stable/xena'\n\nCloses-Bug: #1982853\n\nChange-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 5032cb62e6458282e1282ac64cf7dd49a2497ac1)\n(cherry picked from commit 0e3b4424b7f587e3e274a5ef81ac35cfd14f0c96)\n(cherry picked from commit 21f92d4b576fc2c309713c369041dd434d605cc6)\n""}, {'number': 2, 'created': '2023-02-01 11:47:30.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/878875e96300a5c8b8c6845a817cda9acb1ef7a4', 'message': ""Add a workaround to skip hypervisor version check on LM\n\nWhen turned on, this will disable the version-checking of hypervisors\nduring live-migration.  This can be useful for operators in certain\nscenarios when upgrading.  E.g. if you want to relocate all instances\noff a compute node due to an emergency hardware issue, and you only have\nanother old compute node ready at the time.\n\nNote, though: libvirt will do its own internal compatibility checks, and\nmight still reject live migration if the destination is incompatible.\n\nConflicts: nova/conf/workarounds.py\n - The other config 'skip_cpu_compare_on_dest' was not backported to\n   'stable/yoga' branch\n\nConflicts (stable/xena): nova/conf/workarounds.py\n - The config attribute 'unified_limits_count_pcpu_as_vcpu' is not\n   present in 'stable/xena'\n\nCloses-Bug: #1982853\n\nChange-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 5032cb62e6458282e1282ac64cf7dd49a2497ac1)\n(cherry picked from commit 0e3b4424b7f587e3e274a5ef81ac35cfd14f0c96)\n(cherry picked from commit 21f92d4b576fc2c309713c369041dd434d605cc6)\n""}, {'number': 3, 'created': '2023-02-17 13:41:16.000000000', 'files': ['releasenotes/notes/skip-hypervisor-version-check-on-lm-a87f2dcb4f8bf0f2.yaml', 'nova/conductor/tasks/live_migrate.py', 'nova/conf/workarounds.py', 'nova/tests/unit/conductor/tasks/test_live_migrate.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/bc1d2865df042b58680994b0c522b678f2399cf8', 'message': ""Add a workaround to skip hypervisor version check on LM\n\nWhen turned on, this will disable the version-checking of hypervisors\nduring live-migration.  This can be useful for operators in certain\nscenarios when upgrading.  E.g. if you want to relocate all instances\noff a compute node due to an emergency hardware issue, and you only have\nanother old compute node ready at the time.\n\nNote, though: libvirt will do its own internal compatibility checks, and\nmight still reject live migration if the destination is incompatible.\n\nConflicts: nova/conf/workarounds.py\n - The other config 'skip_cpu_compare_on_dest' was not backported to\n   'stable/yoga' branch\n\nConflicts (stable/xena): nova/conf/workarounds.py\n - The config attribute 'unified_limits_count_pcpu_as_vcpu' is not\n   present in 'stable/xena'\n\nCloses-Bug: #1982853\n\nChange-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 5032cb62e6458282e1282ac64cf7dd49a2497ac1)\n(cherry picked from commit 0e3b4424b7f587e3e274a5ef81ac35cfd14f0c96)\n(cherry picked from commit 21f92d4b576fc2c309713c369041dd434d605cc6)\n""}]",4,851206,bc1d2865df042b58680994b0c522b678f2399cf8,19,4,3,6962,,,0,"Add a workaround to skip hypervisor version check on LM

When turned on, this will disable the version-checking of hypervisors
during live-migration.  This can be useful for operators in certain
scenarios when upgrading.  E.g. if you want to relocate all instances
off a compute node due to an emergency hardware issue, and you only have
another old compute node ready at the time.

Note, though: libvirt will do its own internal compatibility checks, and
might still reject live migration if the destination is incompatible.

Conflicts: nova/conf/workarounds.py
 - The other config 'skip_cpu_compare_on_dest' was not backported to
   'stable/yoga' branch

Conflicts (stable/xena): nova/conf/workarounds.py
 - The config attribute 'unified_limits_count_pcpu_as_vcpu' is not
   present in 'stable/xena'

Closes-Bug: #1982853

Change-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1
Signed-off-by: Kashyap Chamarthy <kchamart@redhat.com>
(cherry picked from commit 5032cb62e6458282e1282ac64cf7dd49a2497ac1)
(cherry picked from commit 0e3b4424b7f587e3e274a5ef81ac35cfd14f0c96)
(cherry picked from commit 21f92d4b576fc2c309713c369041dd434d605cc6)
",git fetch https://review.opendev.org/openstack/nova refs/changes/06/851206/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/skip-hypervisor-version-check-on-lm-a87f2dcb4f8bf0f2.yaml', 'nova/conductor/tasks/live_migrate.py', 'nova/conf/workarounds.py', 'nova/tests/unit/conductor/tasks/test_live_migrate.py']",4,d04e925a029f38c3d38f52e40d5bc5d8db41cf9f,bug/1982853," @mock.patch.object(live_migrate.LiveMigrationTask, '_get_compute_info') def test_skip_hypervisor_version_check_on_lm_raise_ex(self, mock_get_info): host1 = {'hypervisor_type': 'a', 'hypervisor_version': 7} host2 = {'hypervisor_type': 'a', 'hypervisor_version': 6} self.flags(group='workarounds', skip_hypervisor_version_check_on_lm=False) mock_get_info.side_effect = [objects.ComputeNode(**host1), objects.ComputeNode(**host2)] self.assertRaises(exception.DestinationHypervisorTooOld, self.task._check_compatible_with_source_hypervisor, self.destination) self.assertEqual([mock.call(self.instance_host), mock.call(self.destination)], mock_get_info.call_args_list) @mock.patch.object(live_migrate.LiveMigrationTask, '_get_compute_info') def test_skip_hypervisor_version_check_on_lm_do_not_raise_ex( self, mock_get_info ): host1 = {'hypervisor_type': 'a', 'hypervisor_version': 7} host2 = {'hypervisor_type': 'a', 'hypervisor_version': 6} self.flags(group='workarounds', skip_hypervisor_version_check_on_lm=True) mock_get_info.side_effect = [objects.ComputeNode(**host1), objects.ComputeNode(**host2)] self.task._check_compatible_with_source_hypervisor(self.destination) self.assertEqual([mock.call(self.instance_host), mock.call(self.destination)], mock_get_info.call_args_list) ",,53,2
openstack%2Fnova~877284,openstack/nova,stable/wallaby,I4d6dfca1efe10caebb017b6ec96820979018203f,Nova resize don't extend disk in one specific case,ABANDONED,2023-03-13 13:50:41.000000000,2024-03-05 19:05:41.000000000,,"[{'_account_id': 22348}, {'_account_id': 33607}]","[{'number': 1, 'created': '2023-03-13 13:50:41.000000000', 'files': ['nova/virt/libvirt/imagebackend.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/5041e9a8d7ae86abc19c070f6a9bd61587ae5c94', 'message': ""Nova resize don't extend disk in one specific case\n\nNova resize not apply extend virtual size of the instance if the image\nis not accessible by the customer (public image use to build the\ninstance is now private image because this image is deprecated) and the\nsource compute of the resize don't have anymore the base image.\n\nRelated-Bug: #1558880\nChange-Id: I4d6dfca1efe10caebb017b6ec96820979018203f\n(cherry picked from commit f7af85dd7431eea61cdd2b1723a5dbcc3d9471ed)\n(cherry picked from commit 122b407ee6e41bd123eb401e167957bfbeeab521)\n""}]",0,877284,5041e9a8d7ae86abc19c070f6a9bd61587ae5c94,6,2,1,11604,,,0,"Nova resize don't extend disk in one specific case

Nova resize not apply extend virtual size of the instance if the image
is not accessible by the customer (public image use to build the
instance is now private image because this image is deprecated) and the
source compute of the resize don't have anymore the base image.

Related-Bug: #1558880
Change-Id: I4d6dfca1efe10caebb017b6ec96820979018203f
(cherry picked from commit f7af85dd7431eea61cdd2b1723a5dbcc3d9471ed)
(cherry picked from commit 122b407ee6e41bd123eb401e167957bfbeeab521)
",git fetch https://review.opendev.org/openstack/nova refs/changes/84/877284/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/imagebackend.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",2,5041e9a8d7ae86abc19c070f6a9bd61587ae5c94,1558880," @mock.patch('nova.virt.libvirt.imagebackend.Image.exists', new=mock.Mock(return_value=True)) def test_create_images_backing_images_and_fallback_not_exist(self): self.flags(images_type='raw', group='libvirt') conn = libvirt_driver.LibvirtDriver(fake.FakeVirtAPI(), False) base_dir = os.path.join(CONF.instances_path, CONF.image_cache.subdirectory_name) self.test_instance.update({ 'user_id': 'fake-user', 'os_type': None, 'kernel_id': uuids.kernel_id, 'ramdisk_id': uuids.ramdisk_id, 'project_id': 'fake-project' }) instance = objects.Instance(**self.test_instance) backing_file = imagecache.get_cache_fname(instance.image_ref) backfile_path = os.path.join(base_dir, backing_file) disk_size = 10747904 virt_disk_size = 25165824 disk_info = [{ 'backing_file': backing_file, 'disk_size': disk_size, 'path': 'disk_path', 'type': 'raw', 'virt_disk_size': virt_disk_size }] with test.nested( mock.patch.object(libvirt_driver.libvirt_utils, 'copy_image'), mock.patch.object(libvirt_driver.libvirt_utils, 'fetch_image', side_effect=exception.ImageNotFound( image_id=uuids.fake_id)), mock.patch.object(imagebackend.Flat, 'resize_image'), ) as (copy_image_mock, fetch_image_mock, resize_image_mock): conn._create_images_and_backing( self.context, instance, ""/fake/instance/dir"", disk_info, fallback_from_host=""fake_host"") kernel_path = os.path.join(CONF.instances_path, self.test_instance['uuid'], 'kernel') ramdisk_path = os.path.join(CONF.instances_path, self.test_instance['uuid'], 'ramdisk') copy_image_mock.assert_has_calls([ mock.call(dest=kernel_path, src=kernel_path, host='fake_host', receive=True), mock.call(dest=ramdisk_path, src=ramdisk_path, host='fake_host', receive=True) ]) fetch_image_mock.assert_has_calls([ mock.call(context=self.context, target=backfile_path, image_id=self.test_instance['image_ref'], trusted_certs=None), mock.call(self.context, kernel_path, instance.kernel_id, None), mock.call(self.context, ramdisk_path, instance.ramdisk_id, None) ]) resize_image_mock.assert_called_once_with(virt_disk_size) ",,70,3
openstack%2Fnova~860735,openstack/nova,stable/wallaby,I77fdfa9cffbd44b2889f49f266b2582bcc6a4267,"Handle ""no RAM info was set"" migration case",ABANDONED,2022-10-07 18:46:07.000000000,2024-03-05 19:05:37.000000000,,"[{'_account_id': 7634}, {'_account_id': 15334}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-10-07 18:46:07.000000000', 'files': ['nova/tests/unit/virt/libvirt/test_guest.py', 'nova/virt/libvirt/guest.py', 'releasenotes/notes/bug-1982284-libvirt-handle-no-ram-info-was-set-99784934ed80fd72.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/6d68aee626875a165667e04c4ccc54ff3073e4ff', 'message': 'Handle ""no RAM info was set"" migration case\n\nThis handles the case where the live migration monitoring thread may\nrace and call jobStats() after the migration has completed resulting in\nthe following error:\n\n    libvirt.libvirtError: internal error: migration was active, but no\n    RAM info was set\n\nCloses-Bug: #1982284\nChange-Id: I77fdfa9cffbd44b2889f49f266b2582bcc6a4267\n(cherry picked from commit 9fea934c71d3c2fa7fdd80c67d94e18466c5cf9a)\n(cherry picked from commit 00396fa9396324780c09161ed57a86b7e458c26f)\n(cherry picked from commit 4316234e63b76e4f9877ec6e924b5c54ea761bbb)\n(cherry picked from commit 98d9936e54b900db1bd2d5477a9a1d7e5a7be104)\n'}]",3,860735,6d68aee626875a165667e04c4ccc54ff3073e4ff,19,4,1,4690,,,0,"Handle ""no RAM info was set"" migration case

This handles the case where the live migration monitoring thread may
race and call jobStats() after the migration has completed resulting in
the following error:

    libvirt.libvirtError: internal error: migration was active, but no
    RAM info was set

Closes-Bug: #1982284
Change-Id: I77fdfa9cffbd44b2889f49f266b2582bcc6a4267
(cherry picked from commit 9fea934c71d3c2fa7fdd80c67d94e18466c5cf9a)
(cherry picked from commit 00396fa9396324780c09161ed57a86b7e458c26f)
(cherry picked from commit 4316234e63b76e4f9877ec6e924b5c54ea761bbb)
(cherry picked from commit 98d9936e54b900db1bd2d5477a9a1d7e5a7be104)
",git fetch https://review.opendev.org/openstack/nova refs/changes/35/860735/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/libvirt/test_guest.py', 'nova/virt/libvirt/guest.py', 'releasenotes/notes/bug-1982284-libvirt-handle-no-ram-info-was-set-99784934ed80fd72.yaml']",3,6d68aee626875a165667e04c4ccc54ff3073e4ff,bug/1982284,"--- other: - | A workaround has been added to the libvirt driver to catch and pass migrations that were previously failing with the error: ``libvirt.libvirtError: internal error: migration was active, but no RAM info was set`` See `bug 1982284`_ for more details. .. _bug 1982284: https://bugs.launchpad.net/nova/+bug/1982284 ",,40,0
openstack%2Fnova~859321,openstack/nova,stable/wallaby,I1719f8eda04e8d15a3b01f0612977164c4e55e85,Gracefully ERROR in _init_instance if vnic_type changed,ABANDONED,2022-09-26 16:54:19.000000000,2024-03-05 19:05:33.000000000,,"[{'_account_id': 7166}, {'_account_id': 7634}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-09-26 16:54:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/c58cb426f63afb9e677e5ecb38c39ef24cf5e718', 'message': 'Gracefully ERROR in _init_instance if vnic_type changed\n\nIf the vnic_type of a bound port changes from ""direct"" to ""macvtap"" and\nthen the compute service is restarted then during _init_instance nova\ntries to plug the vif of the changed port. However as it now has macvtap\nvnic_type nova tries to look up the netdev of the parent VF. Still that\nVF is consumed by the instance so there is no such netdev on the host\nOS. This error killed the compute service at startup due to unhandled\nexception. This patch adds the exception handler, logs an ERROR and\ncontinue initializing other instances on the host.\n\nAlso this patch adds a detailed ERROR log when nova detects that the\nvnic_type changed during _heal_instance_info_cache periodic.\n\nCloses-Bug: #1981813\nChange-Id: I1719f8eda04e8d15a3b01f0612977164c4e55e85\n(cherry picked from commit e43bf900dc8ca66578603bed333c56b215b1876e)\n(cherry picked from commit 1ef69cda8674a971834b729179635feb94978385)\n(cherry picked from commit 06efd484c7818aa6d67cb2579d474cd0f04e3c2b)\n'}, {'number': 2, 'created': '2022-10-17 16:35:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8b3a9ea1c6e424c429647e64db39c02869610404', 'message': 'Gracefully ERROR in _init_instance if vnic_type changed\n\nIf the vnic_type of a bound port changes from ""direct"" to ""macvtap"" and\nthen the compute service is restarted then during _init_instance nova\ntries to plug the vif of the changed port. However as it now has macvtap\nvnic_type nova tries to look up the netdev of the parent VF. Still that\nVF is consumed by the instance so there is no such netdev on the host\nOS. This error killed the compute service at startup due to unhandled\nexception. This patch adds the exception handler, logs an ERROR and\ncontinue initializing other instances on the host.\n\nAlso this patch adds a detailed ERROR log when nova detects that the\nvnic_type changed during _heal_instance_info_cache periodic.\n\nCloses-Bug: #1981813\nChange-Id: I1719f8eda04e8d15a3b01f0612977164c4e55e85\n(cherry picked from commit e43bf900dc8ca66578603bed333c56b215b1876e)\n(cherry picked from commit 591586df221dcc87ec0b2018a6ad6286dc3398a8)\n(cherry picked from commit 99b1af563d686ca33e51b2a1c3f48403b05d3fd6)\n'}, {'number': 3, 'created': '2023-01-09 17:22:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/f1ec1e38d7eb81fa65a4ca7628c363921923833f', 'message': 'Gracefully ERROR in _init_instance if vnic_type changed\n\nIf the vnic_type of a bound port changes from ""direct"" to ""macvtap"" and\nthen the compute service is restarted then during _init_instance nova\ntries to plug the vif of the changed port. However as it now has macvtap\nvnic_type nova tries to look up the netdev of the parent VF. Still that\nVF is consumed by the instance so there is no such netdev on the host\nOS. This error killed the compute service at startup due to unhandled\nexception. This patch adds the exception handler, logs an ERROR and\ncontinue initializing other instances on the host.\n\nAlso this patch adds a detailed ERROR log when nova detects that the\nvnic_type changed during _heal_instance_info_cache periodic.\n\nCloses-Bug: #1981813\nChange-Id: I1719f8eda04e8d15a3b01f0612977164c4e55e85\n(cherry picked from commit e43bf900dc8ca66578603bed333c56b215b1876e)\n(cherry picked from commit 1cdeb44f798fce2ce014a3d7de2310d82a4fd34f)\n(cherry picked from commit 4464141d393a1f3ffd25fec6b5d907ce0320e872)\n'}, {'number': 4, 'created': '2023-01-25 16:34:58.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/network/test_neutron.py', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/network/neutron.py', 'releasenotes/notes/bug-1981813-vnic-type-change-9f3e16fae885b57f.yaml', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/e5838298e7189f01a1eb99e90a9b4da6e1925c36', 'message': 'Gracefully ERROR in _init_instance if vnic_type changed\n\nIf the vnic_type of a bound port changes from ""direct"" to ""macvtap"" and\nthen the compute service is restarted then during _init_instance nova\ntries to plug the vif of the changed port. However as it now has macvtap\nvnic_type nova tries to look up the netdev of the parent VF. Still that\nVF is consumed by the instance so there is no such netdev on the host\nOS. This error killed the compute service at startup due to unhandled\nexception. This patch adds the exception handler, logs an ERROR and\ncontinue initializing other instances on the host.\n\nAlso this patch adds a detailed ERROR log when nova detects that the\nvnic_type changed during _heal_instance_info_cache periodic.\n\nCloses-Bug: #1981813\nChange-Id: I1719f8eda04e8d15a3b01f0612977164c4e55e85\n(cherry picked from commit e43bf900dc8ca66578603bed333c56b215b1876e)\n(cherry picked from commit a28c82719545d5c8ee7f3ff1361b3a796e05095a)\n(cherry picked from commit 1a98a1a650d065a8ab3e1c474f3b9fd537dc2206)\n'}]",7,859321,e5838298e7189f01a1eb99e90a9b4da6e1925c36,36,4,4,9708,,,0,"Gracefully ERROR in _init_instance if vnic_type changed

If the vnic_type of a bound port changes from ""direct"" to ""macvtap"" and
then the compute service is restarted then during _init_instance nova
tries to plug the vif of the changed port. However as it now has macvtap
vnic_type nova tries to look up the netdev of the parent VF. Still that
VF is consumed by the instance so there is no such netdev on the host
OS. This error killed the compute service at startup due to unhandled
exception. This patch adds the exception handler, logs an ERROR and
continue initializing other instances on the host.

Also this patch adds a detailed ERROR log when nova detects that the
vnic_type changed during _heal_instance_info_cache periodic.

Closes-Bug: #1981813
Change-Id: I1719f8eda04e8d15a3b01f0612977164c4e55e85
(cherry picked from commit e43bf900dc8ca66578603bed333c56b215b1876e)
(cherry picked from commit a28c82719545d5c8ee7f3ff1361b3a796e05095a)
(cherry picked from commit 1a98a1a650d065a8ab3e1c474f3b9fd537dc2206)
",git fetch https://review.opendev.org/openstack/nova refs/changes/21/859321/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/network/test_neutron.py', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/network/neutron.py', 'releasenotes/notes/bug-1981813-vnic-type-change-9f3e16fae885b57f.yaml', 'nova/compute/manager.py']",6,c58cb426f63afb9e677e5ecb38c39ef24cf5e718,bug/1981813," except exception.PciDeviceNotFoundById: # This is bug 1981813 where the bound port vnic_type has changed # from direct to macvtap. Nova does not support that and it # already printed an ERROR when the change is detected during # _heal_instance_info_cache. Now we print an ERROR again and skip # plugging the vifs but let the service startup continue to init # the other instances LOG.exception( 'Virtual interface plugging failed for instance. Probably the ' 'vnic_type of the bound port has been changed. Nova does not ' 'support such change.', instance=instance ) return",,250,5
openstack%2Ftacker~911241,openstack/tacker,unmaintained/wallaby,I8c05b582124b63d896e77c470b24483a9b033d48,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:37:51.000000000,2024-03-05 19:05:29.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:37:51.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/tacker/commit/a046d98adffa5f4b9961b32d8d95b0f144495667', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I8c05b582124b63d896e77c470b24483a9b033d48\n'}]",0,911241,a046d98adffa5f4b9961b32d8d95b0f144495667,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I8c05b582124b63d896e77c470b24483a9b033d48
",git fetch https://review.opendev.org/openstack/tacker refs/changes/41/911241/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,a046d98adffa5f4b9961b32d8d95b0f144495667,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fnova~882536,openstack/nova,stable/wallaby,I52ee068377cc48ef4b4cdcb4b05fdc8d926faddf,Reproduce asym NUMA mixed CPU policy bug,ABANDONED,2023-05-08 09:01:39.000000000,2024-03-05 19:05:29.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-08 09:01:39.000000000', 'files': ['nova/tests/functional/libvirt/test_numa_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/89fc59ac9d270add8fec8f226f2c1875bf42b3c9', 'message': 'Reproduce asym NUMA mixed CPU policy bug\n\nRelated-Bug: #1994526\nChange-Id: I52ee068377cc48ef4b4cdcb4b05fdc8d926faddf\n(cherry picked from commit 182c5be122868d4fe910309a868b044b0e71316b)\n(cherry picked from commit 2cf835be82e11505ae8609deba83d61a34ecaa8d)\n(cherry picked from commit 4fd163f698cc4991f731adc06f3e8601f9fbdce9)\n(cherry picked from commit a00f00a32af4072b37319fe82d36dbff7e59b355)\n(cherry picked from commit b4d111eabf13bce571cb15be5d2e772ff88ee69e)\n'}]",0,882536,89fc59ac9d270add8fec8f226f2c1875bf42b3c9,4,1,1,9708,,,0,"Reproduce asym NUMA mixed CPU policy bug

Related-Bug: #1994526
Change-Id: I52ee068377cc48ef4b4cdcb4b05fdc8d926faddf
(cherry picked from commit 182c5be122868d4fe910309a868b044b0e71316b)
(cherry picked from commit 2cf835be82e11505ae8609deba83d61a34ecaa8d)
(cherry picked from commit 4fd163f698cc4991f731adc06f3e8601f9fbdce9)
(cherry picked from commit a00f00a32af4072b37319fe82d36dbff7e59b355)
(cherry picked from commit b4d111eabf13bce571cb15be5d2e772ff88ee69e)
",git fetch https://review.opendev.org/openstack/nova refs/changes/36/882536/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/libvirt/test_numa_servers.py'],1,89fc59ac9d270add8fec8f226f2c1875bf42b3c9,bug/1994526," def test_create_server_with_mixed_policy_asymmetric_multi_numa(self): """"""Boot an instance stretched to two NUMA nodes requesting only shared CPUs in one NUMA and only dedicated in the other NUMA node. """""" # shared dedicated # NUMA0 pCPU | 0 | 2 3 # NUMA1 pCPU | | 6 7 self.flags( cpu_shared_set='0', cpu_dedicated_set='2,3,6,7', group='compute', ) self.flags(vcpu_pin_set=None) host_info = fakelibvirt.HostInfo( cpu_nodes=2, cpu_sockets=1, cpu_cores=4, cpu_threads=1) self.start_compute(host_info=host_info, hostname='compute1') # sanity check the created host topology object; this is really just a # test of the fakelibvirt module host_numa = objects.NUMATopology.obj_from_db_obj( objects.ComputeNode.get_by_nodename( self.ctxt, 'compute1', ).numa_topology ) self.assertEqual(2, len(host_numa.cells)) self.assertEqual({0}, host_numa.cells[0].cpuset) self.assertEqual({2, 3}, host_numa.cells[0].pcpuset) self.assertEqual(set(), host_numa.cells[1].cpuset) self.assertEqual({6, 7}, host_numa.cells[1].pcpuset) # create a flavor with 1 shared and 2 dedicated CPUs stretched to # different NUMA nodes extra_spec = { 'hw:cpu_policy': 'mixed', 'hw:cpu_dedicated_mask': '^0', 'hw:numa_nodes': '2', 'hw:numa_cpus.0': '0', 'hw:numa_cpus.1': '1,2', 'hw:numa_mem.0': '256', 'hw:numa_mem.1': '768', } flavor_id = self._create_flavor( vcpu=3, memory_mb=1024, extra_spec=extra_spec) # The only possible solution (ignoring the order of vCPU1,2): # vCPU 0 => pCPU 0, NUMA0, shared # vCPU 1 => pCPU 6, NUMA1, dedicated # vCPU 2 => pCPU 7, NUMA1, dedicated # This is bug 1994526 as the scheduling fails self._run_build_test(flavor_id, end_status='ERROR') # # After bug 1994526 is fixed, this should pass # expected_usage = { # 'DISK_GB': 20, 'MEMORY_MB': 1024, 'PCPU': 2, 'VCPU': 1, # } # server = self._run_build_test( # flavor_id, expected_usage=expected_usage) # # # sanity check the instance topology # inst = objects.Instance.get_by_uuid(self.ctxt, server['id']) # self.assertEqual(2, len(inst.numa_topology.cells)) # # self.assertEqual({0}, inst.numa_topology.cells[0].cpuset) # self.assertEqual(set(), inst.numa_topology.cells[0].pcpuset) # self.assertEqual(None, inst.numa_topology.cells[0].cpu_pinning) # # self.assertEqual(set(), inst.numa_topology.cells[1].cpuset) # self.assertEqual({1, 2}, inst.numa_topology.cells[1].pcpuset) # self.assertEqual( # {6, 7}, # set(inst.numa_topology.cells[1].cpu_pinning.values()) # ) ",,74,0
openstack%2Fnova~882537,openstack/nova,stable/wallaby,I5a35a45abfcfbbb858a94927853777f112e73e5b,Handle zero pinned CPU in a cell with mixed policy,ABANDONED,2023-05-08 09:01:39.000000000,2024-03-05 19:05:26.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-08 09:01:39.000000000', 'files': ['nova/virt/hardware.py', 'nova/tests/functional/libvirt/test_numa_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/7eb06119ad2417d55c86a0eaa67d4d7772d6becd', 'message': 'Handle zero pinned CPU in a cell with mixed policy\n\nWhen cpu_policy is mixed the scheduler tries to find a valid CPU pinning\nfor each instance NUMA cell. However if there is an instance NUMA cell\nthat does not request any pinned CPUs then such logic will calculate\nempty pinning information for that cell. Then the scheduler logic\nwrongly assumes that an empty pinning result means there was no valid\npinning. However there is difference between a None result when no valid\npinning found, from an empty result [] which means there was nothing to\npin.\n\nThis patch makes sure that pinning == None is differentiated from\npinning == [].\n\nCloses-Bug: #1994526\nChange-Id: I5a35a45abfcfbbb858a94927853777f112e73e5b\n(cherry picked from commit cffe3971ce585a1ddc374a3ed067347857338831)\n(cherry picked from commit fa2ba3ab2c566337f5ad6ebd8fbcecc6aa930a40)\n(cherry picked from commit 9d11b6ae82b9dc709f3b856e50587d9713a70495)\n(cherry picked from commit c4e10fd7c1e928e94441b827504f49e94ad53676)\n(cherry picked from commit 201435b1595914e44dd9f24fa345f1a15775c83d)\n'}]",1,882537,7eb06119ad2417d55c86a0eaa67d4d7772d6becd,8,1,1,9708,,,0,"Handle zero pinned CPU in a cell with mixed policy

When cpu_policy is mixed the scheduler tries to find a valid CPU pinning
for each instance NUMA cell. However if there is an instance NUMA cell
that does not request any pinned CPUs then such logic will calculate
empty pinning information for that cell. Then the scheduler logic
wrongly assumes that an empty pinning result means there was no valid
pinning. However there is difference between a None result when no valid
pinning found, from an empty result [] which means there was nothing to
pin.

This patch makes sure that pinning == None is differentiated from
pinning == [].

Closes-Bug: #1994526
Change-Id: I5a35a45abfcfbbb858a94927853777f112e73e5b
(cherry picked from commit cffe3971ce585a1ddc374a3ed067347857338831)
(cherry picked from commit fa2ba3ab2c566337f5ad6ebd8fbcecc6aa930a40)
(cherry picked from commit 9d11b6ae82b9dc709f3b856e50587d9713a70495)
(cherry picked from commit c4e10fd7c1e928e94441b827504f49e94ad53676)
(cherry picked from commit 201435b1595914e44dd9f24fa345f1a15775c83d)
",git fetch https://review.opendev.org/openstack/nova refs/changes/37/882537/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/hardware.py', 'nova/tests/functional/libvirt/test_numa_servers.py']",2,7eb06119ad2417d55c86a0eaa67d4d7772d6becd,bug/1994526," expected_usage = { 'DISK_GB': 20, 'MEMORY_MB': 1024, 'PCPU': 2, 'VCPU': 1, } server = self._run_build_test( flavor_id, expected_usage=expected_usage) # sanity check the instance topology inst = objects.Instance.get_by_uuid(self.ctxt, server['id']) self.assertEqual(2, len(inst.numa_topology.cells)) self.assertEqual({0}, inst.numa_topology.cells[0].cpuset) self.assertEqual(set(), inst.numa_topology.cells[0].pcpuset) self.assertIsNone(inst.numa_topology.cells[0].cpu_pinning) self.assertEqual(set(), inst.numa_topology.cells[1].cpuset) self.assertEqual({1, 2}, inst.numa_topology.cells[1].pcpuset) self.assertEqual( {6, 7}, set(inst.numa_topology.cells[1].cpu_pinning.values()) )"," # This is bug 1994526 as the scheduling fails self._run_build_test(flavor_id, end_status='ERROR') # # After bug 1994526 is fixed, this should pass # expected_usage = { # 'DISK_GB': 20, 'MEMORY_MB': 1024, 'PCPU': 2, 'VCPU': 1, # } # server = self._run_build_test( # flavor_id, expected_usage=expected_usage) # # # sanity check the instance topology # inst = objects.Instance.get_by_uuid(self.ctxt, server['id']) # self.assertEqual(2, len(inst.numa_topology.cells)) # # self.assertEqual({0}, inst.numa_topology.cells[0].cpuset) # self.assertEqual(set(), inst.numa_topology.cells[0].pcpuset) # self.assertEqual(None, inst.numa_topology.cells[0].cpu_pinning) # # self.assertEqual(set(), inst.numa_topology.cells[1].cpuset) # self.assertEqual({1, 2}, inst.numa_topology.cells[1].pcpuset) # self.assertEqual( # {6, 7}, # set(inst.numa_topology.cells[1].cpu_pinning.values()) # )",25,27
openstack%2Fnova~882321,openstack/nova,stable/wallaby,I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b,Reproduce bug 1995153,ABANDONED,2023-05-04 14:21:05.000000000,2024-03-05 19:05:16.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-04 14:21:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d756d39614af46b40e11443c8a595a202997ddd6', 'message': ""Reproduce bug 1995153\n\nIf we first boot an instance with NUMA topology on a host, any\nsubsequent attempts to boot instances with the `socket` PCI NUMA\npolicy will fail with `Cannot load 'socket' in the base class`.\nDemonstrate this in a functional test.\n\nChange-Id: I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b\nRelated-bug: 1995153\n(cherry picked from commit 63d6ecd99b7dec06cf0cf8358b43b0d8fa607504)\n(cherry picked from commit 29e3f2f2ab69157d938cfe6895df352ef9a08d8c)\n(cherry picked from commit d9dfd0e0445ae82933eb75a38127186659041673)\n(cherry picked from commit 1c10bd62148aa6b98427209d16df091fd931996c)\n(cherry picked from commit af1f45655b4f636fc402cfe2ea0db419b952e8dd)\n""}, {'number': 2, 'created': '2023-05-05 14:12:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/2d6f853e01ae9be37130feb1a8f1751c2a62fe39', 'message': ""Reproduce bug 1995153\n\nIf we first boot an instance with NUMA topology on a host, any\nsubsequent attempts to boot instances with the `socket` PCI NUMA\npolicy will fail with `Cannot load 'socket' in the base class`.\nDemonstrate this in a functional test.\n\nChange-Id: I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b\nRelated-bug: 1995153\n(cherry picked from commit 63d6ecd99b7dec06cf0cf8358b43b0d8fa607504)\n(cherry picked from commit 29e3f2f2ab69157d938cfe6895df352ef9a08d8c)\n(cherry picked from commit d9dfd0e0445ae82933eb75a38127186659041673)\n(cherry picked from commit 8d717df2e7b26d7cf6e393089e989ce81fd5a209)\n(cherry picked from commit ff903d6a75cf2ad80621ed6f584630e36fa4ad86)\n""}, {'number': 3, 'created': '2023-05-05 16:12:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/bde664a480d2ec14cb13df045eec5ce4d9efb658', 'message': ""Reproduce bug 1995153\n\nIf we first boot an instance with NUMA topology on a host, any\nsubsequent attempts to boot instances with the `socket` PCI NUMA\npolicy will fail with `Cannot load 'socket' in the base class`.\nDemonstrate this in a functional test.\n\nNOTE(artom) In wallaby fakelibvirt lives in\nnova.tests.unit.virt.libvirt, fix the import path.\n\nChange-Id: I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b\nRelated-bug: 1995153\n(cherry picked from commit 63d6ecd99b7dec06cf0cf8358b43b0d8fa607504)\n(cherry picked from commit 29e3f2f2ab69157d938cfe6895df352ef9a08d8c)\n(cherry picked from commit d9dfd0e0445ae82933eb75a38127186659041673)\n(cherry picked from commit 8d717df2e7b26d7cf6e393089e989ce81fd5a209)\n(cherry picked from commit ff903d6a75cf2ad80621ed6f584630e36fa4ad86)\n""}, {'number': 4, 'created': '2023-05-26 16:10:03.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1995153.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/5bf3cc3e5968b780951d1e81982dcca50f509e1a', 'message': 'Reproduce bug 1995153\n\nIf we first boot an instance with NUMA topology on a host, any\nsubsequent attempts to boot instances with the `socket` PCI NUMA\npolicy will fail with `Cannot load \'socket\' in the base class`.\nDemonstrate this in a functional test.\n\nNOTE(artom) In wallaby fakelibvirt lives in\nnova.tests.unit.virt.libvirt, fix the import path.\n\nNOTE(artom) In wallaby the ""path"" to the scheduler host_manager is\nscheduler.manager.driver.host_manager, this had to be changed from the\noriginal scheduler.manager.host_manager.\n\nChange-Id: I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b\nRelated-bug: 1995153\n(cherry picked from commit 63d6ecd99b7dec06cf0cf8358b43b0d8fa607504)\n(cherry picked from commit 29e3f2f2ab69157d938cfe6895df352ef9a08d8c)\n(cherry picked from commit d9dfd0e0445ae82933eb75a38127186659041673)\n(cherry picked from commit 8d717df2e7b26d7cf6e393089e989ce81fd5a209)\n(cherry picked from commit ff903d6a75cf2ad80621ed6f584630e36fa4ad86)\n'}]",0,882321,5bf3cc3e5968b780951d1e81982dcca50f509e1a,13,1,4,8864,,,0,"Reproduce bug 1995153

If we first boot an instance with NUMA topology on a host, any
subsequent attempts to boot instances with the `socket` PCI NUMA
policy will fail with `Cannot load 'socket' in the base class`.
Demonstrate this in a functional test.

NOTE(artom) In wallaby fakelibvirt lives in
nova.tests.unit.virt.libvirt, fix the import path.

NOTE(artom) In wallaby the ""path"" to the scheduler host_manager is
scheduler.manager.driver.host_manager, this had to be changed from the
original scheduler.manager.host_manager.

Change-Id: I63f4e3dfa38f65b73d0051b8e52b1abd0f027e9b
Related-bug: 1995153
(cherry picked from commit 63d6ecd99b7dec06cf0cf8358b43b0d8fa607504)
(cherry picked from commit 29e3f2f2ab69157d938cfe6895df352ef9a08d8c)
(cherry picked from commit d9dfd0e0445ae82933eb75a38127186659041673)
(cherry picked from commit 8d717df2e7b26d7cf6e393089e989ce81fd5a209)
(cherry picked from commit ff903d6a75cf2ad80621ed6f584630e36fa4ad86)
",git fetch https://review.opendev.org/openstack/nova refs/changes/21/882321/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1995153.py'],1,d756d39614af46b40e11443c8a595a202997ddd6,,"# Copyright (C) 2023 Red Hat, Inc # All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import fixtures from unittest import mock from oslo_serialization import jsonutils from oslo_utils import units from nova.objects import fields from nova.tests.fixtures import libvirt as fakelibvirt from nova.tests.functional import integrated_helpers from nova.tests.functional.libvirt import base class Bug1995153RegressionTest( base.ServersTestBase, integrated_helpers.InstanceHelperMixin ): ADDITIONAL_FILTERS = ['NUMATopologyFilter', 'PciPassthroughFilter'] ALIAS_NAME = 'a1' PCI_DEVICE_SPEC = [jsonutils.dumps( { 'vendor_id': fakelibvirt.PCI_VEND_ID, 'product_id': fakelibvirt.PCI_PROD_ID, } )] # we set the numa_affinity policy to required to ensure strict affinity # between pci devices and the guest cpu and memory will be enforced. PCI_ALIAS = [jsonutils.dumps( { 'vendor_id': fakelibvirt.PCI_VEND_ID, 'product_id': fakelibvirt.PCI_PROD_ID, 'name': ALIAS_NAME, 'device_type': fields.PciDeviceType.STANDARD, 'numa_policy': fields.PCINUMAAffinityPolicy.REQUIRED, } )] def setUp(self): super(Bug1995153RegressionTest, self).setUp() self.flags( device_spec=self.PCI_DEVICE_SPEC, alias=self.PCI_ALIAS, group='pci' ) host_manager = self.scheduler.manager.host_manager pci_filter_class = host_manager.filter_cls_map['PciPassthroughFilter'] host_pass_mock = mock.Mock(wraps=pci_filter_class().host_passes) self.mock_filter = self.useFixture(fixtures.MockPatch( 'nova.scheduler.filters.pci_passthrough_filter' '.PciPassthroughFilter.host_passes', side_effect=host_pass_mock)).mock def test_socket_policy_bug_1995153(self): """"""The numa_usage_from_instance_numa() method in hardware.py saves the host NUMAToplogy object with NUMACells that have no `socket` set. This was an omission in the original implementation of the `socket` PCI NUMA affinity policy. The consequence is that any code path that calls into numa_usage_from_instance_numa() will clobber the host NUMA topology in the database with a socket-less version. Booting an instance with NUMA toplogy will do that, for example. If then a second instance is booted with the `socket` PCI NUMA affinity policy, it will read the socket-less host NUMATopology from the database, and error out with a NotImplementedError. This is bug 1995153. """""" host_info = fakelibvirt.HostInfo( cpu_nodes=2, cpu_sockets=1, cpu_cores=2, cpu_threads=2, kB_mem=(16 * units.Gi) // units.Ki) self.flags(cpu_dedicated_set='0-3', group='compute') pci_info = fakelibvirt.HostPCIDevicesInfo(num_pci=1, numa_node=1) self.start_compute(host_info=host_info, pci_info=pci_info) extra_spec = { 'hw:cpu_policy': 'dedicated', 'pci_passthrough:alias': '%s:1' % self.ALIAS_NAME, 'hw:pci_numa_affinity_policy': 'socket' } # Boot a first instance with a guest NUMA topology to run the buggy # code in numa_usage_from_instance_numa() and save the socket-less host # NUMATopology to the database. self._create_server( flavor_id=self._create_flavor( extra_spec={'hw:cpu_policy': 'dedicated'})) # FIXME(artom) Attempt to boot an instance with the `socket` PCI NUMA # affinity policy and observe the fireworks. flavor_id = self._create_flavor(extra_spec=extra_spec) server = self._create_server(flavor_id=flavor_id, expected_state='ERROR') self.assertIn('fault', server) self.assertIn('NotImplementedError', server['fault']['message']) self.assertTrue(self.mock_filter.called) ",,109,0
openstack%2Fnova~882322,openstack/nova,stable/wallaby,I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68,Save cell socket correctly when updating host NUMA topology,ABANDONED,2023-05-04 14:21:05.000000000,2024-03-05 19:05:12.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-04 14:21:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/3e10378da9f105412ef1349141134bc362b2a925', 'message': 'Save cell socket correctly when updating host NUMA topology\n\nPreviously, in numa_usage_from_instance_numa(), any new NUMACell\nobjects we created did not have the `socket` attribute. In some cases\nthis was persisted all the way down to the database. Fix this by\ncopying `socket` from the old_cell.\n\nChange-Id: I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68\nCloses-Bug: 1995153\n(cherry picked from commit 04ebae9dc01ebd24552b5aacd1a0f8b129013a9e)\n(cherry picked from commit acb511652c1afb8253c66c29ca10f790f035229e)\n(cherry picked from commit 693318573cb7bbbcf074c3cc01339f07fe04ff24)\n(cherry picked from commit d690c1a9228f9cefbfc1a896758bfeccec52c420)\n(cherry picked from commit 9fb7f7792ffa7b9dd113635cad2593e362c185b0)\n'}, {'number': 2, 'created': '2023-05-05 14:12:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/24bbec7f95afd9c2dd86cfb56c3d050351fc569c', 'message': 'Save cell socket correctly when updating host NUMA topology\n\nPreviously, in numa_usage_from_instance_numa(), any new NUMACell\nobjects we created did not have the `socket` attribute. In some cases\nthis was persisted all the way down to the database. Fix this by\ncopying `socket` from the old_cell.\n\nChange-Id: I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68\nCloses-Bug: 1995153\n(cherry picked from commit 04ebae9dc01ebd24552b5aacd1a0f8b129013a9e)\n(cherry picked from commit acb511652c1afb8253c66c29ca10f790f035229e)\n(cherry picked from commit 693318573cb7bbbcf074c3cc01339f07fe04ff24)\n(cherry picked from commit f7b2577620cfbbaf02a483a2f19a4bac35d4fa6b)\n(cherry picked from commit 72ea89b4836ff218060c780af561f260588d48fb)\n'}, {'number': 3, 'created': '2023-05-05 16:12:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/fa830da71cb05ab3bb58bdfa614ab8c857790a9f', 'message': 'Save cell socket correctly when updating host NUMA topology\n\nPreviously, in numa_usage_from_instance_numa(), any new NUMACell\nobjects we created did not have the `socket` attribute. In some cases\nthis was persisted all the way down to the database. Fix this by\ncopying `socket` from the old_cell.\n\nChange-Id: I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68\nCloses-Bug: 1995153\n(cherry picked from commit 04ebae9dc01ebd24552b5aacd1a0f8b129013a9e)\n(cherry picked from commit acb511652c1afb8253c66c29ca10f790f035229e)\n(cherry picked from commit 693318573cb7bbbcf074c3cc01339f07fe04ff24)\n(cherry picked from commit f7b2577620cfbbaf02a483a2f19a4bac35d4fa6b)\n(cherry picked from commit 72ea89b4836ff218060c780af561f260588d48fb)\n'}, {'number': 4, 'created': '2023-05-26 16:10:03.000000000', 'files': ['nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'nova/tests/unit/compute/test_resource_tracker.py', 'nova/tests/functional/regressions/test_bug_1995153.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/scheduler/fakes.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/99962e5ba4cc647e46b13958f1ffa62dff33eba8', 'message': 'Save cell socket correctly when updating host NUMA topology\n\nPreviously, in numa_usage_from_instance_numa(), any new NUMACell\nobjects we created did not have the `socket` attribute. In some cases\nthis was persisted all the way down to the database. Fix this by\ncopying `socket` from the old_cell.\n\nChange-Id: I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68\nCloses-Bug: 1995153\n(cherry picked from commit 04ebae9dc01ebd24552b5aacd1a0f8b129013a9e)\n(cherry picked from commit acb511652c1afb8253c66c29ca10f790f035229e)\n(cherry picked from commit 693318573cb7bbbcf074c3cc01339f07fe04ff24)\n(cherry picked from commit f7b2577620cfbbaf02a483a2f19a4bac35d4fa6b)\n(cherry picked from commit 72ea89b4836ff218060c780af561f260588d48fb)\n'}]",0,882322,99962e5ba4cc647e46b13958f1ffa62dff33eba8,14,1,4,8864,,,0,"Save cell socket correctly when updating host NUMA topology

Previously, in numa_usage_from_instance_numa(), any new NUMACell
objects we created did not have the `socket` attribute. In some cases
this was persisted all the way down to the database. Fix this by
copying `socket` from the old_cell.

Change-Id: I9ed3c31ccd3220b02d951fc6dbc5ea049a240a68
Closes-Bug: 1995153
(cherry picked from commit 04ebae9dc01ebd24552b5aacd1a0f8b129013a9e)
(cherry picked from commit acb511652c1afb8253c66c29ca10f790f035229e)
(cherry picked from commit 693318573cb7bbbcf074c3cc01339f07fe04ff24)
(cherry picked from commit f7b2577620cfbbaf02a483a2f19a4bac35d4fa6b)
(cherry picked from commit 72ea89b4836ff218060c780af561f260588d48fb)
",git fetch https://review.opendev.org/openstack/nova refs/changes/22/882322/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'nova/tests/unit/compute/test_resource_tracker.py', 'nova/tests/functional/regressions/test_bug_1995153.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/scheduler/fakes.py']",6,3e10378da9f105412ef1349141134bc362b2a925,," socket=0, socket=0,",,53,19
openstack%2Fnova~829434,openstack/nova,stable/wallaby,I17f4d7d2cb129c4ec1479cc4e5d723da75d3a527,Gracefull recovery when attaching volume fails,ABANDONED,2022-02-16 08:57:39.000000000,2024-03-05 19:05:09.000000000,,"[{'_account_id': 4690}, {'_account_id': 7634}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-02-16 08:57:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/9ac82720466e0df0490b963e6d975bcb263f6191', 'message': 'Gracefull recovery when attaching volume fails\n\nWhen trying to attach a volume to an already running instance the nova-api\nrequests the nova-compute service to create a BlockDeviceMapping. If the\nnova-api does not receive a response within `rpc_response_timeout` it will\ntreat the request as failed and raise an exception.\n\nThere are multiple cases where nova-compute actually already processed the\nrequest and just the reply did not reach the nova-api in time (see bug report).\nAfter the failed request the database will contain a BlockDeviceMapping entry\nfor the volume + instance combination that will never be cleaned up again.\nThis entry also causes the nova-api to reject all future attachments of this\nvolume to this instance (as it assumes it is already attached).\n\nTo work around this we check if a BlockDeviceMapping has already been created\nwhen we see a messaging timeout. If this is the case we can safely delete it\nas the compute node has already finished processing and we will no longer pick\nit up.\nThis allows users to try the request again.\n\nA previous fix was abandoned but without a clear reason ([1]).\n\n[1]: https://review.opendev.org/c/openstack/nova/+/731804\n\nCloses-Bug: 1960401\nChange-Id: I17f4d7d2cb129c4ec1479cc4e5d723da75d3a527\n(cherry picked from commit 9eb116b99ce32bc69c4abf8ec3b0179ef89a8860)\n'}, {'number': 2, 'created': '2022-08-02 11:36:52.000000000', 'files': ['releasenotes/notes/bug-1960401-504eb255253d966a.yaml', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/f50ae3c614dbe04efbdbbdaead099982d1175169', 'message': 'Gracefull recovery when attaching volume fails\n\nWhen trying to attach a volume to an already running instance the nova-api\nrequests the nova-compute service to create a BlockDeviceMapping. If the\nnova-api does not receive a response within `rpc_response_timeout` it will\ntreat the request as failed and raise an exception.\n\nThere are multiple cases where nova-compute actually already processed the\nrequest and just the reply did not reach the nova-api in time (see bug report).\nAfter the failed request the database will contain a BlockDeviceMapping entry\nfor the volume + instance combination that will never be cleaned up again.\nThis entry also causes the nova-api to reject all future attachments of this\nvolume to this instance (as it assumes it is already attached).\n\nTo work around this we check if a BlockDeviceMapping has already been created\nwhen we see a messaging timeout. If this is the case we can safely delete it\nas the compute node has already finished processing and we will no longer pick\nit up.\nThis allows users to try the request again.\n\nA previous fix was abandoned but without a clear reason ([1]).\n\n[1]: https://review.opendev.org/c/openstack/nova/+/731804\n\nCloses-Bug: 1960401\nChange-Id: I17f4d7d2cb129c4ec1479cc4e5d723da75d3a527\n(cherry picked from commit 9eb116b99ce32bc69c4abf8ec3b0179ef89a8860)\n(cherry picked from commit a46fc40aa4edde4d426c95999bdac1c315d0276d)\n'}]",16,829434,f50ae3c614dbe04efbdbbdaead099982d1175169,55,4,2,29074,,,0,"Gracefull recovery when attaching volume fails

When trying to attach a volume to an already running instance the nova-api
requests the nova-compute service to create a BlockDeviceMapping. If the
nova-api does not receive a response within `rpc_response_timeout` it will
treat the request as failed and raise an exception.

There are multiple cases where nova-compute actually already processed the
request and just the reply did not reach the nova-api in time (see bug report).
After the failed request the database will contain a BlockDeviceMapping entry
for the volume + instance combination that will never be cleaned up again.
This entry also causes the nova-api to reject all future attachments of this
volume to this instance (as it assumes it is already attached).

To work around this we check if a BlockDeviceMapping has already been created
when we see a messaging timeout. If this is the case we can safely delete it
as the compute node has already finished processing and we will no longer pick
it up.
This allows users to try the request again.

A previous fix was abandoned but without a clear reason ([1]).

[1]: https://review.opendev.org/c/openstack/nova/+/731804

Closes-Bug: 1960401
Change-Id: I17f4d7d2cb129c4ec1479cc4e5d723da75d3a527
(cherry picked from commit 9eb116b99ce32bc69c4abf8ec3b0179ef89a8860)
(cherry picked from commit a46fc40aa4edde4d426c95999bdac1c315d0276d)
",git fetch https://review.opendev.org/openstack/nova refs/changes/34/829434/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/bug-1960401-504eb255253d966a.yaml', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",3,9ac82720466e0df0490b963e6d975bcb263f6191,fix_bdm_create_with_timeout-stable/wallaby," @mock.patch.object( objects.BlockDeviceMapping, 'get_by_volume_and_instance') @mock.patch.object(objects.BlockDeviceMappingList, 'get_by_volume') def test_attach_volume_reserve_bdm_timeout( self, mock_get_by_volume, mock_get_by_volume_and_instance, mock_reserve): mock_get_by_volume.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') fake_bdm = mock.MagicMock(spec=objects.BlockDeviceMapping) mock_get_by_volume_and_instance.return_value = fake_bdm instance = self._create_instance_obj() volume = fake_volume.fake_volume(1, 'test-vol', 'test-vol', None, None, None, None, None) mock_reserve.side_effect = oslo_exceptions.MessagingTimeout() mock_volume_api = mock.patch.object(self.compute_api, 'volume_api', mock.MagicMock(spec=cinder.API)) with mock_volume_api as mock_v_api: mock_v_api.get.return_value = volume self.assertRaises(oslo_exceptions.MessagingTimeout, self.compute_api.attach_volume, self.context, instance, volume['id']) mock_get_by_volume_and_instance.assert_called_once_with( self.context, volume['id'], instance.uuid) fake_bdm.destroy.assert_called_once_with() @mock.patch.object(compute_rpcapi.ComputeAPI, 'reserve_block_device_name')",,56,4
openstack%2Fnova~887987,openstack/nova,stable/wallaby,If39f6afb6359c67aa38cf315ec90ffa386d5c142,testing: Fix and robustify archive_deleted_rows test,ABANDONED,2023-07-07 18:42:00.000000000,2024-03-05 19:05:05.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-07 18:42:00.000000000', 'files': ['nova/tests/functional/test_nova_manage.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/7287070758e7f99c35eb4827b5552df784084a09', 'message': 'testing: Fix and robustify archive_deleted_rows test\n\nThe regexes in test_archive_deleted_rows for multiple cells were\nincorrect in that they were not isolating the search pattern and rather\ncould match with other rows in the result table as well, resulting in a\nfalse positive.\n\nThis fixes the regexes and also adds one more server to the test\nscenario in order to make sure archive_deleted_rows iterates at least\nonce to expose bugs that may be present in its internal iteration.\n\nThis patch is in preparation for a future patch that will change the\nlogic in archive_deleted_rows. Making this test more robust will more\nthoroughly test for regression.\n\nConflicts:\n    nova/tests/functional/test_nova_manage.py\n\nNOTE(melwitt): The conflict is because change\nIbed67854a693c930effd4dba7aca6cd03b65bd92 (Add --task-log option to\nnova-manage db archive_deleted_rows) is not in Wallaby.\n\nChange-Id: If39f6afb6359c67aa38cf315ec90ffa386d5c142\n(cherry picked from commit f6620d48c86fb1c5034c09da6411ea46b4d9c2ed)\n(cherry picked from commit 8823da84e9d07309b860c3ce3ad4c9ebd3652f86)\n(cherry picked from commit ecfa7c405710451247018f189416ada7bba6fd36)\n(cherry picked from commit 956208d879ef2d49ac5a6f6c2067ff299114d193)\n(cherry picked from commit 600dba5571e830c1e274e391fe86d498efcd7e53)\n'}]",0,887987,7287070758e7f99c35eb4827b5552df784084a09,4,1,1,4690,,,0,"testing: Fix and robustify archive_deleted_rows test

The regexes in test_archive_deleted_rows for multiple cells were
incorrect in that they were not isolating the search pattern and rather
could match with other rows in the result table as well, resulting in a
false positive.

This fixes the regexes and also adds one more server to the test
scenario in order to make sure archive_deleted_rows iterates at least
once to expose bugs that may be present in its internal iteration.

This patch is in preparation for a future patch that will change the
logic in archive_deleted_rows. Making this test more robust will more
thoroughly test for regression.

Conflicts:
    nova/tests/functional/test_nova_manage.py

NOTE(melwitt): The conflict is because change
Ibed67854a693c930effd4dba7aca6cd03b65bd92 (Add --task-log option to
nova-manage db archive_deleted_rows) is not in Wallaby.

Change-Id: If39f6afb6359c67aa38cf315ec90ffa386d5c142
(cherry picked from commit f6620d48c86fb1c5034c09da6411ea46b4d9c2ed)
(cherry picked from commit 8823da84e9d07309b860c3ce3ad4c9ebd3652f86)
(cherry picked from commit ecfa7c405710451247018f189416ada7bba6fd36)
(cherry picked from commit 956208d879ef2d49ac5a6f6c2067ff299114d193)
(cherry picked from commit 600dba5571e830c1e274e391fe86d498efcd7e53)
",git fetch https://review.opendev.org/openstack/nova refs/changes/87/887987/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/test_nova_manage.py'],1,7287070758e7f99c35eb4827b5552df784084a09,," server_ids_by_cell = collections.defaultdict(list) # Create two servers per cell to make sure archive for table iterates # at least once. for i in range(2): # Boot a server to cell1 server = self._build_server(az='nova:host1') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids_by_cell['cell1'].append(created_server['id']) # Boot a server to cell2 server = self._build_server(az='nova:host2') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids_by_cell['cell2'].append(created_server['id']) # Boot a server to cell0 (cause ERROR state prior to schedule) server = self._build_server() # Flavor m1.xlarge cannot be fulfilled server['flavorRef'] = 'http://fake.server/5' created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ERROR') server_ids_by_cell['cell0'].append(created_server['id']) for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: with context.target_cell( admin_context, self.cell_mappings[cell_name] ) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: self.api.delete_server(server_id) for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: with context.target_cell( admin_context, self.cell_mappings[cell_name] ) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) # 6 instances should have been archived (cell0, cell1, cell2) r""\| cell0\.instances\s+\| 2"") r""\| cell1\.instances\s+\| 2"") r""\| cell2\.instances\s+\| 2"") r""\| API_DB\.instance_mappings\s+\| 6"") r""\| API_DB\.request_specs\s+\| 6"") for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: with context.target_cell( admin_context, self.cell_mappings[cell_name] ) as cctxt: self.assertRaises(exception.InstanceNotFound, objects.Instance.get_by_uuid, cctxt, server_id)"," # Boot a server to cell1 server_ids = {} server = self._build_server(az='nova:host1') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids['cell1'] = created_server['id'] # Boot a server to cell2 server = self._build_server(az='nova:host2') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids['cell2'] = created_server['id'] # Boot a server to cell0 (cause ERROR state prior to schedule) server = self._build_server() # Flavor m1.xlarge cannot be fulfilled server['flavorRef'] = 'http://fake.server/5' created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ERROR') server_ids['cell0'] = created_server['id'] for cell_name, server_id in server_ids.items(): with context.target_cell(admin_context, self.cell_mappings[cell_name]) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) for cell_name in server_ids.keys(): self.api.delete_server(server_ids[cell_name]) for cell_name, server_id in server_ids.items(): with context.target_cell(admin_context, self.cell_mappings[cell_name]) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) # Three instances should have been archived (cell0, cell1, cell2) r""| cell0\.instances.*\| 1.*"") r""| cell1\.instances.*\| 1.*"") r""| cell2\.instances.*\| 1.*"") r""| API_DB\.instance_mappings.*\| 3.*"") r""| API_DB\.request_specs.*\| 3.*"") for cell_name, server_id in server_ids.items(): with context.target_cell(admin_context, self.cell_mappings[cell_name]) as cctxt: self.assertRaises(exception.InstanceNotFound, objects.Instance.get_by_uuid, cctxt, server_id)",54,40
openstack%2Fnova~887988,openstack/nova,stable/wallaby,I2209bf1b3320901cf603ec39163cf923b25b0359,"database: Archive parent and child rows ""trees"" one at a time",ABANDONED,2023-07-07 18:42:00.000000000,2024-03-05 19:05:02.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-07 18:42:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/0fce1a73711c8f1cc2cc17241ff1b212423baca7', 'message': 'database: Archive parent and child rows ""trees"" one at a time\n\nPreviously, we archived deleted rows in batches of max_rows parents +\ntheir child rows in a single database transaction. Doing it that way\nlimited how high a value of max_rows could be specified by the caller\nbecause of the size of the database transaction it could generate.\n\nFor example, in a large scale deployment with hundreds of thousands of\ndeleted rows and constant server creation and deletion activity, a\nvalue of max_rows=1000 might exceed the database\'s configured maximum\npacket size or timeout due to a database deadlock, forcing the operator\nto use a much lower max_rows value like 100 or 50.\n\nAnd when the operator has e.g. 500,000 deleted instances rows (and\nmillions of deleted rows total) they are trying to archive, being\nforced to use a max_rows value several orders of magnitude lower than\nthe number of rows they need to archive was a poor user experience.\n\nThis changes the logic to archive one parent row and its foreign key\nrelated child rows one at a time in a single database transaction\nwhile limiting the total number of rows per table as soon as it reaches\n>= max_rows. Doing this will allow operators to choose more predictable\nvalues for max_rows and get more progress per invocation of\narchive_deleted_rows.\n\nConflicts:\n    nova/cmd/manage.py\n\nNOTE(melwitt): The conflict is because change\nIbed67854a693c930effd4dba7aca6cd03b65bd92 (Add --task-log option to\nnova-manage db archive_deleted_rows) is not in Wallaby.\n\nCloses-Bug: #2024258\n\nChange-Id: I2209bf1b3320901cf603ec39163cf923b25b0359\n(cherry picked from commit 697fa3c000696da559e52b664c04cbd8d261c037)\n(cherry picked from commit 75e4c86d90ae0229069fc2eb06bfb41436be7319)\n(cherry picked from commit 6972efdaa94d05952eb5b90e456b566c4c73360c)\n(cherry picked from commit b555279add583e6b0cee1bddb8d5642c68ad84a6)\n(cherry picked from commit 4dc6ec9dccba2695536cb3cbd5534e64003904c9)\n'}, {'number': 2, 'created': '2023-07-07 20:49:02.000000000', 'files': ['nova/tests/functional/db/test_archive.py', 'releasenotes/notes/db-archive-performance-degradation-3fdabc43398149b1.yaml', 'nova/tests/unit/cmd/test_manage.py', 'nova/cmd/manage.py', 'nova/db/sqlalchemy/api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/2d073fdd935d3df6511c16b0203dcc7933e68a89', 'message': 'database: Archive parent and child rows ""trees"" one at a time\n\nPreviously, we archived deleted rows in batches of max_rows parents +\ntheir child rows in a single database transaction. Doing it that way\nlimited how high a value of max_rows could be specified by the caller\nbecause of the size of the database transaction it could generate.\n\nFor example, in a large scale deployment with hundreds of thousands of\ndeleted rows and constant server creation and deletion activity, a\nvalue of max_rows=1000 might exceed the database\'s configured maximum\npacket size or timeout due to a database deadlock, forcing the operator\nto use a much lower max_rows value like 100 or 50.\n\nAnd when the operator has e.g. 500,000 deleted instances rows (and\nmillions of deleted rows total) they are trying to archive, being\nforced to use a max_rows value several orders of magnitude lower than\nthe number of rows they need to archive was a poor user experience.\n\nThis changes the logic to archive one parent row and its foreign key\nrelated child rows one at a time in a single database transaction\nwhile limiting the total number of rows per table as soon as it reaches\n>= max_rows. Doing this will allow operators to choose more predictable\nvalues for max_rows and get more progress per invocation of\narchive_deleted_rows.\n\nConflicts:\n    nova/cmd/manage.py\n\nNOTE(melwitt): The conflict is because change\nIbed67854a693c930effd4dba7aca6cd03b65bd92 (Add --task-log option to\nnova-manage db archive_deleted_rows) is not in Wallaby.\n\nCloses-Bug: #2024258\n\nChange-Id: I2209bf1b3320901cf603ec39163cf923b25b0359\n(cherry picked from commit 697fa3c000696da559e52b664c04cbd8d261c037)\n(cherry picked from commit 75e4c86d90ae0229069fc2eb06bfb41436be7319)\n(cherry picked from commit 6972efdaa94d05952eb5b90e456b566c4c73360c)\n(cherry picked from commit b555279add583e6b0cee1bddb8d5642c68ad84a6)\n(cherry picked from commit 4dc6ec9dccba2695536cb3cbd5534e64003904c9)\n'}]",0,887988,2d073fdd935d3df6511c16b0203dcc7933e68a89,7,1,2,4690,,,0,"database: Archive parent and child rows ""trees"" one at a time

Previously, we archived deleted rows in batches of max_rows parents +
their child rows in a single database transaction. Doing it that way
limited how high a value of max_rows could be specified by the caller
because of the size of the database transaction it could generate.

For example, in a large scale deployment with hundreds of thousands of
deleted rows and constant server creation and deletion activity, a
value of max_rows=1000 might exceed the database's configured maximum
packet size or timeout due to a database deadlock, forcing the operator
to use a much lower max_rows value like 100 or 50.

And when the operator has e.g. 500,000 deleted instances rows (and
millions of deleted rows total) they are trying to archive, being
forced to use a max_rows value several orders of magnitude lower than
the number of rows they need to archive was a poor user experience.

This changes the logic to archive one parent row and its foreign key
related child rows one at a time in a single database transaction
while limiting the total number of rows per table as soon as it reaches
>= max_rows. Doing this will allow operators to choose more predictable
values for max_rows and get more progress per invocation of
archive_deleted_rows.

Conflicts:
    nova/cmd/manage.py

NOTE(melwitt): The conflict is because change
Ibed67854a693c930effd4dba7aca6cd03b65bd92 (Add --task-log option to
nova-manage db archive_deleted_rows) is not in Wallaby.

Closes-Bug: #2024258

Change-Id: I2209bf1b3320901cf603ec39163cf923b25b0359
(cherry picked from commit 697fa3c000696da559e52b664c04cbd8d261c037)
(cherry picked from commit 75e4c86d90ae0229069fc2eb06bfb41436be7319)
(cherry picked from commit 6972efdaa94d05952eb5b90e456b566c4c73360c)
(cherry picked from commit b555279add583e6b0cee1bddb8d5642c68ad84a6)
(cherry picked from commit 4dc6ec9dccba2695536cb3cbd5534e64003904c9)
",git fetch https://review.opendev.org/openstack/nova refs/changes/88/887988/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/db/test_archive.py', 'releasenotes/notes/db-archive-performance-degradation-3fdabc43398149b1.yaml', 'nova/tests/unit/cmd/test_manage.py', 'nova/cmd/manage.py', 'nova/db/sqlalchemy/api.py']",5,0fce1a73711c8f1cc2cc17241ff1b212423baca7,," # This is a list of IDs of rows that should be archived from this table, # limited to a length of max_rows. # # extras = {tablename: number_of_extra_rows_archived} if not records: # Nothing to archive, so return. return rows_archived, deleted_instance_uuids, extras # Keep track of how many rows we accumulate for the insert+delete database # transaction and cap it as soon as it is >= max_rows. Because we will # archive all child rows of a parent row along with the parent at the same # time, we end up with extra rows to archive in addition to len(records). num_rows_in_batch = 0 # The sequence of query statements we will execute in a batch. These are # ordered: [child1, child1, parent1, child2, child2, child2, parent2, ...] # Parent + child ""trees"" are kept together to avoid FK constraint # violations. statements_in_batch = [] # The list of records in the batch. This is used for collecting deleted # instance UUIDs in the case of the 'instances' table. records_in_batch = [] # (melwitt): We will gather rows related by foreign key relationship for # each deleted row, one at a time. We do it this way to keep track of and # limit the total number of rows that will be archived in a single database # transaction. In a large scale database with potentially hundreds of # thousands of deleted rows, if we don't limit the size of the transaction # based on max_rows, we can get into a situation where we get stuck not # able to make much progress. The value of max_rows has to be 1) small # enough to not exceed the database's max packet size limit or timeout with # a deadlock but 2) large enough to make progress in an environment with a # constant high volume of create and delete traffic. By archiving each # parent + child rows tree one at a time, we can ensure meaningful progress # can be made while allowing the caller to predictably control the size of # the database transaction with max_rows. for record in records: metadata, conn, table, column, [record]) statements_in_batch.extend(fk_inserts + fk_deletes) # statement to add parent row to shadow table insert = shadow_table.insert(inline=True).\ from_select(columns, sql.select([table], column.in_([record]))) statements_in_batch.append(insert) # statement to remove parent row from main table delete = table.delete().where(column.in_([record])) statements_in_batch.append(delete) records_in_batch.append(record) # Check whether were have a full batch >= max_rows. Rows are counted as # the number of rows that will be moved in the database transaction. # So each insert+delete pair represents one row that will be moved. # 1 parent + its fks num_rows_in_batch += 1 + len(fk_inserts) if max_rows is not None and num_rows_in_batch >= max_rows: break # NOTE(tssurya): In order to facilitate the deletion of records from # instance_mappings, request_specs and instance_group_member tables in the # nova_api DB, the rows of deleted instances from the instances table are # stored prior to their deletion. Basically the uuids of the archived # instances are queried and returned. if tablename == ""instances"": query_select = sql.select( [table.c.uuid], table.c.id.in_(records_in_batch)) rows = conn.execute(query_select).fetchall() # deleted_instance_uuids = ['uuid1', 'uuid2', ...] deleted_instance_uuids = [r[0] for r in rows] try: # Group the insert and delete in a transaction. with conn.begin(): for statement in statements_in_batch: result = conn.execute(statement) result_tablename = statement.table.name # Add to archived row counts if not a shadow table. if not result_tablename.startswith(_SHADOW_TABLE_PREFIX): if result_tablename == tablename: # Number of tablename (parent) rows archived. rows_archived += result.rowcount else: # Number(s) of child rows archived. extras[result_tablename] += result.rowcount except db_exc.DBReferenceError as ex: # A foreign key constraint keeps us from deleting some of these rows # until we clean up a dependent table. Just skip this table for now; # we'll come back to it later. LOG.warning(""IntegrityError detected when archiving table "" ""%(tablename)s: %(error)s"", {'tablename': tablename, 'error': str(ex)})"," # {tablename: extra_rows_archived} if records: insert = shadow_table.insert(inline=True).\ from_select(columns, sql.select([table], column.in_(records))) delete = table.delete().where(column.in_(records)) metadata, conn, table, column, records) # NOTE(tssurya): In order to facilitate the deletion of records from # instance_mappings, request_specs and instance_group_member tables in # the nova_api DB, the rows of deleted instances from the instances # table are stored prior to their deletion. Basically the uuids of the # archived instances are queried and returned. if tablename == ""instances"": query_select = sql.select([table.c.uuid], table.c.id.in_(records)) rows = conn.execute(query_select).fetchall() deleted_instance_uuids = [r[0] for r in rows] try: # Group the insert and delete in a transaction. with conn.begin(): for fk_insert in fk_inserts: conn.execute(fk_insert) for fk_delete in fk_deletes: result_fk_delete = conn.execute(fk_delete) extras[fk_delete.table.name] += result_fk_delete.rowcount conn.execute(insert) result_delete = conn.execute(delete) rows_archived += result_delete.rowcount except db_exc.DBReferenceError as ex: # A foreign key constraint keeps us from deleting some of # these rows until we clean up a dependent table. Just # skip this table for now; we'll come back to it later. LOG.warning(""IntegrityError detected when archiving table "" ""%(tablename)s: %(error)s"", {'tablename': tablename, 'error': str(ex)})",201,43
openstack%2Fnova~888103,openstack/nova,stable/wallaby,Icc9b6366aebba2f8468e2127da7b7e099098513a,Reproducer for bug 2003991 unshelving offloaded instance,ABANDONED,2023-07-11 02:58:51.000000000,2024-03-05 19:04:58.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-11 02:58:51.000000000', 'files': ['nova/tests/functional/test_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/1d91e71e74b57b0f2f108faeb522244a03540485', 'message': 'Reproducer for bug 2003991 unshelving offloaded instance\n\nThis adds test coverage for:\n\n  * Shelve/unshelve offloaded with legacy quota usage\n  * Shelve/unshelve offloaded with quota usage from placement\n  * Shelve/unshelve with legacy quota usage\n  * Shelve/unshelve with quota usage from placement\n\nRelated-Bug: #2003991\n\nChange-Id: Icc9b6366aebba2f8468e2127da7b7e099098513a\n(cherry picked from commit 427b2cb4d61cdfaf18b2467eb50b3772dffd3def)\n(cherry picked from commit 004a773a3a286f39889519bb5b2009fb9bf44fb1)\n(cherry picked from commit 710116f4beadb1553c9ad7991ea69b0e286657d6)\n(cherry picked from commit 291c02a7d51585551266fe5b7e7afd9726317671)\n(cherry picked from commit dc2d308118a126e087431d5c7810e1f958cbe895)\n'}]",0,888103,1d91e71e74b57b0f2f108faeb522244a03540485,4,1,1,4690,,,0,"Reproducer for bug 2003991 unshelving offloaded instance

This adds test coverage for:

  * Shelve/unshelve offloaded with legacy quota usage
  * Shelve/unshelve offloaded with quota usage from placement
  * Shelve/unshelve with legacy quota usage
  * Shelve/unshelve with quota usage from placement

Related-Bug: #2003991

Change-Id: Icc9b6366aebba2f8468e2127da7b7e099098513a
(cherry picked from commit 427b2cb4d61cdfaf18b2467eb50b3772dffd3def)
(cherry picked from commit 004a773a3a286f39889519bb5b2009fb9bf44fb1)
(cherry picked from commit 710116f4beadb1553c9ad7991ea69b0e286657d6)
(cherry picked from commit 291c02a7d51585551266fe5b7e7afd9726317671)
(cherry picked from commit dc2d308118a126e087431d5c7810e1f958cbe895)
",git fetch https://review.opendev.org/openstack/nova refs/changes/03/888103/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/test_servers.py'],1,1d91e71e74b57b0f2f108faeb522244a03540485,bug/2003991," def test_unshelve_offloaded_overquota(self): # Use a quota limit of 3 vcpus. self.flags(cores=3, group='quota') # Use flavor that has vcpus = 1. for i in range(0, 3): server = self._create_server(flavor_id=1) # We should be at the quota limit now. Shelve an instance and wait for # it to become SHELVED_OFFLOADED. self._shelve_server(server, expected_state='SHELVED_OFFLOADED') # Try to boot another instance. It should fail because shelved # offloaded instances still consume quota. ex = self.assertRaises(client.OpenStackApiException, self._create_server, flavor_id=1) self.assertEqual(403, ex.response.status_code) # Unshelving the instance should also succeed. self._unshelve_server(server) def _test_unshelve_offloaded_overquota_placement(self): # Use flavor that has vcpus = 1. for i in range(0, 3): server = self._create_server(flavor_id=1) # We should be at the quota limit now. Shelve an instance and wait for # it to become SHELVED_OFFLOADED. self._shelve_server(server, expected_state='SHELVED_OFFLOADED') # Try to boot another instance. It should succeed because with # placement, shelved offloaded instances do not consume cores/ram # quota. self._create_server(flavor_id=1) # FIXME(melwitt): This is bug #2003991, the unshelve is supposed to # fail if we would be over quota after unshelving. # Now try to unshelve the earlier instance. It should fail because it # would put us over quota to have 4 running instances. # ex = self.assertRaises(client.OpenStackApiException, # self._unshelve_server, # server) # self.assertEqual(403, ex.response.status_code) self._unshelve_server(server) def test_unshelve_offloaded_overquota_placement(self): # Count quota usage from placement. self.flags(count_usage_from_placement=True, group='quota') # Use a quota limit of 3 vcpus. self.flags(cores=3, group='quota') self._test_unshelve_offloaded_overquota_placement() def test_unshelve_overquota(self): # Test for behavior where the shelved instance is not offloaded. self.flags(shelved_offload_time=3600) # Use a quota limit of 3 vcpus. self.flags(cores=3, group='quota') # Use flavor that has vcpus = 1. for i in range(0, 3): server = self._create_server(flavor_id=1) # We should be at the quota limit now. Shelve an instance. self._shelve_server(server, expected_state='SHELVED') # Try to boot another instance. It should fail because shelved # instances still consume quota. ex = self.assertRaises(client.OpenStackApiException, self._create_server, flavor_id=1) self.assertEqual(403, ex.response.status_code) # Verify that it's still SHELVED. self._wait_for_state_change(server, 'SHELVED') # Unshelving the instance should also succeed. self._unshelve_server(server) def test_unshelve_overquota_placement(self): # Count quota usage from placement, should behave the same as legacy. self.flags(count_usage_from_placement=True, group='quota') self.test_unshelve_overquota() ",,84,0
openstack%2Fnova~888104,openstack/nova,stable/wallaby,I4ab97626c10052c7af9934a80ff8db9ddab82738,Enforce quota usage from placement when unshelving,ABANDONED,2023-07-11 02:58:51.000000000,2024-03-05 19:04:54.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-11 02:58:51.000000000', 'files': ['releasenotes/notes/quota-unshelve-offloaded-e4ea2d6a1449f549.yaml', 'nova/api/openstack/compute/shelve.py', 'nova/tests/unit/conductor/test_conductor.py', 'nova/conductor/manager.py', 'nova/tests/functional/test_servers.py', 'nova/compute/api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/c13c26f88edea2d762aef97013662859496dd3e6', 'message': 'Enforce quota usage from placement when unshelving\n\nWhen [quota]count_usage_from_placement = true or\n[quota]driver = nova.quota.UnifiedLimitsDriver, cores and ram quota\nusage are counted from placement. When an instance is SHELVED_OFFLOADED,\nit will not have allocations in placement, so its cores and ram should\nnot count against quota during that time.\n\nThis means however that when an instance is unshelved, there is a\npossibility of going over quota if the cores and ram it needs were\nallocated by some other instance(s) while it was SHELVED_OFFLOADED.\n\nThis fixes a bug where quota was not being properly enforced during\nunshelve of a SHELVED_OFFLOADED instance when quota usage is counted\nfrom placement. Test coverage is also added for the ""recheck"" quota\ncases.\n\nConflicts:\n    nova/compute/api.py\n\nNOTE(melwitt): The conflict is because change\nIbcf703e254e720b9a6de17527325758676628d48 (Support move ops with\nextended resource request) is not in Wallaby. The difference in\nnova/conductor/manager.py is because change\nIfe3c7a5a95c5d707983ab33fd2fbfc1cfb72f676 (Add force kwarg to\ndelete_allocation_for_instance) is not in Wallaby.\n\nCloses-Bug: #2003991\n\nChange-Id: I4ab97626c10052c7af9934a80ff8db9ddab82738\n(cherry picked from commit 6f79d6321e7c3edaab2eb911198b7b7f851371b3)\n(cherry picked from commit c67e69c0e35d837fcefd7e4ea010a956569c3a55)\n(cherry picked from commit 490d5de6bb9ef3123cbbcea50e08ad0ad2edcbbe)\n(cherry picked from commit da4b7d1e70486402635a009724b263981cd22861)\n(cherry picked from commit 746bc7222276a8c6bb4f0f9317802e332d25b756)\n'}]",0,888104,c13c26f88edea2d762aef97013662859496dd3e6,4,1,1,4690,,,0,"Enforce quota usage from placement when unshelving

When [quota]count_usage_from_placement = true or
[quota]driver = nova.quota.UnifiedLimitsDriver, cores and ram quota
usage are counted from placement. When an instance is SHELVED_OFFLOADED,
it will not have allocations in placement, so its cores and ram should
not count against quota during that time.

This means however that when an instance is unshelved, there is a
possibility of going over quota if the cores and ram it needs were
allocated by some other instance(s) while it was SHELVED_OFFLOADED.

This fixes a bug where quota was not being properly enforced during
unshelve of a SHELVED_OFFLOADED instance when quota usage is counted
from placement. Test coverage is also added for the ""recheck"" quota
cases.

Conflicts:
    nova/compute/api.py

NOTE(melwitt): The conflict is because change
Ibcf703e254e720b9a6de17527325758676628d48 (Support move ops with
extended resource request) is not in Wallaby. The difference in
nova/conductor/manager.py is because change
Ife3c7a5a95c5d707983ab33fd2fbfc1cfb72f676 (Add force kwarg to
delete_allocation_for_instance) is not in Wallaby.

Closes-Bug: #2003991

Change-Id: I4ab97626c10052c7af9934a80ff8db9ddab82738
(cherry picked from commit 6f79d6321e7c3edaab2eb911198b7b7f851371b3)
(cherry picked from commit c67e69c0e35d837fcefd7e4ea010a956569c3a55)
(cherry picked from commit 490d5de6bb9ef3123cbbcea50e08ad0ad2edcbbe)
(cherry picked from commit da4b7d1e70486402635a009724b263981cd22861)
(cherry picked from commit 746bc7222276a8c6bb4f0f9317802e332d25b756)
",git fetch https://review.opendev.org/openstack/nova refs/changes/04/888104/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/quota-unshelve-offloaded-e4ea2d6a1449f549.yaml', 'nova/api/openstack/compute/shelve.py', 'nova/tests/unit/conductor/test_conductor.py', 'nova/conductor/manager.py', 'nova/tests/functional/test_servers.py', 'nova/compute/api.py']",6,c13c26f88edea2d762aef97013662859496dd3e6,bug/2003991," @staticmethod def _check_quota_unshelve_offloaded( context: nova_context.RequestContext, instance: 'objects.Instance', request_spec: 'objects.RequestSpec' ): if not CONF.quota.count_usage_from_placement: return # TODO(melwitt): This is ugly but we have to do it this way because # instances quota is currently counted from the API database but cores # and ram are counted from placement. That means while an instance is # SHELVED_OFFLOADED, it will still consume instances quota but it will # not consume cores and ram. So we need an instances delta of # 0 but cores and ram deltas from the flavor. # Once instances usage is also being counted from placement, we can # replace this method with a normal check_num_instances_quota() call. vcpus = instance.flavor.vcpus memory_mb = instance.flavor.memory_mb # We are not looking to create a new server, we are unshelving an # existing one. deltas = {'instances': 0, 'cores': vcpus, 'ram': memory_mb} objects.Quotas.check_deltas( context, deltas, context.project_id, user_id=context.user_id, check_project_id=instance.project_id, check_user_id=instance.user_id, ) # Check quota before we save any changes to the database, but only if # we are counting quota usage from placement. When an instance is # SHELVED_OFFLOADED, it will not consume cores or ram resources in # placement. This means it is possible that an unshelve would cause the # project/user to go over quota. if instance.vm_state == vm_states.SHELVED_OFFLOADED: self._check_quota_unshelve_offloaded( context, instance, request_spec) ",,214,22
openstack%2Fnova~843339,openstack/nova,stable/wallaby,I48ca6a77de38e3afaa44630e6ae1fd41d2031ba9,Fix LM rollback w/o multi port bindings extension,ABANDONED,2022-05-25 18:52:35.000000000,2024-03-05 19:04:51.000000000,,"[{'_account_id': 17685}, {'_account_id': 20733}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-05-25 18:52:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/910a44514560bcea62332952e431def21ee4f802', 'message': ""Fix LM rollback w/o multi port bindings extension\n\nPreviously, the libvirt driver's live migration rollback code would\nunconditionally refer to migrate_data.vifs. This field would only be\nset if the Neutron multiple port bindings extension was in use. When\nit is not in use, the reference would fail with a NotImplementedError.\nThis patch wraps the migrate_data.vifs reference in a conditional that\nchecks if the vifs field is actually set. This is the only way to do\nit, as in the libvirt driver we do not have access to the network\nAPI's has_port_binding_extension() helper.\n\nCloses-bug: 1969980\nChange-Id: I48ca6a77de38e3afaa44630e6ae1fd41d2031ba9\n(cherry picked from commit aa1b0a7ccb1fcf3644784125bfff6950993e1697)\n(cherry picked from commit 5f086d437e8e467ab8c90605c904470c37098227)\n(cherry picked from commit 11855e5d0bebaab002cb443cf2d6d4c9edd18ca6)\n""}, {'number': 2, 'created': '2022-05-26 14:58:21.000000000', 'files': ['nova/virt/libvirt/driver.py', 'nova/tests/functional/regressions/test_bug_1888395.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/b85e114e55a11d3c82a8406b0e1ddf506f9f2138', 'message': ""Fix LM rollback w/o multi port bindings extension\n\nPreviously, the libvirt driver's live migration rollback code would\nunconditionally refer to migrate_data.vifs. This field would only be\nset if the Neutron multiple port bindings extension was in use. When\nit is not in use, the reference would fail with a NotImplementedError.\nThis patch wraps the migrate_data.vifs reference in a conditional that\nchecks if the vifs field is actually set. This is the only way to do\nit, as in the libvirt driver we do not have access to the network\nAPI's has_port_binding_extension() helper.\n\nCloses-bug: 1969980\nChange-Id: I48ca6a77de38e3afaa44630e6ae1fd41d2031ba9\n(cherry picked from commit aa1b0a7ccb1fcf3644784125bfff6950993e1697)\n(cherry picked from commit 5f086d437e8e467ab8c90605c904470c37098227)\n(cherry picked from commit f9dec7e2f528e67e7a062200ad6f4526158ad944)\n""}]",1,843339,b85e114e55a11d3c82a8406b0e1ddf506f9f2138,15,3,2,8864,,,0,"Fix LM rollback w/o multi port bindings extension

Previously, the libvirt driver's live migration rollback code would
unconditionally refer to migrate_data.vifs. This field would only be
set if the Neutron multiple port bindings extension was in use. When
it is not in use, the reference would fail with a NotImplementedError.
This patch wraps the migrate_data.vifs reference in a conditional that
checks if the vifs field is actually set. This is the only way to do
it, as in the libvirt driver we do not have access to the network
API's has_port_binding_extension() helper.

Closes-bug: 1969980
Change-Id: I48ca6a77de38e3afaa44630e6ae1fd41d2031ba9
(cherry picked from commit aa1b0a7ccb1fcf3644784125bfff6950993e1697)
(cherry picked from commit 5f086d437e8e467ab8c90605c904470c37098227)
(cherry picked from commit f9dec7e2f528e67e7a062200ad6f4526158ad944)
",git fetch https://review.opendev.org/openstack/nova refs/changes/39/843339/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'nova/tests/functional/regressions/test_bug_1888395.py']",2,910a44514560bcea62332952e431def21ee4f802,bug/1969980," # NOTE(artom) The live migration will still fail (we fail it in # _migrate_stub()), but the server should correctly rollback to ACTIVE. self._live_migrate(self.server, migration_expected_state='failed', server_expected_state='ACTIVE')"," # FIXME(artom) Until bug 1969980 is fixed, this will fail with a # NotImplementedError. self._live_migrate(self.server, migration_expected_state='error', server_expected_state='ERROR') server = self.api.get_server(self.server['id']) self.assertIn( ""NotImplementedError: Cannot load 'vifs' in the base class"", server['fault']['details'] )",11,13
openstack%2Fnova~843338,openstack/nova,stable/wallaby,Ieef773453ed9f3ced564c1a352fbefbcc6a653ec,Reproduce live migration rollback w/o multi port bindings error,ABANDONED,2022-05-25 18:52:35.000000000,2024-03-05 19:04:47.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-05-25 18:52:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/70e1c27387c35fcbfc568d7a1a879b277031c04f', 'message': 'Reproduce live migration rollback w/o multi port bindings error\n\nWhen the libvirt driver does live migration rollback of an instance\nwith network interfaces, it unconditionally refers to\nmigrate_data.vifs. These will only be set when Neutron has the\nmultiple port bindings extension. We don\'t handle the case of the\nextension not being present, and currently the rollback will fail with\na ""NotImplementedError: Cannot load \'vifs\' in the base class"" error.\n\nRelated-bug: 1969980\nChange-Id: Ieef773453ed9f3ced564c1a352fbefbcc6a653ec\n(cherry picked from commit 5181bae923bdae2b536affc87d39ddf2c5f7835d)\n(cherry picked from commit 2be1570c96697bdb917a086ccdc5a05d3d21e9db)\n(cherry picked from commit db046f7947bdd25d2b6fdd2599374c62b4ac6dc3)\n'}, {'number': 2, 'created': '2022-05-26 14:58:21.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1888395.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/c8c70438459c6de84ce47c7951eff7019b404246', 'message': 'Reproduce live migration rollback w/o multi port bindings error\n\nWhen the libvirt driver does live migration rollback of an instance\nwith network interfaces, it unconditionally refers to\nmigrate_data.vifs. These will only be set when Neutron has the\nmultiple port bindings extension. We don\'t handle the case of the\nextension not being present, and currently the rollback will fail with\na ""NotImplementedError: Cannot load \'vifs\' in the base class"" error.\n\nNOTE(artom) has_port_binding_extension() replaced with\nsupports_port_binding_extension to fit the stable/xena method name.\n\nRelated-bug: 1969980\nChange-Id: Ieef773453ed9f3ced564c1a352fbefbcc6a653ec\n(cherry picked from commit 5181bae923bdae2b536affc87d39ddf2c5f7835d)\n(cherry picked from commit 2be1570c96697bdb917a086ccdc5a05d3d21e9db)\n(cherry picked from commit acd8edfb5a75c633b21ede56e2888691845d9113)\n'}]",2,843338,c8c70438459c6de84ce47c7951eff7019b404246,12,2,2,8864,,,0,"Reproduce live migration rollback w/o multi port bindings error

When the libvirt driver does live migration rollback of an instance
with network interfaces, it unconditionally refers to
migrate_data.vifs. These will only be set when Neutron has the
multiple port bindings extension. We don't handle the case of the
extension not being present, and currently the rollback will fail with
a ""NotImplementedError: Cannot load 'vifs' in the base class"" error.

NOTE(artom) has_port_binding_extension() replaced with
supports_port_binding_extension to fit the stable/xena method name.

Related-bug: 1969980
Change-Id: Ieef773453ed9f3ced564c1a352fbefbcc6a653ec
(cherry picked from commit 5181bae923bdae2b536affc87d39ddf2c5f7835d)
(cherry picked from commit 2be1570c96697bdb917a086ccdc5a05d3d21e9db)
(cherry picked from commit acd8edfb5a75c633b21ede56e2888691845d9113)
",git fetch https://review.opendev.org/openstack/nova refs/changes/38/843338/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1888395.py'],1,70e1c27387c35fcbfc568d7a1a879b277031c04f,bug/1969980,"class TestLiveMigrationWithoutMultiplePortBindingsBase( libvirt_base.ServersTestBase): class TestLiveMigrationWithoutMultiplePortBindings( TestLiveMigrationWithoutMultiplePortBindingsBase): """"""Regression test for bug 1888395. This regression test asserts that Live migration works when neutron does not support the binding-extended api extension and the legacy single port binding workflow is used. """""" class TestLiveMigrationRollbackWithoutMultiplePortBindings( TestLiveMigrationWithoutMultiplePortBindingsBase): def _migrate_stub(self, domain, destination, params, flags): source = self.computes['start_host'] conn = source.driver._host.get_connection() dom = conn.lookupByUUIDString(self.server['id']) dom.fail_job() def test_live_migration_rollback(self): self.server = self._create_server( host='start_host', networks=[{'port': self.neutron.port_1['id']}]) self.assertFalse( self.neutron_api.has_port_binding_extension(self.ctxt)) # FIXME(artom) Until bug 1969980 is fixed, this will fail with a # NotImplementedError. self._live_migrate(self.server, migration_expected_state='error', server_expected_state='ERROR') server = self.api.get_server(self.server['id']) self.assertIn( ""NotImplementedError: Cannot load 'vifs' in the base class"", server['fault']['details'] )","class TestLiveMigrationWithoutMultiplePortBindings( libvirt_base.ServersTestBase): """"""Regression test for bug 1888395. This regression test asserts that Live migration works when neutron does not support the binding-extended api extension and the legacy single port binding workflow is used. """"""",38,7
openstack%2Fnova~882939,openstack/nova,stable/wallaby,I99b57c27c8a4425389bec2b7f05af660bab85610,Have host look for CPU controller of cgroupsv2 location.,ABANDONED,2023-05-11 10:32:51.000000000,2024-03-05 19:04:43.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-11 10:32:51.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/756b86e2ee905fe12d32c56516fe745dcc29a60b', 'message': ""Have host look for CPU controller of cgroupsv2 location.\n\nMake the host class look under '/sys/fs/cgroup/cgroup.controllers' for support of the cpu controller. The host will try searching through cgroupsv1 first, just like up until now, and in the case that fails, it will try cgroupsv2 then. The host will not support the feature if both checks fail.\n\nThis new check needs to be mocked by all tests that focus on this piece of code, as it touches a system file that requires privileges. For such thing, the CGroupsFixture is defined to easily add suck mocking to all test cases that require so.\n\nI also removed old mocking at test_driver.py in favor of the fixture from above.\n\nConflicts:\n    nova/tests/unit/virt/libvirt/test_driver.py\n\nNOTE(auniyal):\n- as new cgroup fixture is added, removed old mocking in few more unit test cases in test_driver\n- did not remove test_guest_cpu_shares_with_multi_vcpu from test_driver\n\nConflicts:\n    nova/tests/fixtures/nova.py\n    nova/tests/functional/libvirt/base.py\n    nova/tests/functional/libvirt/test_vpmem.py\n    nova/tests/functional/regressions/test_bug_1595962.py\n    nova/tests/unit/virt/libvirt/test_driver.py\n\nNOTE(auniyal): backport to stable/wallaby\n- tests/fixtures.py: Added CGroupsFixture in tests/fixtures as tests/fixtures/nova.py does\nnot exists in stable/wallaby\n- fixed/updated imports for cgroup fixture in unit and functionl test\n\nPartial-Bug: #2008102\nChange-Id: I99b57c27c8a4425389bec2b7f05af660bab85610\n(cherry picked from commit 973ff4fc1a0586937d13f2b39e517422713b1003)\n(cherry picked from commit eb3fe4ddc621380afa32ec9aec0c285f36f99ee3)\n(cherry picked from commit 9e86be5a5365b1896d489de7149e471fd22881d6)\n(cherry picked from commit aa295b4ad71b59ba9ba612f07f1f108a8a25473b)\n(cherry picked from commit 722ddc4796c6f3705cc1b724c2a56f8b5ab905cc)\n""}, {'number': 2, 'created': '2023-05-11 13:28:39.000000000', 'files': ['nova/tests/unit/virt/libvirt/test_host.py', 'nova/tests/functional/libvirt/test_evacuate.py', 'nova/tests/fixtures.py', 'nova/tests/functional/libvirt/base.py', 'nova/virt/libvirt/host.py', 'nova/tests/functional/libvirt/test_vpmem.py', 'nova/tests/unit/virt/test_virt_drivers.py', 'nova/tests/functional/regressions/test_bug_1595962.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/4859768a49875bac414a743558fbda506636d7fc', 'message': ""Have host look for CPU controller of cgroupsv2 location.\n\nMake the host class look under '/sys/fs/cgroup/cgroup.controllers' for support of the cpu controller. The host will try searching through cgroupsv1 first, just like up until now, and in the case that fails, it will try cgroupsv2 then. The host will not support the feature if both checks fail.\n\nThis new check needs to be mocked by all tests that focus on this piece of code, as it touches a system file that requires privileges. For such thing, the CGroupsFixture is defined to easily add suck mocking to all test cases that require so.\n\nI also removed old mocking at test_driver.py in favor of the fixture from above.\n\nConflicts:\n    nova/tests/unit/virt/libvirt/test_driver.py\n\nNOTE(auniyal):\n- as new cgroup fixture is added, removed old mocking in few more unit test cases in test_driver\n- did not remove test_guest_cpu_shares_with_multi_vcpu from test_driver\n\nConflicts:\n    nova/tests/fixtures/nova.py\n    nova/tests/functional/libvirt/base.py\n    nova/tests/functional/libvirt/test_vpmem.py\n    nova/tests/functional/regressions/test_bug_1595962.py\n    nova/tests/unit/virt/libvirt/test_driver.py\n\nNOTE(auniyal): backport to stable/wallaby\n- tests/fixtures.py: Added CGroupsFixture in tests/fixtures as tests/fixtures/nova.py does\nnot exists in stable/wallaby\n- fixed/updated imports for cgroup fixture in unit and functionl test\n\nPartial-Bug: #2008102\nChange-Id: I99b57c27c8a4425389bec2b7f05af660bab85610\n(cherry picked from commit 973ff4fc1a0586937d13f2b39e517422713b1003)\n(cherry picked from commit eb3fe4ddc621380afa32ec9aec0c285f36f99ee3)\n(cherry picked from commit 9e86be5a5365b1896d489de7149e471fd22881d6)\n(cherry picked from commit aa295b4ad71b59ba9ba612f07f1f108a8a25473b)\n(cherry picked from commit 722ddc4796c6f3705cc1b724c2a56f8b5ab905cc)\n""}]",8,882939,4859768a49875bac414a743558fbda506636d7fc,30,1,2,34860,,,0,"Have host look for CPU controller of cgroupsv2 location.

Make the host class look under '/sys/fs/cgroup/cgroup.controllers' for support of the cpu controller. The host will try searching through cgroupsv1 first, just like up until now, and in the case that fails, it will try cgroupsv2 then. The host will not support the feature if both checks fail.

This new check needs to be mocked by all tests that focus on this piece of code, as it touches a system file that requires privileges. For such thing, the CGroupsFixture is defined to easily add suck mocking to all test cases that require so.

I also removed old mocking at test_driver.py in favor of the fixture from above.

Conflicts:
    nova/tests/unit/virt/libvirt/test_driver.py

NOTE(auniyal):
- as new cgroup fixture is added, removed old mocking in few more unit test cases in test_driver
- did not remove test_guest_cpu_shares_with_multi_vcpu from test_driver

Conflicts:
    nova/tests/fixtures/nova.py
    nova/tests/functional/libvirt/base.py
    nova/tests/functional/libvirt/test_vpmem.py
    nova/tests/functional/regressions/test_bug_1595962.py
    nova/tests/unit/virt/libvirt/test_driver.py

NOTE(auniyal): backport to stable/wallaby
- tests/fixtures.py: Added CGroupsFixture in tests/fixtures as tests/fixtures/nova.py does
not exists in stable/wallaby
- fixed/updated imports for cgroup fixture in unit and functionl test

Partial-Bug: #2008102
Change-Id: I99b57c27c8a4425389bec2b7f05af660bab85610
(cherry picked from commit 973ff4fc1a0586937d13f2b39e517422713b1003)
(cherry picked from commit eb3fe4ddc621380afa32ec9aec0c285f36f99ee3)
(cherry picked from commit 9e86be5a5365b1896d489de7149e471fd22881d6)
(cherry picked from commit aa295b4ad71b59ba9ba612f07f1f108a8a25473b)
(cherry picked from commit 722ddc4796c6f3705cc1b724c2a56f8b5ab905cc)
",git fetch https://review.opendev.org/openstack/nova refs/changes/39/882939/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/libvirt/test_host.py', 'nova/tests/functional/libvirt/test_evacuate.py', 'nova/tests/fixtures.py', 'nova/tests/fixtures/nova.py', 'nova/tests/functional/libvirt/base.py', 'nova/virt/libvirt/host.py', 'nova/tests/functional/libvirt/test_vpmem.py', 'nova/tests/unit/virt/test_virt_drivers.py', 'nova/tests/functional/regressions/test_bug_1595962.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",10,756b86e2ee905fe12d32c56516fe745dcc29a60b,bug/2008102, self.cgroups = self.useFixture(nova_fixtures.CGroupsFixture()) def test_get_guest_config_numa_host_instance_fits(self): def test_get_guest_config_numa_host_instance_no_fit(self): def test_get_guest_config_numa_host_instance_pci_no_numa_info(self): def test_get_guest_config_numa_host_instance_2pci_no_fit(self): def test_get_guest_config_numa_host_instance_fit_w_cpu_pinset(self): def test_get_guest_config_non_numa_host_instance_topo(self): def test_get_guest_config_numa_host_instance_topo(self): def test_guest_cpu_shares_with_multi_vcpu(self): def test_get_guest_config_with_cpu_quota(self): def test_get_guest_config_with_bogus_cpu_quota(self): def test_get_update_guest_cputune(self): # No CPU controller on the host self.cgroups.version = 0 self.cgroups = self.useFixture(nova_fixtures.CGroupsFixture())," @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_get_guest_config_numa_host_instance_fits(self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_get_guest_config_numa_host_instance_no_fit(self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_get_guest_config_numa_host_instance_pci_no_numa_info( self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_get_guest_config_numa_host_instance_2pci_no_fit(self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_get_guest_config_numa_host_instance_fit_w_cpu_pinset( self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_get_guest_config_non_numa_host_instance_topo(self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_get_guest_config_numa_host_instance_topo(self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_guest_cpu_shares_with_multi_vcpu(self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_get_guest_config_with_cpu_quota(self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=True) def test_get_guest_config_with_bogus_cpu_quota(self, is_able): @mock.patch.object( host.Host, ""is_cpu_control_policy_capable"", return_value=False) def test_get_update_guest_cputune(self, is_able):",1894,54
openstack%2Fnova~879704,openstack/nova,stable/wallaby,Ib775c2210349b72b3dc033554ac6d8b35b8d2d79,Don't provide MTU value in metadata service if DHCP is enabled,ABANDONED,2023-04-06 13:52:16.000000000,2024-03-05 19:04:39.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-04-06 13:52:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/2a807a6d2cc7760e223cbd9414438fb3de8f4375', 'message': 'Don\'t provide MTU value in metadata service if DHCP is enabled\n\nFor networks with subnets with enabled DHCP service don\'t provide\nmtu value in the metadata. That way cloud-init will not configure it\n""statically"" in e.g. netplan\'s config file and guest OS will use MTU\nvalue provided by the DHCP service.\n\n\nCloses-Bug: #1899487\nChange-Id: Ib775c2210349b72b3dc033554ac6d8b35b8d2d79\n(cherry picked from commit 6bdc79af30151f683c0f462bc6c69da30ebcbcf9)\n'}, {'number': 2, 'created': '2023-08-29 15:01:55.000000000', 'files': ['releasenotes/notes/Do-not-send-mtu-value-in-metadata-for-networks-with-enabled-dhcp-641506f2a13b540f.yaml', 'nova/tests/unit/virt/test_netutils.py', 'nova/virt/netutils.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/9f49bd1142a9e0e7351490556b9d97fc34ea70d1', 'message': 'Don\'t provide MTU value in metadata service if DHCP is enabled\n\nFor networks with subnets with enabled DHCP service don\'t provide\nmtu value in the metadata. That way cloud-init will not configure it\n""statically"" in e.g. netplan\'s config file and guest OS will use MTU\nvalue provided by the DHCP service.\n\nCloses-Bug: #1899487\nChange-Id: Ib775c2210349b72b3dc033554ac6d8b35b8d2d79\n(cherry picked from commit 6bdc79af30151f683c0f462bc6c69da30ebcbcf9)\n(cherry picked from commit ec15df83d2d8eb9744438c7129f64a00e5c5694e)\n(cherry picked from commit 0aac193fe3f427eb5ca32e70df77dadaebd55bb9)\n(cherry picked from commit ebae52aefcc9d5c4882668ce1375e940ce46a675)\n'}]",1,879704,9f49bd1142a9e0e7351490556b9d97fc34ea70d1,13,1,2,16207,,,0,"Don't provide MTU value in metadata service if DHCP is enabled

For networks with subnets with enabled DHCP service don't provide
mtu value in the metadata. That way cloud-init will not configure it
""statically"" in e.g. netplan's config file and guest OS will use MTU
value provided by the DHCP service.

Closes-Bug: #1899487
Change-Id: Ib775c2210349b72b3dc033554ac6d8b35b8d2d79
(cherry picked from commit 6bdc79af30151f683c0f462bc6c69da30ebcbcf9)
(cherry picked from commit ec15df83d2d8eb9744438c7129f64a00e5c5694e)
(cherry picked from commit 0aac193fe3f427eb5ca32e70df77dadaebd55bb9)
(cherry picked from commit ebae52aefcc9d5c4882668ce1375e940ce46a675)
",git fetch https://review.opendev.org/openstack/nova refs/changes/04/879704/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/Do-not-send-mtu-value-in-metadata-for-networks-with-enabled-dhcp-641506f2a13b540f.yaml', 'nova/tests/unit/virt/test_netutils.py', 'nova/virt/netutils.py']",3,2a807a6d2cc7760e223cbd9414438fb3de8f4375,bug/1899487," 'mtu': _get_link_mtu(vif),def _get_link_mtu(vif): for subnet in vif['network']['subnets']: if subnet['meta'].get('dhcp_server'): return None return vif['network']['meta'].get('mtu') "," 'mtu': vif['network']['meta'].get('mtu'),",36,1
openstack%2Fnova~897300,openstack/nova,stable/wallaby,Ia10ccdd9fbed3870d0592e3cbbff17f292651dd2,fix sr-iov support on Cavium ThunderX hosts.,ABANDONED,2023-10-05 13:29:19.000000000,2024-03-05 19:04:36.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-10-05 13:29:19.000000000', 'files': ['nova/virt/libvirt/host.py', 'releasenotes/notes/fix-pci-passthrough-for-cavium-thunderx-8fbd1c40718569e2.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/fbf1433c1ada26df5373120eb23b4024bc1ed0c6', 'message': ""fix sr-iov support on Cavium ThunderX hosts.\n\nThis change is a partial revert of\nIbf8dca4bd57b3bddb39955b53cc03564506f5754\nto reintoduce a try-except which is required for\nsome non standard hardware.\n\nOn the Cavium ThunderX platform, it's possible to have\nvirutal functions which are netdevs which are not associated\nto a PF. This causes the PF name lookup to fail.\nPrior to Ibf8dca4bd57b3bddb39955b53cc03564506f5754\nwhen the lookup failed it was caught and we skipped\npopulating the parent PF interface name.\n\nThis change restores that behavior.\n\nCloses-Bug: #1915255\nChange-Id: Ia10ccdd9fbed3870d0592e3cbbff17f292651dd2\n(cherry picked from commit a569a51fedd058fdae2eb0066e087c37688987f8)\n""}]",0,897300,fbf1433c1ada26df5373120eb23b4024bc1ed0c6,5,1,1,11604,,,0,"fix sr-iov support on Cavium ThunderX hosts.

This change is a partial revert of
Ibf8dca4bd57b3bddb39955b53cc03564506f5754
to reintoduce a try-except which is required for
some non standard hardware.

On the Cavium ThunderX platform, it's possible to have
virutal functions which are netdevs which are not associated
to a PF. This causes the PF name lookup to fail.
Prior to Ibf8dca4bd57b3bddb39955b53cc03564506f5754
when the lookup failed it was caught and we skipped
populating the parent PF interface name.

This change restores that behavior.

Closes-Bug: #1915255
Change-Id: Ia10ccdd9fbed3870d0592e3cbbff17f292651dd2
(cherry picked from commit a569a51fedd058fdae2eb0066e087c37688987f8)
",git fetch https://review.opendev.org/openstack/nova refs/changes/00/897300/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/host.py', 'releasenotes/notes/fix-pci-passthrough-for-cavium-thunderx-8fbd1c40718569e2.yaml']",2,fbf1433c1ada26df5373120eb23b4024bc1ed0c6,bug/1915255-stable/wallaby,"--- fixes: - | On some hardware platforms, an SR-IOV virtual function for a NIC port may exist without being associated with a parent physical function that has an assocatied netdev. In such a case the the PF interface name lookup will fail. As the ``PciDeviceNotFoundById`` exception was not handled this would prevent the nova compute agent from starting on affected hardware. See: https://bugs.launchpad.net/nova/+bug/1915255 for more details. This edgecase has now been addressed, however, features that depend on the PF name such as minimum bandwidth based QoS cannot be supported on these platforms. ",,29,4
openstack%2Fnova~885348,openstack/nova,stable/wallaby,I2ba035c09ace20e9835d9d12a5c5bee17d616718,Fix failed count for anti-affinity check,ABANDONED,2023-06-06 08:57:27.000000000,2024-03-05 19:04:32.000000000,,"[{'_account_id': 7166}, {'_account_id': 11604}, {'_account_id': 20733}, {'_account_id': 22348}, {'_account_id': 34860}, {'_account_id': 34951}]","[{'number': 1, 'created': '2023-06-06 08:57:27.000000000', 'files': ['nova/tests/functional/test_server_group.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'nova/exception.py', 'nova/compute/manager.py', 'nova/compute/build_results.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/e48fb15aaa462813fe9334a83bc76b43eb465fbd', 'message': 'Fix failed count for anti-affinity check\n\nThe late anti-affinity check runs in the compute manager to avoid\nparallel scheduling requests to invalidate the anti-affinity server\ngroup policy. When the check fails the instance is re-scheduled.\nHowever this failure counted as a real instance boot failure of the\ncompute host and can lead to de-prioritization of the compute host\nin the scheduler via BuildFailureWeigher. As the late anti-affinity\ncheck does not indicate any fault of the compute host itself it\nshould not be counted towards the build failure counter.\nThis patch adds new build results to handle this case.\n\nConflicts:\n  nova/exception.py due to ShadowTableExists not exists in later\n  releases\n  nova/tests/functional/test_server_group.py due to db code moved\n  around in xena causing import differences\n\nCloses-Bug: #1996732\nChange-Id: I2ba035c09ace20e9835d9d12a5c5bee17d616718\nSigned-off-by: Yusuke Okada <okada.yusuke@fujitsu.com>\n(cherry picked from commit 56d320a203a13f262a2e94e491af222032e453d3)\n(cherry picked from commit 1b56714e9119ab4152e6f33985a499b2d83a491b)\n(cherry picked from commit 2f1d65774fbcf5c25c4ba53583b6a802a03f4c4d)\n(cherry picked from commit cd0403dd3b1099bd13da503500a50249db8e49ea)\n(cherry picked from commit 87488180e5633db5ef8d684684a4355de48ef428)\n'}]",4,885348,e48fb15aaa462813fe9334a83bc76b43eb465fbd,16,6,1,9708,,,0,"Fix failed count for anti-affinity check

The late anti-affinity check runs in the compute manager to avoid
parallel scheduling requests to invalidate the anti-affinity server
group policy. When the check fails the instance is re-scheduled.
However this failure counted as a real instance boot failure of the
compute host and can lead to de-prioritization of the compute host
in the scheduler via BuildFailureWeigher. As the late anti-affinity
check does not indicate any fault of the compute host itself it
should not be counted towards the build failure counter.
This patch adds new build results to handle this case.

Conflicts:
  nova/exception.py due to ShadowTableExists not exists in later
  releases
  nova/tests/functional/test_server_group.py due to db code moved
  around in xena causing import differences

Closes-Bug: #1996732
Change-Id: I2ba035c09ace20e9835d9d12a5c5bee17d616718
Signed-off-by: Yusuke Okada <okada.yusuke@fujitsu.com>
(cherry picked from commit 56d320a203a13f262a2e94e491af222032e453d3)
(cherry picked from commit 1b56714e9119ab4152e6f33985a499b2d83a491b)
(cherry picked from commit 2f1d65774fbcf5c25c4ba53583b6a802a03f4c4d)
(cherry picked from commit cd0403dd3b1099bd13da503500a50249db8e49ea)
(cherry picked from commit 87488180e5633db5ef8d684684a4355de48ef428)
",git fetch https://review.opendev.org/openstack/nova refs/changes/48/885348/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/test_server_group.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'nova/exception.py', 'nova/compute/manager.py', 'nova/compute/build_results.py']",5,e48fb15aaa462813fe9334a83bc76b43eb465fbd,bug/1996732,"# Instance failed by policy violation (such as affinity or anti-affinity) # and was not rescheduled. In this case, the node's failed count won't be # increased. FAILED_BY_POLICY = 'failed_by_policy' # Instance failed by policy violation (such as affinity or anti-affinity) # but was rescheduled. In this case, the node's failed count won't be # increased. RESCHEDULED_BY_POLICY = 'rescheduled_by_policy'",,265,14
openstack%2Fnova~865334,openstack/nova,stable/wallaby,I34dae6fdb746205f0baa4997e69eec55634bec4d,refactor: remove duplicated logic,ABANDONED,2022-11-22 20:59:56.000000000,2024-03-05 19:04:28.000000000,,"[{'_account_id': 7166}, {'_account_id': 9708}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-11-22 20:59:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e32be0ed9e3949acb3efb0ab511acb196bab7473', 'message': 'refactor: remove duplicated logic\n\nRemove _update_port_pci_binding_profile and replace its usage with\n_get_pci_device_profile.\n\nChange-Id: I34dae6fdb746205f0baa4997e69eec55634bec4d\n(cherry picked from commit 8d2776fb34339b311c713992a39507452c4ae42f)\n(cherry picked from commit 683cbd06336bba37d033c292c4c0ea83e06d9c07)\n(cherry picked from commit ff5d3b09ac8ddfb7c5c6a0d56e986b73a8b3514a)\n'}, {'number': 2, 'created': '2022-12-06 10:59:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e2d3e9cfd082715882097b059984894553223ab6', 'message': 'refactor: remove duplicated logic\n\nRemove _update_port_pci_binding_profile and replace its usage with\n_get_pci_device_profile.\n\nchanges from yoga are due to a partial backport of\nare due to a partial backport of\nI9a1532e9a98f89db69b9ae3b41b06318a43519b3\nwhich is required to resolve conflict due to the lack\nof the remote managed ports feature in xena\n\nspecificaly _get_port_pci_slot was refactored to\n_get_port_pci_dev\n\nChange-Id: I34dae6fdb746205f0baa4997e69eec55634bec4d\n(cherry picked from commit 8d2776fb34339b311c713992a39507452c4ae42f)\n(cherry picked from commit 683cbd06336bba37d033c292c4c0ea83e06d9c07)\n(cherry picked from commit e7c2e55c6685ccda23ad5c020db5b204f82d296e)\n'}, {'number': 3, 'created': '2023-10-11 13:03:14.000000000', 'files': ['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/04086b9ce44ae5e54d4469d7040ecc159b6ebcb1', 'message': 'refactor: remove duplicated logic\n\nRemove _update_port_pci_binding_profile and replace its usage with\n_get_pci_device_profile.\n\nchanges from yoga are due to a partial backport of\nare due to a partial backport of\nI9a1532e9a98f89db69b9ae3b41b06318a43519b3\nwhich is required to resolve conflict due to the lack\nof the remote managed ports feature in xena\n\nspecificaly _get_port_pci_slot was refactored to\n_get_port_pci_dev\n\nChange-Id: I34dae6fdb746205f0baa4997e69eec55634bec4d\n(cherry picked from commit 8d2776fb34339b311c713992a39507452c4ae42f)\n(cherry picked from commit 683cbd06336bba37d033c292c4c0ea83e06d9c07)\n(cherry picked from commit e7c2e55c6685ccda23ad5c020db5b204f82d296e)\n'}]",2,865334,04086b9ce44ae5e54d4469d7040ecc159b6ebcb1,18,3,3,11604,,,0,"refactor: remove duplicated logic

Remove _update_port_pci_binding_profile and replace its usage with
_get_pci_device_profile.

changes from yoga are due to a partial backport of
are due to a partial backport of
I9a1532e9a98f89db69b9ae3b41b06318a43519b3
which is required to resolve conflict due to the lack
of the remote managed ports feature in xena

specificaly _get_port_pci_slot was refactored to
_get_port_pci_dev

Change-Id: I34dae6fdb746205f0baa4997e69eec55634bec4d
(cherry picked from commit 8d2776fb34339b311c713992a39507452c4ae42f)
(cherry picked from commit 683cbd06336bba37d033c292c4c0ea83e06d9c07)
(cherry picked from commit e7c2e55c6685ccda23ad5c020db5b204f82d296e)
",git fetch https://review.opendev.org/openstack/nova refs/changes/34/865334/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py']",2,e32be0ed9e3949acb3efb0ab511acb196bab7473,bug/1970467," def _get_port_pci_dev(self, context, instance, port): """"""Find the PCI device corresponding to the port. :return: The PciDevice object, or None if unable to find. return device pci_dev = self._get_port_pci_dev(context, instance, p) if pci_dev: binding_profile.update( self._get_pci_device_profile(pci_dev) )"," def _get_port_pci_slot(self, context, instance, port): """"""Find the PCI address of the device corresponding to the port. :return: The PCI address as a string, or None if unable to find. # Return the device's PCI address return device.address pci_slot = self._get_port_pci_slot(context, instance, p) if pci_slot: binding_profile.update({'pci_slot': pci_slot})",14,12
openstack%2Fnova~865571,openstack/nova,stable/wallaby,Ic717dc42ac6b6cace59d344acaf12f9d1ee35564,Add compute restart capability for libvirt func tests,ABANDONED,2022-11-24 14:37:25.000000000,2024-03-05 19:04:24.000000000,,"[{'_account_id': 7166}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-11-24 14:37:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/afcf9a5035b501ed33b6498c16ddbf13bad26ef9', 'message': 'Add compute restart capability for libvirt func tests\n\nThe existing generic restart_compute_service() call in the nova test\nbase class is not appropriate for the libvirt functional test that needs\nto reconfigure the libvirt connection as it is not aware of the libvirt\nspecific mocking needed when a compute service is started.\n\nSo this patch adds a specific restart_compute_service() call\nto nova.tests.functional.libvirt.base.ServersTestBase. This will be used\nby a later patch testing [pci]device_spec reconfiguration scenarios.\n\nThis change showed that some of the existing libvirt functional test\nused the incomplete restart_compute_service from the base class. Others\nused local mocking to inject new pci config to the restart. I moved all\nthese to the new function and removed the local mocking.\n\nConflicts:\n    nova/tests/functional/libvirt/base.py\n    nova/tests/functional/libvirt/test_vgpu.py\n\nConflicts are due to not backporting the removal of double mocking\nand the lack of generic mdev feature added in xena.\n\nChange-Id: Ic717dc42ac6b6cace59d344acaf12f9d1ee35564\n(cherry picked from commit 57c253a609e859fa21ba05b264f0ba4d0ade7b8b)\n(cherry picked from commit f98858aa77e4443164fc09fae3667fb0f66edfbf)\n(cherry picked from commit 3572e64effafe4a4c4e10b404aa981dc12790e1e)\n'}, {'number': 2, 'created': '2022-11-24 19:58:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/73899d02d855563d5c04b8205d6e59532f543ece', 'message': 'Add compute restart capability for libvirt func tests\n\nThe existing generic restart_compute_service() call in the nova test\nbase class is not appropriate for the libvirt functional test that needs\nto reconfigure the libvirt connection as it is not aware of the libvirt\nspecific mocking needed when a compute service is started.\n\nSo this patch adds a specific restart_compute_service() call\nto nova.tests.functional.libvirt.base.ServersTestBase. This will be used\nby a later patch testing [pci]device_spec reconfiguration scenarios.\n\nThis change showed that some of the existing libvirt functional test\nused the incomplete restart_compute_service from the base class. Others\nused local mocking to inject new pci config to the restart. I moved all\nthese to the new function and removed the local mocking.\n\nConflicts:\n    nova/tests/functional/libvirt/base.py\n    nova/tests/functional/libvirt/test_vgpu.py\n\nConflicts are due to not backporting the removal of double mocking\nand the lack of generic mdev feature added in xena.\n\nChange-Id: Ic717dc42ac6b6cace59d344acaf12f9d1ee35564\n(cherry picked from commit 57c253a609e859fa21ba05b264f0ba4d0ade7b8b)\n(cherry picked from commit f98858aa77e4443164fc09fae3667fb0f66edfbf)\n(cherry picked from commit 3572e64effafe4a4c4e10b404aa981dc12790e1e)\n'}, {'number': 3, 'created': '2022-12-06 10:59:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/7dfebec01ee489b2d49cad09025cfd72147abd8f', 'message': 'Add compute restart capability for libvirt func tests\n\nThe existing generic restart_compute_service() call in the nova test\nbase class is not appropriate for the libvirt functional test that needs\nto reconfigure the libvirt connection as it is not aware of the libvirt\nspecific mocking needed when a compute service is started.\n\nSo this patch adds a specific restart_compute_service() call\nto nova.tests.functional.libvirt.base.ServersTestBase. This will be used\nby a later patch testing [pci]device_spec reconfiguration scenarios.\n\nThis change showed that some of the existing libvirt functional test\nused the incomplete restart_compute_service from the base class. Others\nused local mocking to inject new pci config to the restart. I moved all\nthese to the new function and removed the local mocking.\n\nConflicts:\n    nova/tests/functional/libvirt/base.py\n    nova/tests/functional/libvirt/test_vgpu.py\n\nConflicts are due to not backporting the removal of double mocking\nand the lack of generic mdev feature added in xena.\n\nChange-Id: Ic717dc42ac6b6cace59d344acaf12f9d1ee35564\n(cherry picked from commit 57c253a609e859fa21ba05b264f0ba4d0ade7b8b)\n(cherry picked from commit f98858aa77e4443164fc09fae3667fb0f66edfbf)\n(cherry picked from commit afc55c564f90ea8a6e9a03f1f3052bf2e618b02b)\n'}, {'number': 4, 'created': '2023-10-11 11:55:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/41d58e1ba51d9f41ebbdc051e422b836a09209d5', 'message': 'Add compute restart capability for libvirt func tests\n\nThe existing generic restart_compute_service() call in the nova test\nbase class is not appropriate for the libvirt functional test that needs\nto reconfigure the libvirt connection as it is not aware of the libvirt\nspecific mocking needed when a compute service is started.\n\nSo this patch adds a specific restart_compute_service() call\nto nova.tests.functional.libvirt.base.ServersTestBase. This will be used\nby a later patch testing [pci]device_spec reconfiguration scenarios.\n\nThis change showed that some of the existing libvirt functional test\nused the incomplete restart_compute_service from the base class. Others\nused local mocking to inject new pci config to the restart. I moved all\nthese to the new function and removed the local mocking.\n\nConflicts:\n    nova/tests/functional/libvirt/base.py\n    nova/tests/functional/libvirt/test_vgpu.py\n\nConflicts are due to not backporting the removal of double mocking\nand the lack of generic mdev feature added in xena.\n\nChange-Id: Ic717dc42ac6b6cace59d344acaf12f9d1ee35564\n(cherry picked from commit 57c253a609e859fa21ba05b264f0ba4d0ade7b8b)\n(cherry picked from commit f98858aa77e4443164fc09fae3667fb0f66edfbf)\n(cherry picked from commit afc55c564f90ea8a6e9a03f1f3052bf2e618b02b)\n'}, {'number': 5, 'created': '2023-10-11 11:58:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/bc97620f0722eb1d18a89cc92af3e42074a030a4', 'message': 'Add compute restart capability for libvirt func tests\n\nThe existing generic restart_compute_service() call in the nova test\nbase class is not appropriate for the libvirt functional test that needs\nto reconfigure the libvirt connection as it is not aware of the libvirt\nspecific mocking needed when a compute service is started.\n\nSo this patch adds a specific restart_compute_service() call\nto nova.tests.functional.libvirt.base.ServersTestBase. This will be used\nby a later patch testing [pci]device_spec reconfiguration scenarios.\n\nThis change showed that some of the existing libvirt functional test\nused the incomplete restart_compute_service from the base class. Others\nused local mocking to inject new pci config to the restart. I moved all\nthese to the new function and removed the local mocking.\n\nConflicts:\n    nova/tests/functional/libvirt/base.py\n    nova/tests/functional/libvirt/test_vgpu.py\n\nConflicts are due to not backporting the removal of double mocking\nand the lack of generic mdev feature added in xena.\n\nChange-Id: Ic717dc42ac6b6cace59d344acaf12f9d1ee35564\n(cherry picked from commit 57c253a609e859fa21ba05b264f0ba4d0ade7b8b)\n(cherry picked from commit f98858aa77e4443164fc09fae3667fb0f66edfbf)\n(cherry picked from commit afc55c564f90ea8a6e9a03f1f3052bf2e618b02b)\n'}, {'number': 6, 'created': '2023-10-11 13:03:14.000000000', 'files': ['nova/tests/functional/libvirt/test_numa_live_migration.py', 'nova/tests/functional/libvirt/test_vgpu.py', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/tests/functional/libvirt/base.py', 'nova/tests/functional/libvirt/test_numa_servers.py', 'nova/tests/functional/libvirt/test_reshape.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/bcc52de5ac8c7e9d8fb733496ec1654c0d01a6f6', 'message': 'Add compute restart capability for libvirt func tests\n\nThe existing generic restart_compute_service() call in the nova test\nbase class is not appropriate for the libvirt functional test that needs\nto reconfigure the libvirt connection as it is not aware of the libvirt\nspecific mocking needed when a compute service is started.\n\nSo this patch adds a specific restart_compute_service() call\nto nova.tests.functional.libvirt.base.ServersTestBase. This will be used\nby a later patch testing [pci]device_spec reconfiguration scenarios.\n\nThis change showed that some of the existing libvirt functional test\nused the incomplete restart_compute_service from the base class. Others\nused local mocking to inject new pci config to the restart. I moved all\nthese to the new function and removed the local mocking.\n\nConflicts:\n    nova/tests/functional/libvirt/base.py\n    nova/tests/functional/libvirt/test_vgpu.py\n\nConflicts are due to not backporting the removal of double mocking\nand the lack of generic mdev feature added in xena.\n\nChange-Id: Ic717dc42ac6b6cace59d344acaf12f9d1ee35564\n(cherry picked from commit 57c253a609e859fa21ba05b264f0ba4d0ade7b8b)\n(cherry picked from commit f98858aa77e4443164fc09fae3667fb0f66edfbf)\n(cherry picked from commit afc55c564f90ea8a6e9a03f1f3052bf2e618b02b)\n'}]",9,865571,bcc52de5ac8c7e9d8fb733496ec1654c0d01a6f6,19,2,6,11604,,,0,"Add compute restart capability for libvirt func tests

The existing generic restart_compute_service() call in the nova test
base class is not appropriate for the libvirt functional test that needs
to reconfigure the libvirt connection as it is not aware of the libvirt
specific mocking needed when a compute service is started.

So this patch adds a specific restart_compute_service() call
to nova.tests.functional.libvirt.base.ServersTestBase. This will be used
by a later patch testing [pci]device_spec reconfiguration scenarios.

This change showed that some of the existing libvirt functional test
used the incomplete restart_compute_service from the base class. Others
used local mocking to inject new pci config to the restart. I moved all
these to the new function and removed the local mocking.

Conflicts:
    nova/tests/functional/libvirt/base.py
    nova/tests/functional/libvirt/test_vgpu.py

Conflicts are due to not backporting the removal of double mocking
and the lack of generic mdev feature added in xena.

Change-Id: Ic717dc42ac6b6cace59d344acaf12f9d1ee35564
(cherry picked from commit 57c253a609e859fa21ba05b264f0ba4d0ade7b8b)
(cherry picked from commit f98858aa77e4443164fc09fae3667fb0f66edfbf)
(cherry picked from commit afc55c564f90ea8a6e9a03f1f3052bf2e618b02b)
",git fetch https://review.opendev.org/openstack/nova refs/changes/71/865571/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/libvirt/test_numa_live_migration.py', 'nova/tests/functional/libvirt/test_vgpu.py', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/tests/functional/libvirt/base.py', 'nova/tests/functional/libvirt/test_numa_servers.py', 'nova/tests/functional/libvirt/test_reshape.py']",6,afcf9a5035b501ed33b6498c16ddbf13bad26ef9,bug/1970467, self.hostname = self.start_compute( self.compute = self.computes[self.hostname] self.compute = self.restart_compute_service(self.hostname), hostname = self.start_compute( self.compute = self.computes[hostname] self.compute = self.restart_compute_service(self.compute),117,45
openstack%2Fnova~865572,openstack/nova,stable/wallaby,I6e220cf3231670d156632e075fcf7701df744773,enable blocked VDPA move operations,ABANDONED,2022-11-24 14:37:25.000000000,2024-03-05 19:04:21.000000000,,"[{'_account_id': 9708}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-11-24 14:37:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e36517bdf62f2dfdbee086af8f3f1115cbc6d1a7', 'message': 'enable blocked VDPA move operations\n\nThis change adds functional test for operations on servers with VDPA\ndevices that are expected to work but currently blocked due to lack\nof testing or qemu bugs.\n\ncold-migrate, resize, evacuate,and shelve are enabled\nand tested by this patch\n\nConflicts:\n    nova/compute/api.py\n\nThe conflict was trivial related to the removal of the decorators\n\nCloses-Bug: #1970467\nChange-Id: I6e220cf3231670d156632e075fcf7701df744773\n(cherry picked from commit 95f96ed3aa201bc5b90e589b288fa4039bc9c0d2)\n(cherry picked from commit 041939361e393b808724b8590eb76b3aa075814e)\n(cherry picked from commit 30e74f44bfd1e72d0992716f31897f5b42e78373)\n'}, {'number': 2, 'created': '2022-11-24 19:58:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/dc147647d26121ff66e36ae054a73b4d214ed6a7', 'message': 'enable blocked VDPA move operations\n\nThis change adds functional test for operations on servers with VDPA\ndevices that are expected to work but currently blocked due to lack\nof testing or qemu bugs.\n\ncold-migrate, resize, evacuate,and shelve are enabled\nand tested by this patch\n\nConflicts:\n    nova/compute/api.py\n\nThe conflict was trivial related to the removal of the decorators\n\nCloses-Bug: #1970467\nChange-Id: I6e220cf3231670d156632e075fcf7701df744773\n(cherry picked from commit 95f96ed3aa201bc5b90e589b288fa4039bc9c0d2)\n(cherry picked from commit 041939361e393b808724b8590eb76b3aa075814e)\n(cherry picked from commit 30e74f44bfd1e72d0992716f31897f5b42e78373)\n'}, {'number': 3, 'created': '2022-12-06 10:59:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/313b02574b921bb58bafb1cd0959dd65b918143c', 'message': 'enable blocked VDPA move operations\n\nThis change adds functional test for operations on servers with VDPA\ndevices that are expected to work but currently blocked due to lack\nof testing or qemu bugs.\n\ncold-migrate, resize, evacuate,and shelve are enabled\nand tested by this patch\n\nConflicts:\n    nova/compute/api.py\n\nThe conflict was trivial related to the removal of the decorators\n\nCloses-Bug: #1970467\nChange-Id: I6e220cf3231670d156632e075fcf7701df744773\n(cherry picked from commit 95f96ed3aa201bc5b90e589b288fa4039bc9c0d2)\n(cherry picked from commit 041939361e393b808724b8590eb76b3aa075814e)\n(cherry picked from commit c3092e3ee791d9e291f829cc3eaa8123560a13ef)\n'}, {'number': 4, 'created': '2022-12-06 13:15:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/31022c16a035e823569d99b176dd050566a61ee9', 'message': 'enable blocked VDPA move operations\n\nThis change adds functional test for operations on servers with VDPA\ndevices that are expected to work but currently blocked due to lack\nof testing or qemu bugs.\n\ncold-migrate, resize, evacuate,and shelve are enabled\nand tested by this patch\n\nConflicts:\n    nova/compute/api.py\n\nThe conflict was trivial related to the removal of the decorators\n\nCloses-Bug: #1970467\nChange-Id: I6e220cf3231670d156632e075fcf7701df744773\n(cherry picked from commit 95f96ed3aa201bc5b90e589b288fa4039bc9c0d2)\n(cherry picked from commit 041939361e393b808724b8590eb76b3aa075814e)\n(cherry picked from commit c3092e3ee791d9e291f829cc3eaa8123560a13ef)\n'}, {'number': 5, 'created': '2023-10-11 12:01:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/4d112328bafcb2e376f8961f54264cf8f5eaa7aa', 'message': 'enable blocked VDPA move operations\n\nThis change adds functional test for operations on servers with VDPA\ndevices that are expected to work but currently blocked due to lack\nof testing or qemu bugs.\n\ncold-migrate, resize, evacuate,and shelve are enabled\nand tested by this patch\n\nConflicts:\n    nova/compute/api.py\n\nThe conflict was trivial related to the removal of the decorators\n\nCloses-Bug: #1970467\nChange-Id: I6e220cf3231670d156632e075fcf7701df744773\n(cherry picked from commit 95f96ed3aa201bc5b90e589b288fa4039bc9c0d2)\n(cherry picked from commit 041939361e393b808724b8590eb76b3aa075814e)\n(cherry picked from commit c3092e3ee791d9e291f829cc3eaa8123560a13ef)\n'}, {'number': 6, 'created': '2023-10-11 13:03:14.000000000', 'files': ['doc/source/admin/vdpa.rst', 'doc/source/admin/index.rst', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'releasenotes/notes/vdpa-move-ops-a7b3799807807a92.yaml', 'nova/compute/api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/13f75c0d1afb43d8ea5f7305c5688fbce2298b83', 'message': 'enable blocked VDPA move operations\n\nThis change adds functional test for operations on servers with VDPA\ndevices that are expected to work but currently blocked due to lack\nof testing or qemu bugs.\n\ncold-migrate, resize, evacuate,and shelve are enabled\nand tested by this patch\n\nConflicts:\n    nova/compute/api.py\n\nThe conflict was trivial related to the removal of the decorators\n\nCloses-Bug: #1970467\nChange-Id: I6e220cf3231670d156632e075fcf7701df744773\n(cherry picked from commit 95f96ed3aa201bc5b90e589b288fa4039bc9c0d2)\n(cherry picked from commit 041939361e393b808724b8590eb76b3aa075814e)\n(cherry picked from commit c3092e3ee791d9e291f829cc3eaa8123560a13ef)\n'}]",2,865572,13f75c0d1afb43d8ea5f7305c5688fbce2298b83,18,2,6,11604,,,0,"enable blocked VDPA move operations

This change adds functional test for operations on servers with VDPA
devices that are expected to work but currently blocked due to lack
of testing or qemu bugs.

cold-migrate, resize, evacuate,and shelve are enabled
and tested by this patch

Conflicts:
    nova/compute/api.py

The conflict was trivial related to the removal of the decorators

Closes-Bug: #1970467
Change-Id: I6e220cf3231670d156632e075fcf7701df744773
(cherry picked from commit 95f96ed3aa201bc5b90e589b288fa4039bc9c0d2)
(cherry picked from commit 041939361e393b808724b8590eb76b3aa075814e)
(cherry picked from commit c3092e3ee791d9e291f829cc3eaa8123560a13ef)
",git fetch https://review.opendev.org/openstack/nova refs/changes/72/865572/1 && git format-patch -1 --stdout FETCH_HEAD,"['doc/source/admin/vdpa.rst', 'doc/source/admin/index.rst', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'releasenotes/notes/vdpa-move-ops-a7b3799807807a92.yaml', 'nova/compute/api.py']",5,e36517bdf62f2dfdbee086af8f3f1115cbc6d1a7,bug/1970467,," # FIXME(sean-k-mooney): Cold migrate and resize to different hosts # probably works but they have not been tested so block them for now @reject_vdpa_instances(instance_actions.RESIZE) # FIXME(sean-k-mooney): Shelve works but unshelve does not due to bug # #1851545, so block it for now @reject_vdpa_instances(instance_actions.SHELVE) # FIXME(sean-k-mooney): rebuild works but we have not tested evacuate yet @reject_vdpa_instances(instance_actions.EVACUATE)",388,29
openstack%2Fnova~866157,openstack/nova,stable/wallaby,I0f785178b132dfef668829558dea9f7e674abadb,Reproducer for bug 1951656,ABANDONED,2022-11-30 13:08:45.000000000,2024-03-05 19:04:17.000000000,,"[{'_account_id': 7166}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-11-30 13:08:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/b45fde9959246b3cb97624e151e5a35fdc546fe7', 'message': ""Reproducer for bug 1951656\n\nDue to a new mdev naming, we can't parse it.\n\nChange-Id: I0f785178b132dfef668829558dea9f7e674abadb\nRelated-Bug: #1951656\n(cherry picked from commit 185201974775bab966f4e5ca3bbdc31b8269fa4c)\n(cherry picked from commit 857df72d3166a8f7e8a8cdfeabb62ad6ead46565)\n(cherry picked from commit a820ab50076e4ca0655e8d7a4ffc4d480c12335b)\n(cherry picked from commit 726c0217ef8140a949510b0a0bbbe6e82704cd40)\n""}, {'number': 2, 'created': '2022-12-06 10:52:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/25306769851b064b79db7a92bad7628cd236fc4b', 'message': ""Reproducer for bug 1951656\n\nDue to a new mdev naming, we can't parse it.\n\nChange-Id: I0f785178b132dfef668829558dea9f7e674abadb\nRelated-Bug: #1951656\n(cherry picked from commit 185201974775bab966f4e5ca3bbdc31b8269fa4c)\n(cherry picked from commit 857df72d3166a8f7e8a8cdfeabb62ad6ead46565)\n(cherry picked from commit a820ab50076e4ca0655e8d7a4ffc4d480c12335b)\n(cherry picked from commit 726c0217ef8140a949510b0a0bbbe6e82704cd40)\n""}, {'number': 3, 'created': '2022-12-06 10:59:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/44e8d3d96b164a82b03a94de9f5cb4b5ec128776', 'message': ""Reproducer for bug 1951656\n\nDue to a new mdev naming, we can't parse it.\n\nChange-Id: I0f785178b132dfef668829558dea9f7e674abadb\nRelated-Bug: #1951656\n(cherry picked from commit 185201974775bab966f4e5ca3bbdc31b8269fa4c)\n(cherry picked from commit 857df72d3166a8f7e8a8cdfeabb62ad6ead46565)\n(cherry picked from commit a820ab50076e4ca0655e8d7a4ffc4d480c12335b)\n(cherry picked from commit 726c0217ef8140a949510b0a0bbbe6e82704cd40)\n""}, {'number': 4, 'created': '2022-12-06 13:15:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/42216a1d46c21d05ab299aaaa842bac2c440211e', 'message': ""Reproducer for bug 1951656\n\nDue to a new mdev naming, we can't parse it.\n\nNote on wallaby we do not have a seperate\nfixtures module so this patch is adapted\nto the old fakelibvirt location\n\nChange-Id: I0f785178b132dfef668829558dea9f7e674abadb\nRelated-Bug: #1951656\n(cherry picked from commit 185201974775bab966f4e5ca3bbdc31b8269fa4c)\n(cherry picked from commit 857df72d3166a8f7e8a8cdfeabb62ad6ead46565)\n(cherry picked from commit a820ab50076e4ca0655e8d7a4ffc4d480c12335b)\n(cherry picked from commit 726c0217ef8140a949510b0a0bbbe6e82704cd40)\n""}, {'number': 5, 'created': '2022-12-06 14:12:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/87ea3f24f530fd5d58b6809aedc01876824ab6dd', 'message': ""Reproducer for bug 1951656\n\nDue to a new mdev naming, we can't parse it.\n\nNote on wallaby we do not have a seperate\nfixtures module so this patch is adapted\nto the old fakelibvirt location\n\nChange-Id: I0f785178b132dfef668829558dea9f7e674abadb\nRelated-Bug: #1951656\n(cherry picked from commit 185201974775bab966f4e5ca3bbdc31b8269fa4c)\n(cherry picked from commit 857df72d3166a8f7e8a8cdfeabb62ad6ead46565)\n(cherry picked from commit a820ab50076e4ca0655e8d7a4ffc4d480c12335b)\n(cherry picked from commit 726c0217ef8140a949510b0a0bbbe6e82704cd40)\n""}, {'number': 6, 'created': '2022-12-06 16:20:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/c4aebdbdc82336b29a47af225ee3fb845137c981', 'message': ""Reproducer for bug 1951656\n\nDue to a new mdev naming, we can't parse it.\n\nBackport-only for Wallaby:\n* Note on wallaby we do not have a seperate\n  fixtures module so this patch is adapted\n  to the old fakelibvirt location\n* due to Ibccbb93352f93dba7e15e1f77be9ee0fc466fee0\n  missing, we need to change the config option to\n  be enabled_vgpu_types and we also need to directly\n  add the assert_mdev_usage() helper method.\n\nChange-Id: I0f785178b132dfef668829558dea9f7e674abadb\nRelated-Bug: #1951656\n(cherry picked from commit 185201974775bab966f4e5ca3bbdc31b8269fa4c)\n(cherry picked from commit 857df72d3166a8f7e8a8cdfeabb62ad6ead46565)\n(cherry picked from commit a820ab50076e4ca0655e8d7a4ffc4d480c12335b)\n(cherry picked from commit 726c0217ef8140a949510b0a0bbbe6e82704cd40)\n""}, {'number': 7, 'created': '2023-10-11 12:01:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/542fde0977aa87278445521562fc27603ea871ca', 'message': ""Reproducer for bug 1951656\n\nDue to a new mdev naming, we can't parse it.\n\nBackport-only for Wallaby:\n* Note on wallaby we do not have a seperate\n  fixtures module so this patch is adapted\n  to the old fakelibvirt location\n* due to Ibccbb93352f93dba7e15e1f77be9ee0fc466fee0\n  missing, we need to change the config option to\n  be enabled_vgpu_types and we also need to directly\n  add the assert_mdev_usage() helper method.\n\nChange-Id: I0f785178b132dfef668829558dea9f7e674abadb\nRelated-Bug: #1951656\n(cherry picked from commit 185201974775bab966f4e5ca3bbdc31b8269fa4c)\n(cherry picked from commit 857df72d3166a8f7e8a8cdfeabb62ad6ead46565)\n(cherry picked from commit a820ab50076e4ca0655e8d7a4ffc4d480c12335b)\n(cherry picked from commit 726c0217ef8140a949510b0a0bbbe6e82704cd40)\n""}, {'number': 8, 'created': '2023-10-11 13:03:14.000000000', 'files': ['nova/tests/functional/libvirt/test_vgpu.py', 'nova/tests/functional/regressions/test_bug_1951656.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/5c852c3326c8c89cbb8c37fbc1e8baf45efcba8d', 'message': ""Reproducer for bug 1951656\n\nDue to a new mdev naming, we can't parse it.\n\nBackport-only for Wallaby:\n* Note on wallaby we do not have a seperate\n  fixtures module so this patch is adapted\n  to the old fakelibvirt location\n* due to Ibccbb93352f93dba7e15e1f77be9ee0fc466fee0\n  missing, we need to change the config option to\n  be enabled_vgpu_types and we also need to directly\n  add the assert_mdev_usage() helper method.\n\nChange-Id: I0f785178b132dfef668829558dea9f7e674abadb\nRelated-Bug: #1951656\n(cherry picked from commit 185201974775bab966f4e5ca3bbdc31b8269fa4c)\n(cherry picked from commit 857df72d3166a8f7e8a8cdfeabb62ad6ead46565)\n(cherry picked from commit a820ab50076e4ca0655e8d7a4ffc4d480c12335b)\n(cherry picked from commit 726c0217ef8140a949510b0a0bbbe6e82704cd40)\n""}]",4,866157,5c852c3326c8c89cbb8c37fbc1e8baf45efcba8d,24,3,8,7166,,,0,"Reproducer for bug 1951656

Due to a new mdev naming, we can't parse it.

Backport-only for Wallaby:
* Note on wallaby we do not have a seperate
  fixtures module so this patch is adapted
  to the old fakelibvirt location
* due to Ibccbb93352f93dba7e15e1f77be9ee0fc466fee0
  missing, we need to change the config option to
  be enabled_vgpu_types and we also need to directly
  add the assert_mdev_usage() helper method.

Change-Id: I0f785178b132dfef668829558dea9f7e674abadb
Related-Bug: #1951656
(cherry picked from commit 185201974775bab966f4e5ca3bbdc31b8269fa4c)
(cherry picked from commit 857df72d3166a8f7e8a8cdfeabb62ad6ead46565)
(cherry picked from commit a820ab50076e4ca0655e8d7a4ffc4d480c12335b)
(cherry picked from commit 726c0217ef8140a949510b0a0bbbe6e82704cd40)
",git fetch https://review.opendev.org/openstack/nova refs/changes/57/866157/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1951656.py'],1,b45fde9959246b3cb97624e151e5a35fdc546fe7,bug/1970467,"# # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. from oslo_utils import uuidutils from nova.tests.fixtures import libvirt as fakelibvirt from nova.tests.functional.libvirt import test_vgpu from nova.virt.libvirt import utils as libvirt_utils class VGPUTestsLibvirt7_7(test_vgpu.VGPUTestBase): def _create_mdev(self, physical_device, mdev_type, uuid=None): # We need to fake the newly created sysfs object by adding a new # FakeMdevDevice in the existing persisted Connection object so # when asking to get the existing mdevs, we would see it. if not uuid: uuid = uuidutils.generate_uuid() mdev_name = libvirt_utils.mdev_uuid2name(uuid) libvirt_parent = self.pci2libvirt_address(physical_device) # Libvirt 7.7 now creates mdevs with a parent_addr suffix. new_mdev_name = '_'.join([mdev_name, libvirt_parent]) # Here, we get the right compute thanks by the self.current_host that # was modified just before connection = self.computes[ self._current_host].driver._host.get_connection() connection.mdev_info.devices.update( {mdev_name: fakelibvirt.FakeMdevDevice(dev_name=new_mdev_name, type_id=mdev_type, parent=libvirt_parent)}) return uuid def setUp(self): super(VGPUTestsLibvirt7_7, self).setUp() extra_spec = {""resources:VGPU"": ""1""} self.flavor = self._create_flavor(extra_spec=extra_spec) # Start compute1 supporting only nvidia-11 self.flags( enabled_mdev_types=fakelibvirt.NVIDIA_11_VGPU_TYPE, group='devices') self.compute1 = self.start_compute_with_vgpu('host1') def test_create_servers_with_vgpu(self): # Create a single instance against a specific compute node. self._create_server( image_uuid='155d900f-4e14-4e4c-a73d-069cbf4541e6', flavor_id=self.flavor, host=self.compute1.host, networks='auto', expected_state='ACTIVE') # TODO(sbauza): Modify this once bug #1851656 is fixed. # mdev_name2uuid() raises a badly formed hexadecimal UUID string error self.assertRaises(ValueError, self.assert_mdev_usage, self.compute1, expected_amount=1) # Now, the problem is that we can't create new instances with VGPUs # from this host. server = self._create_server( image_uuid='155d900f-4e14-4e4c-a73d-069cbf4541e6', flavor_id=self.flavor, host=self.compute1.host, networks='auto', expected_state='ERROR') # The error is due to a bad mdev name parsing self.assertIn('fault', server) # since we only have one host, we have a RescheduledException as this # service was creating an exception and we can't use another one. self.assertIn('Exceeded maximum number of retries', server['fault']['message']) ",,83,0
openstack%2Fnova~853275,openstack/nova,stable/wallaby,I16ed1143ead3779c87698aa29bac005678db2993,Add reno for fixing bug 1941005,ABANDONED,2022-08-16 11:30:37.000000000,2024-03-05 19:04:13.000000000,,"[{'_account_id': 7166}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-08-16 11:30:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/6b55cdad37d4c3f7442789db8767a2c2fd1061d3', 'message': 'Add reno for fixing bug 1941005\n\nRelated-Bug: #1941005\nRelated-Bug: #1983753\nChange-Id: I16ed1143ead3779c87698aa29bac005678db2993\n(cherry picked from commit 82cdfa23c7a0e269ab038e241bb7428b7f1391aa)\n(cherry picked from commit 19bac6e9c362ee692f4be92041bb3f6c3b9b6c23)\n(cherry picked from commit cbf785709968fffc0a760e28f1cdb5c38b254232)\n'}, {'number': 2, 'created': '2023-05-23 11:21:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/95557c4cf0f8308569337e73f3c674fad3cebff2', 'message': 'Add reno for fixing bug 1941005\n\nRelated-Bug: #1941005\nRelated-Bug: #1983753\nChange-Id: I16ed1143ead3779c87698aa29bac005678db2993\n(cherry picked from commit 82cdfa23c7a0e269ab038e241bb7428b7f1391aa)\n(cherry picked from commit 19bac6e9c362ee692f4be92041bb3f6c3b9b6c23)\n(cherry picked from commit cbf785709968fffc0a760e28f1cdb5c38b254232)\n'}, {'number': 3, 'created': '2023-05-23 11:35:35.000000000', 'files': ['releasenotes/notes/bug-1983753-update-requestspec-pci_request-for-resize-a3c6b0a979db723f.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/63c21cf68502a6c61727d9080e13a3882b9e7c11', 'message': 'Add reno for fixing bug 1941005\n\nRelated-Bug: #1941005\nRelated-Bug: #1983753\nChange-Id: I16ed1143ead3779c87698aa29bac005678db2993\n(cherry picked from commit 82cdfa23c7a0e269ab038e241bb7428b7f1391aa)\n(cherry picked from commit 19bac6e9c362ee692f4be92041bb3f6c3b9b6c23)\n(cherry picked from commit cbf785709968fffc0a760e28f1cdb5c38b254232)\n'}]",2,853275,63c21cf68502a6c61727d9080e13a3882b9e7c11,15,3,3,9708,,,0,"Add reno for fixing bug 1941005

Related-Bug: #1941005
Related-Bug: #1983753
Change-Id: I16ed1143ead3779c87698aa29bac005678db2993
(cherry picked from commit 82cdfa23c7a0e269ab038e241bb7428b7f1391aa)
(cherry picked from commit 19bac6e9c362ee692f4be92041bb3f6c3b9b6c23)
(cherry picked from commit cbf785709968fffc0a760e28f1cdb5c38b254232)
",git fetch https://review.opendev.org/openstack/nova refs/changes/75/853275/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/notes/bug-1983753-update-requestspec-pci_request-for-resize-a3c6b0a979db723f.yaml'],1,6b55cdad37d4c3f7442789db8767a2c2fd1061d3,bug/1941005,--- fixes: - | `Bug #1941005 <https://bugs.launchpad.net/nova/+bug/1941005>`_ is fixed. During resize Nova now uses the PCI requests from the new flavor to select the destination host. ,,6,0
openstack%2Fnova~853274,openstack/nova,stable/wallaby,I73c9ae27e9c42ee211a53bed3d849650b65f08be,Update RequestSpec.pci_request for resize,ABANDONED,2022-08-16 11:30:37.000000000,2024-03-05 19:04:09.000000000,,"[{'_account_id': 7166}, {'_account_id': 7634}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-08-16 11:30:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/532e4959c1b5ce6584cab211fd9e4f73615e329e', 'message': 'Update RequestSpec.pci_request for resize\n\nNova uses the RequestSpec.pci_request in the PciPassthroughFilter to\ndecide if the PCI devicesm, requested via the pci_alias in the flavor\nextra_spec, are available on a potential target host. During resize the\nnew flavor might contain different pci_alias request than the old flavor\nof the instance. In this case Nova should use the pci_alias from the new\nflavor to scheduler the destination host of the resize. However this\nlogic was missing and Nova used the old pci_request value based on the\nold flavor. This patch adds the missing logic.\n\nConflicts:\n       nova/compute/api.py due to flavor was still named instance_type\n       in wallaby\n       nova/tests/functional/libvirt/test_pci_sriov_servers.py due to\n       not having the original reproduction test in wallaby\n\nCloses-Bug: #1983753\nCloses-Bug: #1941005\nChange-Id: I73c9ae27e9c42ee211a53bed3d849650b65f08be\n(cherry picked from commit a93092e0d5c1483f9ad48276708ee35c54ce44fe)\n(cherry picked from commit b6c7ee07ad2a6503b8aad0921cca70e61e60259d)\n(cherry picked from commit 696d27a0e2ccf0916fc6bd3eabf73f2b007e7830)\n'}, {'number': 2, 'created': '2023-05-23 11:21:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/3479ada21dcced214736e194b47f7e2337a44be8', 'message': 'Update RequestSpec.pci_request for resize\n\nNova uses the RequestSpec.pci_request in the PciPassthroughFilter to\ndecide if the PCI devicesm, requested via the pci_alias in the flavor\nextra_spec, are available on a potential target host. During resize the\nnew flavor might contain different pci_alias request than the old flavor\nof the instance. In this case Nova should use the pci_alias from the new\nflavor to scheduler the destination host of the resize. However this\nlogic was missing and Nova used the old pci_request value based on the\nold flavor. This patch adds the missing logic.\n\nConflicts:\n       nova/compute/api.py due to flavor was still named instance_type\n       in wallaby\n       nova/tests/functional/libvirt/test_pci_sriov_servers.py due to\n       not having the original reproduction test in wallaby\n\nCloses-Bug: #1983753\nCloses-Bug: #1941005\nChange-Id: I73c9ae27e9c42ee211a53bed3d849650b65f08be\n(cherry picked from commit a93092e0d5c1483f9ad48276708ee35c54ce44fe)\n(cherry picked from commit b6c7ee07ad2a6503b8aad0921cca70e61e60259d)\n(cherry picked from commit 696d27a0e2ccf0916fc6bd3eabf73f2b007e7830)\n'}, {'number': 3, 'created': '2023-05-23 11:35:35.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1983753.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/35ad4bbaf8b383436d3b972daa58e05a47e36d82', 'message': 'Update RequestSpec.pci_request for resize\n\nNova uses the RequestSpec.pci_request in the PciPassthroughFilter to\ndecide if the PCI devicesm, requested via the pci_alias in the flavor\nextra_spec, are available on a potential target host. During resize the\nnew flavor might contain different pci_alias request than the old flavor\nof the instance. In this case Nova should use the pci_alias from the new\nflavor to scheduler the destination host of the resize. However this\nlogic was missing and Nova used the old pci_request value based on the\nold flavor. This patch adds the missing logic.\n\nConflicts:\n       nova/compute/api.py due to flavor was still named instance_type\n       in wallaby\n       nova/tests/functional/libvirt/test_pci_sriov_servers.py due to\n       not having the original reproduction test in wallaby\n\nCloses-Bug: #1983753\nCloses-Bug: #1941005\nChange-Id: I73c9ae27e9c42ee211a53bed3d849650b65f08be\n(cherry picked from commit a93092e0d5c1483f9ad48276708ee35c54ce44fe)\n(cherry picked from commit b6c7ee07ad2a6503b8aad0921cca70e61e60259d)\n(cherry picked from commit 696d27a0e2ccf0916fc6bd3eabf73f2b007e7830)\n'}]",11,853274,35ad4bbaf8b383436d3b972daa58e05a47e36d82,40,4,3,9708,,,0,"Update RequestSpec.pci_request for resize

Nova uses the RequestSpec.pci_request in the PciPassthroughFilter to
decide if the PCI devicesm, requested via the pci_alias in the flavor
extra_spec, are available on a potential target host. During resize the
new flavor might contain different pci_alias request than the old flavor
of the instance. In this case Nova should use the pci_alias from the new
flavor to scheduler the destination host of the resize. However this
logic was missing and Nova used the old pci_request value based on the
old flavor. This patch adds the missing logic.

Conflicts:
       nova/compute/api.py due to flavor was still named instance_type
       in wallaby
       nova/tests/functional/libvirt/test_pci_sriov_servers.py due to
       not having the original reproduction test in wallaby

Closes-Bug: #1983753
Closes-Bug: #1941005
Change-Id: I73c9ae27e9c42ee211a53bed3d849650b65f08be
(cherry picked from commit a93092e0d5c1483f9ad48276708ee35c54ce44fe)
(cherry picked from commit b6c7ee07ad2a6503b8aad0921cca70e61e60259d)
(cherry picked from commit 696d27a0e2ccf0916fc6bd3eabf73f2b007e7830)
",git fetch https://review.opendev.org/openstack/nova refs/changes/74/853274/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/regressions/test_bug_1983753.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",3,532e4959c1b5ce6584cab211fd9e4f73615e329e,bug/1941005, fake_spec = objects.RequestSpec( pci_requests=objects.InstancePCIRequests(requests=[])), fake_spec = objects.RequestSpec(),20,22
openstack%2Fnova~900832,openstack/nova,stable/wallaby,I4bf83d1642b62ab103716aff6dae7438646e2b31,Decorate only Flavor.get_* methods that execute queries,ABANDONED,2023-11-13 23:26:45.000000000,2024-03-05 19:04:06.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-11-13 23:26:45.000000000', 'files': ['nova/objects/flavor.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/640d2363832b42b3882d640dc168685e5a71fc9b', 'message': ""Decorate only Flavor.get_* methods that execute queries\n\nThe get_* methods on the Flavor object use a common helper method to\nbuild a query object to execute later.\n\nCurrently, the @api_db_api.context_manager.reader decorator which\nmanages the session is located on the helper method instead of on the\nmethods that actually execute the database queries. Part of the context\nmanager's job is to close the session after the query is executed.\nBecause the decorator is not on the methods that actually execute the\nqueries, those database connections are not being closed and it will\neventually lead to errors like:\n\n  sqlalchemy.exc.TimeoutError: QueuePool limit of size 5 overflow 50\n  reached, connection timed out, timeout 30.00 (Background on this\n  error at: https://sqlalche.me/e/14/3o7r)\n\nwhich means the connection pool size plus the overflow size has been\nreached and the pool will block for a fixed period of time before\ntiming out and raising this error.\n\nThis removes the @api_db_api.context_manager.reader decorator from the\nquery build helper method and adds it to the Flavor.get_* methods that\nexecute the database queries.\n\nConflicts:\n    nova/objects/flavor.py\n\nNOTE(melwitt): The conflicts are because change\nIa5304c552ce552ae3c5223a2bfb3a9cd543ec57c (db: Post reshuffle cleanup)\nis not in Wallaby.\n\nCloses-Bug: #2027755\n\nChange-Id: I4bf83d1642b62ab103716aff6dae7438646e2b31\n(cherry picked from commit 9ae6240c92e212b2fa96d5163f68ef1b30ee03b7)\n(cherry picked from commit 4f4f27be27cb202be6a8fb949ad21021a5cd735d)\n(cherry picked from commit 53e3afe3a6024be6ead35132230dc468dd808850)\n(cherry picked from commit 5f1f22c07a00021cacf97d74031c1033916f9b44)\n(cherry picked from commit 47f9606e00d78a7ef8fd5115eada1959b3773c75)\n""}]",0,900832,640d2363832b42b3882d640dc168685e5a71fc9b,4,1,1,4690,,,0,"Decorate only Flavor.get_* methods that execute queries

The get_* methods on the Flavor object use a common helper method to
build a query object to execute later.

Currently, the @api_db_api.context_manager.reader decorator which
manages the session is located on the helper method instead of on the
methods that actually execute the database queries. Part of the context
manager's job is to close the session after the query is executed.
Because the decorator is not on the methods that actually execute the
queries, those database connections are not being closed and it will
eventually lead to errors like:

  sqlalchemy.exc.TimeoutError: QueuePool limit of size 5 overflow 50
  reached, connection timed out, timeout 30.00 (Background on this
  error at: https://sqlalche.me/e/14/3o7r)

which means the connection pool size plus the overflow size has been
reached and the pool will block for a fixed period of time before
timing out and raising this error.

This removes the @api_db_api.context_manager.reader decorator from the
query build helper method and adds it to the Flavor.get_* methods that
execute the database queries.

Conflicts:
    nova/objects/flavor.py

NOTE(melwitt): The conflicts are because change
Ia5304c552ce552ae3c5223a2bfb3a9cd543ec57c (db: Post reshuffle cleanup)
is not in Wallaby.

Closes-Bug: #2027755

Change-Id: I4bf83d1642b62ab103716aff6dae7438646e2b31
(cherry picked from commit 9ae6240c92e212b2fa96d5163f68ef1b30ee03b7)
(cherry picked from commit 4f4f27be27cb202be6a8fb949ad21021a5cd735d)
(cherry picked from commit 53e3afe3a6024be6ead35132230dc468dd808850)
(cherry picked from commit 5f1f22c07a00021cacf97d74031c1033916f9b44)
(cherry picked from commit 47f9606e00d78a7ef8fd5115eada1959b3773c75)
",git fetch https://review.opendev.org/openstack/nova refs/changes/32/900832/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/objects/flavor.py'],1,640d2363832b42b3882d640dc168685e5a71fc9b,bug/2027755," def _flavor_get_query_from_db(context): # We don't use a database context decorator on this method because this # method is not executing a query, it's only building one. @db_api.api_context_manager.reader @db_api.api_context_manager.reader @db_api.api_context_manager.reader", @db_api.api_context_manager.reader def _flavor_get_query_from_db(context):,5,1
openstack%2Fnova~900838,openstack/nova,stable/wallaby,I24a269f9809063f864a4f0443d6724dfa8703d9d,Fix exception catch when volume mount fails,ABANDONED,2023-11-14 01:15:43.000000000,2024-03-05 19:04:02.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-11-14 01:15:43.000000000', 'files': ['nova/tests/unit/virt/libvirt/volume/test_mount.py', 'nova/virt/libvirt/volume/mount.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/ff3f29beac6d3cf3f3dddfd5b494340eac2d486f', 'message': 'Fix exception catch when volume mount fails\n\nWhen we call nova.privsep.fs.mount(), we are catching\nProcessExecutionError() (an instance of a class) and that is not allowed\nin python3.\n\nThis changes the except statement to catch ProcessExecutionError\n(class) instead.\n\nCloses-Bug: #1984736\n\nChange-Id: I24a269f9809063f864a4f0443d6724dfa8703d9d\n(cherry picked from commit f996674c36fe1a109853d88113e27b44a7a5cf45)\n(cherry picked from commit baa0b4ff87a044228438cc32c27d4424fa6bc0c4)\n(cherry picked from commit 70f8d05947c9fb0ad3b3022b33efe6e823115a56)\n(cherry picked from commit 8ca7fcb6d9e9202019e3f317d3ba0821b1612422)\n(cherry picked from commit 6a15fad96483f7907bcfa747e4b3a39a56ac1c4f)\n'}]",0,900838,ff3f29beac6d3cf3f3dddfd5b494340eac2d486f,4,1,1,4690,,,0,"Fix exception catch when volume mount fails

When we call nova.privsep.fs.mount(), we are catching
ProcessExecutionError() (an instance of a class) and that is not allowed
in python3.

This changes the except statement to catch ProcessExecutionError
(class) instead.

Closes-Bug: #1984736

Change-Id: I24a269f9809063f864a4f0443d6724dfa8703d9d
(cherry picked from commit f996674c36fe1a109853d88113e27b44a7a5cf45)
(cherry picked from commit baa0b4ff87a044228438cc32c27d4424fa6bc0c4)
(cherry picked from commit 70f8d05947c9fb0ad3b3022b33efe6e823115a56)
(cherry picked from commit 8ca7fcb6d9e9202019e3f317d3ba0821b1612422)
(cherry picked from commit 6a15fad96483f7907bcfa747e4b3a39a56ac1c4f)
",git fetch https://review.opendev.org/openstack/nova refs/changes/38/900838/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/libvirt/volume/test_mount.py', 'nova/virt/libvirt/volume/mount.py']",2,ff3f29beac6d3cf3f3dddfd5b494340eac2d486f,bug/1984736, except processutils.ProcessExecutionError:, except processutils.ProcessExecutionError():,27,1
openstack%2Fnova~900845,openstack/nova,stable/wallaby,I4d45f383b3c4794f8a114047455efb764f60f2a2,Improve logging at '_numa_cells_support_network_metadata',ABANDONED,2023-11-14 01:41:36.000000000,2024-03-05 19:03:58.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-11-14 01:41:36.000000000', 'files': ['nova/virt/hardware.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/9c7eb771333454561365587ebfcc179d3a202022', 'message': ""Improve logging at '_numa_cells_support_network_metadata'\n\nThis adds 'debug' level messages at the branches of the function that\nlead to a 'False' result. These branches are:\n\n  - Physnet found affinity on a NUMA cell outside the chosen ones\n  - Tunneled networks found affinity on a NUMA cell outside the\n    chosen ones\n\nPartial-Bug: #1751784\n\nChange-Id: I4d45f383b3c4794f8a114047455efb764f60f2a2\n(cherry picked from commit 1915a3122a1df1f0dbe5edbaf25919f8875733af)\n(cherry picked from commit 0d970bfa5a73ef20dcedce4336140850fd4ea363)\n(cherry picked from commit 43273631d8dec01f25c622b9ac93fcd78aed8dd5)\n(cherry picked from commit 4b6f880e24115b50a54bd10a5d0930efd4def978)\n(cherry picked from commit b15ef7926c7f1d09754ed210717bf45f964d338d)\n(cherry picked from commit 9f6b9397a39670fd9b3f6213cff1d835d83781d2)\n""}]",1,900845,9c7eb771333454561365587ebfcc179d3a202022,7,1,1,4690,,,0,"Improve logging at '_numa_cells_support_network_metadata'

This adds 'debug' level messages at the branches of the function that
lead to a 'False' result. These branches are:

  - Physnet found affinity on a NUMA cell outside the chosen ones
  - Tunneled networks found affinity on a NUMA cell outside the
    chosen ones

Partial-Bug: #1751784

Change-Id: I4d45f383b3c4794f8a114047455efb764f60f2a2
(cherry picked from commit 1915a3122a1df1f0dbe5edbaf25919f8875733af)
(cherry picked from commit 0d970bfa5a73ef20dcedce4336140850fd4ea363)
(cherry picked from commit 43273631d8dec01f25c622b9ac93fcd78aed8dd5)
(cherry picked from commit 4b6f880e24115b50a54bd10a5d0930efd4def978)
(cherry picked from commit b15ef7926c7f1d09754ed210717bf45f964d338d)
(cherry picked from commit 9f6b9397a39670fd9b3f6213cff1d835d83781d2)
",git fetch https://review.opendev.org/openstack/nova refs/changes/45/900845/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/virt/hardware.py'],1,9c7eb771333454561365587ebfcc179d3a202022,bug/1751784," removed_physnets = False removed_physnets = True if required_physnets and removed_physnets: LOG.debug('Not all requested physnets have affinity to one ' 'of the chosen host NUMA cells. Remaining physnets ' 'are: %(physnets)s.', {'physnets': required_physnets}) required_physnets_outside = required_physnets.intersection( host_cell.network_metadata.physnets) if required_physnets_outside: LOG.debug('One or more requested physnets require affinity to ' 'a NUMA cell outside of the chosen host cells. This ' 'host cell cannot satisfy network requests for ' 'these physnets: %(physnets)s', {'physnets': required_physnets_outside}) LOG.debug('Tunneled networks have no affinity to any of the chosen ' 'host NUMA cells.') LOG.debug('The host declares NUMA affinity for tunneled ' 'networks. The current instance requests a ' 'tunneled network but this host cell is out of ' 'the set declared to be local to the tunnel ' 'network endpoint. As such, this host cell cannot ' 'support the requested tunneled network.')", if required_physnets.intersection( host_cell.network_metadata.physnets):,25,2
openstack%2Fosc-placement~911273,openstack/osc-placement,unmaintained/victoria,Ib456977a0f6a5be2a804da2c868183ac85e155e5,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:48:20.000000000,2024-03-05 19:03:57.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:48:20.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/osc-placement/commit/2f5b3f56b3b78f8282acc8794a40112e1246015f', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: Ib456977a0f6a5be2a804da2c868183ac85e155e5\n'}]",0,911273,2f5b3f56b3b78f8282acc8794a40112e1246015f,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: Ib456977a0f6a5be2a804da2c868183ac85e155e5
",git fetch https://review.opendev.org/openstack/osc-placement refs/changes/73/911273/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,2f5b3f56b3b78f8282acc8794a40112e1246015f,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fnova~865336,openstack/nova,stable/wallaby,Iad5e70b43a65c076134e1874cb8e75d1ba214fde,Record SRIOV PF MAC in the binding profile,ABANDONED,2022-11-22 20:59:56.000000000,2024-03-05 19:03:54.000000000,,"[{'_account_id': 4393}, {'_account_id': 9708}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-11-22 20:59:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/11f3e0a23cfae48c36d254fca587fafae88d21b7', 'message': 'Record SRIOV PF MAC in the binding profile\n\nToday Nova updates the mac_address of a direct-physical port to reflect\nthe MAC address of the physical device the port is bound to. But this\ncan only be done before the port is bound. However during migration Nova\ndoes not update the MAC when the port is bound to a different physical\ndevice on the destination host.\n\nThis patch extends the libvirt virt driver to provide the MAC address of\nthe PF in the pci_info returned to the resource tracker. This\ninformation will be then persisted in the extra_info field of the\nPciDevice object.\n\nThen the port update logic during migration, resize, live\nmigration, evacuation and unshelve is also extended to record the MAC of\nphysical device in the port binding profile according to the device on\nthe destination host.\n\nThe related neutron change Ib0638f5db69cb92daf6932890cb89e83cf84f295\nuses this info from the binding profile to update the mac_address field\nof the port when the binding is activated.\n\nCloses-Bug: #1942329\n\nConflicts:\n    nova/network/neutron.py\n    nova/objects/pci_device.py\n    nova/tests/fixtures/libvirt.py\n    nova/tests/unit/network/test_neutron.py\n    nova/tests/unit/virt/libvirt/test_host.py\n    nova/virt/fake.py\n    nova/virt/libvirt/host.py\n\nMost of the conlficts are due to the lack of the vpd feature\nand I83a128a260acdd8bf78fede566af6881b8b82a9c\n\nChange-Id: Iad5e70b43a65c076134e1874cb8e75d1ba214fde\n(cherry picked from commit cd03bbc1c33e33872594cf002f0e7011ab8ea047)\n(cherry picked from commit 813377077bd0173bdf128823e46b5df7c0a575b9)\n(cherry picked from commit 7c53f241db38d76713b1c9d12f524ff0cee0f4b3)\n'}, {'number': 2, 'created': '2022-11-24 19:58:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/b8a1c1475ff9df9ab40e286b00249b6337a0a1ab', 'message': 'Record SRIOV PF MAC in the binding profile\n\nToday Nova updates the mac_address of a direct-physical port to reflect\nthe MAC address of the physical device the port is bound to. But this\ncan only be done before the port is bound. However during migration Nova\ndoes not update the MAC when the port is bound to a different physical\ndevice on the destination host.\n\nThis patch extends the libvirt virt driver to provide the MAC address of\nthe PF in the pci_info returned to the resource tracker. This\ninformation will be then persisted in the extra_info field of the\nPciDevice object.\n\nThen the port update logic during migration, resize, live\nmigration, evacuation and unshelve is also extended to record the MAC of\nphysical device in the port binding profile according to the device on\nthe destination host.\n\nThe related neutron change Ib0638f5db69cb92daf6932890cb89e83cf84f295\nuses this info from the binding profile to update the mac_address field\nof the port when the binding is activated.\n\nCloses-Bug: #1942329\n\nConflicts:\n    nova/network/neutron.py\n    nova/objects/pci_device.py\n    nova/tests/fixtures/libvirt.py\n    nova/tests/unit/network/test_neutron.py\n    nova/tests/unit/virt/libvirt/test_host.py\n    nova/virt/fake.py\n    nova/virt/libvirt/host.py\n\nMost of the conlficts are due to the lack of the vpd feature\nand I83a128a260acdd8bf78fede566af6881b8b82a9c\n\nChange-Id: Iad5e70b43a65c076134e1874cb8e75d1ba214fde\n(cherry picked from commit cd03bbc1c33e33872594cf002f0e7011ab8ea047)\n(cherry picked from commit 813377077bd0173bdf128823e46b5df7c0a575b9)\n(cherry picked from commit 7c53f241db38d76713b1c9d12f524ff0cee0f4b3)\n'}, {'number': 3, 'created': '2022-12-06 10:59:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/db8a31594c9154ab487fd2990e6d95a0d8c9a184', 'message': 'Record SRIOV PF MAC in the binding profile\n\nToday Nova updates the mac_address of a direct-physical port to reflect\nthe MAC address of the physical device the port is bound to. But this\ncan only be done before the port is bound. However during migration Nova\ndoes not update the MAC when the port is bound to a different physical\ndevice on the destination host.\n\nThis patch extends the libvirt virt driver to provide the MAC address of\nthe PF in the pci_info returned to the resource tracker. This\ninformation will be then persisted in the extra_info field of the\nPciDevice object.\n\nThen the port update logic during migration, resize, live\nmigration, evacuation and unshelve is also extended to record the MAC of\nphysical device in the port binding profile according to the device on\nthe destination host.\n\nThe related neutron change Ib0638f5db69cb92daf6932890cb89e83cf84f295\nuses this info from the binding profile to update the mac_address field\nof the port when the binding is activated.\n\nCloses-Bug: #1942329\n\nConflicts:\n    nova/network/neutron.py\n    nova/objects/pci_device.py\n    nova/tests/fixtures/libvirt.py\n    nova/tests/unit/network/test_neutron.py\n    nova/tests/unit/virt/libvirt/test_host.py\n    nova/virt/fake.py\n    nova/virt/libvirt/host.py\n\nMost of the conlficts are due to the lack of the vpd feature\nand I83a128a260acdd8bf78fede566af6881b8b82a9c\n\nthe addtional unit tests in test_neutron and test_compute_mgr\nare form the vpd feature but have been modified to drop assertions\nrelated to the vpd feature while keeping the assertions related\nto SRIOV PF MAC adress binding.\n\nChange-Id: Iad5e70b43a65c076134e1874cb8e75d1ba214fde\n(cherry picked from commit cd03bbc1c33e33872594cf002f0e7011ab8ea047)\n(cherry picked from commit 813377077bd0173bdf128823e46b5df7c0a575b9)\n(cherry picked from commit a340630c5c78e5f5856004d0a551dfa93df7f28d)\n'}, {'number': 4, 'created': '2023-10-11 13:03:14.000000000', 'files': ['nova/tests/unit/network/test_neutron.py', 'nova/virt/fake.py', 'nova/virt/libvirt/host.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/virt/libvirt/test_driver.py', 'nova/objects/pci_device.py', 'nova/tests/unit/virt/libvirt/test_host.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/network/neutron.py', 'nova/tests/functional/libvirt/base.py', 'nova/tests/unit/virt/libvirt/fakelibvirt.py', 'nova/compute/manager.py', 'nova/compute/resource_tracker.py', 'releasenotes/notes/bug-1942329-22b08fa4b322881d.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/434391b75c05adf292b752c07fb420816a92b0a9', 'message': 'Record SRIOV PF MAC in the binding profile\n\nToday Nova updates the mac_address of a direct-physical port to reflect\nthe MAC address of the physical device the port is bound to. But this\ncan only be done before the port is bound. However during migration Nova\ndoes not update the MAC when the port is bound to a different physical\ndevice on the destination host.\n\nThis patch extends the libvirt virt driver to provide the MAC address of\nthe PF in the pci_info returned to the resource tracker. This\ninformation will be then persisted in the extra_info field of the\nPciDevice object.\n\nThen the port update logic during migration, resize, live\nmigration, evacuation and unshelve is also extended to record the MAC of\nphysical device in the port binding profile according to the device on\nthe destination host.\n\nThe related neutron change Ib0638f5db69cb92daf6932890cb89e83cf84f295\nuses this info from the binding profile to update the mac_address field\nof the port when the binding is activated.\n\nCloses-Bug: #1942329\n\nChange-Id: Iad5e70b43a65c076134e1874cb8e75d1ba214fde\n(cherry picked from commit cd03bbc1c33e33872594cf002f0e7011ab8ea047)\n(cherry picked from commit 813377077bd0173bdf128823e46b5df7c0a575b9)\n(cherry picked from commit a340630c5c78e5f5856004d0a551dfa93df7f28d)\n'}]",14,865336,434391b75c05adf292b752c07fb420816a92b0a9,20,4,4,11604,,,0,"Record SRIOV PF MAC in the binding profile

Today Nova updates the mac_address of a direct-physical port to reflect
the MAC address of the physical device the port is bound to. But this
can only be done before the port is bound. However during migration Nova
does not update the MAC when the port is bound to a different physical
device on the destination host.

This patch extends the libvirt virt driver to provide the MAC address of
the PF in the pci_info returned to the resource tracker. This
information will be then persisted in the extra_info field of the
PciDevice object.

Then the port update logic during migration, resize, live
migration, evacuation and unshelve is also extended to record the MAC of
physical device in the port binding profile according to the device on
the destination host.

The related neutron change Ib0638f5db69cb92daf6932890cb89e83cf84f295
uses this info from the binding profile to update the mac_address field
of the port when the binding is activated.

Closes-Bug: #1942329

Change-Id: Iad5e70b43a65c076134e1874cb8e75d1ba214fde
(cherry picked from commit cd03bbc1c33e33872594cf002f0e7011ab8ea047)
(cherry picked from commit 813377077bd0173bdf128823e46b5df7c0a575b9)
(cherry picked from commit a340630c5c78e5f5856004d0a551dfa93df7f28d)
",git fetch https://review.opendev.org/openstack/nova refs/changes/36/865336/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/network/test_neutron.py', 'nova/virt/fake.py', 'nova/virt/libvirt/host.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/virt/libvirt/test_driver.py', 'nova/objects/pci_device.py', 'nova/tests/unit/virt/libvirt/test_host.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/network/neutron.py', 'nova/tests/functional/libvirt/base.py', 'nova/tests/unit/virt/libvirt/fakelibvirt.py', 'nova/compute/manager.py', 'nova/compute/resource_tracker.py', 'releasenotes/notes/bug-1942329-22b08fa4b322881d.yaml']",15,11f3e0a23cfae48c36d254fca587fafae88d21b7,bug/1970467,--- fixes: - | As a fix for `bug 1942329 <https://bugs.launchpad.net/neutron/+bug/1942329>`_ nova now updates the MAC address of the ``direct-physical`` ports during mova operations to reflect the MAC address of the physical device on the destination host. Those servers that were created before this fix need to be moved or the port needs to be detached and the re-attached to synchronize the MAC address. ,,926,148
openstack%2Fnova~866158,openstack/nova,stable/wallaby,Ifed0fa16053228990a6a8df8d4c666521db7e329,Handle mdev devices in libvirt 7.7+,ABANDONED,2022-11-30 13:08:45.000000000,2024-03-05 19:03:50.000000000,,"[{'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-11-30 13:08:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/7d0114e22ba1c4d377f2effb2d01b82d0d07f55a', 'message': ""Handle mdev devices in libvirt 7.7+\n\nLibvirt 7.7 changed the mdev device naming to include the parent PCI\ndevice when listing node devices. The domain, however, will still only\nsee the UUID and not see the parent PCI device. Changing the parsing to\nsimply drop the PCI identifier is not enough as the device cannot be\nfound when attempting to lookup the new ID.\n\nModify the Libvirt Driver's _get_mediated_device_information to tolerate\ndifferent formats of the mdev name. This first uses the legacy behavior\nby trying to lookup the device name that is passed in (typically\nmdev_<uuid> format) and if that is not found, iterates the list of mdev\nnode devices until the right UUID is found and selects that one.\n\nNote that the lookup of the mdev device by UUID are needed in order\nto keep the ability to recreate assigned mediated devices on a reboot of\nthe compute node.\n\nAdditionally, the libvirt utils parsing method mdev_name2uuid, has\nbeen updated to tolerate both mdev_<uuid> and mdev_<uuid>_<pciid>\nformats.\n\nCloses-Bug: 1951656\n\nChange-Id: Ifed0fa16053228990a6a8df8d4c666521db7e329\n(cherry picked from commit a28b907c4f0dbba6e141a8fbea807e6cb0438977)\n(cherry picked from commit 98d8c9eaa3c415cc234193e6a9115db887751363)\n(cherry picked from commit db8061a56095f364bee4760a58f4416cb36e026e)\n(cherry picked from commit 3f423dacd34edf9c8d628cc0acd0d2a1f3a211db)\n""}, {'number': 2, 'created': '2022-12-06 10:52:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/2dd459daf5de7f86366001cc4e9f25d5cfbdcf87', 'message': ""Handle mdev devices in libvirt 7.7+\n\nLibvirt 7.7 changed the mdev device naming to include the parent PCI\ndevice when listing node devices. The domain, however, will still only\nsee the UUID and not see the parent PCI device. Changing the parsing to\nsimply drop the PCI identifier is not enough as the device cannot be\nfound when attempting to lookup the new ID.\n\nModify the Libvirt Driver's _get_mediated_device_information to tolerate\ndifferent formats of the mdev name. This first uses the legacy behavior\nby trying to lookup the device name that is passed in (typically\nmdev_<uuid> format) and if that is not found, iterates the list of mdev\nnode devices until the right UUID is found and selects that one.\n\nNote that the lookup of the mdev device by UUID are needed in order\nto keep the ability to recreate assigned mediated devices on a reboot of\nthe compute node.\n\nAdditionally, the libvirt utils parsing method mdev_name2uuid, has\nbeen updated to tolerate both mdev_<uuid> and mdev_<uuid>_<pciid>\nformats.\n\nCloses-Bug: 1951656\n\nChange-Id: Ifed0fa16053228990a6a8df8d4c666521db7e329\n(cherry picked from commit a28b907c4f0dbba6e141a8fbea807e6cb0438977)\n(cherry picked from commit 98d8c9eaa3c415cc234193e6a9115db887751363)\n(cherry picked from commit db8061a56095f364bee4760a58f4416cb36e026e)\n(cherry picked from commit 3f423dacd34edf9c8d628cc0acd0d2a1f3a211db)\n""}, {'number': 3, 'created': '2022-12-06 10:59:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/1b0ab5b0a28a940c677ea1da4d3fd500675645ed', 'message': ""Handle mdev devices in libvirt 7.7+\n\nLibvirt 7.7 changed the mdev device naming to include the parent PCI\ndevice when listing node devices. The domain, however, will still only\nsee the UUID and not see the parent PCI device. Changing the parsing to\nsimply drop the PCI identifier is not enough as the device cannot be\nfound when attempting to lookup the new ID.\n\nModify the Libvirt Driver's _get_mediated_device_information to tolerate\ndifferent formats of the mdev name. This first uses the legacy behavior\nby trying to lookup the device name that is passed in (typically\nmdev_<uuid> format) and if that is not found, iterates the list of mdev\nnode devices until the right UUID is found and selects that one.\n\nNote that the lookup of the mdev device by UUID are needed in order\nto keep the ability to recreate assigned mediated devices on a reboot of\nthe compute node.\n\nAdditionally, the libvirt utils parsing method mdev_name2uuid, has\nbeen updated to tolerate both mdev_<uuid> and mdev_<uuid>_<pciid>\nformats.\n\nCloses-Bug: 1951656\n\nChange-Id: Ifed0fa16053228990a6a8df8d4c666521db7e329\n(cherry picked from commit a28b907c4f0dbba6e141a8fbea807e6cb0438977)\n(cherry picked from commit 98d8c9eaa3c415cc234193e6a9115db887751363)\n(cherry picked from commit db8061a56095f364bee4760a58f4416cb36e026e)\n(cherry picked from commit 3f423dacd34edf9c8d628cc0acd0d2a1f3a211db)\n""}, {'number': 4, 'created': '2022-12-06 13:15:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d56ee0d963010275e9c214e9e820179d3b0f4e1f', 'message': ""Handle mdev devices in libvirt 7.7+\n\nLibvirt 7.7 changed the mdev device naming to include the parent PCI\ndevice when listing node devices. The domain, however, will still only\nsee the UUID and not see the parent PCI device. Changing the parsing to\nsimply drop the PCI identifier is not enough as the device cannot be\nfound when attempting to lookup the new ID.\n\nModify the Libvirt Driver's _get_mediated_device_information to tolerate\ndifferent formats of the mdev name. This first uses the legacy behavior\nby trying to lookup the device name that is passed in (typically\nmdev_<uuid> format) and if that is not found, iterates the list of mdev\nnode devices until the right UUID is found and selects that one.\n\nNote that the lookup of the mdev device by UUID are needed in order\nto keep the ability to recreate assigned mediated devices on a reboot of\nthe compute node.\n\nAdditionally, the libvirt utils parsing method mdev_name2uuid, has\nbeen updated to tolerate both mdev_<uuid> and mdev_<uuid>_<pciid>\nformats.\n\nCloses-Bug: 1951656\n\nChange-Id: Ifed0fa16053228990a6a8df8d4c666521db7e329\n(cherry picked from commit a28b907c4f0dbba6e141a8fbea807e6cb0438977)\n(cherry picked from commit 98d8c9eaa3c415cc234193e6a9115db887751363)\n(cherry picked from commit db8061a56095f364bee4760a58f4416cb36e026e)\n(cherry picked from commit 3f423dacd34edf9c8d628cc0acd0d2a1f3a211db)\n""}, {'number': 5, 'created': '2022-12-06 14:12:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e3d472c0a215d9c294af553240e474ef3c8bc0bb', 'message': ""Handle mdev devices in libvirt 7.7+\n\nLibvirt 7.7 changed the mdev device naming to include the parent PCI\ndevice when listing node devices. The domain, however, will still only\nsee the UUID and not see the parent PCI device. Changing the parsing to\nsimply drop the PCI identifier is not enough as the device cannot be\nfound when attempting to lookup the new ID.\n\nModify the Libvirt Driver's _get_mediated_device_information to tolerate\ndifferent formats of the mdev name. This first uses the legacy behavior\nby trying to lookup the device name that is passed in (typically\nmdev_<uuid> format) and if that is not found, iterates the list of mdev\nnode devices until the right UUID is found and selects that one.\n\nNote that the lookup of the mdev device by UUID are needed in order\nto keep the ability to recreate assigned mediated devices on a reboot of\nthe compute node.\n\nAdditionally, the libvirt utils parsing method mdev_name2uuid, has\nbeen updated to tolerate both mdev_<uuid> and mdev_<uuid>_<pciid>\nformats.\n\nCloses-Bug: 1951656\n\nChange-Id: Ifed0fa16053228990a6a8df8d4c666521db7e329\n(cherry picked from commit a28b907c4f0dbba6e141a8fbea807e6cb0438977)\n(cherry picked from commit 98d8c9eaa3c415cc234193e6a9115db887751363)\n(cherry picked from commit db8061a56095f364bee4760a58f4416cb36e026e)\n(cherry picked from commit 3f423dacd34edf9c8d628cc0acd0d2a1f3a211db)\n""}, {'number': 6, 'created': '2022-12-06 16:20:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/1b9789c5e69c7e1b8939d199f6023786efda9d26', 'message': ""Handle mdev devices in libvirt 7.7+\n\nLibvirt 7.7 changed the mdev device naming to include the parent PCI\ndevice when listing node devices. The domain, however, will still only\nsee the UUID and not see the parent PCI device. Changing the parsing to\nsimply drop the PCI identifier is not enough as the device cannot be\nfound when attempting to lookup the new ID.\n\nModify the Libvirt Driver's _get_mediated_device_information to tolerate\ndifferent formats of the mdev name. This first uses the legacy behavior\nby trying to lookup the device name that is passed in (typically\nmdev_<uuid> format) and if that is not found, iterates the list of mdev\nnode devices until the right UUID is found and selects that one.\n\nNote that the lookup of the mdev device by UUID are needed in order\nto keep the ability to recreate assigned mediated devices on a reboot of\nthe compute node.\n\nAdditionally, the libvirt utils parsing method mdev_name2uuid, has\nbeen updated to tolerate both mdev_<uuid> and mdev_<uuid>_<pciid>\nformats.\n\nCloses-Bug: 1951656\n\nChange-Id: Ifed0fa16053228990a6a8df8d4c666521db7e329\n(cherry picked from commit a28b907c4f0dbba6e141a8fbea807e6cb0438977)\n(cherry picked from commit 98d8c9eaa3c415cc234193e6a9115db887751363)\n(cherry picked from commit db8061a56095f364bee4760a58f4416cb36e026e)\n(cherry picked from commit 3f423dacd34edf9c8d628cc0acd0d2a1f3a211db)\n""}, {'number': 7, 'created': '2023-10-11 12:01:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/79af1a1fc16576e2a8ae29eb76197133c6a42dc1', 'message': ""Handle mdev devices in libvirt 7.7+\n\nLibvirt 7.7 changed the mdev device naming to include the parent PCI\ndevice when listing node devices. The domain, however, will still only\nsee the UUID and not see the parent PCI device. Changing the parsing to\nsimply drop the PCI identifier is not enough as the device cannot be\nfound when attempting to lookup the new ID.\n\nModify the Libvirt Driver's _get_mediated_device_information to tolerate\ndifferent formats of the mdev name. This first uses the legacy behavior\nby trying to lookup the device name that is passed in (typically\nmdev_<uuid> format) and if that is not found, iterates the list of mdev\nnode devices until the right UUID is found and selects that one.\n\nNote that the lookup of the mdev device by UUID are needed in order\nto keep the ability to recreate assigned mediated devices on a reboot of\nthe compute node.\n\nAdditionally, the libvirt utils parsing method mdev_name2uuid, has\nbeen updated to tolerate both mdev_<uuid> and mdev_<uuid>_<pciid>\nformats.\n\nCloses-Bug: 1951656\n\nChange-Id: Ifed0fa16053228990a6a8df8d4c666521db7e329\n(cherry picked from commit a28b907c4f0dbba6e141a8fbea807e6cb0438977)\n(cherry picked from commit 98d8c9eaa3c415cc234193e6a9115db887751363)\n(cherry picked from commit db8061a56095f364bee4760a58f4416cb36e026e)\n(cherry picked from commit 3f423dacd34edf9c8d628cc0acd0d2a1f3a211db)\n""}, {'number': 8, 'created': '2023-10-11 13:03:14.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1951656.py', 'nova/virt/libvirt/driver.py', 'nova/virt/libvirt/host.py', 'nova/virt/libvirt/config.py', 'nova/tests/unit/virt/libvirt/test_config.py', 'nova/virt/libvirt/utils.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/4a0581ab4468cf19196bcd2081c7c02df62b9116', 'message': ""Handle mdev devices in libvirt 7.7+\n\nLibvirt 7.7 changed the mdev device naming to include the parent PCI\ndevice when listing node devices. The domain, however, will still only\nsee the UUID and not see the parent PCI device. Changing the parsing to\nsimply drop the PCI identifier is not enough as the device cannot be\nfound when attempting to lookup the new ID.\n\nModify the Libvirt Driver's _get_mediated_device_information to tolerate\ndifferent formats of the mdev name. This first uses the legacy behavior\nby trying to lookup the device name that is passed in (typically\nmdev_<uuid> format) and if that is not found, iterates the list of mdev\nnode devices until the right UUID is found and selects that one.\n\nNote that the lookup of the mdev device by UUID are needed in order\nto keep the ability to recreate assigned mediated devices on a reboot of\nthe compute node.\n\nAdditionally, the libvirt utils parsing method mdev_name2uuid, has\nbeen updated to tolerate both mdev_<uuid> and mdev_<uuid>_<pciid>\nformats.\n\nCloses-Bug: 1951656\n\nChange-Id: Ifed0fa16053228990a6a8df8d4c666521db7e329\n(cherry picked from commit a28b907c4f0dbba6e141a8fbea807e6cb0438977)\n(cherry picked from commit 98d8c9eaa3c415cc234193e6a9115db887751363)\n(cherry picked from commit db8061a56095f364bee4760a58f4416cb36e026e)\n(cherry picked from commit 3f423dacd34edf9c8d628cc0acd0d2a1f3a211db)\n""}]",2,866158,4a0581ab4468cf19196bcd2081c7c02df62b9116,23,2,8,7166,,,0,"Handle mdev devices in libvirt 7.7+

Libvirt 7.7 changed the mdev device naming to include the parent PCI
device when listing node devices. The domain, however, will still only
see the UUID and not see the parent PCI device. Changing the parsing to
simply drop the PCI identifier is not enough as the device cannot be
found when attempting to lookup the new ID.

Modify the Libvirt Driver's _get_mediated_device_information to tolerate
different formats of the mdev name. This first uses the legacy behavior
by trying to lookup the device name that is passed in (typically
mdev_<uuid> format) and if that is not found, iterates the list of mdev
node devices until the right UUID is found and selects that one.

Note that the lookup of the mdev device by UUID are needed in order
to keep the ability to recreate assigned mediated devices on a reboot of
the compute node.

Additionally, the libvirt utils parsing method mdev_name2uuid, has
been updated to tolerate both mdev_<uuid> and mdev_<uuid>_<pciid>
formats.

Closes-Bug: 1951656

Change-Id: Ifed0fa16053228990a6a8df8d4c666521db7e329
(cherry picked from commit a28b907c4f0dbba6e141a8fbea807e6cb0438977)
(cherry picked from commit 98d8c9eaa3c415cc234193e6a9115db887751363)
(cherry picked from commit db8061a56095f364bee4760a58f4416cb36e026e)
(cherry picked from commit 3f423dacd34edf9c8d628cc0acd0d2a1f3a211db)
",git fetch https://review.opendev.org/openstack/nova refs/changes/58/866158/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/regressions/test_bug_1951656.py', 'nova/virt/libvirt/driver.py', 'nova/virt/libvirt/host.py', 'nova/virt/libvirt/config.py', 'nova/tests/unit/virt/libvirt/test_config.py', 'nova/virt/libvirt/utils.py']",6,7d0114e22ba1c4d377f2effb2d01b82d0d07f55a,bug/1970467," """"""Convert an mdev name (of the form mdev_<uuid_with_underscores> or mdev_<uuid_with_underscores>_<pciaddress>) to a uuid (of the form 8-4-4-4-12). :param mdev_name: the name of the mdev to parse the UUID from :returns: string containing the uuid mdev_uuid = mdev_name[5:].replace('_', '-') # Unconditionnally remove the PCI address from the name mdev_uuid = mdev_uuid[:36] return str(uuid.UUID(mdev_uuid)) def mdev_uuid2name(mdev_uuid: str, parent: str = None) -> str: """"""Convert an mdev uuid (of the form 8-4-4-4-12) and optionally its parent device to a name (of the form mdev_<uuid_with_underscores>[_<pciid>]). :param mdev_uuid: the uuid of the mediated device :param parent: the parent device id for the mediated device :returns: name of the mdev to reference in libvirt name = ""mdev_"" + mdev_uuid.replace('-', '_') if parent and parent.startswith('pci_'): name = name + parent[4:] return name"," """"""Convert an mdev name (of the form mdev_<uuid_with_underscores>) to a uuid (of the form 8-4-4-4-12). return str(uuid.UUID(mdev_name[5:].replace('_', '-'))) def mdev_uuid2name(mdev_uuid: str) -> str: """"""Convert an mdev uuid (of the form 8-4-4-4-12) to a name (of the form mdev_<uuid_with_underscores>). return ""mdev_"" + mdev_uuid.replace('-', '_')",96,26
openstack%2Fnova~904082,openstack/nova,stable/wallaby,I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7,Fixed an error when caching multiple images in aggregate,ABANDONED,2023-12-20 07:45:33.000000000,2024-03-05 19:03:47.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-12-20 07:45:33.000000000', 'files': ['nova/tests/unit/api/openstack/compute/test_aggregates.py', 'nova/api/openstack/compute/aggregates.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/8902eee0fa95b75d79c952cd041a19d14eee0731', 'message': 'Fixed an error when caching multiple images in aggregate\n\nBecause in the process of judging whether the image id is Duplicate,there is only deduplication without sorting, so no duplicate image error is judged as duplicate and an error ""Duplicate images in request"" is reported.\n\nNow it is changed to sort after deduplication and then compare.\n\nTwo unit test cases were added to verify the fix\n\nRelated-Bug: #2034702\nChange-Id: I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7\n(cherry picked from commit aa500fbb31d2f7129c048460e57a3dff229cabc8)\n'}]",0,904082,8902eee0fa95b75d79c952cd041a19d14eee0731,4,1,1,36115,,,0,"Fixed an error when caching multiple images in aggregate

Because in the process of judging whether the image id is Duplicate,there is only deduplication without sorting, so no duplicate image error is judged as duplicate and an error ""Duplicate images in request"" is reported.

Now it is changed to sort after deduplication and then compare.

Two unit test cases were added to verify the fix

Related-Bug: #2034702
Change-Id: I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7
(cherry picked from commit aa500fbb31d2f7129c048460e57a3dff229cabc8)
",git fetch https://review.opendev.org/openstack/nova refs/changes/82/904082/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/api/openstack/compute/test_aggregates.py', 'nova/api/openstack/compute/aggregates.py']",2,8902eee0fa95b75d79c952cd041a19d14eee0731,bug/2034702-stable/2023.2-stable/2023.1-stable/zed-stable/yoga-stable/xena-stable/wallaby, if sorted(image_ids) != sorted(list(set(image_ids))):, if image_ids != list(set(image_ids)):,26,1
openstack%2Fnova~888164,openstack/nova,stable/wallaby,I093de2839c1bb7c949a0812e07b63de4cc5ed167,Add debug logging when Instance raises OrphanedObjectError,ABANDONED,2023-07-11 22:56:41.000000000,2024-03-05 19:03:43.000000000,,"[{'_account_id': 9708}, {'_account_id': 17685}, {'_account_id': 20733}, {'_account_id': 22348}, {'_account_id': 34860}]","[{'number': 1, 'created': '2023-07-11 22:56:41.000000000', 'files': ['nova/objects/instance.py', 'nova/tests/unit/objects/test_instance.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/b3e0cfa413bd2be08fd332ccd32114adbc719b88', 'message': 'Add debug logging when Instance raises OrphanedObjectError\n\nThis logging would be helpful in debugging issues when\nOrphanedObjectError is raised by an instance. Currently, there is\nnot a way to identify which instance is attempting to lazy-load a\nfield while orphaned. Being able to locate the instance in the\ndatabase could also help with recovery/cleanup when a problematic\nrecord is disrupting operation of a deployment.\n\nChange-Id: I093de2839c1bb7c949a0812e07b63de4cc5ed167\n(cherry picked from commit e0fbb6fc06d3b08b938af2e36b11f04c57fe6954)\n(cherry picked from commit f32deaa617286e4b0dc2d01585ccb5ac821a571c)\n(cherry picked from commit 9e8456297681ad21680acd35718e3cb97f8458f2)\n(cherry picked from commit 8aa6723fa4355c9e609ab449c28ea3cbe356c839)\n(cherry picked from commit cc75f91aac22199419cc64959cf86e3d41ac5b20)\n'}]",11,888164,b3e0cfa413bd2be08fd332ccd32114adbc719b88,47,5,1,4690,,,0,"Add debug logging when Instance raises OrphanedObjectError

This logging would be helpful in debugging issues when
OrphanedObjectError is raised by an instance. Currently, there is
not a way to identify which instance is attempting to lazy-load a
field while orphaned. Being able to locate the instance in the
database could also help with recovery/cleanup when a problematic
record is disrupting operation of a deployment.

Change-Id: I093de2839c1bb7c949a0812e07b63de4cc5ed167
(cherry picked from commit e0fbb6fc06d3b08b938af2e36b11f04c57fe6954)
(cherry picked from commit f32deaa617286e4b0dc2d01585ccb5ac821a571c)
(cherry picked from commit 9e8456297681ad21680acd35718e3cb97f8458f2)
(cherry picked from commit 8aa6723fa4355c9e609ab449c28ea3cbe356c839)
(cherry picked from commit cc75f91aac22199419cc64959cf86e3d41ac5b20)
",git fetch https://review.opendev.org/openstack/nova refs/changes/64/888164/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/instance.py', 'nova/tests/unit/objects/test_instance.py']",2,b3e0cfa413bd2be08fd332ccd32114adbc719b88,orphaned-instance-uuid," @mock.patch('nova.objects.instance.LOG.debug') def test_obj_load_attr_log(self, mock_log_debug): # Instance with no UUID should not log. instance = objects.Instance() self.assertRaises( exception.OrphanedObjectError, instance.obj_load_attr, 'foo') mock_log_debug.assert_not_called() # Instance with UUID should log. instance = objects.Instance( uuid='127a0d59-b88c-422b-b9a1-2dc7cc51fb9a') self.assertRaises( exception.OrphanedObjectError, instance.obj_load_attr, 'foo') msg = ""Lazy-load of '%s' attempted by orphaned instance"" mock_log_debug.assert_called_once_with(msg, 'foo', instance=instance) ",,20,0
openstack%2Fnova~875346,openstack/nova,stable/wallaby,Ia738a0972b050f549f446c85171d3f33e60ada4f,Handle InstanceInvalidState exception,ABANDONED,2023-02-27 12:30:10.000000000,2024-03-05 19:03:39.000000000,,"[{'_account_id': 7166}, {'_account_id': 8864}, {'_account_id': 9708}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-02-27 12:30:10.000000000', 'files': ['nova/api/openstack/compute/remote_consoles.py', 'nova/tests/unit/api/openstack/compute/test_remote_consoles.py', 'nova/tests/functional/api_sample_tests/test_remote_consoles.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/1c809f744ea7cde185bbd86041cb58a730be65b0', 'message': ""Handle InstanceInvalidState exception\n\nWhen instance task state is 'deleting' or 'migrating', then\nget_vnc_console throws 500 error, as InstanceInvalidState\nexception is not handled there.\n\nThis change handles InstanceInvalidState in api layer in\nget_vnc_console call.\n\nCloses-Bug: #1968618\nChange-Id: Ia738a0972b050f549f446c85171d3f33e60ada4f\n(cherry picked from commit ec40d5aee34e9428e2a19231fc3df4d23d75b779)\n(cherry picked from commit 71855163a944e437f9c48a5765f683b55a28c720)\n(cherry picked from commit 286aadf289ef1b001ba7816e20b8cd53ba7a8618)\n(cherry picked from commit bb696a3274f7891dc7def0a33ef9528f6df7b085)\n""}]",2,875346,1c809f744ea7cde185bbd86041cb58a730be65b0,15,5,1,20733,,,0,"Handle InstanceInvalidState exception

When instance task state is 'deleting' or 'migrating', then
get_vnc_console throws 500 error, as InstanceInvalidState
exception is not handled there.

This change handles InstanceInvalidState in api layer in
get_vnc_console call.

Closes-Bug: #1968618
Change-Id: Ia738a0972b050f549f446c85171d3f33e60ada4f
(cherry picked from commit ec40d5aee34e9428e2a19231fc3df4d23d75b779)
(cherry picked from commit 71855163a944e437f9c48a5765f683b55a28c720)
(cherry picked from commit 286aadf289ef1b001ba7816e20b8cd53ba7a8618)
(cherry picked from commit bb696a3274f7891dc7def0a33ef9528f6df7b085)
",git fetch https://review.opendev.org/openstack/nova refs/changes/46/875346/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/api/openstack/compute/remote_consoles.py', 'nova/tests/unit/api/openstack/compute/test_remote_consoles.py', 'nova/tests/functional/api_sample_tests/test_remote_consoles.py']",3,1c809f744ea7cde185bbd86041cb58a730be65b0,lp_1968618,"from unittest import mock from nova.compute import api as compute from nova import exception @mock.patch.object(compute.API, 'get_vnc_console') def test_get_vnc_console_instance_invalid_state(self, mock_get_vnc_console): uuid = self._post_server() def fake_get_vnc_console(*args, **kwargs): raise exception.InstanceInvalidState( attr='fake_attr', state='fake_state', method='fake_method', instance_uuid=uuid) mock_get_vnc_console.side_effect = fake_get_vnc_console response = self._do_post('servers/%s/action' % uuid, 'get-vnc-console-post-req', {'action': 'os-getVNCConsole'}) self.assertEqual(409, response.status_code) ",,35,0
openstack%2Fnova~875344,openstack/nova,stable/wallaby,Id4c8c5f3b32985ac7d3d7c833b82e0876f7367c1,Fix rescue volume-based instance,ABANDONED,2023-02-27 12:27:53.000000000,2024-03-05 19:03:36.000000000,,"[{'_account_id': 4690}, {'_account_id': 8864}, {'_account_id': 9708}, {'_account_id': 11604}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-02-27 12:27:53.000000000', 'files': ['releasenotes/notes/rescue-volume-based-instance-c6e3fba236d90be7.yaml', 'nova/tests/functional/test_server_rescue.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/99164cb1401bcf29d0e00263bc8d09ec5291468e', 'message': 'Fix rescue volume-based instance\n\nAs of now, when attempting to rescue a volume-based instance\nusing an image without the hw_rescue_device and/or hw_rescue_bus\nproperties set, the rescue api call fails (as non-stable rescue\nfor volume-based instances are not supported) leaving the instance\nin error state.\n\nThis change checks for hw_rescue_device/hw_rescue_bus image\nproperties before attempting to rescue and if the property\nis not set, then fail with proper error message, without changing\ninstance state.\n\nRelated-Bug: #1978958\nCloses-Bug: #1926601\nChange-Id: Id4c8c5f3b32985ac7d3d7c833b82e0876f7367c1\n(cherry picked from commit 6eed55bf55469f4ceaa7d4d4eb1be635e14bc73b)\n(cherry picked from commit d00a848a735f98b028f5930798ee69ef205c8e2e)\n(cherry picked from commit 4073aa51f79be54e2e6e8143666a7c1f9a00e03d)\n(cherry picked from commit c977027b1933e408c58508e883f6a799ffacc4cc)\n'}]",6,875344,99164cb1401bcf29d0e00263bc8d09ec5291468e,26,6,1,20733,,,0,"Fix rescue volume-based instance

As of now, when attempting to rescue a volume-based instance
using an image without the hw_rescue_device and/or hw_rescue_bus
properties set, the rescue api call fails (as non-stable rescue
for volume-based instances are not supported) leaving the instance
in error state.

This change checks for hw_rescue_device/hw_rescue_bus image
properties before attempting to rescue and if the property
is not set, then fail with proper error message, without changing
instance state.

Related-Bug: #1978958
Closes-Bug: #1926601
Change-Id: Id4c8c5f3b32985ac7d3d7c833b82e0876f7367c1
(cherry picked from commit 6eed55bf55469f4ceaa7d4d4eb1be635e14bc73b)
(cherry picked from commit d00a848a735f98b028f5930798ee69ef205c8e2e)
(cherry picked from commit 4073aa51f79be54e2e6e8143666a7c1f9a00e03d)
(cherry picked from commit c977027b1933e408c58508e883f6a799ffacc4cc)
",git fetch https://review.opendev.org/openstack/nova refs/changes/44/875344/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/rescue-volume-based-instance-c6e3fba236d90be7.yaml', 'nova/tests/functional/test_server_rescue.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",4,99164cb1401bcf29d0e00263bc8d09ec5291468e,lp_1978958," rescue_image_meta_obj = image_meta_obj.ImageMeta.from_dict({ 'properties': {'hw_rescue_device': 'disk', 'hw_rescue_bus': 'scsi'} }) @mock.patch('nova.objects.instance.Instance.image_meta') mock_get_cn, mock_image_meta): instance.image_meta = image_meta_obj.ImageMeta.from_dict({ 'properties': {'hw_rescue_device': 'disk', 'hw_rescue_bus': 'scsi'} }) @mock.patch('nova.objects.image_meta.ImageMeta.from_image_ref') @mock.patch('nova.objects.compute_node.ComputeNode' '.get_by_host_and_nodename') @mock.patch('nova.compute.utils.is_volume_backed_instance', return_value=True) @mock.patch('nova.objects.block_device.BlockDeviceMappingList' '.get_by_instance_uuid') def test_rescue_bfv_with_required_image_properties( self, mock_get_bdms, mock_is_volume_backed, mock_get_cn, mock_image_meta_obj_from_ref): instance = self._create_instance_obj() bdms = objects.BlockDeviceMappingList(objects=[ objects.BlockDeviceMapping( boot_index=0, image_id=uuids.image_id, source_type='image', destination_type='volume', volume_type=None, snapshot_id=None, volume_id=uuids.volume_id, volume_size=None)]) rescue_image_meta_obj = image_meta_obj.ImageMeta.from_dict({ 'properties': {'hw_rescue_device': 'disk', 'hw_rescue_bus': 'scsi'} }) with test.nested( mock.patch.object(self.compute_api.placementclient, 'get_provider_traits'), mock.patch.object(self.compute_api.volume_api, 'get'), mock.patch.object(self.compute_api.volume_api, 'check_attached'), mock.patch.object(instance, 'save'), mock.patch.object(self.compute_api, '_record_action_start'), mock.patch.object(self.compute_api.compute_rpcapi, 'rescue_instance') ) as ( mock_get_traits, mock_get_volume, mock_check_attached, mock_instance_save, mock_record_start, mock_rpcapi_rescue ): # Mock out the returned compute node, image_meta, bdms and volume mock_image_meta_obj_from_ref.return_value = rescue_image_meta_obj mock_get_bdms.return_value = bdms mock_get_volume.return_value = mock.sentinel.volume mock_get_cn.return_value = mock.Mock(uuid=uuids.cn) # Ensure the required trait is returned, allowing BFV rescue mock_trait_info = mock.Mock(traits=[ot.COMPUTE_RESCUE_BFV]) mock_get_traits.return_value = mock_trait_info # Try to rescue the instance self.compute_api.rescue(self.context, instance, rescue_image_ref=uuids.rescue_image_id, allow_bfv_rescue=True) # Assert all of the calls made in the compute API mock_get_bdms.assert_called_once_with(self.context, instance.uuid) mock_get_volume.assert_called_once_with( self.context, uuids.volume_id) mock_check_attached.assert_called_once_with( self.context, mock.sentinel.volume) mock_is_volume_backed.assert_called_once_with( self.context, instance, bdms) mock_get_cn.assert_called_once_with( self.context, instance.host, instance.node) mock_get_traits.assert_called_once_with(self.context, uuids.cn) mock_instance_save.assert_called_once_with( expected_task_state=[None]) mock_record_start.assert_called_once_with( self.context, instance, instance_actions.RESCUE) mock_rpcapi_rescue.assert_called_once_with( self.context, instance=instance, rescue_password=None, rescue_image_ref=uuids.rescue_image_id, clean_shutdown=True) # Assert that the instance task state as set in the compute API self.assertEqual(task_states.RESCUING, instance.task_state) @mock.patch('nova.objects.image_meta.ImageMeta.from_image_ref') @mock.patch('nova.compute.utils.is_volume_backed_instance', return_value=True) @mock.patch('nova.objects.block_device.BlockDeviceMappingList' '.get_by_instance_uuid') def test_rescue_bfv_without_required_image_properties( self, mock_get_bdms, mock_is_volume_backed, mock_image_meta_obj_from_ref): instance = self._create_instance_obj() bdms = objects.BlockDeviceMappingList(objects=[ objects.BlockDeviceMapping( boot_index=0, image_id=uuids.image_id, source_type='image', destination_type='volume', volume_type=None, snapshot_id=None, volume_id=uuids.volume_id, volume_size=None)]) rescue_image_meta_obj = image_meta_obj.ImageMeta.from_dict({ 'properties': {} }) with test.nested( mock.patch.object(self.compute_api.volume_api, 'get'), mock.patch.object(self.compute_api.volume_api, 'check_attached'), ) as ( mock_get_volume, mock_check_attached ): # Mock out the returned bdms, volume and image_meta mock_get_bdms.return_value = bdms mock_get_volume.return_value = mock.sentinel.volume mock_image_meta_obj_from_ref.return_value = rescue_image_meta_obj # Assert that any attempt to rescue a bfv instance on a compute # node that does not report the COMPUTE_RESCUE_BFV trait fails and # raises InstanceNotRescuable self.assertRaises(exception.InstanceNotRescuable, self.compute_api.rescue, self.context, instance, rescue_image_ref=None, allow_bfv_rescue=True) # Assert the calls made in the compute API prior to the failure mock_get_bdms.assert_called_once_with(self.context, instance.uuid) mock_get_volume.assert_called_once_with( self.context, uuids.volume_id) mock_check_attached.assert_called_once_with( self.context, mock.sentinel.volume) mock_is_volume_backed.assert_called_once_with( self.context, instance, bdms) ", rescue_image_meta_obj = image_meta_obj.ImageMeta.from_dict({}) mock_get_cn):,220,11
openstack%2Ftacker~911234,openstack/tacker,unmaintained/victoria,I68703a89b1223768945ec000701ed6cfc4ca5da4,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:37:08.000000000,2024-03-05 19:03:20.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:37:08.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/tacker/commit/e15d40aaa5aaf9b357bd5b53c8ced3c61b7cf44b', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I68703a89b1223768945ec000701ed6cfc4ca5da4\n'}]",0,911234,e15d40aaa5aaf9b357bd5b53c8ced3c61b7cf44b,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I68703a89b1223768945ec000701ed6cfc4ca5da4
",git fetch https://review.opendev.org/openstack/tacker refs/changes/34/911234/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,e15d40aaa5aaf9b357bd5b53c8ced3c61b7cf44b,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fdesignate~860964,openstack/designate,stable/wallaby,If7aa4f2172b07a3538f3aea3a7df5a291d8c93b1,Restrict virtualenv to avoid suds-jurko dep issue,ABANDONED,2022-10-11 16:26:43.000000000,2024-03-05 19:03:18.000000000,,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-10-11 16:26:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/designate/commit/e128fd7622dcc09f7de709818c7f6dd19cc29660', 'message': 'Restrict virtualenv to avoid suds-jurko dep issue\n\nSince an unconstrained virtualenv can cause breakage in CI systems\nusing much later versions of packages, constrain it in tox.ini.\nThis resolves an issue for stable/wallaby that was later resolved in\nyoga [1] without requiring an invasive backport.\n\n[1] https://review.opendev.org/c/openstack/designate/+/813380\n\nChange-Id: If7aa4f2172b07a3538f3aea3a7df5a291d8c93b1\n'}, {'number': 2, 'created': '2022-10-11 16:33:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/designate/commit/469fb33a415ec895e72a3343cbf3255db401d14f', 'message': 'Restrict virtualenv to avoid suds-jurko dep issue\n\nSince an unconstrained virtualenv can cause breakage in CI systems\nusing much later versions of packages, constrain it in tox.ini.\nThis resolves an issue for stable/wallaby that was later resolved in\nyoga [1] without requiring an invasive backport.\n\nThis also implies a bump of tox version to one released in 2018.\n\n[1] https://review.opendev.org/c/openstack/designate/+/813380\n\nChange-Id: If7aa4f2172b07a3538f3aea3a7df5a291d8c93b1\n'}, {'number': 3, 'created': '2022-10-11 18:25:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/designate/commit/ea8c75fe28fe810365edb85181dc3f616869e6ea', 'message': 'Restrict virtualenv to avoid suds-jurko dep issue\n\nSince an unconstrained virtualenv can cause breakage in downstream\nCI systems using much later versions of packages, constrain it in\ntox.ini.  This resolves an issue for stable/wallaby that was later\nresolved in yoga [1] without requiring an invasive backport.\n\nThis also implies a bump of tox version to one released in 2018.\n\n[1] https://review.opendev.org/c/openstack/designate/+/813380\n\nChange-Id: If7aa4f2172b07a3538f3aea3a7df5a291d8c93b1\n'}, {'number': 4, 'created': '2022-10-13 16:05:02.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/designate/commit/2559524b710c6c85afc7915765c8eaff04b3392b', 'message': 'Restrict virtualenv to avoid suds-jurko dep issue\n\nSince an unconstrained virtualenv can cause breakage in downstream\nCI systems using much later versions of packages, constrain it in\ntox.ini.  This resolves an issue for stable/wallaby that was later\nresolved in yoga [1] without requiring an invasive backport.\n\nThis also implies a bump of tox version to one released in 2018.\n\n[1] https://review.opendev.org/c/openstack/designate/+/813380\n\nChange-Id: If7aa4f2172b07a3538f3aea3a7df5a291d8c93b1\nCloses-Bug: #1992825\n'}]",14,860964,2559524b710c6c85afc7915765c8eaff04b3392b,23,2,4,13995,,,0,"Restrict virtualenv to avoid suds-jurko dep issue

Since an unconstrained virtualenv can cause breakage in downstream
CI systems using much later versions of packages, constrain it in
tox.ini.  This resolves an issue for stable/wallaby that was later
resolved in yoga [1] without requiring an invasive backport.

This also implies a bump of tox version to one released in 2018.

[1] https://review.opendev.org/c/openstack/designate/+/813380

Change-Id: If7aa4f2172b07a3538f3aea3a7df5a291d8c93b1
Closes-Bug: #1992825
",git fetch https://review.opendev.org/openstack/designate refs/changes/64/860964/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,e128fd7622dcc09f7de709818c7f6dd19cc29660,,requires = virtualenv<20.8,,1,0
openstack%2Fos-vif~911271,openstack/os-vif,unmaintained/victoria,I4a660de199392ad0517d4f56c63785b883e3646d,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:48:08.000000000,2024-03-05 19:02:41.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:48:08.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/os-vif/commit/fe95c82843e7cad74114df576f360b6a0302863a', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I4a660de199392ad0517d4f56c63785b883e3646d\n'}]",0,911271,fe95c82843e7cad74114df576f360b6a0302863a,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I4a660de199392ad0517d4f56c63785b883e3646d
",git fetch https://review.opendev.org/openstack/os-vif refs/changes/71/911271/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,fe95c82843e7cad74114df576f360b6a0302863a,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fzaqar~892308,openstack/zaqar,stable/victoria,I16436aa19da2cf53951c9ad27bca14033194651a,Use processutils to fix TypeError in subprocess,ABANDONED,2023-08-22 13:12:42.000000000,2024-03-05 19:01:19.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-08-22 13:12:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/zaqar/commit/5d0f9a91b9aebf8fa812ac9c53a0c50e6dedc1d7', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}, {'number': 2, 'created': '2023-08-22 13:14:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/zaqar/commit/8d2f91f41736377631da99f06cb66ed255f7860c', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}, {'number': 3, 'created': '2023-08-22 13:14:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/zaqar/commit/db272c556562ed944a11caf2b0f580dbc3f820cd', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}, {'number': 4, 'created': '2023-08-22 14:27:32.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/zaqar/commit/9ee759c053fe18953e55dd620eca068e9567cec9', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}, {'number': 5, 'created': '2023-08-23 03:08:29.000000000', 'files': ['requirements.txt', 'zaqar/tests/unit/notification/test_notifier.py', 'zaqar/notification/tasks/mailto.py', 'lower-constraints.txt'], 'web_link': 'https://opendev.org/openstack/zaqar/commit/82bd7ad580d319392a0da1a246b0f68d14c90fae', 'message': 'Use processutils to fix TypeError in subprocess\n\nCalling processutils.execute() other than subprocess to\nfix bytes-like and str issue in python3.\n\nCloses-bug: #2029392\nChange-Id: I16436aa19da2cf53951c9ad27bca14033194651a\n(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)\n'}]",0,892308,82bd7ad580d319392a0da1a246b0f68d14c90fae,9,1,5,21757,,,0,"Use processutils to fix TypeError in subprocess

Calling processutils.execute() other than subprocess to
fix bytes-like and str issue in python3.

Closes-bug: #2029392
Change-Id: I16436aa19da2cf53951c9ad27bca14033194651a
(cherry picked from commit e0937b1f097f72238033ccc7182c88ab870bc23f)
",git fetch https://review.opendev.org/openstack/zaqar refs/changes/08/892308/1 && git format-patch -1 --stdout FETCH_HEAD,"['requirements.txt', 'zaqar/tests/unit/notification/test_notifier.py', 'zaqar/notification/tasks/mailto.py']",3,5d0f9a91b9aebf8fa812ac9c53a0c50e6dedc1d7,bug/2029392-stable/2023.1-stable/zed-stable/yoga-stable/xena-stable/wallaby-stable/victoria,"<<<<<<< HEAD (24786e Update deprecated zuul syntax)======= from urllib import parse as urllib_parse >>>>>>> CHANGE (7843f5 Use processutils to fix TypeError in subprocess) from oslo_concurrency import processutils cmd = conf_n.smtp_command.split(' ') processutils.execute(*cmd, process_input=msg.as_string())"," p = subprocess.Popen(conf_n.smtp_command.split(' '), stdin=subprocess.PIPE) p.communicate(msg.as_string())",23,9
openstack%2Fpython-zaqarclient~911189,openstack/python-zaqarclient,unmaintained/xena,I39ef9d94acd84d05a929d39fa9ecaa014f25486f,Update TOX_CONSTRAINTS_FILE for unmaintained/xena,NEW,2024-03-05 18:24:39.000000000,2024-03-05 19:01:14.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:24:39.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/b0aac3219734c162f0bc2f54e9ad09e3746e52dd', 'message': 'Update TOX_CONSTRAINTS_FILE for unmaintained/xena\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as unmaintained/xena branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: I39ef9d94acd84d05a929d39fa9ecaa014f25486f\n'}]",0,911189,b0aac3219734c162f0bc2f54e9ad09e3746e52dd,2,1,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for unmaintained/xena

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as unmaintained/xena branch, tests will
continue to use the upper-constraints list on master.

Change-Id: I39ef9d94acd84d05a929d39fa9ecaa014f25486f
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/89/911189/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,b0aac3219734c162f0bc2f54e9ad09e3746e52dd,create-xena, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/xena}, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master},1,1
openstack%2Fplacement~845770,openstack/placement,stable/victoria,Ia9dce4590d5656f8d5f777e158a1ff67c059c87a,Add periodic-stable-jobs template,ABANDONED,2022-06-14 15:02:10.000000000,2024-03-05 19:00:50.000000000,,"[{'_account_id': 7634}, {'_account_id': 9708}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-06-14 15:02:10.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/placement/commit/3ef8dabaf7011ed3dc47ac11257f88abc34508a5', 'message': 'Add periodic-stable-jobs template\n\nPeriodic stable jobs (one py3 and a docs job) are not running towards\nplacement. This patch adds the template to .zuul.yaml\n\nConflicts:\n  .zuul.yaml\n\nNOTE(elod.illes): conflict is due to branch specific job template name.\n\nChange-Id: Ia9dce4590d5656f8d5f777e158a1ff67c059c87a\n(cherry picked from commit a0749aec17d1663c58b23d470ad9f56684d5d590)\n(cherry picked from commit e7b22c3e92db0e57f69b0e647ccf57670f5d357f)\n'}]",1,845770,3ef8dabaf7011ed3dc47ac11257f88abc34508a5,5,3,1,17685,,,0,"Add periodic-stable-jobs template

Periodic stable jobs (one py3 and a docs job) are not running towards
placement. This patch adds the template to .zuul.yaml

Conflicts:
  .zuul.yaml

NOTE(elod.illes): conflict is due to branch specific job template name.

Change-Id: Ia9dce4590d5656f8d5f777e158a1ff67c059c87a
(cherry picked from commit a0749aec17d1663c58b23d470ad9f56684d5d590)
(cherry picked from commit e7b22c3e92db0e57f69b0e647ccf57670f5d357f)
",git fetch https://review.opendev.org/openstack/placement refs/changes/70/845770/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,3ef8dabaf7011ed3dc47ac11257f88abc34508a5,, - periodic-stable-jobs,,1,0
openstack%2Fos-vif~841775,openstack/os-vif,stable/victoria,I984ec62730276f8ee60d71a02a98fbfc4c37f7d8,Use TCP keepalives for ovsdb connections,ABANDONED,2022-05-13 16:13:08.000000000,2024-03-05 19:00:38.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-05-13 16:13:08.000000000', 'files': ['vif_plug_ovs/ovsdb/impl_idl.py'], 'web_link': 'https://opendev.org/openstack/os-vif/commit/9d1279e3289662ba2dffea7db7427ac7d228bb2e', 'message': ""Use TCP keepalives for ovsdb connections\n\nUltimately, this is something that should be fixed in python-ovs,\nbut setting the SO_KEEPALIVE socket option benefits the client by\nremoving the need to send 'echo' requests, which can time out on\nan overloaded ovsdb-server, which causes a disconnection which then#\nadds even more load on the ovsdb-server as it has to send the entire\ndb contents over the wire after the connection is restored.\n\nThis patch ports the optimisation form neutron to reduce the likelyhood\nof a reconnection which can cause the nova compute agent to hang\ntemporarily while the connection is reestablished.\n\nChange-Id: I984ec62730276f8ee60d71a02a98fbfc4c37f7d8\nRelated-Bug: #1930926\nPartial-Bug: #1929446\n(cherry picked from commit 09c0629bb728ad342a41d844143d8e7437c925c4)\n(cherry picked from commit 26f073f0969cfd9719375a4edfc16ce4ec139c4f)\n(cherry picked from commit 700b8cc377c6caa79e8d98cd55b34d77f23ff780)\n""}]",1,841775,9d1279e3289662ba2dffea7db7427ac7d228bb2e,4,2,1,11604,,,0,"Use TCP keepalives for ovsdb connections

Ultimately, this is something that should be fixed in python-ovs,
but setting the SO_KEEPALIVE socket option benefits the client by
removing the need to send 'echo' requests, which can time out on
an overloaded ovsdb-server, which causes a disconnection which then#
adds even more load on the ovsdb-server as it has to send the entire
db contents over the wire after the connection is restored.

This patch ports the optimisation form neutron to reduce the likelyhood
of a reconnection which can cause the nova compute agent to hang
temporarily while the connection is reestablished.

Change-Id: I984ec62730276f8ee60d71a02a98fbfc4c37f7d8
Related-Bug: #1930926
Partial-Bug: #1929446
(cherry picked from commit 09c0629bb728ad342a41d844143d8e7437c925c4)
(cherry picked from commit 26f073f0969cfd9719375a4edfc16ce4ec139c4f)
(cherry picked from commit 700b8cc377c6caa79e8d98cd55b34d77f23ff780)
",git fetch https://review.opendev.org/openstack/os-vif refs/changes/75/841775/1 && git format-patch -1 --stdout FETCH_HEAD,['vif_plug_ovs/ovsdb/impl_idl.py'],1,9d1279e3289662ba2dffea7db7427ac7d228bb2e,bug/1929446,"import functools import socket from ovs import socket_util from ovs import stream # this is derived form https://review.opendev.org/c/openstack/neutron/+/794892 def add_keepalives(fn): @functools.wraps(fn) def _open(*args, **kwargs): error, sock = fn(*args, **kwargs) try: sock.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1) except socket.error as e: sock.close() return socket_util.get_exception_errno(e), None return error, sock return _open class NoProbesMixin: @staticmethod def needs_probes(): # If we are using keepalives, we can force probe_interval=0 return False class TCPStream(stream.TCPStream, NoProbesMixin): @classmethod @add_keepalives def _open(cls, suffix, dscp): return super()._open(suffix, dscp) class SSLStream(stream.SSLStream, NoProbesMixin): @classmethod @add_keepalives def _open(cls, suffix, dscp): return super()._open(suffix, dscp) # Overwriting globals in a library is clearly a good idea stream.Stream.register_method(""tcp"", TCPStream) stream.Stream.register_method(""ssl"", SSLStream)",,45,0
openstack%2Fos-vif~841776,openstack/os-vif,stable/victoria,I635dff2b4fcff905ca8f431eb7e928265200f92a,only register tables used by os-vif,ABANDONED,2022-05-13 16:13:08.000000000,2024-03-05 19:00:30.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-05-13 16:13:08.000000000', 'files': ['vif_plug_ovs/ovsdb/impl_idl.py'], 'web_link': 'https://opendev.org/openstack/os-vif/commit/037e83f1b593153547e5c26a0ecb2dc918b90152', 'message': 'only register tables used by os-vif\n\nThis change limits the tables registered in the native driver\nto the set actully used by os-vif. This will shorten the inital\nstartup time and reconnection time if the ovs db connection is dropped.\nas a result this will help mitigate bug #1929446 where on reconnection\nthe nova compute agent can stall until reconnection is completed.\n\nChange-Id: I635dff2b4fcff905ca8f431eb7e928265200f92a\nPartial-Bug: #1929446\n(cherry picked from commit e4dc8b5664ccee8bde9e90fc9e618d6b705a0b68)\n(cherry picked from commit e6e791bd0af560ac501e383814fa7a5bce004536)\n(cherry picked from commit bac7f7d9d4337c60bf684d5b518c79f9aff95771)\n'}]",1,841776,037e83f1b593153547e5c26a0ecb2dc918b90152,4,2,1,11604,,,0,"only register tables used by os-vif

This change limits the tables registered in the native driver
to the set actully used by os-vif. This will shorten the inital
startup time and reconnection time if the ovs db connection is dropped.
as a result this will help mitigate bug #1929446 where on reconnection
the nova compute agent can stall until reconnection is completed.

Change-Id: I635dff2b4fcff905ca8f431eb7e928265200f92a
Partial-Bug: #1929446
(cherry picked from commit e4dc8b5664ccee8bde9e90fc9e618d6b705a0b68)
(cherry picked from commit e6e791bd0af560ac501e383814fa7a5bce004536)
(cherry picked from commit bac7f7d9d4337c60bf684d5b518c79f9aff95771)
",git fetch https://review.opendev.org/openstack/os-vif refs/changes/76/841776/1 && git format-patch -1 --stdout FETCH_HEAD,['vif_plug_ovs/ovsdb/impl_idl.py'],1,037e83f1b593153547e5c26a0ecb2dc918b90152,bug/1929446,"REQUIRED_TABLES = ('Interface', 'Port', 'Bridge', 'Open_vSwitch') for table in REQUIRED_TABLES: helper.register_table(table)", helper.register_all(),4,1
openstack%2Foctavia~849513,openstack/octavia,stable/victoria,I1b4c18d3bec5ff62adf48d3d751d553eb359ccbe,Use run_flow for failover functions in v2 control worker,ABANDONED,2022-07-12 12:55:13.000000000,2024-03-05 19:00:20.000000000,,"[{'_account_id': 22348}, {'_account_id': 29244}]","[{'number': 1, 'created': '2022-07-12 12:55:13.000000000', 'files': ['octavia/controller/worker/v2/controller_worker.py'], 'web_link': 'https://opendev.org/openstack/octavia/commit/a5aedba7fb7a4e906ebe365137e654b43c1bb40f', 'message': 'Use run_flow for failover functions in v2 control worker\n\nAlign failover_amphora and failover_loadbalancer to use\nrun_flow.\n\nAlso avoid NoneType error in logging of create_health_monitor.\n\nChange-Id: I1b4c18d3bec5ff62adf48d3d751d553eb359ccbe\n(cherry picked from commit a9a817e428a5ec71c478a48b4e29378b9daeb410)\n'}]",0,849513,a5aedba7fb7a4e906ebe365137e654b43c1bb40f,4,2,1,29244,,,0,"Use run_flow for failover functions in v2 control worker

Align failover_amphora and failover_loadbalancer to use
run_flow.

Also avoid NoneType error in logging of create_health_monitor.

Change-Id: I1b4c18d3bec5ff62adf48d3d751d553eb359ccbe
(cherry picked from commit a9a817e428a5ec71c478a48b4e29378b9daeb410)
",git fetch https://review.opendev.org/openstack/octavia refs/changes/13/849513/1 && git format-patch -1 --stdout FETCH_HEAD,['octavia/controller/worker/v2/controller_worker.py'],1,a5aedba7fb7a4e906ebe365137e654b43c1bb40f,, health_monitor[constants.HEALTHMONITOR_ID]) self.run_flow( self.run_flow(, db_health_monitor[constants.HEALTHMONITOR_ID]) self.services_controller.run_poster( self.services_controller.run_poster(,3,3
openstack%2Fnova~754688,openstack/nova,stable/victoria,Ic28b568f3f8a657d1b391d46fc35b4b3aab853a6,[stable-only] nova-live-migration: Disable libvirtd during negative tests,ABANDONED,2020-09-28 10:55:23.000000000,2024-03-05 19:00:12.000000000,,"[{'_account_id': 9708}, {'_account_id': 10118}, {'_account_id': 10135}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 26515}, {'_account_id': 29963}]","[{'number': 1, 'created': '2020-09-28 10:55:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/96a4c0cc4b84ef2614f5d57faadae02f48f61db8', 'message': '[stable-only] nova-live-migration: Disable libvirtd during negative tests\n\nAs with I2333872670e9e6c905efad7461af4d149f8216b6 on master now that\nstable/victoria is running on Focal we need to ensure libvirtd is\ndisabled during the negative evacuation tests and re-enabled for the\npositive tests.\n\nChange-Id: Ic28b568f3f8a657d1b391d46fc35b4b3aab853a6\n'}, {'number': 2, 'created': '2020-09-30 17:46:31.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/003766eeaa745c234bc59702d36fcf6d4b71f5fc', 'message': '[stable-only] nova-live-migration: Disable libvirtd during negative tests\n\nAs with I2333872670e9e6c905efad7461af4d149f8216b6 on master now that\nstable/victoria is running on Focal we need to ensure both the libvirtd\nservice and associated sockets are disabled during the negative\nevacuation tests and re-enabled for the positive tests.\n\nChange-Id: Ic28b568f3f8a657d1b391d46fc35b4b3aab853a6\n'}, {'number': 3, 'created': '2020-10-01 08:17:31.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/850764f763d7b552c3410639e0ed54ea948f116a', 'message': '[stable-only] nova-live-migration: Disable libvirtd during negative tests\n\nAs with I2333872670e9e6c905efad7461af4d149f8216b6 on master now that\nstable/victoria is running on Focal we need to ensure both the libvirtd\nservice and associated sockets are disabled during the negative\nevacuation tests and re-enabled for the positive tests.\n\nDepends-On: https://review.opendev.org/755440\nChange-Id: Ic28b568f3f8a657d1b391d46fc35b4b3aab853a6\n'}, {'number': 4, 'created': '2020-10-01 08:35:11.000000000', 'files': ['gate/test_evacuate.sh'], 'web_link': 'https://opendev.org/openstack/nova/commit/9290531b089f8c851cc94fc534c633f76b73189a', 'message': '[stable-only] nova-live-migration: Disable libvirtd during negative tests\n\nAs with I2333872670e9e6c905efad7461af4d149f8216b6 on master now that\nstable/victoria is running on Focal we need to ensure both the libvirtd\nservice and associated sockets are disabled during the negative\nevacuation tests and re-enabled for the positive tests.\n\nDepends-On: https://review.opendev.org/#/c/749618/\nChange-Id: Ic28b568f3f8a657d1b391d46fc35b4b3aab853a6\n'}]",0,754688,9290531b089f8c851cc94fc534c633f76b73189a,35,7,4,10135,,,0,"[stable-only] nova-live-migration: Disable libvirtd during negative tests

As with I2333872670e9e6c905efad7461af4d149f8216b6 on master now that
stable/victoria is running on Focal we need to ensure both the libvirtd
service and associated sockets are disabled during the negative
evacuation tests and re-enabled for the positive tests.

Depends-On: https://review.opendev.org/#/c/749618/
Change-Id: Ic28b568f3f8a657d1b391d46fc35b4b3aab853a6
",git fetch https://review.opendev.org/openstack/nova refs/changes/88/754688/1 && git format-patch -1 --stdout FETCH_HEAD,['gate/test_evacuate.sh'],1,96a4c0cc4b84ef2614f5d57faadae02f48f61db8,,sudo systemctl disable libvirtdsudo systemctl enable libvirtd,,2,0
openstack%2Fnova~758240,openstack/nova,stable/victoria,Ie8bb5e5622bd37dfe8073cca12f77174e8e7d98c,libvirt: Log exception when unable to import rbd or rados,ABANDONED,2020-10-14 20:18:19.000000000,2024-03-05 19:00:08.000000000,,"[{'_account_id': 9732}, {'_account_id': 10118}, {'_account_id': 10135}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 26515}, {'_account_id': 29963}]","[{'number': 1, 'created': '2020-10-14 20:18:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/961a355fb314975ee169cbe9ef88eb8537294253', 'message': ""libvirt: Log exception when unable to import rbd or rados\n\nThis should help provide some context when the RbdDriver later raises a\nRuntimeError if rbd or rados hasn't been imported correctly.\n\nChange-Id: Ie8bb5e5622bd37dfe8073cca12f77174e8e7d98c\n(cherry picked from commit aa16dd09ebeb21d0b81682b0b6026de0fe4f23b7)\n""}, {'number': 2, 'created': '2021-04-13 10:51:08.000000000', 'files': ['nova/storage/rbd_utils.py', 'nova/tests/unit/image/test_glance.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/09ab9df83b1d7323b94477245db08e2b99f1f3ce', 'message': ""libvirt: Log exception when unable to import rbd or rados\n\nThis should help provide some context when the RbdDriver later raises a\nRuntimeError if rbd or rados hasn't been imported correctly.\n\nNOTE(lyarwood): This includes the following change squashed in to reduce\nnoise in the logs and limit these warnings to times that the RbdDriver\nis actually used.\n\nrbd: Only log import failures when the RbdDriver is used\n\nRework Ie8bb5e5622bd37dfe8073cca12f77174e8e7d98c so we only log failures\nto import the rbd or rados modules when the RbdDriver is used.\n\nThis should reduce noise in the logs at runtime as well as during unit\nand functional tests runs where these modules are not present.\n\nChange-Id: I150e70629f6ae579ccfe0bf585c8a27df14fb51d\nCloses-Bug: #1903316\n(cherry picked from commit 4916ab7a4cb67edc0b54a8ee67c58b1302769792)\n\nChange-Id: Ie8bb5e5622bd37dfe8073cca12f77174e8e7d98c\n(cherry picked from commit aa16dd09ebeb21d0b81682b0b6026de0fe4f23b7)\n""}]",0,758240,09ab9df83b1d7323b94477245db08e2b99f1f3ce,20,7,2,10135,,,0,"libvirt: Log exception when unable to import rbd or rados

This should help provide some context when the RbdDriver later raises a
RuntimeError if rbd or rados hasn't been imported correctly.

NOTE(lyarwood): This includes the following change squashed in to reduce
noise in the logs and limit these warnings to times that the RbdDriver
is actually used.

rbd: Only log import failures when the RbdDriver is used

Rework Ie8bb5e5622bd37dfe8073cca12f77174e8e7d98c so we only log failures
to import the rbd or rados modules when the RbdDriver is used.

This should reduce noise in the logs at runtime as well as during unit
and functional tests runs where these modules are not present.

Change-Id: I150e70629f6ae579ccfe0bf585c8a27df14fb51d
Closes-Bug: #1903316
(cherry picked from commit 4916ab7a4cb67edc0b54a8ee67c58b1302769792)

Change-Id: Ie8bb5e5622bd37dfe8073cca12f77174e8e7d98c
(cherry picked from commit aa16dd09ebeb21d0b81682b0b6026de0fe4f23b7)
",git fetch https://review.opendev.org/openstack/nova refs/changes/40/758240/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/storage/rbd_utils.py'],1,961a355fb314975ee169cbe9ef88eb8537294253,,"# NOTE(lyarwood): Log exceptions if we fail to import rbd or rados in order to # provide context later if we end up attempting to use the RbdDriver and # raising RuntimeError try: import rados except ImportError: rados = None LOG.exception( ""Unable to import the rados module, this can be ignored if Ceph is "" ""not used within this environment"") try: import rbd except ImportError: rbd = None LOG.exception( ""Unable to import the rbd module, this can be ignored if Ceph is not "" ""used within this environment"") ",try: import rados import rbd except ImportError: rados = None rbd = None ,19,7
openstack%2Fnova~791482,openstack/nova,stable/victoria,I7fa75a0d2e2555d99c3d2c16b333a21462837580,Add regression test for bug #1922053,ABANDONED,2021-05-14 13:31:31.000000000,2024-03-05 19:00:04.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-05-14 13:31:31.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1922053.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/1d144f9de1768ab5fff034f459e49bd68e758893', 'message': 'Add regression test for bug #1922053\n\nRelated-Bug: #1922053\nChange-Id: I7fa75a0d2e2555d99c3d2c16b333a21462837580\n(cherry picked from commit db333070b61caef62ea5b68e5bf75f92d879db74)\n(cherry picked from commit 1a82ee80e6c213e741fa6ed9d6f3de7f0ce27d4c)\n'}]",0,791482,1d144f9de1768ab5fff034f459e49bd68e758893,4,1,1,10135,,,0,"Add regression test for bug #1922053

Related-Bug: #1922053
Change-Id: I7fa75a0d2e2555d99c3d2c16b333a21462837580
(cherry picked from commit db333070b61caef62ea5b68e5bf75f92d879db74)
(cherry picked from commit 1a82ee80e6c213e741fa6ed9d6f3de7f0ce27d4c)
",git fetch https://review.opendev.org/openstack/nova refs/changes/82/791482/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1922053.py'],1,1d144f9de1768ab5fff034f459e49bd68e758893,,"# Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. from nova.tests.functional import integrated_helpers class ForceUpWithDoneEvacuations(integrated_helpers._IntegratedTestBase): """"""Regression test for bug 1922053. This regression test aims to assert the behaviour of n-api when forcing a compute service up when it is associated with evacuation migration records still marked as `done`. This suggests that the compute service was not correctly fenced when the evacuation was requested and has not restarted since allowing the evacuation migration records to move to a state of `completed`. """""" ADMIN_API = True microversion = 'latest' def _create_test_server(self, compute_host): return self._create_server(host=compute_host, networks='none') def _force_down_compute(self, hostname): compute_id = self.api.get_services( host=hostname, binary='nova-compute')[0]['id'] self.api.put_service(compute_id, {'forced_down': 'true'}) def _force_up_compute(self, hostname): compute_id = self.api.get_services( host=hostname, binary='nova-compute')[0]['id'] self.api.put_service(compute_id, {'forced_down': 'false'}) def test_force_up_with_done_evacuation_records(self): # Launch a second compute to host the evacuated instance self._start_compute('compute2') # Create a test server to evacuate server = self._create_test_server('compute') # Assert we've landed on the first compute self.assertEqual('compute', server['OS-EXT-SRV-ATTR:host']) # Force down the first compute to allow the evacuation self._force_down_compute('compute') # Evacuate then assert the instance moves to compute2 and that the # migration record is moved to done server = self._evacuate_server( server, expected_host='compute2', expected_migration_status='done' ) # FIXME(lyarwood): This is bug #1922053, this shouldn't be allowed with # `done` evacuation migration records still associated with the host. # Replace this with the following assertion once fixed: # ex = self.assertRaises( # client.OpenStackApiException, # self._force_up_compute, # 'compute', # ) # self.assertEqual(400, ex.response.status_code) self._force_up_compute('compute') # Assert that the evacuation migration record remains `done` self._wait_for_migration_status(server, [""done""]) # Restart the source compute to move the migration record along self.computes['compute'].stop() self.computes['compute'].start() # Assert that the evacuation migration record is now `completed` self._wait_for_migration_status(server, [""completed""]) class ForceUpWithDoneEvacuationsv252(ForceUpWithDoneEvacuations): """"""Regression test for bug 1922053 using microversion 2.52. Required as the PUT /os-services/force-down API used by this test via self.api.force_down_service is superseeded by PUT /os-services/{service_id} API used by our parent ForceUpWithDoneEvacuations class from >=2.53. This test also uses the 'availability_zone' parameter to force the server to spawn on the first compute as 'host' is only available from 2.74. """""" microversion = '2.52' def _create_test_server(self, compute_host): return self._create_server(az='nova:compute', networks='none') def _force_down_compute(self, hostname): self.api.force_down_service(hostname, 'nova-compute', forced_down=True) def _force_up_compute(self, hostname): self.api.force_down_service( hostname, 'nova-compute', forced_down=False) ",,108,0
openstack%2Fnova~791483,openstack/nova,stable/victoria,I95882ea28564a31a6b4f8b665de462774d84edfc,api: Reject requests to force up computes when `done` evacuation records exist,ABANDONED,2021-05-14 13:31:31.000000000,2024-03-05 19:00:00.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-05-14 13:31:31.000000000', 'files': ['nova/tests/functional/notification_sample_tests/test_instance.py', 'nova/tests/functional/regressions/test_bug_1922053.py', 'nova/api/openstack/compute/services.py', 'nova/tests/functional/test_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/25993dfcad4bdab169a71425db191550f6a6699f', 'message': 'api: Reject requests to force up computes when `done` evacuation records exist\n\nWhen evacuating an instance the evacuation migration record moves from a\nstate of `accepted` to `pre-migrating` and eventually `done` once the\ninstance has been rebuilt on the new compute host. At present the\nmigration record remains in this state until the original compute host\nis restarted and the service cleans up any leftovers of the instance\nbefore it is moved to a state of `completed`.\n\nBug #1922053 details a use case where an operator might unintentionally\nforget to ensure the compute service is restarted before forcing the\nservice up leaving evacuation migration records stuck as `done`.\n\nThis could become an issue in the future if the instance is moved back\nto this compute before the service is restarted. Any future restart\ninvoking the cleanup logic and potentially damaging the running\ninstance.\n\nThis change aims to address this by blocking requests to force up\ncomputes associated to `done` evacuation records. Forcing operators to\nrestart the service allowing them to move to a `completed` state before\nthe service can be forced up again.\n\nTo allow this to be backportable these requests are rejected with a 400\nBadRequest return code from the API. A TODO is left to move this to a\n409 Conflict during the Xena release under a new microversion.\n\nFinally, some additional functional tests have been updated to ensure\nthey restart the source compute service of an evacuation before\nattempting to force up the service, ensuring any migration records are\nmarked as completed.\n\nCloses-Bug: #1922053\nChange-Id: I95882ea28564a31a6b4f8b665de462774d84edfc\n(cherry picked from commit bf89a23d91f01a29ba9b19bd0accf8de8c05f2f7)\n(cherry picked from commit f9b1c1f9b046745276046b6e940d01211a323913)\n'}]",0,791483,25993dfcad4bdab169a71425db191550f6a6699f,5,1,1,10135,,,0,"api: Reject requests to force up computes when `done` evacuation records exist

When evacuating an instance the evacuation migration record moves from a
state of `accepted` to `pre-migrating` and eventually `done` once the
instance has been rebuilt on the new compute host. At present the
migration record remains in this state until the original compute host
is restarted and the service cleans up any leftovers of the instance
before it is moved to a state of `completed`.

Bug #1922053 details a use case where an operator might unintentionally
forget to ensure the compute service is restarted before forcing the
service up leaving evacuation migration records stuck as `done`.

This could become an issue in the future if the instance is moved back
to this compute before the service is restarted. Any future restart
invoking the cleanup logic and potentially damaging the running
instance.

This change aims to address this by blocking requests to force up
computes associated to `done` evacuation records. Forcing operators to
restart the service allowing them to move to a `completed` state before
the service can be forced up again.

To allow this to be backportable these requests are rejected with a 400
BadRequest return code from the API. A TODO is left to move this to a
409 Conflict during the Xena release under a new microversion.

Finally, some additional functional tests have been updated to ensure
they restart the source compute service of an evacuation before
attempting to force up the service, ensuring any migration records are
marked as completed.

Closes-Bug: #1922053
Change-Id: I95882ea28564a31a6b4f8b665de462774d84edfc
(cherry picked from commit bf89a23d91f01a29ba9b19bd0accf8de8c05f2f7)
(cherry picked from commit f9b1c1f9b046745276046b6e940d01211a323913)
",git fetch https://review.opendev.org/openstack/nova refs/changes/83/791483/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/notification_sample_tests/test_instance.py', 'nova/tests/functional/regressions/test_bug_1922053.py', 'nova/api/openstack/compute/services.py', 'nova/tests/functional/test_servers.py']",4,25993dfcad4bdab169a71425db191550f6a6699f,, self.compute1 = self.restart_compute_service(self.compute1) self.compute1 = self.restart_compute_service(self.compute1), self.compute1 = self.restart_compute_service(self.compute1) self.compute1 = self.restart_compute_service(self.compute1),40,12
openstack%2Fnova~788467,openstack/nova,stable/victoria,I0e068043d8267ab91535413d950a3e154c2234f7,libvirt: Ignore device already in the process of unplug errors,ABANDONED,2021-04-28 10:24:09.000000000,2024-03-05 18:59:56.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-04-28 10:24:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/4496dfe72020a9e658b04edcba90ddf7f578465f', 'message': 'libvirt: Ignore device already in the process of unplug errors\n\nAt present QEMU will raise an error to libvirt when a device_del request\nis made for a device that has already partially detached through a\nprevious request. This is outlined in more detail in the following\ndownstream Red Hat QEMU bug report:\n\nGet libvirtError ""Device XX is already in the process of unplug"" [..]\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1878659\n\nWithin Nova we can actually ignore this error and allow our existing\nretry logic to attempt again after a short wait, hopefully allowing the\noriginal request to complete removing the device from the domain.\n\nThis change does this and should result in one of the following\ndevice_del requests raising a VIR_ERR_DEVICE_MISSING error from libvirt.\n_try_detach_device should then translate that libvirt error into a\nDeviceNotFound exception which is itself then ignored by all\ndetach_device_with_retry callers and taken to mean that the device has\ndetached successfully.\n\nNOTE(lyarwood): For stable/victoria the conditional has been inlined\nwithin some VIR_ERR_DEVICE_MISSING compat code removed in stable/wallaby\nby I181b3bf433b0fcef92ef4d430e9858506f24153c. Additionally the\nsupports_device_missing_error_code kwarg is added to the\ndetach_device_with_retry call within the test to ensure the exception is\nchecked.\n\nCloses-Bug: #1923206\nChange-Id: I0e068043d8267ab91535413d950a3e154c2234f7\n(cherry picked from commit 0a7d3794c6dc39976b4cbfe12b1688230ac895a8)\n(cherry picked from commit 972a86d61f6b6f0f3d1af549b081854e6ff016bc)\n'}, {'number': 2, 'created': '2021-05-21 08:14:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8acd3a00e4247aeda3fcd8febcb4ba7ca25d6274', 'message': 'libvirt: Ignore device already in the process of unplug errors\n\nAt present QEMU will raise an error to libvirt when a device_del request\nis made for a device that has already partially detached through a\nprevious request. This is outlined in more detail in the following\ndownstream Red Hat QEMU bug report:\n\nGet libvirtError ""Device XX is already in the process of unplug"" [..]\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1878659\n\nWithin Nova we can actually ignore this error and allow our existing\nretry logic to attempt again after a short wait, hopefully allowing the\noriginal request to complete removing the device from the domain.\n\nThis change does this and should result in one of the following\ndevice_del requests raising a VIR_ERR_DEVICE_MISSING error from libvirt.\n_try_detach_device should then translate that libvirt error into a\nDeviceNotFound exception which is itself then ignored by all\ndetach_device_with_retry callers and taken to mean that the device has\ndetached successfully.\n\nNOTE(lyarwood): For stable/victoria the conditional has been inlined\nwithin some VIR_ERR_DEVICE_MISSING compat code removed in stable/wallaby\nby I181b3bf433b0fcef92ef4d430e9858506f24153c. Additionally the\nsupports_device_missing_error_code kwarg is added to the\ndetach_device_with_retry call within the test to ensure the exception is\nchecked.\n\nConflicts:\n    nova/virt/libvirt/guest.py\n\nCloses-Bug: #1923206\nChange-Id: I0e068043d8267ab91535413d950a3e154c2234f7\n(cherry picked from commit 0a7d3794c6dc39976b4cbfe12b1688230ac895a8)\n(cherry picked from commit 972a86d61f6b6f0f3d1af549b081854e6ff016bc)\n'}, {'number': 3, 'created': '2021-05-21 08:16:42.000000000', 'files': ['nova/tests/unit/virt/libvirt/test_guest.py', 'nova/virt/libvirt/guest.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/798e3ef2d5b65f96dfb39e8b0bba4aaacbc1e235', 'message': 'libvirt: Ignore device already in the process of unplug errors\n\nAt present QEMU will raise an error to libvirt when a device_del request\nis made for a device that has already partially detached through a\nprevious request. This is outlined in more detail in the following\ndownstream Red Hat QEMU bug report:\n\nGet libvirtError ""Device XX is already in the process of unplug"" [..]\nhttps://bugzilla.redhat.com/show_bug.cgi?id=1878659\n\nWithin Nova we can actually ignore this error and allow our existing\nretry logic to attempt again after a short wait, hopefully allowing the\noriginal request to complete removing the device from the domain.\n\nThis change does this and should result in one of the following\ndevice_del requests raising a VIR_ERR_DEVICE_MISSING error from libvirt.\n_try_detach_device should then translate that libvirt error into a\nDeviceNotFound exception which is itself then ignored by all\ndetach_device_with_retry callers and taken to mean that the device has\ndetached successfully.\n\nNOTE(lyarwood): For stable/victoria the conditional has been inlined\nwithin some VIR_ERR_DEVICE_MISSING compat code removed in stable/wallaby\nby I181b3bf433b0fcef92ef4d430e9858506f24153c. Additionally the\nsupports_device_missing_error_code kwarg is added to the\ndetach_device_with_retry call within the test to ensure the exception is\nchecked.\n\nConflicts:\n    nova/virt/libvirt/guest.py\n\nCloses-Bug: #1923206\nChange-Id: I0e068043d8267ab91535413d950a3e154c2234f7\n(cherry picked from commit 0a7d3794c6dc39976b4cbfe12b1688230ac895a8)\n(cherry picked from commit 972a86d61f6b6f0f3d1af549b081854e6ff016bc)\n'}]",1,788467,798e3ef2d5b65f96dfb39e8b0bba4aaacbc1e235,21,2,3,10135,,,0,"libvirt: Ignore device already in the process of unplug errors

At present QEMU will raise an error to libvirt when a device_del request
is made for a device that has already partially detached through a
previous request. This is outlined in more detail in the following
downstream Red Hat QEMU bug report:

Get libvirtError ""Device XX is already in the process of unplug"" [..]
https://bugzilla.redhat.com/show_bug.cgi?id=1878659

Within Nova we can actually ignore this error and allow our existing
retry logic to attempt again after a short wait, hopefully allowing the
original request to complete removing the device from the domain.

This change does this and should result in one of the following
device_del requests raising a VIR_ERR_DEVICE_MISSING error from libvirt.
_try_detach_device should then translate that libvirt error into a
DeviceNotFound exception which is itself then ignored by all
detach_device_with_retry callers and taken to mean that the device has
detached successfully.

NOTE(lyarwood): For stable/victoria the conditional has been inlined
within some VIR_ERR_DEVICE_MISSING compat code removed in stable/wallaby
by I181b3bf433b0fcef92ef4d430e9858506f24153c. Additionally the
supports_device_missing_error_code kwarg is added to the
detach_device_with_retry call within the test to ensure the exception is
checked.

Conflicts:
    nova/virt/libvirt/guest.py

Closes-Bug: #1923206
Change-Id: I0e068043d8267ab91535413d950a3e154c2234f7
(cherry picked from commit 0a7d3794c6dc39976b4cbfe12b1688230ac895a8)
(cherry picked from commit 972a86d61f6b6f0f3d1af549b081854e6ff016bc)
",git fetch https://review.opendev.org/openstack/nova refs/changes/67/788467/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/libvirt/test_guest.py', 'nova/virt/libvirt/guest.py']",2,4496dfe72020a9e658b04edcba90ddf7f578465f,bug/1923206, # NOTE(lyarwood): https://bugzilla.redhat.com/1878659 # Ignore this known QEMU bug for the time being # allowing our retry logic to fire again and hopefully # see that the device has been removed asynchronously # by QEMU in the meantime when the next call to detach # raises VIR_ERR_DEVICE_MISSING. if 'already in the process of unplug' in errmsg: LOG.debug('Ignoring QEMU rejecting our request to ' 'detach as it is caused by a previous ' 'request still being in progress.') return,,55,1
openstack%2Fnova~793357,openstack/nova,stable/victoria,I55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea,image_meta: Provide image_ref as the id when fetching from instance,ABANDONED,2021-05-27 10:02:39.000000000,2024-03-05 18:59:52.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-05-27 10:02:39.000000000', 'files': ['nova/tests/unit/virt/vmwareapi/test_driver_api.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/virt/libvirt/test_vif.py', 'nova/tests/unit/api/openstack/fakes.py', 'nova/tests/unit/virt/test_configdrive.py', 'nova/objects/image_meta.py', 'nova/tests/unit/api/openstack/compute/test_servers.py', 'nova/tests/unit/objects/test_instance.py', 'nova/tests/unit/api/openstack/compute/test_server_actions.py', 'nova/tests/unit/compute/test_api.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/bc579db23a259dd0061fbba3f56655eea2b798e7', 'message': 'image_meta: Provide image_ref as the id when fetching from instance\n\nAt present various users of instance.image_meta expect it to be a fully\npopulated ImageMeta object. However when the instance is pulled from the\ndatabase the ImageMeta object is only partially populated via\ninstance.system_metadata with a limited set of attributes such as\nmin_ram, min_disk, disk_format and container_format. This can result in\nNotImplementedErrors being raised by o.vo as seen in bug #1928063 when\nan attempt is made to access common attributes such as id or name.\n\nTo avoid this the id is now provided by instance.image_ref when\navailable.\n\nThe majority of the change is test fallout and ensuring that valid UUIDs\nare provided as instance.image_ref and used by instance.image_meta.\n\nNOTE(lyarwood): Conflict as Idc035671892e4668141a93763f8f2bed7a630812\nis not present in stable/victoria.\n\nConflicts:\n  nova/tests/unit/virt/libvirt/test_machine_type_utils.py\n\nRelated-Bug: #1928063\nChange-Id: I55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea\n(cherry picked from commit 9d037f7d199443da0f2c6c1755704e589d52e730)\n(cherry picked from commit a2791fb5d2ae30d2861c2f04627eb48df01a30e7)\n'}]",0,793357,bc579db23a259dd0061fbba3f56655eea2b798e7,5,1,1,10135,,,0,"image_meta: Provide image_ref as the id when fetching from instance

At present various users of instance.image_meta expect it to be a fully
populated ImageMeta object. However when the instance is pulled from the
database the ImageMeta object is only partially populated via
instance.system_metadata with a limited set of attributes such as
min_ram, min_disk, disk_format and container_format. This can result in
NotImplementedErrors being raised by o.vo as seen in bug #1928063 when
an attempt is made to access common attributes such as id or name.

To avoid this the id is now provided by instance.image_ref when
available.

The majority of the change is test fallout and ensuring that valid UUIDs
are provided as instance.image_ref and used by instance.image_meta.

NOTE(lyarwood): Conflict as Idc035671892e4668141a93763f8f2bed7a630812
is not present in stable/victoria.

Conflicts:
  nova/tests/unit/virt/libvirt/test_machine_type_utils.py

Related-Bug: #1928063
Change-Id: I55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea
(cherry picked from commit 9d037f7d199443da0f2c6c1755704e589d52e730)
(cherry picked from commit a2791fb5d2ae30d2861c2f04627eb48df01a30e7)
",git fetch https://review.opendev.org/openstack/nova refs/changes/57/793357/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/vmwareapi/test_driver_api.py', 'nova/tests/unit/compute/test_compute.py', 'nova/tests/unit/virt/libvirt/test_vif.py', 'nova/tests/unit/api/openstack/fakes.py', 'nova/tests/unit/virt/test_configdrive.py', 'nova/objects/image_meta.py', 'nova/tests/unit/api/openstack/compute/test_servers.py', 'nova/tests/unit/objects/test_instance.py', 'nova/tests/unit/api/openstack/compute/test_server_actions.py', 'nova/tests/unit/compute/test_api.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",11,bc579db23a259dd0061fbba3f56655eea2b798e7,bug/1928063," instance_ref['image_ref'] = uuids.image_ref instance_ref['image_ref'] = uuids.image_ref instance_ref['image_ref'] = uuids.image_ref instance_ref['image_ref'] = uuids.image_ref {'filename': imagecache.get_cache_fname(uuids.image_ref), self.assertEqual(wantFiles, gotFiles) instance_ref['image_ref'] = uuids.image_ref return_value={}) return_value={}) return_value={}) image_ref=uuids.image_ref) image_ref=uuids.shelved_instance_snapshot_id, base_image_ref=uuids.original_image_id, image_ref=uuids.shelved_instance_snapshot_id, base_image_ref=uuids.original_image_id, image_ref=uuids.resized_instance_snapshot_id, base_image_ref=uuids.original_image_id, image_ref=uuids.resized_instance_snapshot_id, base_image_ref=uuids.original_image_id, image_ref=uuids.original_image_id, base_image_ref=uuids.original_image_id, self.inst['image_ref'] = ''"," instance_ref['image_ref'] = 1 instance_ref['image_ref'] = 'my_fake_image' instance_ref['image_ref'] = 'my_fake_image' instance_ref['image_ref'] = 1 {'filename': '356a192b7913b04c54574d18c28d46e6395428ab', self.assertEqual(gotFiles, wantFiles) instance_ref['image_ref'] = 1 return_value=None) return_value=None) return_value=None) image_ref='my_fake_image') image_ref='snapshot_id_of_shelved_instance', base_image_ref='original_image_id', image_ref='snapshot_id_of_shelved_instance', base_image_ref='original_image_id', image_ref='snapshot_id_of_resized_instance', base_image_ref='original_image_id', image_ref='snapshot_id_of_resized_instance', base_image_ref='original_image_id', image_ref='original_image_id', base_image_ref='original_image_id',",147,104
openstack%2Fnova~793356,openstack/nova,stable/victoria,I0b81282eba8238d8b64a67e38cf9d6392de1f85c,libvirt: make cross cell resize spawn from snapshot image,ABANDONED,2021-05-27 10:02:39.000000000,2024-03-05 18:59:49.000000000,,"[{'_account_id': 22348}, {'_account_id': 28332}]","[{'number': 1, 'created': '2021-05-27 10:02:39.000000000', 'files': ['nova/virt/libvirt/driver.py', 'nova/tests/unit/policies/test_servers.py', 'nova/compute/manager.py', 'nova/compute/api.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/9c0acadffdf5dba40f3b9070a67fa30fedf18d23', 'message': 'libvirt: make cross cell resize spawn from snapshot image\n\nDuring a cross cell resize, we do an instance snapshot and\nthen we spawn() instance back on target cell.\n\nUnfortunately, we mistakenly spawn back the instance to its original\nimage id, instead of using freshly created snapshot_id.\n\nThe change proposes to update instance.image_ref with snapshot_id\nin order that spawn()->_create_image() uses it and set back\ninstance.image_ref after.\n\nNote that for qcow2 backend case, we also need to rebase disk image\nwith its original backing file to avoid mismatch between\ninstance.image_ref and backing file, as we currently do in unshelve\ncontext.\n\nChange-Id: I0b81282eba8238d8b64a67e38cf9d6392de1f85c\nCloses-Bug: #1906428\n(cherry picked from commit f02899418db9fa118a7bd0c813446b8dce51b7d7)\n'}]",0,793356,9c0acadffdf5dba40f3b9070a67fa30fedf18d23,5,2,1,10135,,,0,"libvirt: make cross cell resize spawn from snapshot image

During a cross cell resize, we do an instance snapshot and
then we spawn() instance back on target cell.

Unfortunately, we mistakenly spawn back the instance to its original
image id, instead of using freshly created snapshot_id.

The change proposes to update instance.image_ref with snapshot_id
in order that spawn()->_create_image() uses it and set back
instance.image_ref after.

Note that for qcow2 backend case, we also need to rebase disk image
with its original backing file to avoid mismatch between
instance.image_ref and backing file, as we currently do in unshelve
context.

Change-Id: I0b81282eba8238d8b64a67e38cf9d6392de1f85c
Closes-Bug: #1906428
(cherry picked from commit f02899418db9fa118a7bd0c813446b8dce51b7d7)
",git fetch https://review.opendev.org/openstack/nova refs/changes/56/793356/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'nova/tests/unit/policies/test_servers.py', 'nova/compute/manager.py', 'nova/compute/api.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",5,9c0acadffdf5dba40f3b9070a67fa30fedf18d23,bug/1928063," def _test_qcow2_rebase_image_during_create(self, mock_rebase, mock_fetch, image_ref, base_image_ref, vm_state=None, task_state=None, original_image_in_glance=True, rebase_expected=True): # base_image_ref: original image ref from where instance was created, # stored in system_metadata at instance creation. # image_ref: current instance.image_ref used in unshelve/resize) # vm_state: current vm_state base_image_root_fname = imagecache.get_cache_fname(base_image_ref) image_root_fname = imagecache.get_cache_fname(image_ref) # Instance state during _create_and_inject_local_root call. inst_params = { 'image_ref': image_ref, 'vm_state': vm_state, 'task_state': task_state, base_image_root_fname) mock_fetch_calls = [ self.context, image_root_fname, image_ref, instance, instance.root_gb * units.Gi, None) ] if rebase_expected: # if we rebase we must expect a 2nd fetch call, to cache the # original backing file. mock_fetch_calls.append( self.context, base_image_root_fname, base_image_ref, instance, None)) mock_rebase.assert_called_once_with(disk_path, expected_backing_file) else: mock_rebase.assert_not_called() mock_fetch.assert_has_calls(mock_fetch_calls) self._test_qcow2_rebase_image_during_create( image_ref='snapshot_id_of_shelved_instance', base_image_ref='original_image_id', vm_state=vm_states.SHELVED_OFFLOADED, rebase_expected=True) self._test_qcow2_rebase_image_during_create( image_ref='snapshot_id_of_shelved_instance', base_image_ref='original_image_id', vm_state=vm_states.SHELVED_OFFLOADED, original_image_in_glance=False, rebase_expected=True) def test_cross_cell_resize_qcow2_rebase_image_during_create(self): self._test_qcow2_rebase_image_during_create( image_ref='snapshot_id_of_resized_instance', base_image_ref='original_image_id', task_state=task_states.RESIZE_FINISH, rebase_expected=True) def test_cross_cell_resize_qcow2_rebase_image_during_create_notfound(self): self._test_qcow2_rebase_image_during_create( image_ref='snapshot_id_of_resized_instance', base_image_ref='original_image_id', task_state=task_states.RESIZE_FINISH, original_image_in_glance=False, rebase_expected=True) def test_local_cell_resize_qcow2_rebase_image_during_create(self): # local cell resize does not go into a spawn from a snapshot, # consequently, instance.image_ref remain the same and we must ensure # that no rebase is done. self._test_qcow2_rebase_image_during_create( image_ref='original_image_id', base_image_ref='original_image_id', task_state=task_states.RESIZE_FINISH, rebase_expected=False) @mock.patch('nova.virt.libvirt.driver.LibvirtDriver.' '_try_fetch_image_cache', new=mock.Mock()) @mock.patch('nova.virt.libvirt.driver.imagecache', new=mock.Mock()) def test_data_not_injects_with_configdrive(self, mock_inject):"," def _test_unshelve_qcow2_rebase_image_during_create(self, mock_rebase, mock_fetch, original_image_in_glance=True): # Original image ref from where instance was created, before SHELVE # occurs, base_root_fname is related backing file name. base_image_ref = 'base_image_ref' base_root_fname = imagecache.get_cache_fname(base_image_ref) # Snapshot image ref created during SHELVE. shelved_image_ref = 'shelved_image_ref' shelved_root_fname = imagecache.get_cache_fname(shelved_image_ref) # Instance state during unshelve spawn(). inst_params = { 'image_ref': shelved_image_ref, 'vm_state': vm_states.SHELVED_OFFLOADED, base_root_fname) mock_fetch.assert_has_calls([ self.context, shelved_root_fname, shelved_image_ref, instance, instance.root_gb * units.Gi, None), self.context, base_root_fname, base_image_ref, instance, None)]) mock_rebase.assert_called_once_with(disk_path, expected_backing_file) self._test_unshelve_qcow2_rebase_image_during_create() self._test_unshelve_qcow2_rebase_image_during_create( original_image_in_glance=False) @mock.patch('nova.virt.libvirt.driver.imagebackend') @mock.patch('nova.virt.libvirt.driver.imagecache') def test_data_not_injects_with_configdrive(self, mock_image, mock_inject, mock_backend):",116,39
openstack%2Fnova~796611,openstack/nova,stable/victoria,I11131a3f90b8af85e7151b519fb26d225629c391,libvirt: Set driver_iommu when attaching virtio devices to SEV instance,ABANDONED,2021-06-16 09:18:59.000000000,2024-03-05 18:59:45.000000000,,"[{'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-06-16 09:18:59.000000000', 'files': ['nova/virt/libvirt/driver.py', 'nova/virt/libvirt/migration.py', 'nova/tests/unit/virt/libvirt/test_designer.py', 'nova/tests/unit/virt/libvirt/test_migration.py', 'nova/virt/libvirt/designer.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/4985667efced966d0a47ac9f8d31d73ae7409b0a', 'message': 'libvirt: Set driver_iommu when attaching virtio devices to SEV instance\n\nAs called out in the original spec [1] virtio devices attached to a SEV\nenabled instance must have the iommu attribute enabled. This was done\nwithin the original implementation of the spec for all virtio devices\ndefined when initially spawning the instance but does not include volume\nand interfaces that are later hot plugged.\n\nThis change corrects this for both volumes and nics and in doing so\nslightly refactors the original designer code to make it usable in both\ncases.\n\n[1] https://specs.openstack.org/openstack/nova-specs/specs/train/implemented/amd-sev-libvirt-support.html#proposed-change\n\nNOTE(lyarwood): Conflicts caused by I45f1df4935905170957c2ea2496c8a698a7464a2\nand I017083b27cd9d145eecb01106388d4ce880ba823 not being present on\nstable/victoria.\n\nConflicts:\n  nova/tests/unit/virt/libvirt/test_driver.py\n  nova/virt/libvirt/driver.py\n\nCloses-Bug: #1930734\nChange-Id: I11131a3f90b8af85e7151b519fb26d225629c391\n(cherry picked from commit 4d8bf15fec15dc3416023e577e0f2c277c216506)\n(cherry picked from commit 5d65680095298764466af532381b81b604429426)\n'}]",5,796611,4985667efced966d0a47ac9f8d31d73ae7409b0a,7,2,1,10135,,,0,"libvirt: Set driver_iommu when attaching virtio devices to SEV instance

As called out in the original spec [1] virtio devices attached to a SEV
enabled instance must have the iommu attribute enabled. This was done
within the original implementation of the spec for all virtio devices
defined when initially spawning the instance but does not include volume
and interfaces that are later hot plugged.

This change corrects this for both volumes and nics and in doing so
slightly refactors the original designer code to make it usable in both
cases.

[1] https://specs.openstack.org/openstack/nova-specs/specs/train/implemented/amd-sev-libvirt-support.html#proposed-change

NOTE(lyarwood): Conflicts caused by I45f1df4935905170957c2ea2496c8a698a7464a2
and I017083b27cd9d145eecb01106388d4ce880ba823 not being present on
stable/victoria.

Conflicts:
  nova/tests/unit/virt/libvirt/test_driver.py
  nova/virt/libvirt/driver.py

Closes-Bug: #1930734
Change-Id: I11131a3f90b8af85e7151b519fb26d225629c391
(cherry picked from commit 4d8bf15fec15dc3416023e577e0f2c277c216506)
(cherry picked from commit 5d65680095298764466af532381b81b604429426)
",git fetch https://review.opendev.org/openstack/nova refs/changes/11/796611/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'nova/virt/libvirt/migration.py', 'nova/tests/unit/virt/libvirt/test_designer.py', 'nova/tests/unit/virt/libvirt/test_migration.py', 'nova/virt/libvirt/designer.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",6,4985667efced966d0a47ac9f8d31d73ae7409b0a,bug/1930734," @mock.patch.object(designer, 'set_driver_iommu_for_all_devices') @mock.patch.object(designer, 'set_driver_iommu_for_all_devices') @mock.patch.object(libvirt_driver.LibvirtDriver, '_sev_enabled', new=mock.Mock(return_value=False)) def test_get_volume_config(self, mock_set_cache_mode, mock_get_config): instance = objects.Instance(**self.test_instance) connection_info = { 'driver_volume_type': 'fake', 'data': { 'device_path': '/fake', 'access_mode': 'rw' } } generated_config = self._fake_libvirt_config_guest_disk() mock_get_config.return_value = copy.deepcopy(generated_config) returned_config = drvr._get_volume_config( instance, connection_info, mock.sentinel.disk_info) mock_get_config.assert_called_once_with( connection_info, mock.sentinel.disk_info) mock_set_cache_mode.assert_called_once_with(returned_config) self.assertEqual(generated_config.to_xml(), returned_config.to_xml()) @mock.patch.object(libvirt_driver.LibvirtDriver, '_sev_enabled', new=mock.Mock(return_value=True)) @mock.patch.object(libvirt_driver.LibvirtDriver, '_set_cache_mode', new=mock.Mock()) @mock.patch.object(volume_drivers.LibvirtFakeVolumeDriver, 'get_config') def test_get_volume_config_sev(self, mock_get_config): drvr = libvirt_driver.LibvirtDriver(fake.FakeVirtAPI(), False) instance = objects.Instance(**self.test_instance) connection_info = { 'driver_volume_type': 'fake', 'data': { 'device_path': '/fake', 'access_mode': 'rw' } } generated_config = self._fake_libvirt_config_guest_disk() generated_config.target_bus = 'virtio' mock_get_config.return_value = copy.deepcopy(generated_config) returned_config = drvr._get_volume_config( instance, connection_info, mock.sentinel.disk_info) # Assert that driver_iommu is enabled for this virtio volume self.assertTrue(returned_config.driver_iommu) instance, connection_info, disk_info) instance_ref, guest, migrate_data, mock.ANY, get_vif_config=None, new_resources=None ) def fake_get_updated_guest_xml( instance, guest, migrate_data, get_volume_config, get_vif_config=None, new_resources=None ): instance = objects.Instance(**self.test_instance) mock.patch.object( drvr, '_get_volume_config', return_value=conf ), mock.patch.object( guest, 'get_xml_desc', return_value=initial_xml ), mock.patch.object( drvr, '_sev_enabled', new=mock.Mock(return_value=False) ) ): config = libvirt_migrate.get_updated_guest_xml( instance, guest, objects.LibvirtLiveMigrateData( bdms=[bdmi], serial_listen_addr='127.0.0.1', serial_listen_ports=[1234] ), drvr._get_volume_config ) instance = objects.Instance(**self.test_instance) mock.patch.object( drvr, '_get_volume_config', return_value=conf ), mock.patch.object( guest, 'get_xml_desc', return_value=initial_xml ), mock.patch.object( drvr, '_sev_enabled', new=mock.Mock(return_value=False) ) ): config = libvirt_migrate.get_updated_guest_xml( instance, guest, serial_listen_ports = [1234] ), drvr._get_volume_config ) instance = objects.Instance(**self.test_instance) mock.patch.object( drvr, '_get_volume_config', return_value=conf ), mock.patch.object( guest, 'get_xml_desc', return_value=initial_xml ), mock.patch.object( drvr, '_sev_enabled', new=mock.Mock(return_value=False) ) ): instance, serial_listen_ports=[1234] ), drvr._get_volume_config ) get_volume_config.assert_called_with( instance, bdm['connection_info'], @mock.patch('nova.virt.libvirt.designer.set_driver_iommu_for_device') @mock.patch.object(libvirt_driver.LibvirtDriver, '_sev_enabled') mock_info, mock_build, mock_save, mock_sev_enabled, mock_designer_set_iommu, sev_enabled=False): mock_sev_enabled.return_value = sev_enabled if sev_enabled: mock_designer_set_iommu.assert_called_once_with(expected) def test_attach_interface_with_sev(self): self._test_attach_interface( power_state.RUNNING, (fakelibvirt.VIR_DOMAIN_AFFECT_CONFIG | fakelibvirt.VIR_DOMAIN_AFFECT_LIVE), sev_enabled=True) "," @mock.patch.object(designer, 'set_driver_iommu_for_sev') @mock.patch.object(designer, 'set_driver_iommu_for_sev') def test_get_volume_config(self, _set_cache_mode, get_config): connection_info = {'driver_volume_type': 'fake', 'data': {'device_path': '/fake', 'access_mode': 'rw'}} disk_info = {'bus': 'fake-bus', 'type': 'fake-type', 'dev': 'vdb'} config_guest_disk = self._fake_libvirt_config_guest_disk() get_config.return_value = copy.deepcopy(config_guest_disk) config = drvr._get_volume_config(connection_info, disk_info) get_config.assert_called_once_with(connection_info, disk_info) _set_cache_mode.assert_called_once_with(config) self.assertEqual(config_guest_disk.to_xml(), config.to_xml()) connection_info, disk_info) guest, migrate_data, mock.ANY, get_vif_config=None, new_resources=None) def fake_get_updated_guest_xml(guest, migrate_data, get_volume_config, get_vif_config=None, new_resources=None): mock.patch.object(drvr, '_get_volume_config', return_value=conf), mock.patch.object(guest, 'get_xml_desc', return_value=initial_xml)): config = libvirt_migrate.get_updated_guest_xml(guest, objects.LibvirtLiveMigrateData( bdms=[bdmi], serial_listen_addr='127.0.0.1', serial_listen_ports=[1234]), drvr._get_volume_config) mock.patch.object(drvr, '_get_volume_config', return_value=conf), mock.patch.object(guest, 'get_xml_desc', return_value=initial_xml)): config = libvirt_migrate.get_updated_guest_xml(guest, serial_listen_ports = [1234]), drvr._get_volume_config) mock.patch.object(drvr, '_get_volume_config', return_value=conf), mock.patch.object(guest, 'get_xml_desc', return_value=initial_xml)): serial_listen_ports=[1234]), drvr._get_volume_config) get_volume_config.assert_called_with(bdm['connection_info'], mock_info, mock_build, mock_save):",214,73
openstack%2Fnova~791481,openstack/nova,stable/victoria,I87a10e6ad65ae493cd34c6c0e62d60c5d6f9d1d8,Use _evacuate_server helper in func test,ABANDONED,2021-05-14 13:31:31.000000000,2024-03-05 18:59:41.000000000,,"[{'_account_id': 8864}, {'_account_id': 9708}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-05-14 13:31:31.000000000', 'files': ['nova/tests/functional/libvirt/test_evacuate.py', 'nova/tests/functional/test_server_group.py', 'nova/tests/functional/wsgi/test_services.py', 'nova/tests/functional/integrated_helpers.py', 'nova/tests/functional/regressions/test_bug_1794996.py', 'nova/tests/functional/regressions/test_bug_1764883.py', 'nova/tests/functional/regressions/test_bug_1713783.py', 'nova/tests/functional/test_nova_manage.py', 'nova/tests/functional/regressions/test_bug_1823370.py', 'nova/tests/functional/notification_sample_tests/test_compute_task.py', 'nova/tests/functional/test_servers.py', 'nova/tests/functional/regressions/test_bug_1669054.py', 'nova/tests/functional/regressions/test_bug_1815153.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/933090c2db89d62f801563219ee33eecc485f9b8', 'message': ""Use _evacuate_server helper in func test\n\nWe have a nice helper for calling evacuate and waiting for the result so\nlet's replace the direct post api calls in func test with the helper.\n\nChange-Id: I87a10e6ad65ae493cd34c6c0e62d60c5d6f9d1d8\n(cherry picked from commit f419f1a4b12cb6a26e7dcd0c5a91aba9b9e9cb32)\n""}]",0,791481,933090c2db89d62f801563219ee33eecc485f9b8,5,3,1,10135,,,0,"Use _evacuate_server helper in func test

We have a nice helper for calling evacuate and waiting for the result so
let's replace the direct post api calls in func test with the helper.

Change-Id: I87a10e6ad65ae493cd34c6c0e62d60c5d6f9d1d8
(cherry picked from commit f419f1a4b12cb6a26e7dcd0c5a91aba9b9e9cb32)
",git fetch https://review.opendev.org/openstack/nova refs/changes/81/791481/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/libvirt/test_evacuate.py', 'nova/tests/functional/test_server_group.py', 'nova/tests/functional/wsgi/test_services.py', 'nova/tests/functional/integrated_helpers.py', 'nova/tests/functional/regressions/test_bug_1794996.py', 'nova/tests/functional/regressions/test_bug_1764883.py', 'nova/tests/functional/regressions/test_bug_1713783.py', 'nova/tests/functional/test_nova_manage.py', 'nova/tests/functional/regressions/test_bug_1823370.py', 'nova/tests/functional/notification_sample_tests/test_compute_task.py', 'nova/tests/functional/test_servers.py', 'nova/tests/functional/regressions/test_bug_1669054.py', 'nova/tests/functional/regressions/test_bug_1815153.py']",13,933090c2db89d62f801563219ee33eecc485f9b8,," server = self._evacuate_server( server, {'host': target_host}, expected_host=original_host, expected_state='ERROR', expected_migration_status='error')"," self.api.post_server_action( server['id'], {'evacuate': {'host': target_host}}) expected_params = {'OS-EXT-SRV-ATTR:host': original_host, 'status': 'ERROR'} server = self._wait_for_server_parameter(server, expected_params)",95,133
openstack%2Fnova~797675,openstack/nova,stable/victoria,Icbf59b865af48570b6467ab48d9587b6243233f2,DNM: volume detach test,ABANDONED,2021-06-23 15:18:04.000000000,2024-03-05 18:59:37.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-06-23 15:18:04.000000000', 'files': ['nova/utils.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/2cdc6e662daeea4b8dbf2b94f4689367380b6def', 'message': 'DNM: volume detach test\n\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/794757\nChange-Id: Icbf59b865af48570b6467ab48d9587b6243233f2\n'}]",0,797675,2cdc6e662daeea4b8dbf2b94f4689367380b6def,7,1,1,17685,,,0,"DNM: volume detach test

Depends-On: https://review.opendev.org/c/openstack/tempest/+/794757
Change-Id: Icbf59b865af48570b6467ab48d9587b6243233f2
",git fetch https://review.opendev.org/openstack/nova refs/changes/75/797675/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/utils.py'],1,2cdc6e662daeea4b8dbf2b94f4689367380b6def,,# dummy change,,1,0
openstack%2Fnova~785579,openstack/nova,stable/victoria,I212a2db8d71702d330b146dc6f871b402a309e74,compute: Reject requests to commit intermediary snapshot of an inactive instance,ABANDONED,2021-04-09 09:07:29.000000000,2024-03-05 18:59:34.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-04-09 09:07:29.000000000', 'files': ['nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/8a41605a78173207746a38350d7fb554f2701b7a', 'message': ""compute: Reject requests to commit intermediary snapshot of an inactive instance\n\nIntroduced by I76eb2e4da027a13525314bd58264f482374d270d the\nos-assisted-volume-snapshots API is only implemented by the libvirt virt\ndriver and should only be called by c-vol as part of an orchestrated\nremotefs based volume snapshot creation or deletion workflow.\n\nWhile not documented clearly in the current api-ref there are code\ncomments within the compute API suggesting that this API can be called\nagainst a volume attached to an instance that is in *any* vm_state.\n\nThis however is not correct when deleting and in turn committing an\nintermediary volume snapshot of an instance that is not running given\nthe current implementation within the libvirt driver. With a request to\nvirDomainBlockCommit being made that fails if the instance and\nunderlying domain is not running.\n\nAdding support for an offline commit isn't trivial and would be\nconsidered a new feature and not something we could backport on the\nstable branches. As such this change seeks to ensure requests to commit\nan intermediary volume snapshot from an inactive instance are rejected\nquickly and clearly by the compute API to the caller before we cast to\nthe compute.\n\nCloses-Bug: #1919487\nChange-Id: I212a2db8d71702d330b146dc6f871b402a309e74\n(cherry picked from commit 99409375a03e6f923a8b6b00a5dd653bab74caaf)\n(cherry picked from commit 200c743400ed3fd5240fd25d0396eb6180b3f26a)\n""}]",0,785579,8a41605a78173207746a38350d7fb554f2701b7a,14,2,1,10135,,,0,"compute: Reject requests to commit intermediary snapshot of an inactive instance

Introduced by I76eb2e4da027a13525314bd58264f482374d270d the
os-assisted-volume-snapshots API is only implemented by the libvirt virt
driver and should only be called by c-vol as part of an orchestrated
remotefs based volume snapshot creation or deletion workflow.

While not documented clearly in the current api-ref there are code
comments within the compute API suggesting that this API can be called
against a volume attached to an instance that is in *any* vm_state.

This however is not correct when deleting and in turn committing an
intermediary volume snapshot of an instance that is not running given
the current implementation within the libvirt driver. With a request to
virDomainBlockCommit being made that fails if the instance and
underlying domain is not running.

Adding support for an offline commit isn't trivial and would be
considered a new feature and not something we could backport on the
stable branches. As such this change seeks to ensure requests to commit
an intermediary volume snapshot from an inactive instance are rejected
quickly and clearly by the compute API to the caller before we cast to
the compute.

Closes-Bug: #1919487
Change-Id: I212a2db8d71702d330b146dc6f871b402a309e74
(cherry picked from commit 99409375a03e6f923a8b6b00a5dd653bab74caaf)
(cherry picked from commit 200c743400ed3fd5240fd25d0396eb6180b3f26a)
",git fetch https://review.opendev.org/openstack/nova refs/changes/79/785579/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",2,8a41605a78173207746a38350d7fb554f2701b7a,bug/1919487," vm_state=vm_states.ACTIVE) delete_info = { 'merge_target_file': 'foo.qcow2', } with mock.patch.object( self.compute_api.compute_rpcapi, 'volume_snapshot_delete' ) as mock_snapshot: self.compute_api.volume_snapshot_delete( self.context, volume_id, snapshot_id, delete_info ) self.context, fake_bdm['instance'], volume_id, snapshot_id, delete_info ) @mock.patch.object(compute_api.API, '_get_bdm_by_volume_id') def test_volume_snapshot_delete_intermediary_commit(self, mock_get_bdm): fake_bdm = fake_block_device.FakeDbBlockDeviceDict({ 'id': 123, 'device_name': '/dev/sda2', 'source_type': 'volume', 'destination_type': 'volume', 'connection_info': ""{'fake': 'connection_info'}"", 'volume_id': uuids.volume_id, 'boot_index': -1 }) fake_bdm['instance'] = fake_instance.fake_db_instance( launched_at=timeutils.utcnow(), vm_state=vm_states.STOPPED) fake_bdm['instance_uuid'] = fake_bdm['instance']['uuid'] fake_bdm = objects.BlockDeviceMapping._from_db_object( self.context, objects.BlockDeviceMapping(), fake_bdm, expected_attrs=['instance']) mock_get_bdm.return_value = fake_bdm # c-vol can provide delete_info with merge_target_file pointing to # an intermediary snapshot to commit into it's base. This is only # supported while the instance is running at present. delete_info = { 'merge_target_file': 'snap.img' } # Assert that the request is rejected as offline commit isn't supported self.assertRaises( exception.InstanceInvalidState, self.compute_api.volume_snapshot_delete, self.context, uuids.volume_id, uuids.snapshot_id, delete_info ) "," vm_state=vm_states.STOPPED) with mock.patch.object(self.compute_api.compute_rpcapi, 'volume_snapshot_delete') as mock_snapshot: self.compute_api.volume_snapshot_delete(self.context, volume_id, snapshot_id, {}) self.context, fake_bdm['instance'], volume_id, snapshot_id, {})",66,9
openstack%2Fnova~773320,openstack/nova,stable/victoria,If93fb19db766ebe1fa669d6826acedd0ae21cd20,Add regression test for bug #1909120,ABANDONED,2021-02-01 09:22:02.000000000,2024-03-05 18:59:30.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-02-01 09:22:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/c8355f8c264340e79a8003d18eeab7cce474ac26', 'message': 'Add regression test for bug #1909120\n\nRelated-Bug: #1909120\nChange-Id: If93fb19db766ebe1fa669d6826acedd0ae21cd20\n(cherry picked from commit a3697ed013372733615d0e6d7f6088ad2591429c)\n'}, {'number': 2, 'created': '2021-07-08 10:55:57.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1909120.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/c028d2c2662cba29cedaf098261141642698f8f0', 'message': 'Add regression test for bug #1909120\n\nRelated-Bug: #1909120\nChange-Id: If93fb19db766ebe1fa669d6826acedd0ae21cd20\n(cherry picked from commit a3697ed013372733615d0e6d7f6088ad2591429c)\n'}]",0,773320,c028d2c2662cba29cedaf098261141642698f8f0,9,2,2,10135,,,0,"Add regression test for bug #1909120

Related-Bug: #1909120
Change-Id: If93fb19db766ebe1fa669d6826acedd0ae21cd20
(cherry picked from commit a3697ed013372733615d0e6d7f6088ad2591429c)
",git fetch https://review.opendev.org/openstack/nova refs/changes/20/773320/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1909120.py'],1,c8355f8c264340e79a8003d18eeab7cce474ac26,bug/1909120,"# Copyright 2020, Red Hat, Inc. All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. from nova.tests.functional.api import client from nova.tests.functional import integrated_helpers class TestDetachVolumeWhileComputeDown(integrated_helpers._IntegratedTestBase): """"""Regression test for bug 1909120 This regression test aims to assert the behaviour of the os-volume_attachments API when removing a volume attachment from an instance hosted on a down compute. """""" microversion = 'latest' def test_volume_detach_while_compute_down(self): # _IntegratedTestBase uses CastAsCall so set the response timeout to 1 self.flags(rpc_response_timeout=1) # Launch a test instance server = self._create_server(networks='none') # Attach the volume volume_id = self.cinder.IMAGE_BACKED_VOL self.api.post_server_volume( server['id'], {'volumeAttachment': {'volumeId': volume_id}} ) # Assert that the volume is attached in Nova attachment = self.api.get_server_volumes(server['id'])[0] self.assertEqual(volume_id, attachment.get('volumeId')) # Assert that the volume is attached in the Cinder fixture self.assertIn( volume_id, self.cinder.volume_ids_for_instance(server['id'])) # Stop and force down the compute self.compute.stop() compute_id = self.admin_api.get_services( binary='nova-compute')[0]['id'] self.admin_api.put_service_force_down(compute_id, True) # Assert that the request fails in this functional test as the cast to # detach_volume on the compute is actually treated as a call by the # CastAsCall fixture used by _IntegratedTestBase. ex = self.assertRaises( client.OpenStackApiException, self.api.delete_server_volume, server['id'], volume_id) # FIXME(lyarwood): n-cpu should reject the initial request with 409 # self.assertEqual(409, ex.response.status_code) self.assertEqual(500, ex.response.status_code) ",,65,0
openstack%2Fnova~773321,openstack/nova,stable/victoria,I759aa36dc00a6c0612b9755dacd9aa414c408498,api: Reject requests to detach a volume when the compute is down,ABANDONED,2021-02-01 09:22:02.000000000,2024-03-05 18:59:26.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 32291}]","[{'number': 1, 'created': '2021-02-01 09:22:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/602b3e046adff9fdf52eed28414f5d50056675a5', 'message': 'api: Reject requests to detach a volume when the compute is down\n\nWhen detaching a volume from an instance Nova will currently always\nattempt to make a cast RPC call before returning a successful 202\nresponse to the caller.\n\nThe lack of checking here regarding the underlying compute can lead to\nrequests never being acted upon and has often confused callers when the\ncompute itself is down.\n\nThis change aims to correct this by having the state of the compute\nhosting the instance checked in the compute API layer. When the compute\nis down the initial request is now rejected with a 409 conflict to the\ncaller so they understand why the volume still appears attached.\n\nConflicts:\n    nova/tests/unit/compute/test_api.py\n\nNOTE(lyarwood): Conflict due to\nIbd0ffd9906e7d7f22a9233539091d450e8023f07 not being present in\nstable/victoria.\n\nCloses-Bug: #1909120\nChange-Id: I759aa36dc00a6c0612b9755dacd9aa414c408498\n(cherry picked from commit db8213af8341989354231f9b67dd983365899015)\n'}, {'number': 2, 'created': '2021-07-08 10:55:57.000000000', 'files': ['nova/tests/unit/api/openstack/compute/test_volumes.py', 'nova/tests/functional/regressions/test_bug_1909120.py', 'nova/tests/unit/compute/test_compute.py', 'nova/api/openstack/compute/volumes.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/2c7fd70eb799c44f997e9fde09ecd23aadb32e8c', 'message': 'api: Reject requests to detach a volume when the compute is down\n\nWhen detaching a volume from an instance Nova will currently always\nattempt to make a cast RPC call before returning a successful 202\nresponse to the caller.\n\nThe lack of checking here regarding the underlying compute can lead to\nrequests never being acted upon and has often confused callers when the\ncompute itself is down.\n\nThis change aims to correct this by having the state of the compute\nhosting the instance checked in the compute API layer. When the compute\nis down the initial request is now rejected with a 409 conflict to the\ncaller so they understand why the volume still appears attached.\n\nConflicts:\n    nova/tests/unit/compute/test_api.py\n\nNOTE(lyarwood): Conflict due to\nIbd0ffd9906e7d7f22a9233539091d450e8023f07 not being present in\nstable/victoria.\n\nCloses-Bug: #1909120\nChange-Id: I759aa36dc00a6c0612b9755dacd9aa414c408498\n(cherry picked from commit db8213af8341989354231f9b67dd983365899015)\n'}]",0,773321,2c7fd70eb799c44f997e9fde09ecd23aadb32e8c,16,3,2,10135,,,0,"api: Reject requests to detach a volume when the compute is down

When detaching a volume from an instance Nova will currently always
attempt to make a cast RPC call before returning a successful 202
response to the caller.

The lack of checking here regarding the underlying compute can lead to
requests never being acted upon and has often confused callers when the
compute itself is down.

This change aims to correct this by having the state of the compute
hosting the instance checked in the compute API layer. When the compute
is down the initial request is now rejected with a 409 conflict to the
caller so they understand why the volume still appears attached.

Conflicts:
    nova/tests/unit/compute/test_api.py

NOTE(lyarwood): Conflict due to
Ibd0ffd9906e7d7f22a9233539091d450e8023f07 not being present in
stable/victoria.

Closes-Bug: #1909120
Change-Id: I759aa36dc00a6c0612b9755dacd9aa414c408498
(cherry picked from commit db8213af8341989354231f9b67dd983365899015)
",git fetch https://review.opendev.org/openstack/nova refs/changes/21/773321/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/api/openstack/compute/test_volumes.py', 'nova/tests/functional/regressions/test_bug_1909120.py', 'nova/tests/unit/compute/test_compute.py', 'nova/api/openstack/compute/volumes.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",6,602b3e046adff9fdf52eed28414f5d50056675a5,bug/1909120," def test_volume_detach_while_compute_down(self): """"""Assert that requests to detach a volume from an instance on a down compute are rejected with ServiceUnavailable being raised """""" instance = self._create_instance_obj() with mock.patch.object( self.compute_api, 'get_instance_host_status', return_value=fields_obj.HostStatus.DOWN ) as mock_host_status: self.assertRaises( exception.ServiceUnavailable, self.compute_api.detach_volume, self.context, instance, None) mock_host_status.assert_called_once_with(instance) ",,50,20
openstack%2Fnova~785584,openstack/nova,stable/victoria,Iba40c2df72228b461767d5734d5a62403d9f2cfa,libvirt: Simplify device_path check in _detach_encryptor,ABANDONED,2021-04-09 09:18:36.000000000,2024-03-05 18:59:23.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-04-09 09:18:36.000000000', 'files': ['nova/virt/libvirt/driver.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/67de26776c23dddf906eab30daaecdf401abbdc4', 'message': 'libvirt: Simplify device_path check in _detach_encryptor\n\nIntroduced by Id670f13a7f197e71c77dc91276fc2fba2fc5f314 to resolve bug\n #1821696 this check was put in place to ensure _detach_encryptor did not\nattempt to use the os-brick encryptors with an unsupported volume type\nafter libvirt secrets had been removed outside the control of Nova.\n\nWith the introduction of the [workarounds]disable_native_luksv1 via\nIa500eb614cf575ab846f64f4b69c9068274c8c1f however the use of\n_allow_native_luksv1 as part of this check is no longer valid. As this\nhelper was updated to return False when the workaround is enabled,\nregardless of the underlying volume being attached natively or not.\n\nIf an admin had enabled the workaround after users had launched\ninstances with natively attached encrypted volumes *and* the libvirt\nsecrets had gone missing _detach_encryptor would attempt to use the\nos-brick encryptors. This would fail when the underlying volume type is\nunsupported, for example rbd. See bug #1917619 for an example.\n\nThis change resolves this corner case by dropping the use of\n_allow_native_luksv1 from the check and just asserting that a\ndevice_path is present for an encrypted volume before allowing the use\nof the os-brick encryptors. As noted this is safe as calls to the\nencryptors are idempotent, ignoring failures to detach when the\nunderlying volume type is supported.\n\nCloses-Bug: #1917619\nChange-Id: Iba40c2df72228b461767d5734d5a62403d9f2cfa\n(cherry picked from commit 4908daed96ddda492ced6cbb084abe8f33a8b1f7)\n(cherry picked from commit f99f667a96a357adc0070d75b5940e76726f9664)\n'}]",0,785584,67de26776c23dddf906eab30daaecdf401abbdc4,10,2,1,10135,,,0,"libvirt: Simplify device_path check in _detach_encryptor

Introduced by Id670f13a7f197e71c77dc91276fc2fba2fc5f314 to resolve bug
 #1821696 this check was put in place to ensure _detach_encryptor did not
attempt to use the os-brick encryptors with an unsupported volume type
after libvirt secrets had been removed outside the control of Nova.

With the introduction of the [workarounds]disable_native_luksv1 via
Ia500eb614cf575ab846f64f4b69c9068274c8c1f however the use of
_allow_native_luksv1 as part of this check is no longer valid. As this
helper was updated to return False when the workaround is enabled,
regardless of the underlying volume being attached natively or not.

If an admin had enabled the workaround after users had launched
instances with natively attached encrypted volumes *and* the libvirt
secrets had gone missing _detach_encryptor would attempt to use the
os-brick encryptors. This would fail when the underlying volume type is
unsupported, for example rbd. See bug #1917619 for an example.

This change resolves this corner case by dropping the use of
_allow_native_luksv1 from the check and just asserting that a
device_path is present for an encrypted volume before allowing the use
of the os-brick encryptors. As noted this is safe as calls to the
encryptors are idempotent, ignoring failures to detach when the
underlying volume type is supported.

Closes-Bug: #1917619
Change-Id: Iba40c2df72228b461767d5734d5a62403d9f2cfa
(cherry picked from commit 4908daed96ddda492ced6cbb084abe8f33a8b1f7)
(cherry picked from commit f99f667a96a357adc0070d75b5940e76726f9664)
",git fetch https://review.opendev.org/openstack/nova refs/changes/84/785584/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",2,67de26776c23dddf906eab30daaecdf401abbdc4,bug/1917619," def test_detach_encryptor_encrypted_volume_meta_missing( self, mock_get_encryptor, mock_get_metadata ): connection_info = { 'data': { 'device_path': '/dev/foo', 'volume_id': uuids.volume_id } } def test_detach_encryptor_encrypted_volume_meta_provided( self, mock_get_encryptor, mock_get_metadata ): connection_info = { 'data': { 'device_path': '/dev/foo', 'volume_id': uuids.volume_id } } def test_detach_encryptor_native_luks_device_path_secret_missing( self, mock_get_encryptor, mock_find_secret ): """"""Assert that the encryptor is not built when the associated volume secret is missing and device_path is also missing from the connection_info."," @mock.patch('nova.virt.libvirt.driver.LibvirtDriver._allow_native_luksv1') def test_detach_encryptor_encrypted_volume_meta_missing(self, mock_allow_native_luksv1, mock_get_encryptor, mock_get_metadata): connection_info = {'data': {'volume_id': uuids.volume_id}} mock_allow_native_luksv1.return_value = False @mock.patch('nova.virt.libvirt.driver.LibvirtDriver._allow_native_luksv1') def test_detach_encryptor_encrypted_volume_meta_provided(self, mock_allow_native_luksv1, mock_get_encryptor, mock_get_metadata): connection_info = {'data': {'volume_id': uuids.volume_id}} mock_allow_native_luksv1.return_value = False @mock.patch('nova.virt.libvirt.driver.LibvirtDriver._allow_native_luksv1') def test_detach_encryptor_native_luks_device_path_secret_missing(self, mock_get_encryptor, mock_allow_native_luksv1, mock_find_secret): """"""Assert that the encryptor is not built when native LUKS is available, the associated volume secret is missing and device_path is also missing from the connection_info. mock_allow_native_luksv1.return_value = True",37,24
openstack%2Fnova~792903,openstack/nova,stable/victoria,Ieb19b4e5ffde56b7f72805aa231f595f45989e60,Add regression test for bug #1928063,ABANDONED,2021-05-25 08:03:14.000000000,2024-03-05 18:59:19.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-05-25 08:03:14.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1928063.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/464e5a3dd8a823fc0efa4e2d630fb66179b2ddf5', 'message': 'Add regression test for bug #1928063\n\nRelated-Bug: #1928063\nChange-Id: Ieb19b4e5ffde56b7f72805aa231f595f45989e60\n(cherry picked from commit e1cc0ed978d40596d368ba19063fb5b51e96421e)\n(cherry picked from commit 75f223097f9744edb93db0fedb0b16a0e4860c01)\n'}]",0,792903,464e5a3dd8a823fc0efa4e2d630fb66179b2ddf5,5,1,1,10135,,,0,"Add regression test for bug #1928063

Related-Bug: #1928063
Change-Id: Ieb19b4e5ffde56b7f72805aa231f595f45989e60
(cherry picked from commit e1cc0ed978d40596d368ba19063fb5b51e96421e)
(cherry picked from commit 75f223097f9744edb93db0fedb0b16a0e4860c01)
",git fetch https://review.opendev.org/openstack/nova refs/changes/03/792903/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1928063.py'],1,464e5a3dd8a823fc0efa4e2d630fb66179b2ddf5,bug/1928063,"# Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import copy import mock from oslo_utils.fixture import uuidsentinel as uuids from nova import test from nova.tests.functional.api import client from nova.tests.functional.libvirt import base from nova.tests.unit.virt.libvirt import fakelibvirt from nova.virt.libvirt.host import SEV_KERNEL_PARAM_FILE class TestSEVInstanceReboot(base.ServersTestBase): """"""Regression test for bug #1899835 This regression test aims to assert the failure to hard reboot SEV based instances due to the use of image_meta.name within nova.virt.hardware.get_mem_encryption_constraint. """""" microversion = 'latest' @test.patch_exists(SEV_KERNEL_PARAM_FILE, True) @test.patch_open(SEV_KERNEL_PARAM_FILE, ""1\n"") @mock.patch.object( fakelibvirt.virConnect, '_domain_capability_features', new=fakelibvirt.virConnect._domain_capability_features_with_SEV) def setUp(self): super().setUp() # Configure the compute to allow SEV based instances and then start self.flags(num_memory_encrypted_guests=16, group='libvirt') self.start_compute() # Create a SEV enabled image for the test sev_image = copy.deepcopy(self.glance.image1) sev_image['id'] = uuids.sev_image_id sev_image['properties']['hw_firmware_type'] = 'uefi' sev_image['properties']['hw_machine_type'] = 'q35' sev_image['properties']['hw_mem_encryption'] = 'True' self.glance.create(None, sev_image) def test_hard_reboot(self): # Launch a SEV based instance and then attempt to hard reboot server = self._create_server( image_uuid=uuids.sev_image_id, networks='none' ) # FIXME(lyarwood): This is bug #1928063, the instance fails to reboot # due to a NotImplementedError exception being raised when we try to # access image_meta.name as this isn't stashed in the system_metadata # of the instance and as a result is not provided in the image_meta # associated with the instance during this flow. ex = self.assertRaises( client.OpenStackApiException, self._reboot_server, server, hard=True) self.assertEqual(500, ex.response.status_code) ",,69,0
openstack%2Fnova~793957,openstack/nova,stable/victoria,I66299e97bdb5b95e149b1780231a1c1bbdbd9865,hardware: Use image_meta.id within get_mem_encryption_constraint,ABANDONED,2021-06-01 12:16:25.000000000,2024-03-05 18:59:15.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-06-01 12:16:25.000000000', 'files': ['nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'nova/tests/functional/regressions/test_bug_1928063.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/880a7d77a66f89ff9e95029c5f1f4a22bb5777b3', 'message': 'hardware: Use image_meta.id within get_mem_encryption_constraint\n\nThis change resolves bug #1928063 by replacing the use of\nimage_meta.name with image_meta.id as\nI55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea should ensure it is always\navailable. The removal of other references to image_meta.name within\nvirt.hardware is left for follow ups to keep this change small and\nbackportable.\n\nNOTE(lyarwood): A simple func test conflict caused by\nI921c812ac03f7d32eec31200772020c17f292851 not being present in\nstable/wallaby.\n\nConflicts:\n    nova/tests/functional/regressions/test_bug_1928063.py\n\nCloses-Bug: #1928063\nChange-Id: I66299e97bdb5b95e149b1780231a1c1bbdbd9865\n(cherry picked from commit e98994027f0af0b22277bcfaed4ab6e6f4a2c74e)\n(cherry picked from commit 625e4e0fab5a34aa9f0b2f4a94f1559362821a37)\n'}]",0,793957,880a7d77a66f89ff9e95029c5f1f4a22bb5777b3,6,1,1,10135,,,0,"hardware: Use image_meta.id within get_mem_encryption_constraint

This change resolves bug #1928063 by replacing the use of
image_meta.name with image_meta.id as
I55d66c3a6cbd50da90065f4a58f77b5cd29ce9ea should ensure it is always
available. The removal of other references to image_meta.name within
virt.hardware is left for follow ups to keep this change small and
backportable.

NOTE(lyarwood): A simple func test conflict caused by
I921c812ac03f7d32eec31200772020c17f292851 not being present in
stable/wallaby.

Conflicts:
    nova/tests/functional/regressions/test_bug_1928063.py

Closes-Bug: #1928063
Change-Id: I66299e97bdb5b95e149b1780231a1c1bbdbd9865
(cherry picked from commit e98994027f0af0b22277bcfaed4ab6e6f4a2c74e)
(cherry picked from commit 625e4e0fab5a34aa9f0b2f4a94f1559362821a37)
",git fetch https://review.opendev.org/openstack/nova refs/changes/57/793957/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/test_hardware.py', 'nova/virt/hardware.py', 'nova/tests/functional/regressions/test_bug_1928063.py']",3,880a7d77a66f89ff9e95029c5f1f4a22bb5777b3,bug/1928063," # Hard reboot the server self._reboot_server(server, hard=True)","from nova.tests.functional.api import client # FIXME(lyarwood): This is bug #1928063, the instance fails to reboot # due to a NotImplementedError exception being raised when we try to # access image_meta.name as this isn't stashed in the system_metadata # of the instance and as a result is not provided in the image_meta # associated with the instance during this flow. ex = self.assertRaises( client.OpenStackApiException, self._reboot_server, server, hard=True) self.assertEqual(500, ex.response.status_code)",7,15
openstack%2Fnova~783654,openstack/nova,stable/victoria,I2881d77d52bcbde9f3ac6a6ddfb4a22a9bd45c8a,api: Reject volume attach requests when an active bdm exists,ABANDONED,2021-03-29 14:08:56.000000000,2024-03-05 18:59:11.000000000,,"[{'_account_id': 9373}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-03-29 14:08:56.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1908075.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/75cdbdd9c64353e8b73c36b184ea2140f0a4861d', 'message': 'api: Reject volume attach requests when an active bdm exists\n\nWhen attaching volumes to instances Nova has previously relied on checks\ncarried out by c-api to ensure that a single non-multiattach volume is\nnot attached to multiple instances at once. While this works well in\nmost cases it does not handle PEBKAC issues when admins reset the state\nof a volume to available, allowing users to request that Nova attach the\nvolume to another instance.\n\nThis change aims to address this by including a simple check in the\nattach flow for non-multiattach volumes ensuring that there are no\nexisting active block device mapping records for the volume already\npresent within Nova.\n\nCloses-Bug: #1908075\nChange-Id: I2881d77d52bcbde9f3ac6a6ddfb4a22a9bd45c8a\n(cherry picked from commit 1252588d4e48da1d3a753639a8a4d937acf3e037)\n'}]",0,783654,75cdbdd9c64353e8b73c36b184ea2140f0a4861d,10,3,1,10135,,,0,"api: Reject volume attach requests when an active bdm exists

When attaching volumes to instances Nova has previously relied on checks
carried out by c-api to ensure that a single non-multiattach volume is
not attached to multiple instances at once. While this works well in
most cases it does not handle PEBKAC issues when admins reset the state
of a volume to available, allowing users to request that Nova attach the
volume to another instance.

This change aims to address this by including a simple check in the
attach flow for non-multiattach volumes ensuring that there are no
existing active block device mapping records for the volume already
present within Nova.

Closes-Bug: #1908075
Change-Id: I2881d77d52bcbde9f3ac6a6ddfb4a22a9bd45c8a
(cherry picked from commit 1252588d4e48da1d3a753639a8a4d937acf3e037)
",git fetch https://review.opendev.org/openstack/nova refs/changes/54/783654/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/regressions/test_bug_1908075.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",3,75cdbdd9c64353e8b73c36b184ea2140f0a4861d,bug/1908075," @mock.patch.object(objects.BlockDeviceMapping, 'get_by_volume') def test_attach_volume_new_flow( self, mock_attach, mock_get_by_volume, mock_get_by_instance, mock_reserve, mock_record ): mock_get_by_instance.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') mock_get_by_volume.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') @mock.patch.object(objects.BlockDeviceMapping, 'get_by_volume') def test_tagged_volume_attach_new_flow( self, mock_attach, mock_get_by_volume, mock_get_by_instance, mock_reserve, mock_record ): mock_get_by_instance.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') mock_get_by_volume.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') @mock.patch.object(objects.BlockDeviceMapping, 'get_by_volume') def test_attach_volume_attachment_create_fails( self, mock_attach, mock_get_by_volume, mock_get_by_instance, mock_reserve ): mock_get_by_instance.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') mock_get_by_volume.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') @mock.patch.object(objects.BlockDeviceMapping, 'get_by_volume') @mock.patch.object( objects.BlockDeviceMapping, 'get_by_volume_and_instance') def test_attach_volume_bdm_exists(self, mock_by_instance, mock_by_volume): mock_by_instance.side_effect = exception.VolumeBDMNotFound( volume_id=uuids.volume) mock_by_volume.return_value = mock.Mock( spec=objects.BlockDeviceMapping, volume_id=uuids.volume, instance_uuid=uuids.instance) instance = self._create_instance_obj() volume = {'id': uuids.volume, 'multiattach': False} with mock.patch.object( self.compute_api, 'volume_api', mock.MagicMock(spec=cinder.API) ) as mock_v_api: mock_v_api.get.return_value = volume # Assert that we raise InvalidVolume when we find a bdm for the vol self.assertRaises( exception.InvalidVolume, self.compute_api.attach_volume, self.context, instance, uuids.volume ) "," def test_attach_volume_new_flow(self, mock_attach, mock_bdm, mock_reserve, mock_record): mock_bdm.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') def test_tagged_volume_attach_new_flow(self, mock_attach, mock_bdm, mock_reserve, mock_record): mock_bdm.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') def test_attach_volume_attachment_create_fails(self, mock_attach, mock_bdm, mock_reserve): mock_bdm.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id')",89,27
openstack%2Fnova~783653,openstack/nova,stable/victoria,I639dd5af7c039da546eaf9ccce56cbaaa38fa79a,Add regression test for bug #1908075,ABANDONED,2021-03-29 14:08:56.000000000,2024-03-05 18:59:08.000000000,,"[{'_account_id': 9373}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-03-29 14:08:56.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1908075.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/8e2a3dd2f08a2f0c420bc1da9c02ff6b128c06c5', 'message': 'Add regression test for bug #1908075\n\nRelated-Bug: #1908075\nChange-Id: I639dd5af7c039da546eaf9ccce56cbaaa38fa79a\n(cherry picked from commit ee3a8f02253f1f652785c07ea0be6464ab4bcc11)\n'}]",0,783653,8e2a3dd2f08a2f0c420bc1da9c02ff6b128c06c5,6,3,1,10135,,,0,"Add regression test for bug #1908075

Related-Bug: #1908075
Change-Id: I639dd5af7c039da546eaf9ccce56cbaaa38fa79a
(cherry picked from commit ee3a8f02253f1f652785c07ea0be6464ab4bcc11)
",git fetch https://review.opendev.org/openstack/nova refs/changes/53/783653/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1908075.py'],1,8e2a3dd2f08a2f0c420bc1da9c02ff6b128c06c5,bug/1908075,"# Copyright 2020, Red Hat, Inc. All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. from nova.tests.functional import integrated_helpers class TestVolAttachCinderReset(integrated_helpers._IntegratedTestBase): """"""Regression test for bug 1908075. This regression test aims to assert if n-api allows a non-multiattached volume to be attached to multiple instances after an admin has forcibly reset the state of the volume in Cinder. """""" microversion = 'latest' def test_volume_attach_after_cinder_reset_state(self): volume_id = self.cinder.IMAGE_BACKED_VOL # Launch a server and attach a volume server_a = self._create_server(networks='none') self.api.post_server_volume( server_a['id'], {'volumeAttachment': {'volumeId': volume_id}} ) # reset-state of the volume within the cinder fixture, we don't model # the state of the volume within the fixture so this will have to do. del self.cinder.volume_to_attachment[volume_id] self.assertNotIn( volume_id, self.cinder.volume_ids_for_instance(server_a['id'])) # Launch a second server and attempt to attach the same volume again server_b = self._create_server(networks='none') # FIXME(lyarwood): n-api shouldn't accept this request as we already # have an active bdm record for this non-multiattach volume. self.api.post_server_volume( server_b['id'], {'volumeAttachment': {'volumeId': volume_id}} ) # Assert that we have bdms within Nova still for this attachment self.assertEqual( volume_id, self.api.get_server_volumes(server_a['id'])[0].get('volumeId')) self.assertEqual( volume_id, self.api.get_server_volumes(server_b['id'])[0].get('volumeId')) # Assert that the new attachment is the only one in the fixture self.assertIn( volume_id, self.cinder.volume_ids_for_instance(server_b['id'])) def test_volume_attach_after_cinder_reset_state_multiattach_volume(self): volume_id = self.cinder.MULTIATTACH_VOL # Launch a server and attach a volume server_a = self._create_server(networks='none') self.api.post_server_volume( server_a['id'], {'volumeAttachment': {'volumeId': volume_id}} ) # reset-state of the volume within the cinder fixture, we don't model # the state of the volume within the fixture so this will have to do. del self.cinder.volume_to_attachment[volume_id] self.assertNotIn( volume_id, self.cinder.volume_ids_for_instance(server_a['id'])) # Launch a second server and attempt to attach the same volume again server_b = self._create_server(networks='none') # NOTE(lyarwood): Unlike non-multiattach volumes this should always be # allowed as we can have multiple active bdms for multiattached volumes self.api.post_server_volume( server_b['id'], {'volumeAttachment': {'volumeId': volume_id}} ) # Assert that we have bdms within Nova still for this attachment self.assertEqual( volume_id, self.api.get_server_volumes(server_a['id'])[0].get('volumeId')) self.assertEqual( volume_id, self.api.get_server_volumes(server_b['id'])[0].get('volumeId')) # Assert that the new attachment is the only one in the fixture self.assertIn( volume_id, self.cinder.volume_ids_for_instance(server_b['id'])) ",,102,0
openstack%2Fnova~817636,openstack/nova,stable/victoria,I27bd36b7983e704c78c690f441d2f96bedb955d1,DNM - Testing volume detach failures,ABANDONED,2021-11-11 18:14:57.000000000,2024-03-05 18:59:04.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2021-11-11 18:14:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e6651ff11b272cb8a8e75b304c1279850865da4a', 'message': 'DNM - Testing volume detach failures\n\nChange-Id: I27bd36b7983e704c78c690f441d2f96bedb955d1\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/817635\n'}, {'number': 2, 'created': '2021-11-17 13:30:11.000000000', 'files': ['.DNM'], 'web_link': 'https://opendev.org/openstack/nova/commit/567e4541c7e8542992351ff5699d01a6e592945e', 'message': 'DNM - Testing volume detach failures\n\nChange-Id: I27bd36b7983e704c78c690f441d2f96bedb955d1\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/817772\n'}]",3,817636,567e4541c7e8542992351ff5699d01a6e592945e,16,1,2,10135,,,0,"DNM - Testing volume detach failures

Change-Id: I27bd36b7983e704c78c690f441d2f96bedb955d1
Depends-On: https://review.opendev.org/c/openstack/tempest/+/817772
",git fetch https://review.opendev.org/openstack/nova refs/changes/36/817636/1 && git format-patch -1 --stdout FETCH_HEAD,['.DNM'],1,e6651ff11b272cb8a8e75b304c1279850865da4a,,,,0,0
openstack%2Fnova~805629,openstack/nova,stable/victoria,I2da867f2734b590a884b1fe1200c402cbf7e9e1c,workarounds: Add libvirt_disable_apic,ABANDONED,2021-08-23 12:55:25.000000000,2024-03-05 18:59:00.000000000,,"[{'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-08-23 12:55:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/04b49b9e42cff19e219cb330ffe2b35dd11f6322', 'message': 'workarounds: Add libvirt_disable_apic\n\nThis change adds a new workaround config option to allow disabling the\nguest apic.\n\nCo-authored-by: Lee Yarwood <lyarwood@redhat.com>\nRelated-Bug: #1939108\nChange-Id: I2da867f2734b590a884b1fe1200c402cbf7e9e1c\n(cherry picked from commit ec48e1523dfdd0f1031e1a70c28c56962db66e8a)\n(cherry picked from commit 220c5a444729781f0cb74ca73edc7886d9ec56c4)\n'}, {'number': 2, 'created': '2021-08-23 14:30:27.000000000', 'files': ['nova/virt/libvirt/driver.py', 'releasenotes/notes/libvirt-disable-apic-39599bdc2d110a1f.yaml', 'nova/conf/workarounds.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/0c5d9d1d257b6afa88f3e5d1bd2c0f6b42e161a2', 'message': 'workarounds: Add libvirt_disable_apic\n\nThis change adds a new workaround config option to allow disabling the\nguest apic.\n\nCo-authored-by: Lee Yarwood <lyarwood@redhat.com>\nRelated-Bug: #1939108\nChange-Id: I2da867f2734b590a884b1fe1200c402cbf7e9e1c\n(cherry picked from commit ec48e1523dfdd0f1031e1a70c28c56962db66e8a)\n(cherry picked from commit caeecdec5f32e4c63f3edf6442734e44cfb06f14)\n'}]",0,805629,0c5d9d1d257b6afa88f3e5d1bd2c0f6b42e161a2,13,2,2,10135,,,0,"workarounds: Add libvirt_disable_apic

This change adds a new workaround config option to allow disabling the
guest apic.

Co-authored-by: Lee Yarwood <lyarwood@redhat.com>
Related-Bug: #1939108
Change-Id: I2da867f2734b590a884b1fe1200c402cbf7e9e1c
(cherry picked from commit ec48e1523dfdd0f1031e1a70c28c56962db66e8a)
(cherry picked from commit caeecdec5f32e4c63f3edf6442734e44cfb06f14)
",git fetch https://review.opendev.org/openstack/nova refs/changes/29/805629/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'releasenotes/notes/libvirt-disable-apic-39599bdc2d110a1f.yaml', 'nova/conf/workarounds.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",4,04b49b9e42cff19e219cb330ffe2b35dd11f6322,workaround-disable-apic," @mock.patch.object(host.Host, 'has_min_version', new=mock.Mock(return_value=True)) def test_get_guest_config_apic_workaround(self): self.flags(virt_type='qemu', group='libvirt') drvr = libvirt_driver.LibvirtDriver(fake.FakeVirtAPI(), True) instance_ref = objects.Instance(**self.test_instance) image_meta = objects.ImageMeta.from_dict(self.test_image_meta) disk_info = blockinfo.get_disk_info( CONF.libvirt.virt_type, instance_ref, image_meta) cfg = drvr._get_guest_config( instance_ref, _fake_network_info(self), image_meta, disk_info) self.assertEqual(3, len(cfg.features)) self.assertIsInstance( cfg.features[0], vconfig.LibvirtConfigGuestFeatureACPI) self.assertIsInstance( cfg.features[1], vconfig.LibvirtConfigGuestFeatureAPIC) self.assertIsInstance( cfg.features[2], vconfig.LibvirtConfigGuestFeatureVMCoreInfo) self.flags(libvirt_disable_apic=True, group='workarounds') cfg = drvr._get_guest_config( instance_ref, _fake_network_info(self), image_meta, disk_info) self.assertEqual(2, len(cfg.features)) self.assertIsInstance( cfg.features[0], vconfig.LibvirtConfigGuestFeatureACPI) self.assertIsInstance( cfg.features[1], vconfig.LibvirtConfigGuestFeatureVMCoreInfo) ",,56,1
openstack%2Fnova~829504,openstack/nova,stable/victoria,I17f4d7d2cb129c4ec1479cc4e5d723da75d3a527,Gracefull recovery when attaching volume fails,ABANDONED,2022-02-16 09:24:08.000000000,2024-03-05 18:58:56.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-02-16 09:24:08.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/67f923b0ebe83869ae225407d170a7fe52ccd045', 'message': 'Gracefull recovery when attaching volume fails\n\nWhen trying to attach a volume to an already running instance the nova-api\nrequests the nova-compute service to create a BlockDeviceMapping. If the\nnova-api does not receive a response within `rpc_response_timeout` it will\ntreat the request as failed and raise an exception.\n\nThere are multiple cases where nova-compute actually already processed the\nrequest and just the reply did not reach the nova-api in time (see bug report).\nAfter the failed request the database will contain a BlockDeviceMapping entry\nfor the volume + instance combination that will never be cleaned up again.\nThis entry also causes the nova-api to reject all future attachments of this\nvolume to this instance (as it assumes it is already attached).\n\nTo work around this we check if a BlockDeviceMapping has already been created\nwhen we see a messaging timeout. If this is the case we can safely delete it\nas the compute node has already finished processing and we will no longer pick\nit up.\nThis allows users to try the request again.\n\nA previous fix was abandoned but without a clear reason ([1]).\n\n[1]: https://review.opendev.org/c/openstack/nova/+/731804\n\nCloses-Bug: 1960401\nChange-Id: I17f4d7d2cb129c4ec1479cc4e5d723da75d3a527\n(cherry picked from commit 9eb116b99ce32bc69c4abf8ec3b0179ef89a8860)\n'}, {'number': 2, 'created': '2022-02-18 07:56:01.000000000', 'files': ['releasenotes/notes/bug-1960401-504eb255253d966a.yaml', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/d2edbfb918ede14ff6f40420b8fde7f0cb4fb660', 'message': 'Gracefull recovery when attaching volume fails\n\nWhen trying to attach a volume to an already running instance the nova-api\nrequests the nova-compute service to create a BlockDeviceMapping. If the\nnova-api does not receive a response within `rpc_response_timeout` it will\ntreat the request as failed and raise an exception.\n\nThere are multiple cases where nova-compute actually already processed the\nrequest and just the reply did not reach the nova-api in time (see bug report).\nAfter the failed request the database will contain a BlockDeviceMapping entry\nfor the volume + instance combination that will never be cleaned up again.\nThis entry also causes the nova-api to reject all future attachments of this\nvolume to this instance (as it assumes it is already attached).\n\nTo work around this we check if a BlockDeviceMapping has already been created\nwhen we see a messaging timeout. If this is the case we can safely delete it\nas the compute node has already finished processing and we will no longer pick\nit up.\nThis allows users to try the request again.\n\nA previous fix was abandoned but without a clear reason ([1]).\n\n[1]: https://review.opendev.org/c/openstack/nova/+/731804\n\nCloses-Bug: 1960401\nChange-Id: I17f4d7d2cb129c4ec1479cc4e5d723da75d3a527\n(cherry picked from commit 9eb116b99ce32bc69c4abf8ec3b0179ef89a8860)\n'}]",0,829504,d2edbfb918ede14ff6f40420b8fde7f0cb4fb660,9,1,2,29074,,,0,"Gracefull recovery when attaching volume fails

When trying to attach a volume to an already running instance the nova-api
requests the nova-compute service to create a BlockDeviceMapping. If the
nova-api does not receive a response within `rpc_response_timeout` it will
treat the request as failed and raise an exception.

There are multiple cases where nova-compute actually already processed the
request and just the reply did not reach the nova-api in time (see bug report).
After the failed request the database will contain a BlockDeviceMapping entry
for the volume + instance combination that will never be cleaned up again.
This entry also causes the nova-api to reject all future attachments of this
volume to this instance (as it assumes it is already attached).

To work around this we check if a BlockDeviceMapping has already been created
when we see a messaging timeout. If this is the case we can safely delete it
as the compute node has already finished processing and we will no longer pick
it up.
This allows users to try the request again.

A previous fix was abandoned but without a clear reason ([1]).

[1]: https://review.opendev.org/c/openstack/nova/+/731804

Closes-Bug: 1960401
Change-Id: I17f4d7d2cb129c4ec1479cc4e5d723da75d3a527
(cherry picked from commit 9eb116b99ce32bc69c4abf8ec3b0179ef89a8860)
",git fetch https://review.opendev.org/openstack/nova refs/changes/04/829504/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/bug-1960401-504eb255253d966a.yaml', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",3,67f923b0ebe83869ae225407d170a7fe52ccd045,," @mock.patch.object( objects.BlockDeviceMapping, 'get_by_volume_and_instance') @mock.patch.object(objects.BlockDeviceMappingList, 'get_by_volume') def test_attach_volume_reserve_bdm_timeout( self, mock_get_by_volume, mock_get_by_volume_and_instance, mock_reserve): mock_get_by_volume.side_effect = exception.VolumeBDMNotFound( volume_id='fake-volume-id') fake_bdm = mock.MagicMock(spec=objects.BlockDeviceMapping) mock_get_by_volume_and_instance.return_value = fake_bdm instance = self._create_instance_obj() volume = fake_volume.fake_volume(1, 'test-vol', 'test-vol', None, None, None, None, None) mock_reserve.side_effect = oslo_exceptions.MessagingTimeout() mock_volume_api = mock.patch.object(self.compute_api, 'volume_api', mock.MagicMock(spec=cinder.API)) with mock_volume_api as mock_v_api: mock_v_api.get.return_value = volume self.assertRaises(oslo_exceptions.MessagingTimeout, self.compute_api.attach_volume, self.context, instance, volume['id']) mock_get_by_volume_and_instance.assert_called_once_with( self.context, volume['id'], instance.uuid) fake_bdm.destroy.assert_called_once_with() @mock.patch.object(compute_rpcapi.ComputeAPI, 'reserve_block_device_name')",,56,4
openstack%2Fnova~836605,openstack/nova,stable/victoria,Id0539d2ee909d86ffef07ae566697db8ae0f83b4,extend_volume of libvirt/volume/iscsi should not use device_path,ABANDONED,2022-04-05 19:17:20.000000000,2024-03-05 18:58:52.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-04-05 19:17:20.000000000', 'files': ['nova/virt/libvirt/volume/iscsi.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/ea8ba7859bf7fbab62857e357986eb16f63e868b', 'message': ""extend_volume of libvirt/volume/iscsi should not use device_path\n\nThe connection_info['data']['device_path'] field is not always\navailable. In cases that it was not available, it would cause\nthe debug code to raise a KeyError instead of proceeding.\n\nOther similar debug messages in the same file do not include\ndevice_path. As a simple fix, just drop the device_path from\nthe log.\n\nCloses-Bug: #1936439\n\nChange-Id: Id0539d2ee909d86ffef07ae566697db8ae0f83b4\nSigned-off-by: Mark Mielke <mark.mielke@gmail.com>\n(cherry picked from commit ad60f23be3d562422b350aade04aa92ade39fb32)\n""}]",0,836605,ea8ba7859bf7fbab62857e357986eb16f63e868b,6,1,1,8864,,,0,"extend_volume of libvirt/volume/iscsi should not use device_path

The connection_info['data']['device_path'] field is not always
available. In cases that it was not available, it would cause
the debug code to raise a KeyError instead of proceeding.

Other similar debug messages in the same file do not include
device_path. As a simple fix, just drop the device_path from
the log.

Closes-Bug: #1936439

Change-Id: Id0539d2ee909d86ffef07ae566697db8ae0f83b4
Signed-off-by: Mark Mielke <mark.mielke@gmail.com>
(cherry picked from commit ad60f23be3d562422b350aade04aa92ade39fb32)
",git fetch https://review.opendev.org/openstack/nova refs/changes/05/836605/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/virt/libvirt/volume/iscsi.py'],1,ea8ba7859bf7fbab62857e357986eb16f63e868b,libvirt_iscsi_extend_volume_device_path_failure-stable/wallaby-stable/victoria," LOG.debug(""Extend iSCSI Volume: new_size=%s"","," LOG.debug(""Extend iSCSI Volume %s; new_size=%s"", connection_info['data']['device_path'],",1,2
openstack%2Fnova~791480,openstack/nova,stable/victoria,Id8dd11dc45bfc090b966ead0c69e46a17154dadb,Remove self.server dependency form _evacuate_server,ABANDONED,2021-05-14 13:31:31.000000000,2024-03-05 18:58:48.000000000,,"[{'_account_id': 8864}, {'_account_id': 9708}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-05-14 13:31:31.000000000', 'files': ['nova/tests/functional/integrated_helpers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/e4d17926008209a1c79983b01d5405682b77bd3e', 'message': 'Remove self.server dependency form _evacuate_server\n\nThis has not been caused trouble yet as the only caller called it with\nself.server anyhow.\n\nChange-Id: Id8dd11dc45bfc090b966ead0c69e46a17154dadb\n(cherry picked from commit 1f0641854904417f018cb5746bfcb6a62d1d6bc1)\n'}]",0,791480,e4d17926008209a1c79983b01d5405682b77bd3e,5,4,1,10135,,,0,"Remove self.server dependency form _evacuate_server

This has not been caused trouble yet as the only caller called it with
self.server anyhow.

Change-Id: Id8dd11dc45bfc090b966ead0c69e46a17154dadb
(cherry picked from commit 1f0641854904417f018cb5746bfcb6a62d1d6bc1)
",git fetch https://review.opendev.org/openstack/nova refs/changes/80/791480/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/integrated_helpers.py'],1,e4d17926008209a1c79983b01d5405682b77bd3e,," server, {'OS-EXT-SRV-ATTR:host': host, 'status': expected_state})"," self.server, {'OS-EXT-SRV-ATTR:host': host, 'status': expected_state})",1,2
openstack%2Fnova~842588,openstack/nova,stable/victoria,Id04e0df12829df4d8929e03a8b76b5cbe0549059,neutron: Unbind remaining ports after PortNotFound,ABANDONED,2022-05-19 17:57:44.000000000,2024-03-05 18:58:44.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-19 17:57:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/586068d5dc574753d39bc0bf390b3a184e75b87b', 'message': 'neutron: Unbind remaining ports after PortNotFound\n\nJust because we encountered a PortNotFound error when unbinding a port\ndoesn\'t mean we should stop unbinding the remaining ports. If this error\nis encountered, simply continue with the other ports.\n\nWhile we\'re here, we clean up some other tests related to \'_unbind_port\'\nsince they\'re clearly duplicates.\n\nConflicts:\n  nova/network/neutron.py\n  nova/tests/unit/network/test_neutron.py\n\nNOTE(stephenfin): Conflicts are due to the absence of change\nI82705e035c49fc88ed0dc0df4db135f51c4c7fbf (""Turn on mypy for\nnova/network/neutron.py"") and change\nIdaf92c54df0f39d177d7acaabbfcf254ff5a4d0f (""smartnic support - create\narqs""), neither of which we want to backport.\n\nChange-Id: Id04e0df12829df4d8929e03a8b76b5cbe0549059\nSigned-off-by: Stephen Finucane <sfinucan@redhat.com>\nCloses-Bug: #1974173\n(cherry picked from commit 9e0dcb52ab308a63c6a18e47d1850cc3ade4d807)\n(cherry picked from commit 6f32b118640ee466b58155b5ecd50e041b4a2e7e)\n(cherry picked from commit d322f8e8b5a95fd60dab9c6c543b4c77ea893836)\n(cherry picked from commit a49a0b970a0072bfddc1b403c75c3c4cd6636f83)\n'}, {'number': 2, 'created': '2022-05-19 17:58:27.000000000', 'files': ['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/581cffad7ba0a4f9950943bc029903d40f581207', 'message': ""neutron: Unbind remaining ports after PortNotFound\n\nJust because we encountered a PortNotFound error when unbinding a port\ndoesn't mean we should stop unbinding the remaining ports. If this error\nis encountered, simply continue with the other ports.\n\nWhile we're here, we clean up some other tests related to '_unbind_port'\nsince they're clearly duplicates.\n\nChange-Id: Id04e0df12829df4d8929e03a8b76b5cbe0549059\nSigned-off-by: Stephen Finucane <sfinucan@redhat.com>\nCloses-Bug: #1974173\n(cherry picked from commit 9e0dcb52ab308a63c6a18e47d1850cc3ade4d807)\n(cherry picked from commit 6f32b118640ee466b58155b5ecd50e041b4a2e7e)\n(cherry picked from commit d322f8e8b5a95fd60dab9c6c543b4c77ea893836)\n(cherry picked from commit a49a0b970a0072bfddc1b403c75c3c4cd6636f83)\n""}]",1,842588,581cffad7ba0a4f9950943bc029903d40f581207,10,1,2,15334,,,0,"neutron: Unbind remaining ports after PortNotFound

Just because we encountered a PortNotFound error when unbinding a port
doesn't mean we should stop unbinding the remaining ports. If this error
is encountered, simply continue with the other ports.

While we're here, we clean up some other tests related to '_unbind_port'
since they're clearly duplicates.

Change-Id: Id04e0df12829df4d8929e03a8b76b5cbe0549059
Signed-off-by: Stephen Finucane <sfinucan@redhat.com>
Closes-Bug: #1974173
(cherry picked from commit 9e0dcb52ab308a63c6a18e47d1850cc3ade4d807)
(cherry picked from commit 6f32b118640ee466b58155b5ecd50e041b4a2e7e)
(cherry picked from commit d322f8e8b5a95fd60dab9c6c543b4c77ea893836)
(cherry picked from commit a49a0b970a0072bfddc1b403c75c3c4cd6636f83)
",git fetch https://review.opendev.org/openstack/nova refs/changes/88/842588/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/network/test_neutron.py', 'nova/network/neutron.py']",2,586068d5dc574753d39bc0bf390b3a184e75b87b,bug/1974173, continue, return,64,23
openstack%2Fnova~842952,openstack/nova,stable/victoria,I8f7f26e10519c87e06de47bd4d9845151f889129,Reproducer unit test for bug 1934094,ABANDONED,2022-05-23 09:49:18.000000000,2024-03-05 18:58:40.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-23 09:49:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ceaeb4ac2590a6209e545707a52263763d341fb0', 'message': 'Reproducer unit test for bug 1934094\n\nRelated bug: #1934094\n\nSigned-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>\nChange-Id: I8f7f26e10519c87e06de47bd4d9845151f889129\n(cherry picked from commit 78e10f5f14a018fd1d96ea242923631459acb62c)\n(cherry picked from commit ec73ff1f78714eb62686d0f39fc4e79ffdf559af)\n(cherry picked from commit 77b9bbd0e5926ffad382ae97099cc829153000a5)\n'}, {'number': 2, 'created': '2022-05-23 09:58:35.000000000', 'files': ['nova/tests/unit/compute/test_shelve.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/7cda2f49ff93011b6f8a3bccf2a4c8b7fa73fc20', 'message': 'Reproducer unit test for bug 1934094\n\nmodified:   nova/tests/unit/compute/test_shelve.py due to\nI258df4d77f6d86df1d867a8fe27360731c21d237 is not in stable/victoria\n\nRelated bug: #1934094\n\nSigned-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>\nChange-Id: I8f7f26e10519c87e06de47bd4d9845151f889129\n(cherry picked from commit 78e10f5f14a018fd1d96ea242923631459acb62c)\n(cherry picked from commit ec73ff1f78714eb62686d0f39fc4e79ffdf559af)\n(cherry picked from commit 77b9bbd0e5926ffad382ae97099cc829153000a5)\n'}]",0,842952,7cda2f49ff93011b6f8a3bccf2a4c8b7fa73fc20,6,1,2,9708,,,0,"Reproducer unit test for bug 1934094

modified:   nova/tests/unit/compute/test_shelve.py due to
I258df4d77f6d86df1d867a8fe27360731c21d237 is not in stable/victoria

Related bug: #1934094

Signed-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>
Change-Id: I8f7f26e10519c87e06de47bd4d9845151f889129
(cherry picked from commit 78e10f5f14a018fd1d96ea242923631459acb62c)
(cherry picked from commit ec73ff1f78714eb62686d0f39fc4e79ffdf559af)
(cherry picked from commit 77b9bbd0e5926ffad382ae97099cc829153000a5)
",git fetch https://review.opendev.org/openstack/nova refs/changes/52/842952/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/unit/compute/test_shelve.py'],1,ceaeb4ac2590a6209e545707a52263763d341fb0,bug/1934094," def test_unshelve_spawn_fails_cleanup_instance_image_ref(self): """"""Tests error handling when a instance fails to unshelve and makes sure to revert instance.image_ref to the initial value instead of keeping the one of shelved image https://bugs.launchpad.net/nova/+bug/1934094 """""" instance = self._create_fake_instance_obj() # TODO(pslestang) to uncomment when bug 1934094 is fixed # initial_image_ref = instance.image_ref fake_spec = objects.RequestSpec() shelved_image = {'id': uuids.image_id} with mock.patch.object(self.compute.driver, 'spawn', side_effect=test.TestingException('Spawn Failed')): self.assertRaises(test.TestingException, self.compute.unshelve_instance, self.context, instance, image=shelved_image, filter_properties={}, node='fake-node', request_spec=fake_spec, accel_uuids=[]) # FIXME(pslestang) Until bug 1934094 is fixed # The instance.image_ref is set to shelved_image.id but should be # equal to initial_image_ref self.assertEqual(instance.image_ref, shelved_image['id']) ",,24,0
openstack%2Fnova~840845,openstack/nova,stable/victoria,I20fb4ea96d5dfabfc4be3b5ecec0e4e6c5b3a318,Isolate PCI tracker unit tests,ABANDONED,2022-05-06 09:12:18.000000000,2024-03-05 18:58:36.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 09:12:18.000000000', 'files': ['nova/tests/unit/pci/test_manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/2fb300f71e87490f3e91d03dd5ce8eb88a5996a7', 'message': 'Isolate PCI tracker unit tests\n\nDuring the testing If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 we noticed\nthat the unit test cases of PciTracker._set_hvdev are changing and\nleaking global state leading to unstable tests.\n\nTo reproduce on master, duplicate the\ntest_set_hvdev_remove_tree_maintained_with_allocations test case and run\nPciDevTrackerTestCase serially. The duplicated test case will fail with\n\n  File ""/nova/nova/objects/pci_device.py"", line 238, in _from_db_object\n  setattr(pci_device, key, db_dev[key])\n  KeyError: \'id\'\n\nThis is caused by the fact that the test data is defined on module\nlevel, both _create_tracker and _set_hvdevs modifies the devices\npassed to them, and some test mixes passing db dicts to _set_hvdevs\nthat expects pci dicts from the hypervisor.\n\nThis patch fixes multiple related issues:\n* always deepcopy what _create_tracker takes as that list is later\n  returned to the PciTracker via a mock and the tracker might modify\n  what it got\n\n* ensure that _create_tracker takes db dicts (with id field) while\n  _set_hvdevs takes pci dicts in the hypervisor format (without id\n  field)\n\n* always deepcopy what is passed to _set_hvdevs as the PciTracker modify\n  what it gets.\n\n* normalize when the deepcopy happens to give a safe patter for future\n  test cases\n\nConflicts:\n      nova/tests/unit/pci/test_manager.py due to\n      I1d270cc3e88a74097eefe3b887106222ae06fe1c is not in\n      stable/victoria\n\nChange-Id: I20fb4ea96d5dfabfc4be3b5ecec0e4e6c5b3a318\n(cherry picked from commit c58376db75917444831934963fa75b4b57f08818)\n(cherry picked from commit f04cfd42359d555e746df0e2c48d989d0c3244f1)\n(cherry picked from commit 1023580f6d9008f5e56f6d3905b6e227bd2bff67)\n(cherry picked from commit 3335d9317994ea3490fbc9945e0e961c42aef907)\n'}]",0,840845,2fb300f71e87490f3e91d03dd5ce8eb88a5996a7,5,1,1,9708,,,0,"Isolate PCI tracker unit tests

During the testing If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 we noticed
that the unit test cases of PciTracker._set_hvdev are changing and
leaking global state leading to unstable tests.

To reproduce on master, duplicate the
test_set_hvdev_remove_tree_maintained_with_allocations test case and run
PciDevTrackerTestCase serially. The duplicated test case will fail with

  File ""/nova/nova/objects/pci_device.py"", line 238, in _from_db_object
  setattr(pci_device, key, db_dev[key])
  KeyError: 'id'

This is caused by the fact that the test data is defined on module
level, both _create_tracker and _set_hvdevs modifies the devices
passed to them, and some test mixes passing db dicts to _set_hvdevs
that expects pci dicts from the hypervisor.

This patch fixes multiple related issues:
* always deepcopy what _create_tracker takes as that list is later
  returned to the PciTracker via a mock and the tracker might modify
  what it got

* ensure that _create_tracker takes db dicts (with id field) while
  _set_hvdevs takes pci dicts in the hypervisor format (without id
  field)

* always deepcopy what is passed to _set_hvdevs as the PciTracker modify
  what it gets.

* normalize when the deepcopy happens to give a safe patter for future
  test cases

Conflicts:
      nova/tests/unit/pci/test_manager.py due to
      I1d270cc3e88a74097eefe3b887106222ae06fe1c is not in
      stable/victoria

Change-Id: I20fb4ea96d5dfabfc4be3b5ecec0e4e6c5b3a318
(cherry picked from commit c58376db75917444831934963fa75b4b57f08818)
(cherry picked from commit f04cfd42359d555e746df0e2c48d989d0c3244f1)
(cherry picked from commit 1023580f6d9008f5e56f6d3905b6e227bd2bff67)
(cherry picked from commit 3335d9317994ea3490fbc9945e0e961c42aef907)
",git fetch https://review.opendev.org/openstack/nova refs/changes/45/840845/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/unit/pci/test_manager.py'],1,2fb300f71e87490f3e91d03dd5ce8eb88a5996a7,bug/1969496,"fake_pci_devs = [fake_pci, fake_pci_1, fake_pci_2] fake_pci_devs_tree = [fake_pci_3, fake_pci_4, fake_pci_5] self.fake_devs = copy.deepcopy(fake_devs) self.fake_devs = copy.deepcopy(fake_db_devs) self._create_tracker(fake_db_devs) fake_pci_devs = [fake_pci, fake_pci_1, fake_pci_2, fake_pci_3] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_devs = [fake_pci_3, fake_pci_4, fake_pci_5, fake_new_device] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_devs = [fake_pci, fake_pci_2, fake_pci_v2] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) self.tracker._set_hvdevs(copy.deepcopy([fake_pci])) fake_pci_devs = [fake_pci_3, fake_pci_4] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) all_db_devs = fake_db_devs_tree all_pci_devs = fake_pci_devs_tree self._create_tracker(all_db_devs) self.tracker._set_hvdevs(copy.deepcopy(all_pci_devs)) fake_pci_devs = [dev for dev in all_pci_devs self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_devs = [fake_pci, fake_pci_2, fake_pci_3] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs)) fake_pci_3 = dict(fake_pci_1, address='0000:00:00.4') fake_devs_numa = copy.deepcopy(fake_pci_devs) fake_devs_numa.append(fake_pci_3) self.tracker = manager.PciDevTracker(mock.sentinel.context, 1) self.tracker._set_hvdevs(copy.deepcopy(fake_devs_numa)) fake_pci_devs = [fake_pci, fake_pci_2, fake_pci_v3] self.tracker._set_hvdevs(copy.deepcopy(fake_pci_devs))"," self.fake_devs = fake_devs self.fake_devs = fake_db_devs[:] self._create_tracker(fake_db_devs[:]) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_1), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_3)] self.tracker._set_hvdevs(fake_pci_devs) fake_pci_devs = [copy.deepcopy(fake_pci_3), copy.deepcopy(fake_pci_4), copy.deepcopy(fake_pci_5), copy.deepcopy(fake_new_device)] self.tracker._set_hvdevs(fake_pci_devs) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_v2)] self.tracker._set_hvdevs(fake_pci_devs) self.tracker._set_hvdevs([fake_pci]) fake_pci_devs = [copy.deepcopy(fake_pci_3), copy.deepcopy(fake_pci_4)] self.tracker._set_hvdevs(fake_pci_devs) all_devs = fake_db_devs_tree[:] self._create_tracker(all_devs) self.tracker._set_hvdevs(all_devs) fake_pci_devs = [dev for dev in all_devs self.tracker._set_hvdevs(fake_pci_devs) self.tracker._set_hvdevs(fake_pci_devs) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_3)] self.tracker._set_hvdevs(fake_pci_devs) fake_db_dev_3 = dict(fake_db_dev_1, id=4, address='0000:00:00.4') fake_devs_numa = copy.deepcopy(fake_db_devs) fake_devs_numa.append(fake_db_dev_3) self.tracker = manager.PciDevTracker(1) self.tracker._set_hvdevs(fake_devs_numa) fake_pci_devs = [copy.deepcopy(fake_pci), copy.deepcopy(fake_pci_2), copy.deepcopy(fake_pci_v3)] self.tracker._set_hvdevs(fake_pci_devs)",31,34
openstack%2Fnova~827872,openstack/nova,stable/victoria,I672af45a1d1c7fb428b1c4983d4f856852829fb9,Reproduce bug 1952941,ABANDONED,2022-02-04 14:37:12.000000000,2024-03-05 18:58:33.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 32761}]","[{'number': 1, 'created': '2022-02-04 14:37:12.000000000', 'files': ['nova/tests/unit/objects/test_request_spec.py', 'nova/tests/unit/fake_request_spec.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/e937afbdcd4db0e2377b479b7b6f04bea82d8c7b', 'message': 'Reproduce bug 1952941\n\nThe added unit test proves that pre-Victoria RequestSpec objects\ndescribing a cpu pinned Instance are not migrated to a proper format\nin Victoria or newer.\n\nRelated-Bug: #1952941\n\nChange-Id: I672af45a1d1c7fb428b1c4983d4f856852829fb9\n(cherry picked from commit 05e8977cb2fd660dcf6af32c5804f7548bf722a7)\n(cherry picked from commit d860615527a4f492251c363b2092674d55228a40)\n(cherry picked from commit b190c30f005bd1b1a7e3d9bf35648e65ff472f02)\n'}]",1,827872,e937afbdcd4db0e2377b479b7b6f04bea82d8c7b,6,3,1,9708,,,0,"Reproduce bug 1952941

The added unit test proves that pre-Victoria RequestSpec objects
describing a cpu pinned Instance are not migrated to a proper format
in Victoria or newer.

Related-Bug: #1952941

Change-Id: I672af45a1d1c7fb428b1c4983d4f856852829fb9
(cherry picked from commit 05e8977cb2fd660dcf6af32c5804f7548bf722a7)
(cherry picked from commit d860615527a4f492251c363b2092674d55228a40)
(cherry picked from commit b190c30f005bd1b1a7e3d9bf35648e65ff472f02)
",git fetch https://review.opendev.org/openstack/nova refs/changes/72/827872/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/objects/test_request_spec.py', 'nova/tests/unit/fake_request_spec.py']",2,e937afbdcd4db0e2377b479b7b6f04bea82d8c7b,bug/1952941,"def fake_db_spec(spec_obj=None): if not spec_obj: spec_obj = fake_spec_obj() del spec_obj.retry 'instance_uuid': spec_obj.instance_uuid, 'spec': jsonutils.dumps(spec_obj.obj_to_primitive()),","def fake_db_spec(): req_obj = fake_spec_obj() del req_obj.retry 'instance_uuid': req_obj.instance_uuid, 'spec': jsonutils.dumps(req_obj.obj_to_primitive()),",69,5
openstack%2Fnova~840847,openstack/nova,stable/victoria,I7b432d7a32aeb1ab765d1f731691c7841a8f1440,Simulate bug 1969496,ABANDONED,2022-05-06 09:12:18.000000000,2024-03-05 18:58:29.000000000,,"[{'_account_id': 19234}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-05-06 09:12:18.000000000', 'files': ['nova/tests/unit/pci/test_manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/0c671b354ca99aaadf2f3eaab8c40490c6c76707', 'message': ""Simulate bug 1969496\n\nAs If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for\nthe pci_device table to become inconsistent. Parent PF can be in\n'available' state while children VFs are still in 'unavailable' state.\nIn this situation the PF is schedulable but the PCI claim will fail to\nwhen try to mark the dependent VFs unavailable.\n\nThis patch adds a test case that shows the error.\n\nRelated-Bug: #1969496\n\nChange-Id: I7b432d7a32aeb1ab765d1f731691c7841a8f1440\n(cherry picked from commit 9ee5d2c66255f83cc8a66f1b5648fa13e1d73f47)\n(cherry picked from commit 23c48b670668e9cae886b5113c776077780f5581)\n(cherry picked from commit 96e00c30fc7356874a13f75eb5ee46c87fb448d0)\n(cherry picked from commit e153335a5e70f7e694d344665614279fc6d58136)\n""}]",0,840847,0c671b354ca99aaadf2f3eaab8c40490c6c76707,6,2,1,9708,,,0,"Simulate bug 1969496

As If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for
the pci_device table to become inconsistent. Parent PF can be in
'available' state while children VFs are still in 'unavailable' state.
In this situation the PF is schedulable but the PCI claim will fail to
when try to mark the dependent VFs unavailable.

This patch adds a test case that shows the error.

Related-Bug: #1969496

Change-Id: I7b432d7a32aeb1ab765d1f731691c7841a8f1440
(cherry picked from commit 9ee5d2c66255f83cc8a66f1b5648fa13e1d73f47)
(cherry picked from commit 23c48b670668e9cae886b5113c776077780f5581)
(cherry picked from commit 96e00c30fc7356874a13f75eb5ee46c87fb448d0)
(cherry picked from commit e153335a5e70f7e694d344665614279fc6d58136)
",git fetch https://review.opendev.org/openstack/nova refs/changes/47/840847/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/unit/pci/test_manager.py'],1,0c671b354ca99aaadf2f3eaab8c40490c6c76707,bug/1969496,"from nova import exception def test_claim_available_pf_while_child_vf_is_unavailable(self): # NOTE(gibi): this is bug 1969496. The state created here is # inconsistent and should not happen. But it did happen in some cases # where we were not able to track down the way how it happened. # We start with a PF parent and a VF child. The PF is available and # the VF is unavailable. pf = copy.deepcopy(fake_db_dev_3) vf = copy.deepcopy(fake_db_dev_4) vf['status'] = fields.PciDeviceStatus.UNAVAILABLE self._create_tracker([pf, vf]) pf_dev = self._get_device_by_address(pf['address']) self.assertEqual('available', pf_dev.status) vf_dev = self._get_device_by_address(vf['address']) self.assertEqual('unavailable', vf_dev.status) pci_requests_obj = self._create_pci_requests_object( [ { 'count': 1, 'spec': [{'dev_type': fields.PciDeviceType.SRIOV_PF}] } ], instance_uuid=uuidsentinel.instance1, ) # now try to claim and allocate the PF. It should work as it is # available # This is bug 1969496 as the claim fails with exception ex = self.assertRaises( exception.PciDevicePoolEmpty, self.tracker.claim_instance, mock.sentinel.context, pci_requests_obj, None ) self.assertIn( 'Attempt to consume PCI device 1:0000:00:02.1 from empty pool', str(ex) ) pf_dev = self._get_device_by_address(pf['address']) self.assertEqual('available', pf_dev.status) vf_dev = self._get_device_by_address(vf['address']) self.assertEqual('unavailable', vf_dev.status) # This should work when the bug is fixed # self.tracker.claim_instance( # mock.sentinel.context, pci_requests_obj, None) # self.tracker.allocate_instance({'uuid': uuidsentinel.instance1}) # pf_dev = self._get_device_by_address(pf['address']) # self.assertEqual('allocated', pf_dev.status) # vf_dev = self._get_device_by_address(vf['address']) # self.assertEqual('unavailable', vf_dev.status) ",,56,0
openstack%2Fnova~840846,openstack/nova,stable/victoria,If9ab424cc7375a1f0d41b03f01c4a823216b3eb8,Remove unavailable but not reported PCI devices at startup,ABANDONED,2022-05-06 09:12:18.000000000,2024-03-05 18:58:25.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 09:12:18.000000000', 'files': ['nova/objects/pci_device.py', 'nova/pci/manager.py', 'nova/tests/unit/objects/test_pci_device.py', 'nova/tests/unit/pci/test_manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/fdf52a1b099683ec65f6f0488ef73c952d90e002', 'message': 'Remove unavailable but not reported PCI devices at startup\n\nWe saw in the field that the pci_devices table can end up in\ninconsistent state after a compute node HW failure and re-deployment.\nThere could be dependent devices where the parent PF is in available\nstate while the children VFs are in unavailable state. (Before the HW\nfault the PF was allocated hence the VFs was marked unavailable).\n\nIn this state this PF is still schedulable but during the\nPCI claim the handling of dependent devices in the PCI tracker fill fail\nwith the error: ""Attempt to consume PCI device XXX from empty pool"".\n\nThe reason of the failure is that when the PF is claimed, all the\nchildren VFs are marked unavailable. But if the VF is already\nunavailable such step fails.\n\nOne way the deployer might try to recover from this state is to remove\nthe VFs from the hypervisor and restart the compute agent. The compute\nstartup already has a logic to delete PCI devices that are unused and\nnot reported by the hypervisor. However this logic only removed devices\nin \'available\' state and ignored devices in \'unavailable\' state.\n\nIf a device is unused and the hypervisor is not reporting the device any\nmore then it is safe to delete that device from the PCI tracker. So this\npatch extends the logic to allow deleting \'unavailable\' devices. There\nis a small window when dependent PCI device is in \'unclaimable\' state.\nFrom cleanup perspective this is an analogous state. So it is also\nadded to the cleanup logic.\n\nRelated-Bug: #1969496\nChange-Id: If9ab424cc7375a1f0d41b03f01c4a823216b3eb8\n(cherry picked from commit 284ea72e96604bdf16d1c5c4db47247334841b2f)\n(cherry picked from commit d7bca631fea348fb56cc46c5680643bacd82513e)\n(cherry picked from commit 580a4b14ae367e327229482decca0cb6cdf6e9d8)\n(cherry picked from commit 59ae44754ebce106b23bc697a822d181cdda41c6)\n'}]",2,840846,fdf52a1b099683ec65f6f0488ef73c952d90e002,14,1,1,9708,,,0,"Remove unavailable but not reported PCI devices at startup

We saw in the field that the pci_devices table can end up in
inconsistent state after a compute node HW failure and re-deployment.
There could be dependent devices where the parent PF is in available
state while the children VFs are in unavailable state. (Before the HW
fault the PF was allocated hence the VFs was marked unavailable).

In this state this PF is still schedulable but during the
PCI claim the handling of dependent devices in the PCI tracker fill fail
with the error: ""Attempt to consume PCI device XXX from empty pool"".

The reason of the failure is that when the PF is claimed, all the
children VFs are marked unavailable. But if the VF is already
unavailable such step fails.

One way the deployer might try to recover from this state is to remove
the VFs from the hypervisor and restart the compute agent. The compute
startup already has a logic to delete PCI devices that are unused and
not reported by the hypervisor. However this logic only removed devices
in 'available' state and ignored devices in 'unavailable' state.

If a device is unused and the hypervisor is not reporting the device any
more then it is safe to delete that device from the PCI tracker. So this
patch extends the logic to allow deleting 'unavailable' devices. There
is a small window when dependent PCI device is in 'unclaimable' state.
From cleanup perspective this is an analogous state. So it is also
added to the cleanup logic.

Related-Bug: #1969496
Change-Id: If9ab424cc7375a1f0d41b03f01c4a823216b3eb8
(cherry picked from commit 284ea72e96604bdf16d1c5c4db47247334841b2f)
(cherry picked from commit d7bca631fea348fb56cc46c5680643bacd82513e)
(cherry picked from commit 580a4b14ae367e327229482decca0cb6cdf6e9d8)
(cherry picked from commit 59ae44754ebce106b23bc697a822d181cdda41c6)
",git fetch https://review.opendev.org/openstack/nova refs/changes/46/840846/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/pci_device.py', 'nova/pci/manager.py', 'nova/tests/unit/objects/test_pci_device.py', 'nova/tests/unit/pci/test_manager.py']",4,fdf52a1b099683ec65f6f0488ef73c952d90e002,bug/1969496," def _get_device_by_address(self, address): devs = [dev for dev in self.tracker.pci_devs if dev.address == address] if len(devs) == 1: return devs[0] if devs: raise ValueError('ambiguous address', devs) else: raise ValueError('device not found', address) def test_set_hvdevs_unavailable_vf_removed(self): # We start with a PF parent and two VF children self._create_tracker([fake_db_dev_3, fake_db_dev_4, fake_db_dev_5]) pci_requests_obj = self._create_pci_requests_object( [ { 'count': 1, 'spec': [{'dev_type': fields.PciDeviceType.SRIOV_PF}] } ], instance_uuid=uuidsentinel.instance1, ) # then claim and allocate the PF that makes the VFs unavailable self.tracker.claim_instance( mock.sentinel.context, pci_requests_obj, None) self.tracker.allocate_instance({'uuid': uuidsentinel.instance1}) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('allocated', dev3_pf.status) self.assertEqual(uuidsentinel.instance1, dev3_pf.instance_uuid) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('unavailable', dev4_vf.status) dev5_vf = self._get_device_by_address(fake_db_dev_5['address']) self.assertEqual('unavailable', dev5_vf.status) # now simulate that one VF (dev_5) is removed from the hypervisor and # the compute is restarted. As the VF is not claimed or allocated we # are free to remove it from the tracker. self.tracker._set_hvdevs(copy.deepcopy([fake_pci_3, fake_pci_4])) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('allocated', dev3_pf.status) self.assertEqual(uuidsentinel.instance1, dev3_pf.instance_uuid) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('unavailable', dev4_vf.status) dev5_vf = self._get_device_by_address(fake_db_dev_5['address']) self.assertEqual('removed', dev5_vf.status) def test_set_hvdevs_unavailable_pf_removed(self): # We start with one PF parent and one child VF self._create_tracker([fake_db_dev_3, fake_db_dev_4]) pci_requests_obj = self._create_pci_requests_object( [ { 'count': 1, 'spec': [{'dev_type': fields.PciDeviceType.SRIOV_VF}] } ], instance_uuid=uuidsentinel.instance1, ) # Then we claim and allocate the VF that makes the PF unavailable self.tracker.claim_instance( mock.sentinel.context, pci_requests_obj, None) self.tracker.allocate_instance({'uuid': uuidsentinel.instance1}) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('unavailable', dev3_pf.status) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('allocated', dev4_vf.status) self.assertEqual(uuidsentinel.instance1, dev4_vf.instance_uuid) # now simulate that the parent PF is removed from the hypervisor and # the compute is restarted. As the PF is not claimed or allocated we # are free to remove it from the tracker. self.tracker._set_hvdevs(copy.deepcopy([fake_pci_4])) dev3_pf = self._get_device_by_address(fake_db_dev_3['address']) self.assertEqual('removed', dev3_pf.status) dev4_vf = self._get_device_by_address(fake_db_dev_4['address']) self.assertEqual('allocated', dev4_vf.status) self.assertEqual(uuidsentinel.instance1, dev4_vf.instance_uuid) ",,123,7
openstack%2Fnova~842953,openstack/nova,stable/victoria,Id908a7224ff3378b3b51726bbfa8b5805d38ca59,Fix instance's image_ref lost on failed unshelving,ABANDONED,2022-05-23 09:49:18.000000000,2024-03-05 18:58:21.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-23 09:49:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/16af68953fd6a6ddf15526ff35df4c6016aa2ee9', 'message': ""Fix instance's image_ref lost on failed unshelving\n\nCloses-Bug: #1934094\n\nSigned-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>\nChange-Id: Id908a7224ff3378b3b51726bbfa8b5805d38ca59\n(cherry picked from commit 518b952bdeb6ec29252b56527b8c8d7b32abe1b5)\n(cherry picked from commit 076f95371a093a0e594c0d08e410676c9a73c9d0)\n(cherry picked from commit 328cf1073dca4c092f29cf192aaab14eae03143b)\n""}, {'number': 2, 'created': '2022-05-23 09:58:35.000000000', 'files': ['nova/tests/unit/compute/test_shelve.py', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/f03334323c212a6f98ca94643ec258139068a071', 'message': ""Fix instance's image_ref lost on failed unshelving\n\nmodified:   nova/tests/unit/compute/test_shelve.py due to\nI258df4d77f6d86df1d867a8fe27360731c21d237 is not in stable/victoria\n\nCloses-Bug: #1934094\n\nSigned-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>\nChange-Id: Id908a7224ff3378b3b51726bbfa8b5805d38ca59\n(cherry picked from commit 518b952bdeb6ec29252b56527b8c8d7b32abe1b5)\n(cherry picked from commit 076f95371a093a0e594c0d08e410676c9a73c9d0)\n(cherry picked from commit 328cf1073dca4c092f29cf192aaab14eae03143b)\n""}]",2,842953,f03334323c212a6f98ca94643ec258139068a071,15,1,2,9708,,,0,"Fix instance's image_ref lost on failed unshelving

modified:   nova/tests/unit/compute/test_shelve.py due to
I258df4d77f6d86df1d867a8fe27360731c21d237 is not in stable/victoria

Closes-Bug: #1934094

Signed-off-by: Pierre-Samuel Le Stang <pierre-samuel.le-stang@corp.ovh.com>
Change-Id: Id908a7224ff3378b3b51726bbfa8b5805d38ca59
(cherry picked from commit 518b952bdeb6ec29252b56527b8c8d7b32abe1b5)
(cherry picked from commit 076f95371a093a0e594c0d08e410676c9a73c9d0)
(cherry picked from commit 328cf1073dca4c092f29cf192aaab14eae03143b)
",git fetch https://review.opendev.org/openstack/nova refs/changes/53/842953/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_shelve.py', 'nova/compute/manager.py']",2,16af68953fd6a6ddf15526ff35df4c6016aa2ee9,bug/1934094, # Set the image_ref back to initial image_ref because instance # object might have been saved with image['id'] # https://bugs.launchpad.net/nova/+bug/1934094 instance.image_ref = shelved_image_ref,,6,6
openstack%2Fnova~840848,openstack/nova,stable/victoria,I575ce06bcc913add7db0849f85728371da2032fc,Allow claiming PCI PF if child VF is unavailable,ABANDONED,2022-05-06 09:12:18.000000000,2024-03-05 18:58:18.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-06 09:12:18.000000000', 'files': ['nova/objects/pci_device.py', 'nova/tests/unit/pci/test_manager.py', 'nova/pci/stats.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/5d484576efca56aebc36a60abaf410c4e3bb2727', 'message': ""Allow claiming PCI PF if child VF is unavailable\n\nAs If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for\nthe pci_device table to become inconsistent. Parent PF can be in\n'available' state while children VFs are still in 'unavailable' state.\nIn this situation the PF is schedulable but the PCI claim will fail\nwhen try to mark the dependent VFs unavailable.\n\nThis patch changes the PCI claim logic to allow claiming the parent PF\nin the inconsistent situation as we assume that it is safe to do so.\nThis claim also fixed the inconsistency so that when the parent PF is\nfreed the children VFs become available again.\n\nConflicts:\n      nova/pci/stats.py due to I91dd7993395f693c7d26c1caa44fa365f5cbec12\n      is not in stable/victoria\n\nCloses-Bug: #1969496\nChange-Id: I575ce06bcc913add7db0849f85728371da2032fc\n(cherry picked from commit 3af2ecc13fa9334de8418accaed4fffefefb41da)\n(cherry picked from commit 4ca4b2e6bc84ca2c209653b46d7428c6c7cbd270)\n(cherry picked from commit 1dbd45be4556c034eb469462698804984d95b503)\n(cherry picked from commit a763104217f2188b398d7eddaf3d21b91c66d2fa)\n""}]",2,840848,5d484576efca56aebc36a60abaf410c4e3bb2727,14,1,1,9708,,,0,"Allow claiming PCI PF if child VF is unavailable

As If9ab424cc7375a1f0d41b03f01c4a823216b3eb8 stated there is a way for
the pci_device table to become inconsistent. Parent PF can be in
'available' state while children VFs are still in 'unavailable' state.
In this situation the PF is schedulable but the PCI claim will fail
when try to mark the dependent VFs unavailable.

This patch changes the PCI claim logic to allow claiming the parent PF
in the inconsistent situation as we assume that it is safe to do so.
This claim also fixed the inconsistency so that when the parent PF is
freed the children VFs become available again.

Conflicts:
      nova/pci/stats.py due to I91dd7993395f693c7d26c1caa44fa365f5cbec12
      is not in stable/victoria

Closes-Bug: #1969496
Change-Id: I575ce06bcc913add7db0849f85728371da2032fc
(cherry picked from commit 3af2ecc13fa9334de8418accaed4fffefefb41da)
(cherry picked from commit 4ca4b2e6bc84ca2c209653b46d7428c6c7cbd270)
(cherry picked from commit 1dbd45be4556c034eb469462698804984d95b503)
(cherry picked from commit a763104217f2188b398d7eddaf3d21b91c66d2fa)
",git fetch https://review.opendev.org/openstack/nova refs/changes/48/840848/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/pci_device.py', 'nova/tests/unit/pci/test_manager.py', 'nova/pci/stats.py']",3,5d484576efca56aebc36a60abaf410c4e3bb2727,bug/1969496, free_devs = self.get_free_devs() for vf in vfs_list: # NOTE(gibi): do not try to remove a device that are # already removed if vf in free_devs: self.remove_device(vf), for vf in vfs_list: self.remove_device(vf),162,26
openstack%2Fnova~843948,openstack/nova,stable/victoria,I3f1073d70e4332737e33f3c9c00cf129d0ef76b4,Add a regression test for bug 1939545,ABANDONED,2022-05-30 18:33:49.000000000,2024-03-05 18:58:14.000000000,,"[{'_account_id': 4690}, {'_account_id': 15334}, {'_account_id': 22348}, {'_account_id': 33493}]","[{'number': 1, 'created': '2022-05-30 18:33:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/1bc7c4bdc55455e7f74967d03bb76c59643e96c1', 'message': ""Add a regression test for bug 1939545\n\nAssert the behaviour of the libvirt driver during pre_live_migration\nwith instances that have block based volumes attached.\n\nBug #1939545 covering the case where the returned path from os-brick\nisn't being saved into the connection_info of the associated bdm in\nNova.\n\nThe cinder fixture is extended as part of this change to offer\nconnection_info listing the iscsi volume type in order to correctly\nassert the behaviour of the associated libvirt volume driver.\n\nMinor conflict in nova/tests/fixtures.py around the new\nfake connection_info.\n\nRelated-Bug: #1939545\nChange-Id: I3f1073d70e4332737e33f3c9c00cf129d0ef76b4\n(cherry-picked from commit 268b7169554f871d3813d78e79861934d086484d)\n(cherry picked from commit 57cab3144860b2a34b661dba8290b3687d9ce365)\n""}, {'number': 2, 'created': '2022-05-30 18:36:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/42a6589091b480578a9e2d79d7d3b64e57dca611', 'message': ""Add a regression test for bug 1939545\n\nAssert the behaviour of the libvirt driver during pre_live_migration\nwith instances that have block based volumes attached.\n\nBug #1939545 covering the case where the returned path from os-brick\nisn't being saved into the connection_info of the associated bdm in\nNova.\n\nThe cinder fixture is extended as part of this change to offer\nconnection_info listing the iscsi volume type in order to correctly\nassert the behaviour of the associated libvirt volume driver.\n\nMinor conflict in nova/tests/fixtures.py around the new\nfake connection_info.\n\nRelated-Bug: #1939545\nChange-Id: I3f1073d70e4332737e33f3c9c00cf129d0ef76b4\n(cherry-picked from commit 268b7169554f871d3813d78e79861934d086484d)\n(cherry picked from commit 57cab3144860b2a34b661dba8290b3687d9ce365)\n""}, {'number': 3, 'created': '2022-06-01 00:05:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/79e7dc3889a1aea0c72838ffe22980004c6ee493', 'message': ""Add a regression test for bug 1939545\n\nAssert the behaviour of the libvirt driver during pre_live_migration\nwith instances that have block based volumes attached.\n\nBug #1939545 covering the case where the returned path from os-brick\nisn't being saved into the connection_info of the associated bdm in\nNova.\n\nThe cinder fixture is extended as part of this change to offer\nconnection_info listing the iscsi volume type in order to correctly\nassert the behaviour of the associated libvirt volume driver.\n\nMinor conflict in nova/tests/fixtures.py around the new\nfake connection_info. Small adjustements in test_bug_1939545.py to\naccount for location of fakelibvirt and removal of useless imports.\n\nRelated-Bug: #1939545\nChange-Id: I3f1073d70e4332737e33f3c9c00cf129d0ef76b4\n(cherry-picked from commit 268b7169554f871d3813d78e79861934d086484d)\n(cherry picked from commit 57cab3144860b2a34b661dba8290b3687d9ce365)\n""}, {'number': 4, 'created': '2022-06-17 14:58:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/0de53e24739af7284327d9e0a79909bac7c7f9fa', 'message': ""Add a regression test for bug 1939545\n\nAssert the behaviour of the libvirt driver during pre_live_migration\nwith instances that have block based volumes attached.\n\nBug #1939545 covering the case where the returned path from os-brick\nisn't being saved into the connection_info of the associated bdm in\nNova.\n\nThe cinder fixture is extended as part of this change to offer\nconnection_info listing the iscsi volume type in order to correctly\nassert the behaviour of the associated libvirt volume driver.\n\nMinor conflict in nova/tests/fixtures.py around the new\nfake connection_info. Small adjustements in test_bug_1939545.py to\naccount for location of fakelibvirt and removal of useless imports.\n\nRelated-Bug: #1939545\nChange-Id: I3f1073d70e4332737e33f3c9c00cf129d0ef76b4\n(cherry-picked from commit 268b7169554f871d3813d78e79861934d086484d)\n(cherry picked from commit 44ec33ded0f154e487c2ce1ec45509696fac806c)\n""}, {'number': 5, 'created': '2022-06-17 18:57:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/4c599d0690e238c2b7224a28c54218d55e065e11', 'message': ""Add a regression test for bug 1939545\n\nAssert the behaviour of the libvirt driver during pre_live_migration\nwith instances that have block based volumes attached.\n\nBug #1939545 covering the case where the returned path from os-brick\nisn't being saved into the connection_info of the associated bdm in\nNova.\n\nThe cinder fixture is extended as part of this change to offer\nconnection_info listing the iscsi volume type in order to correctly\nassert the behaviour of the associated libvirt volume driver.\n\nMinor conflict in nova/tests/fixtures.py around the new\nfake connection_info. Small adjustements in test_bug_1939545.py to\naccount for location of fakelibvirt and removal of useless imports.\n\nRelated-Bug: #1939545\nChange-Id: I3f1073d70e4332737e33f3c9c00cf129d0ef76b4\n(cherry-picked from commit 268b7169554f871d3813d78e79861934d086484d)\n(cherry picked from commit 093d8bc637d47f92cdba830cc71a8204b6e0bde7)\n""}, {'number': 6, 'created': '2022-06-17 21:15:43.000000000', 'files': ['nova/tests/fixtures.py', 'nova/tests/functional/regressions/test_bug_1939545.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/02854cc4458f1a68deaf840a49f7cab7aed0cb05', 'message': ""Add a regression test for bug 1939545\n\nAssert the behaviour of the libvirt driver during pre_live_migration\nwith instances that have block based volumes attached.\n\nBug #1939545 covering the case where the returned path from os-brick\nisn't being saved into the connection_info of the associated bdm in\nNova.\n\nThe cinder fixture is extended as part of this change to offer\nconnection_info listing the iscsi volume type in order to correctly\nassert the behaviour of the associated libvirt volume driver.\n\nMinor conflict in nova/tests/fixtures.py around the new\nfake connection_info. Small adjustements in test_bug_1939545.py to\naccount for location of fakelibvirt and removal of useless imports.\n\nRelated-Bug: #1939545\nChange-Id: I3f1073d70e4332737e33f3c9c00cf129d0ef76b4\n(cherry picked from commit 268b7169554f871d3813d78e79861934d086484d)\n(cherry picked from commit 9f7b81c4cfe9f6a41fb28ec3b9d20616817ceab5)\n""}]",9,843948,02854cc4458f1a68deaf840a49f7cab7aed0cb05,26,4,6,8864,,,0,"Add a regression test for bug 1939545

Assert the behaviour of the libvirt driver during pre_live_migration
with instances that have block based volumes attached.

Bug #1939545 covering the case where the returned path from os-brick
isn't being saved into the connection_info of the associated bdm in
Nova.

The cinder fixture is extended as part of this change to offer
connection_info listing the iscsi volume type in order to correctly
assert the behaviour of the associated libvirt volume driver.

Minor conflict in nova/tests/fixtures.py around the new
fake connection_info. Small adjustements in test_bug_1939545.py to
account for location of fakelibvirt and removal of useless imports.

Related-Bug: #1939545
Change-Id: I3f1073d70e4332737e33f3c9c00cf129d0ef76b4
(cherry picked from commit 268b7169554f871d3813d78e79861934d086484d)
(cherry picked from commit 9f7b81c4cfe9f6a41fb28ec3b9d20616817ceab5)
",git fetch https://review.opendev.org/openstack/nova refs/changes/48/843948/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/fixtures.py', 'nova/tests/functional/regressions/test_bug_1939545.py']",2,1bc7c4bdc55455e7f74967d03bb76c59643e96c1,bug/1939545,"# Copyright 2021, Red Hat, Inc. All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import fixtures import mock from oslo_serialization import jsonutils from nova import context from nova import objects from nova.tests import fixtures as nova_fixtures from nova.tests.functional import integrated_helpers from nova.tests.functional.libvirt import base from nova.tests.unit.virt.libvirt import fakelibvirt from nova.tests.unit.virt.libvirt import fake_os_brick_connector class TestLiveMigrateUpdateDevicePath( base.ServersTestBase, integrated_helpers.InstanceHelperMixin ): """"""Regression test for bug 1939545 Assert the behaviour of the libvirt driver during pre_live_migration with instances that have block based volumes attached. Bug #1939545 covering the case where the returned path from os-brick isn't being saved into the connection_info of the associated bdm in Nova. """""" api_major_version = 'v2.1' microversion = 'latest' ADMIN_API = True def setUp(self): super().setUp() self.useFixture(fixtures.MonkeyPatch( 'nova.virt.libvirt.driver.connector', fake_os_brick_connector)) # TODO(lyarwood): Move into base.ServersTestBase to allow live # migrations to pass without changes by the test classes. self.useFixture(fixtures.MonkeyPatch( 'nova.tests.fixtures.libvirt.Domain.migrateToURI3', self._migrate_stub)) self.start_compute( hostname='src', host_info=fakelibvirt.HostInfo( cpu_nodes=1, cpu_sockets=1, cpu_cores=4, cpu_threads=1)) self.start_compute( hostname='dest', host_info=fakelibvirt.HostInfo( cpu_nodes=1, cpu_sockets=1, cpu_cores=4, cpu_threads=1)) def _migrate_stub(self, domain, destination, params, flags): dest = self.computes['dest'] dest.driver._host.get_connection().createXML( params['destination_xml'], 'fake-createXML-doesnt-care-about-flags') source = self.computes['src'] conn = source.driver._host.get_connection() dom = conn.lookupByUUIDString(self.server['id']) dom.complete_job() # TODO(lyarwood): Move this into the os-brick fixture and repeat for all # provided connectors at runtime. @mock.patch( 'os_brick.initiator.connectors.iscsi.ISCSIConnector.connect_volume') @mock.patch( 'os_brick.initiator.connectors.iscsi.ISCSIConnector.disconnect_volume') def test_live_migrate_update_device_path( self, mock_disconnect_volume, mock_connect_volume ): self.server = self._create_server(host='src', networks='none') volume_id = self.cinder.ISCSI_BACKED_VOL # TODO(lyarwood): As above, move this into the os-brick fixture. mock_connect_volume.return_value = {'path': '/dev/sda'} self.api.post_server_volume( self.server['id'], {'volumeAttachment': {'volumeId': volume_id}}) # Get the volume bdm and assert that the connection_info is set with # device_path from the volume driver. ctxt = context.get_admin_context() bdm = objects.BlockDeviceMapping.get_by_volume_and_instance( ctxt, volume_id, self.server['id']) connection_info = jsonutils.loads(bdm.connection_info) self.assertIn('device_path', connection_info.get('data')) # Live migrate the instance to another host self._live_migrate(self.server) # FIXME(lyarwood): This is bug #1939545, again get the volume bdm and # assert that the saved connection_info doesn't contain device_path. bdm = objects.BlockDeviceMapping.get_by_volume_and_instance( ctxt, volume_id, self.server['id']) connection_info = jsonutils.loads(bdm.connection_info) self.assertNotIn('device_path', connection_info.get('data')) ",,155,13
openstack%2Fnova~844598,openstack/nova,stable/victoria,Iff3a3d13fb43357b4ae6fcd52b6197635e1c00fa,fup: Make connection_info returned by CinderFixture unique per attachment,ABANDONED,2022-06-03 14:15:00.000000000,2024-03-05 18:58:10.000000000,,"[{'_account_id': 4690}, {'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-06-03 14:15:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/3b138ac9f4a716e6c6155c595425c2a304366d97', 'message': 'fup: Make connection_info returned by CinderFixture unique per attachment\n\nChange-Id: Iff3a3d13fb43357b4ae6fcd52b6197635e1c00fa\n(cherry picked from commit d4cc10d7bbc1448ae8a38da63ebe2ee8c3243d30)\n(cherry picked from commit f76fdd63cd350a20b0a0bf4605130d7796702b8a)\n'}, {'number': 2, 'created': '2022-06-17 14:58:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/5b487a4bd92df8239d81c4b0aad752dde2e8d73e', 'message': 'fup: Make connection_info returned by CinderFixture unique per attachment\n\nChange-Id: Iff3a3d13fb43357b4ae6fcd52b6197635e1c00fa\n(cherry picked from commit d4cc10d7bbc1448ae8a38da63ebe2ee8c3243d30)\n(cherry picked from commit df36aa8807e7fbb4d3c9ed3729ab35121eebd878)\n'}, {'number': 3, 'created': '2022-06-17 18:57:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/5b24574c6485f4fb452be87db53652fc3f7fd001', 'message': 'fup: Make connection_info returned by CinderFixture unique per attachment\n\nChange-Id: Iff3a3d13fb43357b4ae6fcd52b6197635e1c00fa\n(cherry picked from commit d4cc10d7bbc1448ae8a38da63ebe2ee8c3243d30)\n(cherry picked from commit 2737c52af0f8bac0d46d3e9d960093aed6ca9a76)\n'}, {'number': 4, 'created': '2022-06-17 21:15:43.000000000', 'files': ['nova/tests/fixtures.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/a26bdac24c1eb2e6503bd2683c935799096d93e9', 'message': 'fup: Make connection_info returned by CinderFixture unique per attachment\n\nChange-Id: Iff3a3d13fb43357b4ae6fcd52b6197635e1c00fa\n(cherry picked from commit d4cc10d7bbc1448ae8a38da63ebe2ee8c3243d30)\n(cherry picked from commit 8e008925343f27f017b8c3d6d49a2cfa2aea8aeb)\n'}]",2,844598,a26bdac24c1eb2e6503bd2683c935799096d93e9,16,3,4,8864,,,0,"fup: Make connection_info returned by CinderFixture unique per attachment

Change-Id: Iff3a3d13fb43357b4ae6fcd52b6197635e1c00fa
(cherry picked from commit d4cc10d7bbc1448ae8a38da63ebe2ee8c3243d30)
(cherry picked from commit 8e008925343f27f017b8c3d6d49a2cfa2aea8aeb)
",git fetch https://review.opendev.org/openstack/nova refs/changes/98/844598/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/fixtures.py'],1,3b138ac9f4a716e6c6155c595425c2a304366d97,bug/1939545," # Dict of connection_info for the above volumes keyed by the volume id def _find_connection_info(volume_id, attachment_id): """"""Find the connection_info associated with an attachment :returns: A connection_info dict based on a deepcopy associated with the volume_id but containing the attachment_id, making it unique for the attachment. """""" connection_info = copy.deepcopy( self.VOLUME_CONNECTION_INFO.get( volume_id, self.VOLUME_CONNECTION_INFO.get('fake') ) ) connection_info['data']['attachment_id'] = attachment_id return connection_info attachment['connection_info'] = _find_connection_info( volume_id, attachment_id) 'connection_info': _find_connection_info( volume_id, attachment_id) 'connection_info': _find_connection_info( volume_id, attachment_id)"," # Dict of connection_info for the above volumes key'd by the volume id # TODO(lyarwood): Make this unique and tracked per attachment somehow. connection_info = self.VOLUME_CONNECTION_INFO.get( volume_id, self.VOLUME_CONNECTION_INFO.get('fake')) attachment['connection_info'] = copy.deepcopy(connection_info) 'connection_info': copy.deepcopy( self.VOLUME_CONNECTION_INFO.get( volume_id, self.VOLUME_CONNECTION_INFO.get('fake'))) 'connection_info': copy.deepcopy( self.VOLUME_CONNECTION_INFO.get( volume_id, self.VOLUME_CONNECTION_INFO.get('fake')))",22,12
openstack%2Fnova~844599,openstack/nova,stable/victoria,Ib8009f38f20b008d08148f7f591af13b1ca5b420,fup: Assert state of connection_info during LM rollback in func tests,ABANDONED,2022-06-03 14:15:00.000000000,2024-03-05 18:58:06.000000000,,"[{'_account_id': 4690}, {'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-06-03 14:15:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/f1c931c992c95f10ab30f709ac101fd76a4ec406', 'message': 'fup: Assert state of connection_info during LM rollback in func tests\n\nThis came up during Iea8896682fc28e3a5cd25afa45238272bee745e1 as\nsomething we should be asserting in our func tests somewhere. I had\nthought it already was but this is as close as we got. Add that coverage\nhere.\n\nChange-Id: Ib8009f38f20b008d08148f7f591af13b1ca5b420\n(cherry picked from commit 31bedfc09c1d35242e0b8101343f6e64ac63157d)\n(cherry picked from commit 53d37de10ff5e389f2916b43a2246b62fb6af23d)\n'}, {'number': 2, 'created': '2022-06-17 14:58:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/5a660194218b78798e46531fcdc323bcbc346a18', 'message': 'fup: Assert state of connection_info during LM rollback in func tests\n\nThis came up during Iea8896682fc28e3a5cd25afa45238272bee745e1 as\nsomething we should be asserting in our func tests somewhere. I had\nthought it already was but this is as close as we got. Add that coverage\nhere.\n\nChange-Id: Ib8009f38f20b008d08148f7f591af13b1ca5b420\n(cherry picked from commit 31bedfc09c1d35242e0b8101343f6e64ac63157d)\n(cherry picked from commit 3d9a91329838a494671e407a0f35c33d55369172)\n'}, {'number': 3, 'created': '2022-06-17 18:57:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/95e22786e456f840f3caa4ab435fd39f05e7da47', 'message': 'fup: Assert state of connection_info during LM rollback in func tests\n\nThis came up during Iea8896682fc28e3a5cd25afa45238272bee745e1 as\nsomething we should be asserting in our func tests somewhere. I had\nthought it already was but this is as close as we got. Add that coverage\nhere.\n\nChange-Id: Ib8009f38f20b008d08148f7f591af13b1ca5b420\n(cherry picked from commit 31bedfc09c1d35242e0b8101343f6e64ac63157d)\n(cherry picked from commit c3aa302b4e4f7bfb273360fe0f0ff0e4bbcb78e0)\n'}, {'number': 4, 'created': '2022-06-17 21:15:43.000000000', 'files': ['nova/tests/functional/compute/test_live_migration.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/212ef3e9753a3bc6cd1dbd6aa1bd48fd56fbbf96', 'message': 'fup: Assert state of connection_info during LM rollback in func tests\n\nThis came up during Iea8896682fc28e3a5cd25afa45238272bee745e1 as\nsomething we should be asserting in our func tests somewhere. I had\nthought it already was but this is as close as we got. Add that coverage\nhere.\n\nChange-Id: Ib8009f38f20b008d08148f7f591af13b1ca5b420\n(cherry picked from commit 31bedfc09c1d35242e0b8101343f6e64ac63157d)\n(cherry picked from commit c248986eeb8e9b9c3586c83b01663d3585132c3f)\n'}]",2,844599,212ef3e9753a3bc6cd1dbd6aa1bd48fd56fbbf96,16,3,4,8864,,,0,"fup: Assert state of connection_info during LM rollback in func tests

This came up during Iea8896682fc28e3a5cd25afa45238272bee745e1 as
something we should be asserting in our func tests somewhere. I had
thought it already was but this is as close as we got. Add that coverage
here.

Change-Id: Ib8009f38f20b008d08148f7f591af13b1ca5b420
(cherry picked from commit 31bedfc09c1d35242e0b8101343f6e64ac63157d)
(cherry picked from commit c248986eeb8e9b9c3586c83b01663d3585132c3f)
",git fetch https://review.opendev.org/openstack/nova refs/changes/99/844599/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/compute/test_live_migration.py'],1,f1c931c992c95f10ab30f709ac101fd76a4ec406,bug/1939545,"from oslo_serialization import jsonutilsfrom nova import contextfrom nova import objects * Launch a boot from volume instance on src * Assert that the expected source attachment is recorded in the bdm * Wrap pre_live_migration on the dest and assert that we switch over to the new attachment and connection_info on the dest. * Assert that the original src connection_info is in the bdm name='test_bfv_live_migration_failure', image_uuid='', networks='none', host='src' 'uuid': volume_id, # Assert that the instance has landed correctly on src self.assertEqual('src', server['OS-EXT-SRV-ATTR:host']) # Assert that this attachment_id is stashed in the connection_info # of the bdm so we can assert things again after the failure ctxt = context.get_admin_context() bdm = objects.BlockDeviceMapping.get_by_volume_and_instance( ctxt, volume_id, server['id']) self.assertEqual(src_attachment_id, bdm.attachment_id) connection_info = jsonutils.loads(bdm.connection_info) self.assertIn('attachment_id', connection_info['data']) self.assertEqual( src_attachment_id, connection_info['data']['attachment_id']) dest_pre_live_mig = self.computes['dest'].manager.pre_live_migration # Wrap pre_live_migration on the destination so we can assert that # we do switch over to the new attachment before the failure # and then later rollback to the source attachment def wrap_pre_live_migration(*args, **kwargs): # Continue with pre_live_migration before we assert anything migrate_data = dest_pre_live_mig(*args, **kwargs) # Assert that we now have two attachments in the fixture, one for # the src and another for the dest. attachments = self.cinder.volume_to_attachment.get(volume_id) self.assertEqual(2, len(attachments)) # Assert that the dest attachment id is saved in the bdm # and the connection_info. bdm = objects.BlockDeviceMapping.get_by_volume_and_instance( ctxt, volume_id, server['id']) self.assertNotEqual(src_attachment_id, bdm.attachment_id) dest_attachment_id = bdm.attachment_id connection_info = jsonutils.loads(bdm.connection_info) self.assertIn('attachment_id', connection_info['data']) self.assertEqual( dest_attachment_id, connection_info['data']['attachment_id']) return migrate_data with mock.patch.object( self.computes['dest'].manager, 'pre_live_migration', wrap_pre_live_migration ): # Migrate the instance and wait until the migration errors out # thanks to our mocked version of live_migration raising # TestingException self._live_migrate(server, 'error', server_expected_state='ERROR') self.assertEqual('src', server['OS-EXT-SRV-ATTR:host']) # Assert that the connection_info has reverted back to the src bdm = objects.BlockDeviceMapping.get_by_volume_and_instance( ctxt, volume_id, server['id']) self.assertEqual(src_attachment_id, bdm.attachment_id) connection_info = jsonutils.loads(bdm.connection_info) self.assertIn('attachment_id', connection_info['data']) self.assertEqual( src_attachment_id, connection_info['data']['attachment_id']) "," * Launch a boot from volume instance name='test_bfv_live_migration_failure', image_uuid='', networks='none' 'uuid': volume_id # Fetch the source host for use later src_host = server['OS-EXT-SRV-ATTR:host'] # Migrate the instance and wait until the migration errors out thanks # to our mocked version of live_migration raising TestingException self._live_migrate(server, 'error', server_expected_state='ERROR') self.assertEqual(src_host, server['OS-EXT-SRV-ATTR:host'])",72,10
openstack%2Fnova~843949,openstack/nova,stable/victoria,Iea8896682fc28e3a5cd25afa45238272bee745e1,compute: Ensure updates to bdms during pre_live_migration are saved,ABANDONED,2022-05-30 18:33:49.000000000,2024-03-05 18:58:02.000000000,,"[{'_account_id': 4690}, {'_account_id': 15334}, {'_account_id': 22348}, {'_account_id': 26311}]","[{'number': 1, 'created': '2022-05-30 18:33:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/f28e92ebf85383d4af3a6acfe2f0b16f832a821a', 'message': 'compute: Ensure updates to bdms during pre_live_migration are saved\n\nWhen connecting volumes to the underlying host the virt drivers can\nattempt to stash additional metadata returned from os-brick into the\nconnection_info associated with a bdm. This pretty janky behaviour\nrelies on someone later calling .save() against the underlying\nBlockDeviceMapping object to persist these changes into the database as\nhappens in the driver block device layer during a standard volume\nattach.\n\nHowever during pre_live_migration no call was made to .save() resulting\nin the changes made to the connection_info being lost. This change\nsimply introduces this call at the end of the pre_live_migration method\non the destination via the driver bdm objects we provide in\nblock_device_info.\n\nThe following FUP commits were squashed into this one for backport\npurposes:\n\nfup: Make connection_info returned by CinderFixture unique per attachment\n\nChange-Id: Iff3a3d13fb43357b4ae6fcd52b6197635e1c00fa\n(cherry picked from commit d4cc10d7bbc1448ae8a38da63ebe2ee8c3243d30)\nConflicts: nova/tests/fixtures/cinder.py did not exist, applied\nchanges to CinderFixture class in nova/tests/fixtures.py\n\nfup: Assert state of connection_info during LM rollback in func tests\n\nThis came up during Iea8896682fc28e3a5cd25afa45238272bee745e1 as\nsomething we should be asserting in our func tests somewhere. I had\nthought it already was but this is as close as we got. Add that coverage\nhere.\n\nChange-Id: Ib8009f38f20b008d08148f7f591af13b1ca5b420\n(cherry picked from commit 31bedfc09c1d35242e0b8101343f6e64ac63157d)\n\nCloses-Bug: #1939545\nChange-Id: Iea8896682fc28e3a5cd25afa45238272bee745e1\n(cherry picked from commit 962eda94d52321c3237da870c3d0455c6f0e851b)\n(cherry picked from commit 9ccd2bc36287e0cc217609c503d74bb036b9d93b)\n'}, {'number': 2, 'created': '2022-05-30 18:36:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d016f3b3539587e6c8230d26f03d4d82d634d5d0', 'message': 'compute: Ensure updates to bdms during pre_live_migration are saved\n\nWhen connecting volumes to the underlying host the virt drivers can\nattempt to stash additional metadata returned from os-brick into the\nconnection_info associated with a bdm. This pretty janky behaviour\nrelies on someone later calling .save() against the underlying\nBlockDeviceMapping object to persist these changes into the database as\nhappens in the driver block device layer during a standard volume\nattach.\n\nHowever during pre_live_migration no call was made to .save() resulting\nin the changes made to the connection_info being lost. This change\nsimply introduces this call at the end of the pre_live_migration method\non the destination via the driver bdm objects we provide in\nblock_device_info.\n\nThis includes the following commits that were squashed into the\nstable/wallaby backports:\n\nfup: Make connection_info returned by CinderFixture unique per attachment\n\nChange-Id: Iff3a3d13fb43357b4ae6fcd52b6197635e1c00fa\n\nfup: Assert state of connection_info during LM rollback in func tests\n\nThis came up during Iea8896682fc28e3a5cd25afa45238272bee745e1 as\nsomething we should be asserting in our func tests somewhere. I had\nthought it already was but this is as close as we got. Add that coverage\nhere.\n\nChange-Id: Ib8009f38f20b008d08148f7f591af13b1ca5b420\n\nCloses-Bug: #1939545\nChange-Id: Iea8896682fc28e3a5cd25afa45238272bee745e1\n(cherry picked from commit 962eda94d52321c3237da870c3d0455c6f0e851b)\n(cherry picked from commit 9ccd2bc36287e0cc217609c503d74bb036b9d93b)\n'}, {'number': 3, 'created': '2022-06-01 00:05:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/cb8d233aafef57d2f020f4d71d1d2abe5d9dc956', 'message': 'compute: Ensure updates to bdms during pre_live_migration are saved\n\nWhen connecting volumes to the underlying host the virt drivers can\nattempt to stash additional metadata returned from os-brick into the\nconnection_info associated with a bdm. This pretty janky behaviour\nrelies on someone later calling .save() against the underlying\nBlockDeviceMapping object to persist these changes into the database as\nhappens in the driver block device layer during a standard volume\nattach.\n\nHowever during pre_live_migration no call was made to .save() resulting\nin the changes made to the connection_info being lost. This change\nsimply introduces this call at the end of the pre_live_migration method\non the destination via the driver bdm objects we provide in\nblock_device_info.\n\nThis includes the following commits that were squashed into the\nstable/wallaby backports:\n\nfup: Make connection_info returned by CinderFixture unique per attachment\n\nChange-Id: Iff3a3d13fb43357b4ae6fcd52b6197635e1c00fa\n\nfup: Assert state of connection_info during LM rollback in func tests\n\nThis came up during Iea8896682fc28e3a5cd25afa45238272bee745e1 as\nsomething we should be asserting in our func tests somewhere. I had\nthought it already was but this is as close as we got. Add that coverage\nhere.\n\nChange-Id: Ib8009f38f20b008d08148f7f591af13b1ca5b420\n\nCloses-Bug: #1939545\nChange-Id: Iea8896682fc28e3a5cd25afa45238272bee745e1\n(cherry picked from commit 962eda94d52321c3237da870c3d0455c6f0e851b)\n(cherry picked from commit 9ccd2bc36287e0cc217609c503d74bb036b9d93b)\n'}, {'number': 4, 'created': '2022-06-03 14:15:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/012c635a38c686b37456c1d86a58a1fc26fde9e2', 'message': 'compute: Ensure updates to bdms during pre_live_migration are saved\n\nWhen connecting volumes to the underlying host the virt drivers can\nattempt to stash additional metadata returned from os-brick into the\nconnection_info associated with a bdm. This pretty janky behaviour\nrelies on someone later calling .save() against the underlying\nBlockDeviceMapping object to persist these changes into the database as\nhappens in the driver block device layer during a standard volume\nattach.\n\nHowever during pre_live_migration no call was made to .save() resulting\nin the changes made to the connection_info being lost. This change\nsimply introduces this call at the end of the pre_live_migration method\non the destination via the driver bdm objects we provide in\nblock_device_info.\n\nCloses-Bug: #1939545\nChange-Id: Iea8896682fc28e3a5cd25afa45238272bee745e1\n(cherry picked from commit 962eda94d52321c3237da870c3d0455c6f0e851b)\n(cherry picked from commit aad7dabc5a9d790193d42b2155f186e7ec74a408)\n'}, {'number': 5, 'created': '2022-06-17 14:58:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e8974b27ac346c2b982f688371498f73875157ca', 'message': 'compute: Ensure updates to bdms during pre_live_migration are saved\n\nWhen connecting volumes to the underlying host the virt drivers can\nattempt to stash additional metadata returned from os-brick into the\nconnection_info associated with a bdm. This pretty janky behaviour\nrelies on someone later calling .save() against the underlying\nBlockDeviceMapping object to persist these changes into the database as\nhappens in the driver block device layer during a standard volume\nattach.\n\nHowever during pre_live_migration no call was made to .save() resulting\nin the changes made to the connection_info being lost. This change\nsimply introduces this call at the end of the pre_live_migration method\non the destination via the driver bdm objects we provide in\nblock_device_info.\n\nCloses-Bug: #1939545\nChange-Id: Iea8896682fc28e3a5cd25afa45238272bee745e1\n(cherry picked from commit 962eda94d52321c3237da870c3d0455c6f0e851b)\n(cherry picked from commit 1e819ad7245e8ef69fa4d5ef48453b895b453717)\n'}, {'number': 6, 'created': '2022-06-17 18:57:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/f607260a6061e1867b1dcda7cf1ab3bd9b298d8d', 'message': 'compute: Ensure updates to bdms during pre_live_migration are saved\n\nWhen connecting volumes to the underlying host the virt drivers can\nattempt to stash additional metadata returned from os-brick into the\nconnection_info associated with a bdm. This pretty janky behaviour\nrelies on someone later calling .save() against the underlying\nBlockDeviceMapping object to persist these changes into the database as\nhappens in the driver block device layer during a standard volume\nattach.\n\nHowever during pre_live_migration no call was made to .save() resulting\nin the changes made to the connection_info being lost. This change\nsimply introduces this call at the end of the pre_live_migration method\non the destination via the driver bdm objects we provide in\nblock_device_info.\n\nCloses-Bug: #1939545\nChange-Id: Iea8896682fc28e3a5cd25afa45238272bee745e1\n(cherry picked from commit 962eda94d52321c3237da870c3d0455c6f0e851b)\n(cherry picked from commit 573e767ea53a5077ac5cc56fff642d16b067947c)\n'}, {'number': 7, 'created': '2022-06-17 21:15:43.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/compute/manager.py', 'nova/tests/functional/regressions/test_bug_1939545.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/911d1063e06684137952aec6b260cc54738ee5de', 'message': 'compute: Ensure updates to bdms during pre_live_migration are saved\n\nWhen connecting volumes to the underlying host the virt drivers can\nattempt to stash additional metadata returned from os-brick into the\nconnection_info associated with a bdm. This pretty janky behaviour\nrelies on someone later calling .save() against the underlying\nBlockDeviceMapping object to persist these changes into the database as\nhappens in the driver block device layer during a standard volume\nattach.\n\nHowever during pre_live_migration no call was made to .save() resulting\nin the changes made to the connection_info being lost. This change\nsimply introduces this call at the end of the pre_live_migration method\non the destination via the driver bdm objects we provide in\nblock_device_info.\n\nCloses-Bug: #1939545\nChange-Id: Iea8896682fc28e3a5cd25afa45238272bee745e1\n(cherry picked from commit 962eda94d52321c3237da870c3d0455c6f0e851b)\n(cherry picked from commit 9bccc5a04354b0490fbe7e0f0b98cf55d4b7c9c4)\n'}]",6,843949,911d1063e06684137952aec6b260cc54738ee5de,32,4,7,8864,,,0,"compute: Ensure updates to bdms during pre_live_migration are saved

When connecting volumes to the underlying host the virt drivers can
attempt to stash additional metadata returned from os-brick into the
connection_info associated with a bdm. This pretty janky behaviour
relies on someone later calling .save() against the underlying
BlockDeviceMapping object to persist these changes into the database as
happens in the driver block device layer during a standard volume
attach.

However during pre_live_migration no call was made to .save() resulting
in the changes made to the connection_info being lost. This change
simply introduces this call at the end of the pre_live_migration method
on the destination via the driver bdm objects we provide in
block_device_info.

Closes-Bug: #1939545
Change-Id: Iea8896682fc28e3a5cd25afa45238272bee745e1
(cherry picked from commit 962eda94d52321c3237da870c3d0455c6f0e851b)
(cherry picked from commit 9bccc5a04354b0490fbe7e0f0b98cf55d4b7c9c4)
",git fetch https://review.opendev.org/openstack/nova refs/changes/49/843949/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/fixtures.py', 'nova/tests/functional/compute/test_live_migration.py', 'nova/compute/manager.py', 'nova/tests/functional/regressions/test_bug_1939545.py']",5,f28e92ebf85383d4af3a6acfe2f0b16f832a821a,bug/1939545," # Again get the volume bdm and assert that the saved connection_info # contains device_path. self.assertIn('device_path', connection_info.get('data'))"," # FIXME(lyarwood): This is bug #1939545, again get the volume bdm and # assert that the saved connection_info doesn't contain device_path. self.assertNotIn('device_path', connection_info.get('data'))",111,25
openstack%2Fnova~851223,openstack/nova,stable/victoria,Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1,Add a workaround to skip hypervisor version check on LM,ABANDONED,2022-07-27 13:27:55.000000000,2024-03-05 18:57:58.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-07-27 13:27:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e20c4ac3d73d8b453a4f4cadacff7c5978f57134', 'message': ""Add a workaround to skip hypervisor version check on LM\n\nWhen turned on, this will disable the version-checking of hypervisors\nduring live-migration.  This can be useful for operators in certain\nscenarios when upgrading.  E.g. if you want to relocate all instances\noff a compute node due to an emergency hardware issue, and you only have\nanother old compute node ready at the time.\n\nNote, though: libvirt will do its own internal compatibility checks, and\nmight still reject live migration if the destination is incompatible.\n\nConflicts: nova/conf/workarounds.py\n - Some of the config options are not present in 'stable/train'\n\nCloses-Bug: #1982853\n\nChange-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 5032cb62e6458282e1282ac64cf7dd49a2497ac1)\n(cherry picked from commit 0e3b4424b7f587e3e274a5ef81ac35cfd14f0c96)\n(cherry picked from commit 21f92d4b576fc2c309713c369041dd434d605cc6)\n(cherry picked from commit d04e925a029f38c3d38f52e40d5bc5d8db41cf9f)\n""}, {'number': 2, 'created': '2022-07-27 13:31:52.000000000', 'files': ['releasenotes/notes/skip-hypervisor-version-check-on-lm-a87f2dcb4f8bf0f2.yaml', 'nova/conductor/tasks/live_migrate.py', 'nova/conf/workarounds.py', 'nova/tests/unit/conductor/tasks/test_live_migrate.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/6bb930fee89bdaa0023f0f9ded34ef91e1b099a9', 'message': ""Add a workaround to skip hypervisor version check on LM\n\nWhen turned on, this will disable the version-checking of hypervisors\nduring live-migration.  This can be useful for operators in certain\nscenarios when upgrading.  E.g. if you want to relocate all instances\noff a compute node due to an emergency hardware issue, and you only have\nanother old compute node ready at the time.\n\nNote, though: libvirt will do its own internal compatibility checks, and\nmight still reject live migration if the destination is incompatible.\n\nConflicts: nova/conf/workarounds.py\n - Some of the config options are not present in 'stable/victoria'\n\nCloses-Bug: #1982853\n\nChange-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1\nSigned-off-by: Kashyap Chamarthy <kchamart@redhat.com>\n(cherry picked from commit 5032cb62e6458282e1282ac64cf7dd49a2497ac1)\n(cherry picked from commit 0e3b4424b7f587e3e274a5ef81ac35cfd14f0c96)\n(cherry picked from commit 21f92d4b576fc2c309713c369041dd434d605cc6)\n(cherry picked from commit d04e925a029f38c3d38f52e40d5bc5d8db41cf9f)\n""}]",0,851223,6bb930fee89bdaa0023f0f9ded34ef91e1b099a9,6,1,2,6962,,,0,"Add a workaround to skip hypervisor version check on LM

When turned on, this will disable the version-checking of hypervisors
during live-migration.  This can be useful for operators in certain
scenarios when upgrading.  E.g. if you want to relocate all instances
off a compute node due to an emergency hardware issue, and you only have
another old compute node ready at the time.

Note, though: libvirt will do its own internal compatibility checks, and
might still reject live migration if the destination is incompatible.

Conflicts: nova/conf/workarounds.py
 - Some of the config options are not present in 'stable/victoria'

Closes-Bug: #1982853

Change-Id: Iec387dcbc49ddb91ebf5cfd188224eaf6021c0e1
Signed-off-by: Kashyap Chamarthy <kchamart@redhat.com>
(cherry picked from commit 5032cb62e6458282e1282ac64cf7dd49a2497ac1)
(cherry picked from commit 0e3b4424b7f587e3e274a5ef81ac35cfd14f0c96)
(cherry picked from commit 21f92d4b576fc2c309713c369041dd434d605cc6)
(cherry picked from commit d04e925a029f38c3d38f52e40d5bc5d8db41cf9f)
",git fetch https://review.opendev.org/openstack/nova refs/changes/23/851223/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/skip-hypervisor-version-check-on-lm-a87f2dcb4f8bf0f2.yaml', 'nova/conductor/tasks/live_migrate.py', 'nova/conf/workarounds.py', 'nova/tests/unit/conductor/tasks/test_live_migrate.py']",4,e20c4ac3d73d8b453a4f4cadacff7c5978f57134,bug/1982853," @mock.patch.object(live_migrate.LiveMigrationTask, '_get_compute_info') def test_skip_hypervisor_version_check_on_lm_raise_ex(self, mock_get_info): host1 = {'hypervisor_type': 'a', 'hypervisor_version': 7} host2 = {'hypervisor_type': 'a', 'hypervisor_version': 6} self.flags(group='workarounds', skip_hypervisor_version_check_on_lm=False) mock_get_info.side_effect = [objects.ComputeNode(**host1), objects.ComputeNode(**host2)] self.assertRaises(exception.DestinationHypervisorTooOld, self.task._check_compatible_with_source_hypervisor, self.destination) self.assertEqual([mock.call(self.instance_host), mock.call(self.destination)], mock_get_info.call_args_list) @mock.patch.object(live_migrate.LiveMigrationTask, '_get_compute_info') def test_skip_hypervisor_version_check_on_lm_do_not_raise_ex( self, mock_get_info ): host1 = {'hypervisor_type': 'a', 'hypervisor_version': 7} host2 = {'hypervisor_type': 'a', 'hypervisor_version': 6} self.flags(group='workarounds', skip_hypervisor_version_check_on_lm=True) mock_get_info.side_effect = [objects.ComputeNode(**host1), objects.ComputeNode(**host2)] self.task._check_compatible_with_source_hypervisor(self.destination) self.assertEqual([mock.call(self.instance_host), mock.call(self.destination)], mock_get_info.call_args_list) ",,63,2
openstack%2Fnova~803720,openstack/nova,stable/victoria,I332d4f33ea6b9506cc24ac12e5c0994f208a3107,Add functional test for bug 1937375,ABANDONED,2021-08-06 10:03:26.000000000,2024-03-05 18:57:54.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 29074}]","[{'number': 1, 'created': '2021-08-06 10:03:26.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1937375.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/68b2d5f797896768229db1cf28feb22a984daf81', 'message': 'Add functional test for bug 1937375\n\nRelated-Bug: #1937375\nChange-Id: I332d4f33ea6b9506cc24ac12e5c0994f208a3107\n(cherry picked from commit 2ffd9738602531e93495a1feca76bbb687c3e72c)\n(cherry picked from commit 7a9e3dcd172f187cf93f406b09f49d2ded9bd90d)\n'}]",1,803720,68b2d5f797896768229db1cf28feb22a984daf81,7,3,1,10135,,,0,"Add functional test for bug 1937375

Related-Bug: #1937375
Change-Id: I332d4f33ea6b9506cc24ac12e5c0994f208a3107
(cherry picked from commit 2ffd9738602531e93495a1feca76bbb687c3e72c)
(cherry picked from commit 7a9e3dcd172f187cf93f406b09f49d2ded9bd90d)
",git fetch https://review.opendev.org/openstack/nova refs/changes/20/803720/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1937375.py'],1,68b2d5f797896768229db1cf28feb22a984daf81,bug/1937375,"# Copyright 2020, Red Hat, Inc. All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import mock import time from nova import context from nova import objects from nova.tests.functional import integrated_helpers class TestDuplicateVolAttachRace(integrated_helpers._IntegratedTestBase): """"""Regression test for bug #1937375 A regression test to assert the behaviour of bug #1937375 where calls to reserve_block_device_name can race and create duplicate bdm records. As we can't recreate the race with pure API driven requests in our functional tests this instead makes duplicate calls to reserve_block_device_name during an attach to mimic the behaviour. """""" microversion = 'latest' # TODO(lyarwood): Copied from test_bug_1675570.py, move both into # _IntegratedTestBase. def _wait_for_volume_attach(self, server_id, volume_id): timeout = 0.0 server = self.api.get_server(server_id) attached_vols = [vol['id'] for vol in server['os-extended-volumes:volumes_attached']] while volume_id not in attached_vols and timeout < 10.0: time.sleep(.1) timeout += .1 server = self.api.get_server(server_id) attached_vols = [vol['id'] for vol in server['os-extended-volumes:volumes_attached']] if volume_id not in attached_vols: self.fail('Timed out waiting for volume %s to be attached to ' 'server %s. Currently attached volumes: %s' % (volume_id, server_id, attached_vols)) def test_duplicate_volume_attach_race(self): ctxt = context.get_admin_context() volume_id = self.cinder.IMAGE_BACKED_VOL server_id = self._create_server(networks='none')['id'] original_reserve_name = self.compute.manager.reserve_block_device_name def wrap_reserve_block_device_name(*args, **kwargs): # We can't cause a race with duplicate API requests as functional # tests are single threaded and the first would always complete # before the second was serviced. Instead we can wrap # reserve_block_device_name on the compute manager and call it # twice to mimic two callers racing each other after the checks on # the api. original_bdm = original_reserve_name(*args, **kwargs) original_reserve_name(*args, **kwargs) return original_bdm with mock.patch.object( self.compute.manager, 'reserve_block_device_name', wrap_reserve_block_device_name ): self.api.post_server_volume( server_id, {'volumeAttachment': {'volumeId': volume_id}}) # Wait for a volume to be attached self._wait_for_volume_attach(server_id, volume_id) # Fetch all bdms for the instance to assert what we have bdms = objects.BlockDeviceMappingList.get_by_instance_uuid( ctxt, server_id) # FIXME(lyarwood): This is bug #1937375, we now have 3 bdms for the # instance, the original root disk and two duplicate volume bdms for # the same volume attachment. self.assertEqual(3, len(bdms)) self.assertEqual(volume_id, bdms[2].volume_id) self.assertEqual(volume_id, bdms[1].volume_id) self.assertEqual('local', bdms[0].destination_type) ",,95,0
openstack%2Fnova~803721,openstack/nova,stable/victoria,I92f35514efddcb071c7094370b79d91d34c5bc72,compute: Avoid duplicate BDMs during reserve_block_device_name,ABANDONED,2021-08-06 10:03:26.000000000,2024-03-05 18:57:50.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 29074}]","[{'number': 1, 'created': '2021-08-06 10:03:26.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/functional/regressions/test_bug_1937375.py', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/303c7a7c35044240f1546a5f960c1a4e6482f385', 'message': 'compute: Avoid duplicate BDMs during reserve_block_device_name\n\nWhen attaching a volume to a running instance the nova-api validates\nthat the volume is not already attached to the instance. However\nnova-compute is responsible for actually creating the BDM entry in the\ndatabase. If sending attach requests fast enough it can be possible\nthat the same ""attach_volume"" request can be sent to nova-compute for\nthe same volume/instance combination.\n\nTo work around this we add a check in nova-compute to validate that\nthe volume has not been attached in the mean time.\n\nCloses-Bug: #1937375\nChange-Id: I92f35514efddcb071c7094370b79d91d34c5bc72\n(cherry picked from commit 2209b0007fe85d7c5439e0bfdfe2120c63898fa2)\n(cherry picked from commit 2bee83b8a980b2bd9e276b75aa74253f8c0d0a70)\n'}]",1,803721,303c7a7c35044240f1546a5f960c1a4e6482f385,18,3,1,10135,,,0,"compute: Avoid duplicate BDMs during reserve_block_device_name

When attaching a volume to a running instance the nova-api validates
that the volume is not already attached to the instance. However
nova-compute is responsible for actually creating the BDM entry in the
database. If sending attach requests fast enough it can be possible
that the same ""attach_volume"" request can be sent to nova-compute for
the same volume/instance combination.

To work around this we add a check in nova-compute to validate that
the volume has not been attached in the mean time.

Closes-Bug: #1937375
Change-Id: I92f35514efddcb071c7094370b79d91d34c5bc72
(cherry picked from commit 2209b0007fe85d7c5439e0bfdfe2120c63898fa2)
(cherry picked from commit 2bee83b8a980b2bd9e276b75aa74253f8c0d0a70)
",git fetch https://review.opendev.org/openstack/nova refs/changes/21/803721/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/functional/regressions/test_bug_1937375.py', 'nova/compute/manager.py']",3,303c7a7c35044240f1546a5f960c1a4e6482f385,bug/1937375," # Now that we have the lock check that we haven't raced another # request and ensure there is no existing attachment if any(b for b in bdms if b.volume_id == volume_id): msg = _(""volume %s already attached"") % volume_id raise exception.InvalidVolume(reason=msg) ",,41,6
openstack%2Fnova~825175,openstack/nova,stable/victoria,I7a6a6fe5f5b23e76948b59a85ca9be075a1c2d6d,libvirt: Add announce-self post live-migration workaround,ABANDONED,2022-01-18 21:32:53.000000000,2024-03-05 18:57:46.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-01-18 21:32:53.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/bece8dbb93536c9ad31f37e2be9d054348f83cdb', 'message': 'libvirt: Add announce-self post live-migration workaround\n\nThis patch adds a workaround that can be enabled\nto send an announce_self QEMU monitor command\npost live-migration to send out RARP frames\nthat was lost due to port binding or flows not\nbeing installed.\n\nPlease note that this makes marks the domain\nin libvirt as tainted.\n\nSee previous information about this issue in\nthe [1] bug.\n\n[1] https://bugs.launchpad.net/nova/+bug/1815989\n\nConflicts:\n    nova/conf/workarounds.py\n\nChange-Id: I7a6a6fe5f5b23e76948b59a85ca9be075a1c2d6d\nRelated-Bug: 1815989\n(cherry picked from commit d44e24efe28e825fbfd2c75a032bf2d10109a439)\n(cherry picked from commit 72a7d72e52e62f99202258f5bc261872ff558a2a)\n'}, {'number': 2, 'created': '2022-01-18 21:48:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8b4b5b2c13a54e8a6890fbced0bb9e39b7942710', 'message': 'libvirt: Add announce-self post live-migration workaround\n\nThis patch adds a workaround that can be enabled\nto send an announce_self QEMU monitor command\npost live-migration to send out RARP frames\nthat was lost due to port binding or flows not\nbeing installed.\n\nPlease note that this makes marks the domain\nin libvirt as tainted.\n\nSee previous information about this issue in\nthe [1] bug.\n\n[1] https://bugs.launchpad.net/nova/+bug/1815989\n\nConflicts:\n    nova/conf/workarounds.py\n\nChange-Id: I7a6a6fe5f5b23e76948b59a85ca9be075a1c2d6d\nRelated-Bug: 1815989\n(cherry picked from commit d44e24efe28e825fbfd2c75a032bf2d10109a439)\n(cherry picked from commit 72a7d72e52e62f99202258f5bc261872ff558a2a)\n(cherry picked from commit 77e00be26658a14d6e02b12cc8115d07051faddc)\n'}, {'number': 3, 'created': '2022-01-28 08:47:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8b478c3f99f2e36f2269f7833944c85d73338acf', 'message': 'libvirt: Add announce-self post live-migration workaround\n\nThis patch adds a workaround that can be enabled\nto send an announce_self QEMU monitor command\npost live-migration to send out RARP frames\nthat was lost due to port binding or flows not\nbeing installed.\n\nPlease note that this makes marks the domain\nin libvirt as tainted.\n\nSee previous information about this issue in\nthe [1] bug.\n\n[1] https://bugs.launchpad.net/nova/+bug/1815989\n\nConflicts:\n    nova/conf/workarounds.py\n\nChange-Id: I7a6a6fe5f5b23e76948b59a85ca9be075a1c2d6d\nRelated-Bug: 1815989\n(cherry picked from commit d44e24efe28e825fbfd2c75a032bf2d10109a439)\n(cherry picked from commit 72a7d72e52e62f99202258f5bc261872ff558a2a)\n(cherry picked from commit 77e00be26658a14d6e02b12cc8115d07051faddc)\n'}, {'number': 4, 'created': '2022-03-04 16:26:54.000000000', 'files': ['nova/virt/libvirt/driver.py', 'releasenotes/notes/announce-self-post-live-migration-936721b1ab887514.yaml', 'nova/conf/workarounds.py', 'nova/virt/libvirt/guest.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/410cfb07bd08efac6d2073141211c3195808e87a', 'message': 'libvirt: Add announce-self post live-migration workaround\n\nNOTE(melwitt): This is the combination of two commits, the workaround\nconfig option and a followup change to add a note that enabling the\nworkaround will cause the guest domain to be considered tainted by\nlibvirt.\n\nThis patch adds a workaround that can be enabled\nto send an announce_self QEMU monitor command\npost live-migration to send out RARP frames\nthat was lost due to port binding or flows not\nbeing installed.\n\nPlease note that this makes marks the domain\nin libvirt as tainted.\n\nSee previous information about this issue in\nthe [1] bug.\n\n[1] https://bugs.launchpad.net/nova/+bug/1815989\n\nRelated-Bug: 1815989\n\nUpdate announce self workaround opt description\n\nThis updates the announce self workaround config opt\ndescription to include info about instance being set\nas tainted by libvirt.\n\nChange-Id: I8140c8fe592dd54fc09a9510723892806db49a56\n(cherry picked from commit 2aa1ed5810b67b9a8f18b2ec5e21004f93831168)\n\nChange-Id: I7a6a6fe5f5b23e76948b59a85ca9be075a1c2d6d\n(cherry picked from commit d44e24efe28e825fbfd2c75a032bf2d10109a439)\n(cherry picked from commit a8981422afdd09f8cfea053e592c15e771fbe969)\n(cherry picked from commit c578b5d094a37719aa8e22e52fdd0c3a525011e0)\n'}]",2,825175,410cfb07bd08efac6d2073141211c3195808e87a,23,1,4,11604,,,0,"libvirt: Add announce-self post live-migration workaround

NOTE(melwitt): This is the combination of two commits, the workaround
config option and a followup change to add a note that enabling the
workaround will cause the guest domain to be considered tainted by
libvirt.

This patch adds a workaround that can be enabled
to send an announce_self QEMU monitor command
post live-migration to send out RARP frames
that was lost due to port binding or flows not
being installed.

Please note that this makes marks the domain
in libvirt as tainted.

See previous information about this issue in
the [1] bug.

[1] https://bugs.launchpad.net/nova/+bug/1815989

Related-Bug: 1815989

Update announce self workaround opt description

This updates the announce self workaround config opt
description to include info about instance being set
as tainted by libvirt.

Change-Id: I8140c8fe592dd54fc09a9510723892806db49a56
(cherry picked from commit 2aa1ed5810b67b9a8f18b2ec5e21004f93831168)

Change-Id: I7a6a6fe5f5b23e76948b59a85ca9be075a1c2d6d
(cherry picked from commit d44e24efe28e825fbfd2c75a032bf2d10109a439)
(cherry picked from commit a8981422afdd09f8cfea053e592c15e771fbe969)
(cherry picked from commit c578b5d094a37719aa8e22e52fdd0c3a525011e0)
",git fetch https://review.opendev.org/openstack/nova refs/changes/75/825175/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'releasenotes/notes/announce-self-post-live-migration-936721b1ab887514.yaml', 'nova/conf/workarounds.py', 'nova/virt/libvirt/guest.py']",4,bece8dbb93536c9ad31f37e2be9d054348f83cdb,bug/1815989,"try: import libvirtmod_qemu except ImportError: libvirtmod_qemu = None def announce_self(self): libvirtmod_qemu.virDomainQemuMonitorCommand( self._domain._o, 'announce_self', 1) ",,50,0
openstack%2Fnova~819181,openstack/nova,stable/victoria,Iae4fd0579f71d3ba6793dbdb037275352d7e57b0,Retry image download if it's corrupted,ABANDONED,2021-11-25 13:55:35.000000000,2024-03-05 18:57:42.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-11-25 13:55:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/83c6cc4476d5822ae28c27383feaada5e1aef3a0', 'message': 'Retry image download if it\'s corrupted\n\nAdding IOError in list of catching exceptions in order to\nfix behavior when nova-compute wouldn\'t retry image download\nwhen got ""Corrupt image download"" error from glanceclient\nand had num_retries config option set.\n\nCloses-Bug: #1950657\nChange-Id: Iae4fd0579f71d3ba6793dbdb037275352d7e57b0\n(cherry picked from commit ce493273b9404530dfa8ecfe3eaa3d6c81a20e39)\n'}, {'number': 2, 'created': '2022-10-27 13:23:10.000000000', 'files': ['nova/image/glance.py', 'releasenotes/notes/bug-retry-corrupted-download-5798b0df44a00e4e.yaml', 'nova/tests/unit/image/test_glance.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/663d642c71cd5c69c239e6657baf7c8e97b3a7b7', 'message': 'Retry image download if it\'s corrupted\n\nAdding IOError in list of catching exceptions in order to\nfix behavior when nova-compute wouldn\'t retry image download\nwhen got ""Corrupt image download"" error from glanceclient\nand had num_retries config option set.\n\nCloses-Bug: #1950657\nChange-Id: Iae4fd0579f71d3ba6793dbdb037275352d7e57b0\n(cherry picked from commit ce493273b9404530dfa8ecfe3eaa3d6c81a20e39)\n(cherry picked from commit b44ec0dc4927046d15525af78ab9d534cea9ce69)\n(cherry picked from commit 8e05222fd221501aac004d64f59783eb01bddf29)\n'}]",2,819181,663d642c71cd5c69c239e6657baf7c8e97b3a7b7,12,2,2,30609,,,0,"Retry image download if it's corrupted

Adding IOError in list of catching exceptions in order to
fix behavior when nova-compute wouldn't retry image download
when got ""Corrupt image download"" error from glanceclient
and had num_retries config option set.

Closes-Bug: #1950657
Change-Id: Iae4fd0579f71d3ba6793dbdb037275352d7e57b0
(cherry picked from commit ce493273b9404530dfa8ecfe3eaa3d6c81a20e39)
(cherry picked from commit b44ec0dc4927046d15525af78ab9d534cea9ce69)
(cherry picked from commit 8e05222fd221501aac004d64f59783eb01bddf29)
",git fetch https://review.opendev.org/openstack/nova refs/changes/81/819181/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/image/glance.py', 'releasenotes/notes/bug-retry-corrupted-download-5798b0df44a00e4e.yaml', 'nova/tests/unit/image/test_glance.py']",3,83c6cc4476d5822ae28c27383feaada5e1aef3a0,bug/1950657," def test_retry_works_for_corrupted_image(self, create_client_mock, sleep_mock, shuffle_mock): side_effect = [ IOError, None ] self._mock_client_images_response(create_client_mock, side_effect) self.flags(num_retries=1, group='glance') client = glance.GlanceClientWrapper() self.assert_retry_attempted(sleep_mock, client, 'https://host2:9293') @mock.patch('random.shuffle') @mock.patch('time.sleep') @mock.patch('nova.image.glance._glanceclient_from_endpoint')",,23,1
openstack%2Fnova~838334,openstack/nova,stable/victoria,Ia208ef0dd0bab1c59d025234f4da7537c39cda61,Adds regression test for bug LP#1944619,ABANDONED,2022-04-18 18:04:22.000000000,2024-03-05 18:57:39.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-04-18 18:04:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/173d63f4949310dabf0893f0a775271e385692d1', 'message': 'Adds regression test for bug LP#1944619\n\nRelated-bug: #1944619\nChange-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61\n(cherry picked from commit d43538712c034023bdb3e25cd7adfdee409ed596)\n(cherry picked from commit fd6b8da64e7d0cb6bc1c7c5e8221ea5e7d7de97e)\n(cherry picked from commit 7efb2921fd3c795a7038cf82af6ff610ab335e27)\n'}, {'number': 2, 'created': '2022-04-18 19:43:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/fcb5160a17cb294b41d87e6d6830cc266a850a12', 'message': 'Adds regression test for bug LP#1944619\n\nRelated-bug: #1944619\nChange-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61\n(cherry picked from commit d43538712c034023bdb3e25cd7adfdee409ed596)\n(cherry picked from commit fd6b8da64e7d0cb6bc1c7c5e8221ea5e7d7de97e)\n(cherry picked from commit 7045b7042d884e05e9c172490310154a9bd94a59)\n'}, {'number': 3, 'created': '2022-04-19 13:26:49.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1944619.py', 'nova/tests/functional/libvirt/base.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/0343d3824ba70bca2f8ae6b9af026396ae3bcd18', 'message': 'Adds regression test for bug LP#1944619\n\nRelated-bug: #1944619\nChange-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61\n(cherry picked from commit d43538712c034023bdb3e25cd7adfdee409ed596)\n(cherry picked from commit fd6b8da64e7d0cb6bc1c7c5e8221ea5e7d7de97e)\n(cherry picked from commit 44a0023e8a86ec1011f2cfc4abd234b6ffa3a622)\n'}]",1,838334,0343d3824ba70bca2f8ae6b9af026396ae3bcd18,12,1,3,10058,,,0,"Adds regression test for bug LP#1944619

Related-bug: #1944619
Change-Id: Ia208ef0dd0bab1c59d025234f4da7537c39cda61
(cherry picked from commit d43538712c034023bdb3e25cd7adfdee409ed596)
(cherry picked from commit fd6b8da64e7d0cb6bc1c7c5e8221ea5e7d7de97e)
(cherry picked from commit 44a0023e8a86ec1011f2cfc4abd234b6ffa3a622)
",git fetch https://review.opendev.org/openstack/nova refs/changes/34/838334/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1944619.py'],1,173d63f4949310dabf0893f0a775271e385692d1,bug/1944619,"# Copyright 2021, Canonical, Inc. All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import fixtures from nova import exception as nova_exceptions from nova.tests.fixtures import libvirt as fakelibvirt from nova.tests.functional import integrated_helpers from nova.tests.functional.libvirt import base class TestRollbackWithHWOffloadedOVS( base.LibvirtMigrationMixin, base.ServersTestBase, integrated_helpers.InstanceHelperMixin ): """"""Regression test for bug LP#1944619 Assert the behaviour observed in bug LP#1944619 caused by the live migration cleanup code being used to cleanup pre-live migration failures. When SRIOV devices are in use on a VM, that will cause the source host to try to re-attach a VIF not actually de-attached causing a failure. The exception mocked in pre_live_migration reproduce an arbitrary error that might cause the pre-live migration process to fail and rollback_live_migration_at_source reproduce the device re-attach failure. """""" api_major_version = 'v2.1' microversion = 'latest' ADMIN_API = True def setUp(self): super().setUp() self.start_compute( hostname='src', host_info=fakelibvirt.HostInfo( cpu_nodes=1, cpu_sockets=1, cpu_cores=4, cpu_threads=1)) self.start_compute( hostname='dest', host_info=fakelibvirt.HostInfo( cpu_nodes=1, cpu_sockets=1, cpu_cores=4, cpu_threads=1)) self.src = self.computes['src'] self.dest = self.computes['dest'] lib_path = ""nova.virt.libvirt.driver.LibvirtDriver"" funtion_path = ""rollback_live_migration_at_source"" mock_lib_path = ""%s.%s"" % (lib_path, funtion_path) self.libvirt_mock = self.useFixture( fixtures.MockPatch(mock_lib_path, side_effect=fakelibvirt.libvirtError( defmsg=""libVirt duplicated dev error""))) funtion_path = ""pre_live_migration"" mock_lib_path = ""%s.%s"" % (lib_path, funtion_path) self.useFixture(fixtures.MockPatch( mock_lib_path, side_effect=nova_exceptions.DestinationDiskExists( path='/var/non/existent')) ) def test_rollback_pre_live_migration(self): self.server = self._create_server(host='src', networks='none') # Live migrate the instance to another host self._live_migrate(self.server, migration_expected_state='error', server_expected_state='MIGRATING') # FIXME(erlon): In the current behavior, # rollback_live_migration_at_source is called if an error happens # during the pre_live_migration phase on the destination and therefore # triggers the observed bug. rollback_live_migration_at_source should # *not* be called for when errors happen during pre_live_migration # phase. self.libvirt_mock.mock.assert_called_once() ",,87,0
openstack%2Fnova~836017,openstack/nova,stable/victoria,I784190ac356695dd508e0ad8ec31d8eaa3ebee56,Fix pre_live_migration rollback,ABANDONED,2022-03-31 13:10:29.000000000,2024-03-05 18:57:35.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-03-31 13:10:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/b8caf1f4857c6b23775cda5f671bd316845cf274', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 379e54fe49b3343a0734c96574789614e3d83b49)\n(cherry picked from commit a09d29b0bc537b9770d8dc4d7c1a6584798539f7)\n(cherry picked from commit a7c7c09d3e129f76b7c13607f6bc65d3c5f161e9)\n""}, {'number': 2, 'created': '2022-04-18 18:04:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/9eb7a440596a6b36ff195896923702a28e9c4c0e', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 379e54fe49b3343a0734c96574789614e3d83b49)\n(cherry picked from commit c277636a96f4525ed6eb0530aa576f2156c8b99d)\n(cherry picked from commit 11350c7fac11c832b6d130747e3ecbdb8af4de2f)\n""}, {'number': 3, 'created': '2022-04-18 19:43:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/99d7e86ee9e24345ea656eb9b9fea0acdd829048', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 379e54fe49b3343a0734c96574789614e3d83b49)\n(cherry picked from commit c277636a96f4525ed6eb0530aa576f2156c8b99d)\n(cherry picked from commit 2b2a2aeb2e90c8721fc23c53da4b92f344b7e907)\n""}, {'number': 4, 'created': '2022-04-19 13:26:49.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1944619.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'releasenotes/notes/bug-1944619-fix-live-migration-rollback.yaml', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/bf8f44857446bf5337db62a7793b4f4a7b350022', 'message': ""Fix pre_live_migration rollback\n\nDuring the pre live migration process, Nova performs most of the\ntasks related to the creation and operation of the VM in the destination\nhost. That is done without interrupting any of the hardware in the source\nhost. If the pre_live_migration fails, those same operations should be\nrolled back.\n\nCurrently nova is sharing the _rollback_live_migration for both\nlive and pre_live migration rollbacks, and that is causing the source\nhost to try to re-attach network interfaces on the source host where\nthey weren't actually de-attached.\n\nThis patch fixes that by adding a conditional to allow nova to do\ndifferent paths for migration and pre_live_migration rollbacks.\n\nCloses-bug: #1944619\nChange-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56\n(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)\n(cherry picked from commit 379e54fe49b3343a0734c96574789614e3d83b49)\n(cherry picked from commit c277636a96f4525ed6eb0530aa576f2156c8b99d)\n(cherry picked from commit d91051269a3230f3e2ec7609ec2a5d378143703c)\n""}]",2,836017,bf8f44857446bf5337db62a7793b4f4a7b350022,22,1,4,10058,,,0,"Fix pre_live_migration rollback

During the pre live migration process, Nova performs most of the
tasks related to the creation and operation of the VM in the destination
host. That is done without interrupting any of the hardware in the source
host. If the pre_live_migration fails, those same operations should be
rolled back.

Currently nova is sharing the _rollback_live_migration for both
live and pre_live migration rollbacks, and that is causing the source
host to try to re-attach network interfaces on the source host where
they weren't actually de-attached.

This patch fixes that by adding a conditional to allow nova to do
different paths for migration and pre_live_migration rollbacks.

Closes-bug: #1944619
Change-Id: I784190ac356695dd508e0ad8ec31d8eaa3ebee56
(cherry picked from commit 63ffba7496182f6f6f49a380f3c639fc3ded9772)
(cherry picked from commit 379e54fe49b3343a0734c96574789614e3d83b49)
(cherry picked from commit c277636a96f4525ed6eb0530aa576f2156c8b99d)
(cherry picked from commit d91051269a3230f3e2ec7609ec2a5d378143703c)
",git fetch https://review.opendev.org/openstack/nova refs/changes/17/836017/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/regressions/test_bug_1944619.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'releasenotes/notes/bug-1944619-fix-live-migration-rollback.yaml', 'nova/compute/manager.py']",4,b8caf1f4857c6b23775cda5f671bd316845cf274,bug/1944619," source_bdms=source_bdms, pre_live_migration=True) source_bdms=None, pre_live_migration=False): # NOTE(erlon): We should make sure that rollback_live_migration_at_src # is not called in the pre_live_migration rollback as that will trigger # the src host to re-attach interfaces which were not detached # previously. if not pre_live_migration: self.driver.rollback_live_migration_at_source(context, instance, migrate_data)"," source_bdms=source_bdms) source_bdms=None): self.driver.rollback_live_migration_at_source(context, instance, migrate_data)",102,6
openstack%2Fnova~860736,openstack/nova,stable/victoria,I77fdfa9cffbd44b2889f49f266b2582bcc6a4267,"Handle ""no RAM info was set"" migration case",ABANDONED,2022-10-07 18:47:17.000000000,2024-03-05 18:57:31.000000000,,"[{'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-10-07 18:47:17.000000000', 'files': ['nova/tests/unit/virt/libvirt/test_guest.py', 'nova/virt/libvirt/guest.py', 'releasenotes/notes/bug-1982284-libvirt-handle-no-ram-info-was-set-99784934ed80fd72.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/13c2e5b2d7a2d3ac7384dc17cbe74b9faca2762c', 'message': 'Handle ""no RAM info was set"" migration case\n\nThis handles the case where the live migration monitoring thread may\nrace and call jobStats() after the migration has completed resulting in\nthe following error:\n\n    libvirt.libvirtError: internal error: migration was active, but no\n    RAM info was set\n\nCloses-Bug: #1982284\nChange-Id: I77fdfa9cffbd44b2889f49f266b2582bcc6a4267\n(cherry picked from commit 9fea934c71d3c2fa7fdd80c67d94e18466c5cf9a)\n(cherry picked from commit 00396fa9396324780c09161ed57a86b7e458c26f)\n(cherry picked from commit 4316234e63b76e4f9877ec6e924b5c54ea761bbb)\n(cherry picked from commit 98d9936e54b900db1bd2d5477a9a1d7e5a7be104)\n(cherry picked from commit 6d68aee626875a165667e04c4ccc54ff3073e4ff)\n'}]",2,860736,13c2e5b2d7a2d3ac7384dc17cbe74b9faca2762c,7,2,1,4690,,,0,"Handle ""no RAM info was set"" migration case

This handles the case where the live migration monitoring thread may
race and call jobStats() after the migration has completed resulting in
the following error:

    libvirt.libvirtError: internal error: migration was active, but no
    RAM info was set

Closes-Bug: #1982284
Change-Id: I77fdfa9cffbd44b2889f49f266b2582bcc6a4267
(cherry picked from commit 9fea934c71d3c2fa7fdd80c67d94e18466c5cf9a)
(cherry picked from commit 00396fa9396324780c09161ed57a86b7e458c26f)
(cherry picked from commit 4316234e63b76e4f9877ec6e924b5c54ea761bbb)
(cherry picked from commit 98d9936e54b900db1bd2d5477a9a1d7e5a7be104)
(cherry picked from commit 6d68aee626875a165667e04c4ccc54ff3073e4ff)
",git fetch https://review.opendev.org/openstack/nova refs/changes/36/860736/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/libvirt/test_guest.py', 'nova/virt/libvirt/guest.py', 'releasenotes/notes/bug-1982284-libvirt-handle-no-ram-info-was-set-99784934ed80fd72.yaml']",3,13c2e5b2d7a2d3ac7384dc17cbe74b9faca2762c,bug/1982284,"--- other: - | A workaround has been added to the libvirt driver to catch and pass migrations that were previously failing with the error: ``libvirt.libvirtError: internal error: migration was active, but no RAM info was set`` See `bug 1982284`_ for more details. .. _bug 1982284: https://bugs.launchpad.net/nova/+bug/1982284 ",,40,0
openstack%2Fdesignate-dashboard~911251,openstack/designate-dashboard,unmaintained/victoria,I651a0368f771622575a580916a43d2d2bea946ed,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:40:00.000000000,2024-03-05 18:57:30.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:40:00.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/designate-dashboard/commit/baaab2d1bf29adfe62edbacb39b16de6f902bead', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I651a0368f771622575a580916a43d2d2bea946ed\n'}]",0,911251,baaab2d1bf29adfe62edbacb39b16de6f902bead,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I651a0368f771622575a580916a43d2d2bea946ed
",git fetch https://review.opendev.org/openstack/designate-dashboard refs/changes/51/911251/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,baaab2d1bf29adfe62edbacb39b16de6f902bead,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fpython-zaqarclient~911188,openstack/python-zaqarclient,unmaintained/xena,Ib35c6377fc89e8064ba48762cfec397afb8c887a,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:24:37.000000000,2024-03-05 18:57:29.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:24:37.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/f2a9464f4b2e352ed9a7406e305f3e3b55d8a2be', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: Ib35c6377fc89e8064ba48762cfec397afb8c887a\n'}]",0,911188,f2a9464f4b2e352ed9a7406e305f3e3b55d8a2be,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: Ib35c6377fc89e8064ba48762cfec397afb8c887a
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/88/911188/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,f2a9464f4b2e352ed9a7406e305f3e3b55d8a2be,create-xena,defaultbranch=unmaintained/xena,,1,0
openstack%2Fnova~811810,openstack/nova,stable/victoria,Ice4071722de54e8d20bb8c3795be22f1995940cd,Add functional regression test for bug 1853009,ABANDONED,2021-09-30 00:29:44.000000000,2024-03-05 18:57:27.000000000,,"[{'_account_id': 14826}, {'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-09-30 00:29:44.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1853009.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/34d5bca6bc612f41ac3fc33447cd2ba83bf446ba', 'message': 'Add functional regression test for bug 1853009\n\nBug 1853009 describes a race condition involving multiple nova-compute\nservices with ironic. As the compute services start up, the hash ring\nrebalances, and the compute services have an inconsistent view of which\nis responsible for a compute node.\n\nThe sequence of actions here is adapted from a real world log [1], where\nmultiple nova-compute services were started simultaneously. In some\ncases mocks are used to simulate race conditions.\n\nThere are three main issues with the behaviour:\n\n* host2 deletes the orphan node compute node after host1 has taken\n  ownership of it.\n\n* host1 assumes that another compute service will not delete its nodes.\n  Once a node is in rt.compute_nodes, it is not removed again unless the\n  node is orphaned. This prevents host1 from recreating the compute\n  node.\n\n* host1 assumes that another compute service will not delete its\n  resource providers. Once an RP is in the provider tree, it is not\n  removed.\n\nThis functional test documents the current behaviour, with the idea that\nit can be updated as this behaviour is fixed.\n\n[1] http://paste.openstack.org/show/786272/\n\nCo-Authored-By: Matt Riedemann <mriedem.os@gmail.com>\n\nChange-Id: Ice4071722de54e8d20bb8c3795be22f1995940cd\nRelated-Bug: #1853009\nRelated-Bug: #1853159\n(cherry picked from commit 59d9871e8a0672538f8ffc43ae99b3d1c4b08909)\n(cherry picked from commit c260e75d012cc4fae596d5de185afad6fb24068c)\n'}]",1,811810,34d5bca6bc612f41ac3fc33447cd2ba83bf446ba,5,3,1,4690,,,0,"Add functional regression test for bug 1853009

Bug 1853009 describes a race condition involving multiple nova-compute
services with ironic. As the compute services start up, the hash ring
rebalances, and the compute services have an inconsistent view of which
is responsible for a compute node.

The sequence of actions here is adapted from a real world log [1], where
multiple nova-compute services were started simultaneously. In some
cases mocks are used to simulate race conditions.

There are three main issues with the behaviour:

* host2 deletes the orphan node compute node after host1 has taken
  ownership of it.

* host1 assumes that another compute service will not delete its nodes.
  Once a node is in rt.compute_nodes, it is not removed again unless the
  node is orphaned. This prevents host1 from recreating the compute
  node.

* host1 assumes that another compute service will not delete its
  resource providers. Once an RP is in the provider tree, it is not
  removed.

This functional test documents the current behaviour, with the idea that
it can be updated as this behaviour is fixed.

[1] http://paste.openstack.org/show/786272/

Co-Authored-By: Matt Riedemann <mriedem.os@gmail.com>

Change-Id: Ice4071722de54e8d20bb8c3795be22f1995940cd
Related-Bug: #1853009
Related-Bug: #1853159
(cherry picked from commit 59d9871e8a0672538f8ffc43ae99b3d1c4b08909)
(cherry picked from commit c260e75d012cc4fae596d5de185afad6fb24068c)
",git fetch https://review.opendev.org/openstack/nova refs/changes/10/811810/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/regressions/test_bug_1853009.py'],1,34d5bca6bc612f41ac3fc33447cd2ba83bf446ba,bug/1853009,"# Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import mock from nova import context from nova import objects from nova.tests.functional import integrated_helpers class NodeRebalanceDeletedComputeNodeRaceTestCase( integrated_helpers.ProviderUsageBaseTestCase, ): """"""Regression test for bug 1853009 observed in Rocky & later. When an ironic node re-balances from one host to another, there can be a race where the old host deletes the orphan compute node after the new host has taken ownership of it which results in the new host failing to create the compute node and resource provider because the ResourceTracker does not detect a change. """""" # Make sure we're using the fake driver that has predictable uuids # for each node. compute_driver = 'fake.PredictableNodeUUIDDriver' def _assert_hypervisor_api(self, nodename, expected_host): # We should have one compute node shown by the API. hypervisors = self.api.api_get( '/os-hypervisors/detail' ).body['hypervisors'] self.assertEqual(1, len(hypervisors), hypervisors) hypervisor = hypervisors[0] self.assertEqual(nodename, hypervisor['hypervisor_hostname']) self.assertEqual(expected_host, hypervisor['service']['host']) def _start_compute(self, host): host = self.start_service('compute', host) # Ironic compute driver has rebalances_nodes = True. host.manager.driver.rebalances_nodes = True return host def setUp(self): super(NodeRebalanceDeletedComputeNodeRaceTestCase, self).setUp() self.nodename = 'fake-node' self.ctxt = context.get_admin_context() def test_node_rebalance_deleted_compute_node_race(self): # Simulate a service running and then stopping. host_a runs, creates # fake-node, then is stopped. The fake-node compute node is destroyed. # This leaves a soft-deleted node in the DB. host_a = self._start_compute('host_a') host_a.manager.driver._set_nodes([self.nodename]) host_a.manager.update_available_resource(self.ctxt) host_a.stop() cn = objects.ComputeNode.get_by_host_and_nodename( self.ctxt, 'host_a', self.nodename, ) cn.destroy() self.assertEqual(0, len(objects.ComputeNodeList.get_all(self.ctxt))) # Now we create a new compute service to manage our node. host_b = self._start_compute('host_b') host_b.manager.driver._set_nodes([self.nodename]) # When start_service runs, it will create a host_b ComputeNode. We want # to delete that and inject our fake node into the driver which will # be re-balanced to another host later. First assert this actually # exists. self._assert_hypervisor_api('host_b', expected_host='host_b') # Now run the update_available_resource periodic to register fake-node # and have it managed by host_b. This will also detect the ""host_b"" # node as orphaned and delete it along with its resource provider. cn_host_b_node = objects.ComputeNode.get_by_host_and_nodename( self.ctxt, 'host_b', 'host_b', ) # host_b[1]: Finds no compute record in RT. Tries to create one # (_init_compute_node). # FIXME(mgoddard): This shows a traceback with SQL rollback due to # soft-deleted node. The create seems to succeed but breaks the RT # update for this node. See # https://bugs.launchpad.net/nova/+bug/1853159. host_b.manager.update_available_resource(self.ctxt) self.assertIn( 'Deleting orphan compute node %s hypervisor host ' 'is host_b, nodes are' % cn_host_b_node.id, self.stdlog.logger.output) self._assert_hypervisor_api(self.nodename, expected_host='host_b') # There should only be one resource provider (fake-node). original_rps = self._get_all_providers() self.assertEqual(1, len(original_rps), original_rps) self.assertEqual(self.nodename, original_rps[0]['name']) # Simulate a re-balance by restarting host_a and make it manage # fake-node. At this point both host_b and host_a think they own # fake-node. host_a = self._start_compute('host_a') host_a.manager.driver._set_nodes([self.nodename]) # host_a[1]: Finds no compute record in RT, 'moves' existing node from # host_b host_a.manager.update_available_resource(self.ctxt) # Assert that fake-node was re-balanced from host_b to host_a. self.assertIn( 'ComputeNode fake-node moving from host_b to host_a', self.stdlog.logger.output) self._assert_hypervisor_api(self.nodename, expected_host='host_a') # host_a[2]: Begins periodic update, queries compute nodes for this # host, finds the fake-node. cn = objects.ComputeNode.get_by_host_and_nodename( self.ctxt, 'host_a', self.nodename, ) # host_b[2]: Finds no compute record in RT, 'moves' existing node from # host_a host_b.manager.update_available_resource(self.ctxt) # Assert that fake-node was re-balanced from host_a to host_b. self.assertIn( 'ComputeNode fake-node moving from host_a to host_b', self.stdlog.logger.output) self._assert_hypervisor_api(self.nodename, expected_host='host_b') # Complete rebalance, as host_a realises it does not own fake-node. host_a.manager.driver._set_nodes([]) # host_a[2]: Deletes orphan compute node. # Mock out the compute node query to simulate a race condition where # the list includes an orphan compute node that is newly owned by # host_b by the time host_a attempts to delete it. # FIXME(mgoddard): Ideally host_a would not delete a node that does not # belong to it. See https://bugs.launchpad.net/nova/+bug/1853009. with mock.patch( 'nova.compute.manager.ComputeManager._get_compute_nodes_in_db' ) as mock_get: mock_get.return_value = [cn] host_a.manager.update_available_resource(self.ctxt) # Verify that the node was deleted. self.assertIn( 'Deleting orphan compute node %s hypervisor host ' 'is fake-node, nodes are' % cn.id, self.stdlog.logger.output) hypervisors = self.api.api_get( '/os-hypervisors/detail').body['hypervisors'] self.assertEqual(0, len(hypervisors), hypervisors) rps = self._get_all_providers() self.assertEqual(0, len(rps), rps) # host_b[3]: Should recreate compute node and resource provider. # FIXME(mgoddard): Compute node not recreated here, because it is # already in RT.compute_nodes. See # https://bugs.launchpad.net/nova/+bug/1853009. # FIXME(mgoddard): Resource provider not recreated here, because it # exists in the provider tree. See # https://bugs.launchpad.net/nova/+bug/1841481. host_b.manager.update_available_resource(self.ctxt) # Verify that the node was not recreated. hypervisors = self.api.api_get( '/os-hypervisors/detail').body['hypervisors'] self.assertEqual(0, len(hypervisors), hypervisors) # But the compute node exists in the RT. self.assertIn(self.nodename, host_b.manager.rt.compute_nodes) # There is no RP. rps = self._get_all_providers() self.assertEqual(0, len(rps), rps) # But the RP exists in the provider tree. self.assertTrue(host_b.manager.rt.reportclient._provider_tree.exists( self.nodename)) # This fails due to the lack of a resource provider. self.assertIn( 'Skipping removal of allocations for deleted instances', self.stdlog.logger.output) ",,190,0
openstack%2Fnova~811813,openstack/nova,stable/victoria,I260c1fded79a85d4899e94df4d9036a1ee437f02,Prevent deletion of a compute node belonging to another host,ABANDONED,2021-09-30 00:29:44.000000000,2024-03-05 18:57:23.000000000,,"[{'_account_id': 4690}, {'_account_id': 14826}, {'_account_id': 15334}, {'_account_id': 20733}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-09-30 00:29:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/1e9d2979542165598b61f0d2e16b65b37b9ea074', 'message': 'Prevent deletion of a compute node belonging to another host\n\nThere is a race condition in nova-compute with the ironic virt driver as\nnodes get rebalanced. It can lead to compute nodes being removed in the\nDB and not repopulated. Ultimately this prevents these nodes from being\nscheduled to.\n\nThe main race condition involved is in update_available_resources in\nthe compute manager. When the list of compute nodes is queried, there is\na compute node belonging to the host that it does not expect to be\nmanaging, i.e. it is an orphan. Between that time and deleting the\norphan, the real owner of the compute node takes ownership of it ( in\nthe resource tracker). However, the node is still deleted as the first\nhost is unaware of the ownership change.\n\nThis change prevents this from occurring by filtering on the host when\ndeleting a compute node. If another compute host has taken ownership of\na node, it will have updated the host field and this will prevent\ndeletion from occurring. The first host sees this has happened via the\nComputeHostNotFound exception, and avoids deleting its resource\nprovider.\n\nCo-Authored-By: melanie witt <melwittt@gmail.com>\n\nConflicts:\n    nova/compute/manager.py\n\nNOTE(melwitt): The conflict is because change\nI23bb9e539d08f5c6202909054c2dd49b6c7a7a0e (Remove six.text_type (1/2))\nis not in Victoria.\n\nCloses-Bug: #1853009\nRelated-Bug: #1841481\n\nChange-Id: I260c1fded79a85d4899e94df4d9036a1ee437f02\n(cherry picked from commit a8492e88783b40f6dc61888fada232f0d00d6acf)\n(cherry picked from commit da4e0b3daaf1814ec61b49bddeb2e6431e73b4c2)\n'}, {'number': 2, 'created': '2021-09-30 01:44:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8f825c303355fbd652b87b0720942f57ff1675bb', 'message': 'Prevent deletion of a compute node belonging to another host\n\nThere is a race condition in nova-compute with the ironic virt driver as\nnodes get rebalanced. It can lead to compute nodes being removed in the\nDB and not repopulated. Ultimately this prevents these nodes from being\nscheduled to.\n\nThe main race condition involved is in update_available_resources in\nthe compute manager. When the list of compute nodes is queried, there is\na compute node belonging to the host that it does not expect to be\nmanaging, i.e. it is an orphan. Between that time and deleting the\norphan, the real owner of the compute node takes ownership of it ( in\nthe resource tracker). However, the node is still deleted as the first\nhost is unaware of the ownership change.\n\nThis change prevents this from occurring by filtering on the host when\ndeleting a compute node. If another compute host has taken ownership of\na node, it will have updated the host field and this will prevent\ndeletion from occurring. The first host sees this has happened via the\nComputeHostNotFound exception, and avoids deleting its resource\nprovider.\n\nCo-Authored-By: melanie witt <melwittt@gmail.com>\n\nConflicts:\n    nova/compute/manager.py\n\nNOTE(melwitt): The conflict is because change\nI23bb9e539d08f5c6202909054c2dd49b6c7a7a0e (Remove six.text_type (1/2))\nis not in Victoria.\n\nCloses-Bug: #1853009\nRelated-Bug: #1841481\n\nChange-Id: I260c1fded79a85d4899e94df4d9036a1ee437f02\n(cherry picked from commit a8492e88783b40f6dc61888fada232f0d00d6acf)\n(cherry picked from commit cbbca58504275f194ec55eeb89dad4a496d98060)\n'}, {'number': 3, 'created': '2021-09-30 03:53:17.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/objects/compute_node.py', 'nova/tests/unit/objects/test_compute_node.py', 'releasenotes/notes/bug-1853009-99414e14d1491b5f.yaml', 'nova/tests/unit/compute/test_compute.py', 'nova/compute/manager.py', 'nova/tests/unit/db/test_db_api.py', 'nova/db/sqlalchemy/api.py', 'nova/tests/functional/regressions/test_bug_1853009.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/737a4ccd1398a5cf28a67547f226b668f246c784', 'message': 'Prevent deletion of a compute node belonging to another host\n\nThere is a race condition in nova-compute with the ironic virt driver as\nnodes get rebalanced. It can lead to compute nodes being removed in the\nDB and not repopulated. Ultimately this prevents these nodes from being\nscheduled to.\n\nThe main race condition involved is in update_available_resources in\nthe compute manager. When the list of compute nodes is queried, there is\na compute node belonging to the host that it does not expect to be\nmanaging, i.e. it is an orphan. Between that time and deleting the\norphan, the real owner of the compute node takes ownership of it ( in\nthe resource tracker). However, the node is still deleted as the first\nhost is unaware of the ownership change.\n\nThis change prevents this from occurring by filtering on the host when\ndeleting a compute node. If another compute host has taken ownership of\na node, it will have updated the host field and this will prevent\ndeletion from occurring. The first host sees this has happened via the\nComputeHostNotFound exception, and avoids deleting its resource\nprovider.\n\nCo-Authored-By: melanie witt <melwittt@gmail.com>\n\nConflicts:\n    nova/compute/manager.py\n\nNOTE(melwitt): The conflict is because change\nI23bb9e539d08f5c6202909054c2dd49b6c7a7a0e (Remove six.text_type (1/2))\nis not in Victoria.\n\nCloses-Bug: #1853009\nRelated-Bug: #1841481\n\nChange-Id: I260c1fded79a85d4899e94df4d9036a1ee437f02\n(cherry picked from commit a8492e88783b40f6dc61888fada232f0d00d6acf)\n(cherry picked from commit cbbca58504275f194ec55eeb89dad4a496d98060)\n'}]",4,811813,737a4ccd1398a5cf28a67547f226b668f246c784,11,5,3,4690,,,0,"Prevent deletion of a compute node belonging to another host

There is a race condition in nova-compute with the ironic virt driver as
nodes get rebalanced. It can lead to compute nodes being removed in the
DB and not repopulated. Ultimately this prevents these nodes from being
scheduled to.

The main race condition involved is in update_available_resources in
the compute manager. When the list of compute nodes is queried, there is
a compute node belonging to the host that it does not expect to be
managing, i.e. it is an orphan. Between that time and deleting the
orphan, the real owner of the compute node takes ownership of it ( in
the resource tracker). However, the node is still deleted as the first
host is unaware of the ownership change.

This change prevents this from occurring by filtering on the host when
deleting a compute node. If another compute host has taken ownership of
a node, it will have updated the host field and this will prevent
deletion from occurring. The first host sees this has happened via the
ComputeHostNotFound exception, and avoids deleting its resource
provider.

Co-Authored-By: melanie witt <melwittt@gmail.com>

Conflicts:
    nova/compute/manager.py

NOTE(melwitt): The conflict is because change
I23bb9e539d08f5c6202909054c2dd49b6c7a7a0e (Remove six.text_type (1/2))
is not in Victoria.

Closes-Bug: #1853009
Related-Bug: #1841481

Change-Id: I260c1fded79a85d4899e94df4d9036a1ee437f02
(cherry picked from commit a8492e88783b40f6dc61888fada232f0d00d6acf)
(cherry picked from commit cbbca58504275f194ec55eeb89dad4a496d98060)
",git fetch https://review.opendev.org/openstack/nova refs/changes/13/811813/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/objects/compute_node.py', 'nova/tests/unit/objects/test_compute_node.py', 'releasenotes/notes/bug-1853009-99414e14d1491b5f.yaml', 'nova/tests/unit/compute/test_compute.py', 'nova/compute/manager.py', 'nova/tests/unit/db/test_db_api.py', 'nova/db/sqlalchemy/api.py', 'nova/tests/functional/regressions/test_bug_1853009.py']",9,1e9d2979542165598b61f0d2e16b65b37b9ea074,bug/1853009," # Verify that the node was almost deleted, but was saved by the host # check self.assertIn( 'Ignoring failure to delete orphan compute node %s on ' 'hypervisor host fake-node' % cn.id, self.stdlog.logger.output) self._assert_hypervisor_api(self.nodename, 'host_b') self.assertEqual(1, len(rps), rps) self.assertEqual(self.nodename, rps[0]['name']) # Simulate deletion of an orphan by host_a. It shouldn't happen # anymore, but let's assume it already did. cn = objects.ComputeNode.get_by_host_and_nodename( self.ctxt, 'host_b', self.nodename) cn.destroy() host_a.manager.rt.remove_node(cn.hypervisor_hostname) host_a.manager.reportclient.delete_resource_provider( self.ctxt, cn, cascade=True)"," # FIXME(mgoddard): Ideally host_a would not delete a node that does not # belong to it. See https://bugs.launchpad.net/nova/+bug/1853009. # Verify that the node was deleted. hypervisors = self.api.api_get( '/os-hypervisors/detail').body['hypervisors'] self.assertEqual(0, len(hypervisors), hypervisors) self.assertEqual(0, len(rps), rps)",124,25
openstack%2Fnova~811814,openstack/nova,stable/victoria,Iae119ea8776bc7f2e5dbe2e502a743217beded73,Fix inactive session error in compute node creation,ABANDONED,2021-09-30 00:29:44.000000000,2024-03-05 18:57:19.000000000,,"[{'_account_id': 14826}, {'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-09-30 00:29:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/63b0a629c63c42a0220475a8392c3ede132762c8', 'message': ""Fix inactive session error in compute node creation\n\nIn the fix for bug 1839560 [1][2], soft-deleted compute nodes may be\nrestored, to ensure we can reuse ironic node UUIDs as compute node\nUUIDs. While this seems to largely work, it results in some nasty errors\nbeing generated [3]:\n\n    InvalidRequestError This session is in 'inactive' state, due to the\n    SQL transaction being rolled back; no further SQL can be emitted\n    within this transaction.\n\nThis happens because compute_node_create is decorated with\npick_context_manager_writer, which begins a transaction. While\n_compute_node_get_and_update_deleted claims that calling a second\npick_context_manager_writer decorated function will begin a new\nsubtransaction, this does not appear to be the case.\n\nThis change removes pick_context_manager_writer from the\ncompute_node_create function, and adds a new _compute_node_create\nfunction which ensures the transaction is finished if\n_compute_node_get_and_update_deleted is called.\n\nThe new unit test added here fails without this change.\n\nThis change marks the removal of the final FIXME from the functional\ntest added in [4].\n\n[1] https://bugs.launchpad.net/nova/+bug/1839560\n[2] https://git.openstack.org/cgit/openstack/nova/commit/?id=89dd74ac7f1028daadf86cb18948e27fe9d1d411\n[3] http://paste.openstack.org/show/786350/\n[4] https://review.opendev.org/#/c/695012/\n\nChange-Id: Iae119ea8776bc7f2e5dbe2e502a743217beded73\nCloses-Bug: #1853159\nRelated-Bug: #1853009\n(cherry picked from commit 2383cbb4a518821d245fce316b3778c8ba8e5246)\n(cherry picked from commit 5d2edde796d8639556aafebd6f0198d2bc791bd7)\n""}, {'number': 2, 'created': '2021-09-30 01:44:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ddaa8215d2f2151f5d6d3d2946b87fb93d6f0a98', 'message': ""Fix inactive session error in compute node creation\n\nIn the fix for bug 1839560 [1][2], soft-deleted compute nodes may be\nrestored, to ensure we can reuse ironic node UUIDs as compute node\nUUIDs. While this seems to largely work, it results in some nasty errors\nbeing generated [3]:\n\n    InvalidRequestError This session is in 'inactive' state, due to the\n    SQL transaction being rolled back; no further SQL can be emitted\n    within this transaction.\n\nThis happens because compute_node_create is decorated with\npick_context_manager_writer, which begins a transaction. While\n_compute_node_get_and_update_deleted claims that calling a second\npick_context_manager_writer decorated function will begin a new\nsubtransaction, this does not appear to be the case.\n\nThis change removes pick_context_manager_writer from the\ncompute_node_create function, and adds a new _compute_node_create\nfunction which ensures the transaction is finished if\n_compute_node_get_and_update_deleted is called.\n\nThe new unit test added here fails without this change.\n\nThis change marks the removal of the final FIXME from the functional\ntest added in [4].\n\n[1] https://bugs.launchpad.net/nova/+bug/1839560\n[2] https://git.openstack.org/cgit/openstack/nova/commit/?id=89dd74ac7f1028daadf86cb18948e27fe9d1d411\n[3] http://paste.openstack.org/show/786350/\n[4] https://review.opendev.org/#/c/695012/\n\nChange-Id: Iae119ea8776bc7f2e5dbe2e502a743217beded73\nCloses-Bug: #1853159\nRelated-Bug: #1853009\n(cherry picked from commit 2383cbb4a518821d245fce316b3778c8ba8e5246)\n(cherry picked from commit 665c053315439e1345aa131f4839945d662fb3f3)\n""}, {'number': 3, 'created': '2021-09-30 03:53:17.000000000', 'files': ['nova/tests/unit/db/test_db_api.py', 'nova/db/sqlalchemy/api.py', 'nova/tests/functional/regressions/test_bug_1853009.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/b1331d0bed7a414591a389f5eca8700fe2fec136', 'message': ""Fix inactive session error in compute node creation\n\nIn the fix for bug 1839560 [1][2], soft-deleted compute nodes may be\nrestored, to ensure we can reuse ironic node UUIDs as compute node\nUUIDs. While this seems to largely work, it results in some nasty errors\nbeing generated [3]:\n\n    InvalidRequestError This session is in 'inactive' state, due to the\n    SQL transaction being rolled back; no further SQL can be emitted\n    within this transaction.\n\nThis happens because compute_node_create is decorated with\npick_context_manager_writer, which begins a transaction. While\n_compute_node_get_and_update_deleted claims that calling a second\npick_context_manager_writer decorated function will begin a new\nsubtransaction, this does not appear to be the case.\n\nThis change removes pick_context_manager_writer from the\ncompute_node_create function, and adds a new _compute_node_create\nfunction which ensures the transaction is finished if\n_compute_node_get_and_update_deleted is called.\n\nThe new unit test added here fails without this change.\n\nThis change marks the removal of the final FIXME from the functional\ntest added in [4].\n\n[1] https://bugs.launchpad.net/nova/+bug/1839560\n[2] https://git.openstack.org/cgit/openstack/nova/commit/?id=89dd74ac7f1028daadf86cb18948e27fe9d1d411\n[3] http://paste.openstack.org/show/786350/\n[4] https://review.opendev.org/#/c/695012/\n\nChange-Id: Iae119ea8776bc7f2e5dbe2e502a743217beded73\nCloses-Bug: #1853159\nRelated-Bug: #1853009\n(cherry picked from commit 2383cbb4a518821d245fce316b3778c8ba8e5246)\n(cherry picked from commit 665c053315439e1345aa131f4839945d662fb3f3)\n""}]",1,811814,b1331d0bed7a414591a389f5eca8700fe2fec136,14,3,3,4690,,,0,"Fix inactive session error in compute node creation

In the fix for bug 1839560 [1][2], soft-deleted compute nodes may be
restored, to ensure we can reuse ironic node UUIDs as compute node
UUIDs. While this seems to largely work, it results in some nasty errors
being generated [3]:

    InvalidRequestError This session is in 'inactive' state, due to the
    SQL transaction being rolled back; no further SQL can be emitted
    within this transaction.

This happens because compute_node_create is decorated with
pick_context_manager_writer, which begins a transaction. While
_compute_node_get_and_update_deleted claims that calling a second
pick_context_manager_writer decorated function will begin a new
subtransaction, this does not appear to be the case.

This change removes pick_context_manager_writer from the
compute_node_create function, and adds a new _compute_node_create
function which ensures the transaction is finished if
_compute_node_get_and_update_deleted is called.

The new unit test added here fails without this change.

This change marks the removal of the final FIXME from the functional
test added in [4].

[1] https://bugs.launchpad.net/nova/+bug/1839560
[2] https://git.openstack.org/cgit/openstack/nova/commit/?id=89dd74ac7f1028daadf86cb18948e27fe9d1d411
[3] http://paste.openstack.org/show/786350/
[4] https://review.opendev.org/#/c/695012/

Change-Id: Iae119ea8776bc7f2e5dbe2e502a743217beded73
Closes-Bug: #1853159
Related-Bug: #1853009
(cherry picked from commit 2383cbb4a518821d245fce316b3778c8ba8e5246)
(cherry picked from commit 665c053315439e1345aa131f4839945d662fb3f3)
",git fetch https://review.opendev.org/openstack/nova refs/changes/14/811814/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/db/test_db_api.py', 'nova/db/sqlalchemy/api.py', 'nova/tests/functional/regressions/test_bug_1853009.py']",3,63b0a629c63c42a0220475a8392c3ede132762c8,bug/1853159,," # FIXME(mgoddard): This shows a traceback with SQL rollback due to # soft-deleted node. The create seems to succeed but breaks the RT # update for this node. See # https://bugs.launchpad.net/nova/+bug/1853159. # FIXME(mgoddard): Resource provider not recreated here, due to # https://bugs.launchpad.net/nova/+bug/1853159. # But due to https://bugs.launchpad.net/nova/+bug/1853159 the compute # node is not cached in the RT. self.assertNotIn(self.nodename, host_b.manager.rt.compute_nodes) # There is no RP. rps = self._get_all_providers() self.assertEqual(0, len(rps), rps) # But the RP exists in the provider tree. self.assertFalse(host_b.manager.rt.reportclient._provider_tree.exists( self.nodename)) # host_b[1]: Should add compute node to RT cache and recreate resource # provider. host_b.manager.update_available_resource(self.ctxt) # Verify that the node still exists. self._assert_hypervisor_api(self.nodename, 'host_b') # And it is now in the RT cache. self.assertIn(self.nodename, host_b.manager.rt.compute_nodes) # This fails due to the lack of a resource provider. self.assertIn( 'Skipping removal of allocations for deleted instances', self.stdlog.logger.output)",31,35
openstack%2Fnova~811812,openstack/nova,stable/victoria,Ia53ff43e6964963cdf295604ba0fb7171389606e,Invalidate provider tree when compute node disappears,ABANDONED,2021-09-30 00:29:44.000000000,2024-03-05 18:57:15.000000000,,"[{'_account_id': 14826}, {'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-09-30 00:29:44.000000000', 'files': ['nova/tests/unit/compute/test_resource_tracker.py', 'nova/scheduler/client/report.py', 'nova/compute/resource_tracker.py', 'nova/tests/functional/regressions/test_bug_1853009.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/456bcc784340a5674d25fbe6e707c36c583b504f', 'message': 'Invalidate provider tree when compute node disappears\n\nThere is a race condition in nova-compute with the ironic virt driver\nas nodes get rebalanced. It can lead to compute nodes being removed in\nthe DB and not repopulated. Ultimately this prevents these nodes from\nbeing scheduled to.\n\nThe issue being addressed here is that if a compute node is deleted by a\nhost which thinks it is an orphan, then the resource provider for that\nnode might also be deleted. The compute host that owns the node might\nnot recreate the resource provider if it exists in the provider tree\ncache.\n\nThis change fixes the issue by clearing resource providers from the\nprovider tree cache for which a compute node entry does not exist. Then,\nwhen the available resource for the node is updated, the resource\nproviders are not found in the cache and get recreated in placement.\n\nChange-Id: Ia53ff43e6964963cdf295604ba0fb7171389606e\nRelated-Bug: #1853009\nRelated-Bug: #1841481\n(cherry picked from commit 2bb4527228c8e6fa4a1fa6cfbe80e8790e4e0789)\n(cherry picked from commit 0fc104eeea065579f7fa9b52794d5151baefc84c)\n'}]",1,811812,456bcc784340a5674d25fbe6e707c36c583b504f,6,3,1,4690,,,0,"Invalidate provider tree when compute node disappears

There is a race condition in nova-compute with the ironic virt driver
as nodes get rebalanced. It can lead to compute nodes being removed in
the DB and not repopulated. Ultimately this prevents these nodes from
being scheduled to.

The issue being addressed here is that if a compute node is deleted by a
host which thinks it is an orphan, then the resource provider for that
node might also be deleted. The compute host that owns the node might
not recreate the resource provider if it exists in the provider tree
cache.

This change fixes the issue by clearing resource providers from the
provider tree cache for which a compute node entry does not exist. Then,
when the available resource for the node is updated, the resource
providers are not found in the cache and get recreated in placement.

Change-Id: Ia53ff43e6964963cdf295604ba0fb7171389606e
Related-Bug: #1853009
Related-Bug: #1841481
(cherry picked from commit 2bb4527228c8e6fa4a1fa6cfbe80e8790e4e0789)
(cherry picked from commit 0fc104eeea065579f7fa9b52794d5151baefc84c)
",git fetch https://review.opendev.org/openstack/nova refs/changes/12/811812/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_resource_tracker.py', 'nova/scheduler/client/report.py', 'nova/compute/resource_tracker.py', 'nova/tests/functional/regressions/test_bug_1853009.py']",4,456bcc784340a5674d25fbe6e707c36c583b504f,bug/1853009," # FIXME(mgoddard): Resource provider not recreated here, due to # https://bugs.launchpad.net/nova/+bug/1853159. self.assertFalse(host_b.manager.rt.reportclient._provider_tree.exists( # The resource provider has now been created. self.assertEqual(1, len(rps), rps) self.assertEqual(self.nodename, rps[0]['name'])"," # FIXME(mgoddard): Resource provider not recreated here, because it # exists in the provider tree. See # https://bugs.launchpad.net/nova/+bug/1841481. self.assertTrue(host_b.manager.rt.reportclient._provider_tree.exists( # FIXME(mgoddard): Resource provider not recreated here, because it # exists in the provider tree. See # https://bugs.launchpad.net/nova/+bug/1841481. # There is still no RP. self.assertEqual(0, len(rps), rps) # But the RP it exists in the provider tree. self.assertTrue(host_b.manager.rt.reportclient._provider_tree.exists( self.nodename))",25,20
openstack%2Fnova~811811,openstack/nova,stable/victoria,I39241223b447fcc671161c370dbf16e1773b684a,Clear rebalanced compute nodes from resource tracker,ABANDONED,2021-09-30 00:29:44.000000000,2024-03-05 18:57:12.000000000,,"[{'_account_id': 2033}, {'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-09-30 00:29:44.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/compute/test_resource_tracker.py', 'nova/compute/manager.py', 'nova/compute/resource_tracker.py', 'nova/tests/functional/regressions/test_bug_1853009.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/32887f82c9bd430f285ff4418811dffdd88e398f', 'message': 'Clear rebalanced compute nodes from resource tracker\n\nThere is a race condition in nova-compute with the ironic virt driver as\nnodes get rebalanced. It can lead to compute nodes being removed in the\nDB and not repopulated. Ultimately this prevents these nodes from being\nscheduled to.\n\nThe issue being addressed here is that if a compute node is deleted by a host\nwhich thinks it is an orphan, then the compute host that actually owns the node\nmight not recreate it if the node is already in its resource tracker cache.\n\nThis change fixes the issue by clearing nodes from the resource tracker cache\nfor which a compute node entry does not exist. Then, when the available\nresource for the node is updated, the compute node object is not found in the\ncache and gets recreated.\n\nChange-Id: I39241223b447fcc671161c370dbf16e1773b684a\nPartial-Bug: #1853009\n(cherry picked from commit 32676a9f45807ea8770dc7bdff1e859673af1b61)\n(cherry picked from commit f950cedf17cc4c3ce9d094dbfde5e4cf013260f7)\n'}]",4,811811,32887f82c9bd430f285ff4418811dffdd88e398f,14,3,1,4690,,,0,"Clear rebalanced compute nodes from resource tracker

There is a race condition in nova-compute with the ironic virt driver as
nodes get rebalanced. It can lead to compute nodes being removed in the
DB and not repopulated. Ultimately this prevents these nodes from being
scheduled to.

The issue being addressed here is that if a compute node is deleted by a host
which thinks it is an orphan, then the compute host that actually owns the node
might not recreate it if the node is already in its resource tracker cache.

This change fixes the issue by clearing nodes from the resource tracker cache
for which a compute node entry does not exist. Then, when the available
resource for the node is updated, the compute node object is not found in the
cache and gets recreated.

Change-Id: I39241223b447fcc671161c370dbf16e1773b684a
Partial-Bug: #1853009
(cherry picked from commit 32676a9f45807ea8770dc7bdff1e859673af1b61)
(cherry picked from commit f950cedf17cc4c3ce9d094dbfde5e4cf013260f7)
",git fetch https://review.opendev.org/openstack/nova refs/changes/11/811811/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/compute/test_resource_tracker.py', 'nova/compute/manager.py', 'nova/compute/resource_tracker.py', 'nova/tests/functional/regressions/test_bug_1853009.py']",5,32887f82c9bd430f285ff4418811dffdd88e398f,bug/1853009," # Verify that the node was recreated. self._assert_hypervisor_api(self.nodename, 'host_b') # But due to https://bugs.launchpad.net/nova/+bug/1853159 the compute # node is not cached in the RT. self.assertNotIn(self.nodename, host_b.manager.rt.compute_nodes) # host_b[1]: Should add compute node to RT cache and recreate resource # provider. # FIXME(mgoddard): Resource provider not recreated here, because it # exists in the provider tree. See # https://bugs.launchpad.net/nova/+bug/1841481. host_b.manager.update_available_resource(self.ctxt) # Verify that the node still exists. self._assert_hypervisor_api(self.nodename, 'host_b') # And it is now in the RT cache. self.assertIn(self.nodename, host_b.manager.rt.compute_nodes) # There is still no RP. rps = self._get_all_providers() self.assertEqual(0, len(rps), rps) # But the RP it exists in the provider tree. self.assertTrue(host_b.manager.rt.reportclient._provider_tree.exists( self.nodename)) "," cn_host_b_node = objects.ComputeNode.get_by_host_and_nodename( self.ctxt, 'host_b', 'host_b', ) self.assertIn( 'Deleting orphan compute node %s hypervisor host ' 'is host_b, nodes are' % cn_host_b_node.id, self.stdlog.logger.output) # FIXME(mgoddard): Compute node not recreated here, because it is # already in RT.compute_nodes. See # https://bugs.launchpad.net/nova/+bug/1853009. # Verify that the node was not recreated. hypervisors = self.api.api_get( '/os-hypervisors/detail').body['hypervisors'] self.assertEqual(0, len(hypervisors), hypervisors) # But the compute node exists in the RT. self.assertIn(self.nodename, host_b.manager.rt.compute_nodes)",66,18
openstack%2Fnova~869583,openstack/nova,stable/victoria,I9367b7ed475917bdb05eb3f209ce1a4e646534e2,Reproduce bug 1981813 in func env,ABANDONED,2023-01-09 17:31:45.000000000,2024-03-05 18:57:08.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-01-09 17:31:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/c5cdccb32378163a28caea7474be02c48e830284', 'message': 'Reproduce bug 1981813 in func env\n\nThere stable/yoga only change in test_pci_sriov_servers.py due to\nunittest.mock switch[1] only happened in zed.\n\n[1] https://review.opendev.org/q/topic:unittest.mock+status:merged+project:openstack/nova\n\nRelated-Bug: #1981813\nChange-Id: I9367b7ed475917bdb05eb3f209ce1a4e646534e2\n(cherry picked from commit f8c91eb75fc5504a37fc3b4be1d65d33dbc9b511)\n(cherry picked from commit 76bcc21e0a47221ce8fdfa126172af546f7028cc)\n(cherry picked from commit d25b2a94e5cf84550dc05c377c12a1fe88e2a74f)\n(cherry picked from commit 4663dd7ded5610630c39a8678e57d96430ae0842)\n'}, {'number': 2, 'created': '2023-01-25 16:38:53.000000000', 'files': ['nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/tests/unit/virt/libvirt/fakelibvirt.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/231881b214e36f256bfb95d806557e6a0852f5e3', 'message': 'Reproduce bug 1981813 in func env\n\nThere stable/yoga only change in test_pci_sriov_servers.py due to\nunittest.mock switch[1] only happened in zed.\n\n[1] https://review.opendev.org/q/topic:unittest.mock+status:merged+project:openstack/nova\n\nRelated-Bug: #1981813\nChange-Id: I9367b7ed475917bdb05eb3f209ce1a4e646534e2\n(cherry picked from commit f8c91eb75fc5504a37fc3b4be1d65d33dbc9b511)\n(cherry picked from commit 4954f993680c75fd9d3d507f2dcd00300c9b3d44)\n(cherry picked from commit 0c87681135cfb3ce61d2a0392928c1dbc1fe5fde)\n(cherry picked from commit cb4c2b6c04232901f4c5adae724697fec3aed4e8)\n'}]",0,869583,231881b214e36f256bfb95d806557e6a0852f5e3,5,1,2,9708,,,0,"Reproduce bug 1981813 in func env

There stable/yoga only change in test_pci_sriov_servers.py due to
unittest.mock switch[1] only happened in zed.

[1] https://review.opendev.org/q/topic:unittest.mock+status:merged+project:openstack/nova

Related-Bug: #1981813
Change-Id: I9367b7ed475917bdb05eb3f209ce1a4e646534e2
(cherry picked from commit f8c91eb75fc5504a37fc3b4be1d65d33dbc9b511)
(cherry picked from commit 4954f993680c75fd9d3d507f2dcd00300c9b3d44)
(cherry picked from commit 0c87681135cfb3ce61d2a0392928c1dbc1fe5fde)
(cherry picked from commit cb4c2b6c04232901f4c5adae724697fec3aed4e8)
",git fetch https://review.opendev.org/openstack/nova refs/changes/83/869583/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/tests/unit/virt/libvirt/fakelibvirt.py']",2,c5cdccb32378163a28caea7474be02c48e830284,bug/1981813," self.mock_get_ifname_by_pci_address = self.useFixture( fixtures.MockPatch( ""nova.pci.utils.get_ifname_by_pci_address"", return_value=""fake_pf_interface_name"", ) ).mock"," self.useFixture(fixtures.MockPatch( 'nova.pci.utils.get_ifname_by_pci_address', return_value='fake_pf_interface_name'))",80,3
openstack%2Fnova~843947,openstack/nova,stable/victoria,I066fb5617bae944a03273049117fc2b5bf329283,fake: Ensure need_legacy_block_device_info returns False,ABANDONED,2022-05-30 18:33:49.000000000,2024-03-05 18:57:04.000000000,,"[{'_account_id': 4690}, {'_account_id': 15334}, {'_account_id': 22348}, {'_account_id': 33493}]","[{'number': 1, 'created': '2022-05-30 18:33:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ac1079e33c58f722c85f91d934e122c75a34eb0c', 'message': ""fake: Ensure need_legacy_block_device_info returns False\n\nThe legacy block_device_info format has not been used for a while in the\nvirt drivers and the Fake virt drivers shouldn't be using it anymore.\n\nSome compute tests have been updated as they were previously asserting\nthe legacy format incorrectly. TODOs are also left to remove support for\nthe legacy format in a follow up change.\n\nChange-Id: I066fb5617bae944a03273049117fc2b5bf329283\n(cherry-picked from commit d102b751b743b5315557cac0997198152c0cac74)\n(cherry picked from commit c5bed50368196cdc45d1dfa68da927a0a7bc0ff8)\n""}, {'number': 2, 'created': '2022-05-30 18:36:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/113414eaf4d74f0ec257bf3a3ff7836dffc6dd07', 'message': ""fake: Ensure need_legacy_block_device_info returns False\n\nThe legacy block_device_info format has not been used for a while in the\nvirt drivers and the Fake virt drivers shouldn't be using it anymore.\n\nSome compute tests have been updated as they were previously asserting\nthe legacy format incorrectly. TODOs are also left to remove support for\nthe legacy format in a follow up change.\n\nChange-Id: I066fb5617bae944a03273049117fc2b5bf329283\n(cherry-picked from commit d102b751b743b5315557cac0997198152c0cac74)\n(cherry picked from commit c5bed50368196cdc45d1dfa68da927a0a7bc0ff8)\n""}, {'number': 3, 'created': '2022-06-17 14:42:30.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/2518bc4c702ada503d3a4c2a4d3b9e4de5a0b2a6', 'message': ""fake: Ensure need_legacy_block_device_info returns False\n\nThe legacy block_device_info format has not been used for a while in the\nvirt drivers and the Fake virt drivers shouldn't be using it anymore.\n\nSome compute tests have been updated as they were previously asserting\nthe legacy format incorrectly. TODOs are also left to remove support for\nthe legacy format in a follow up change.\n\nChange-Id: I066fb5617bae944a03273049117fc2b5bf329283\n(cherry-picked from commit d102b751b743b5315557cac0997198152c0cac74)\n(cherry picked from commit 74160240526ccc64b7c86b66969b2e22f8a2c683)\n""}, {'number': 4, 'created': '2022-06-17 14:58:42.000000000', 'files': ['nova/virt/fake.py', 'nova/tests/unit/compute/test_compute.py', 'nova/virt/driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/2ce7dc32d5f58e0be4c464faff00b53fb4671a22', 'message': ""fake: Ensure need_legacy_block_device_info returns False\n\nThe legacy block_device_info format has not been used for a while in the\nvirt drivers and the Fake virt drivers shouldn't be using it anymore.\n\nSome compute tests have been updated as they were previously asserting\nthe legacy format incorrectly. TODOs are also left to remove support for\nthe legacy format in a follow up change.\n\nChange-Id: I066fb5617bae944a03273049117fc2b5bf329283\n(cherry-picked from commit d102b751b743b5315557cac0997198152c0cac74)\n(cherry picked from commit 74160240526ccc64b7c86b66969b2e22f8a2c683)\n""}]",6,843947,2ce7dc32d5f58e0be4c464faff00b53fb4671a22,27,4,4,8864,,,0,"fake: Ensure need_legacy_block_device_info returns False

The legacy block_device_info format has not been used for a while in the
virt drivers and the Fake virt drivers shouldn't be using it anymore.

Some compute tests have been updated as they were previously asserting
the legacy format incorrectly. TODOs are also left to remove support for
the legacy format in a follow up change.

Change-Id: I066fb5617bae944a03273049117fc2b5bf329283
(cherry-picked from commit d102b751b743b5315557cac0997198152c0cac74)
(cherry picked from commit 74160240526ccc64b7c86b66969b2e22f8a2c683)
",git fetch https://review.opendev.org/openstack/nova refs/changes/47/843947/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/fake.py', 'nova/tests/unit/compute/test_compute.py', 'nova/virt/driver.py']",3,ac1079e33c58f722c85f91d934e122c75a34eb0c,bug/1939545, # TODO(lyarwood): This is no longer used and should be removed.,,31,19
openstack%2Fnova~869584,openstack/nova,stable/victoria,I1719f8eda04e8d15a3b01f0612977164c4e55e85,Gracefully ERROR in _init_instance if vnic_type changed,ABANDONED,2023-01-09 17:31:45.000000000,2024-03-05 18:57:00.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-01-09 17:31:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e624300e4a2b008283d33bd6f85ea6d5e604fe4b', 'message': 'Gracefully ERROR in _init_instance if vnic_type changed\n\nIf the vnic_type of a bound port changes from ""direct"" to ""macvtap"" and\nthen the compute service is restarted then during _init_instance nova\ntries to plug the vif of the changed port. However as it now has macvtap\nvnic_type nova tries to look up the netdev of the parent VF. Still that\nVF is consumed by the instance so there is no such netdev on the host\nOS. This error killed the compute service at startup due to unhandled\nexception. This patch adds the exception handler, logs an ERROR and\ncontinue initializing other instances on the host.\n\nAlso this patch adds a detailed ERROR log when nova detects that the\nvnic_type changed during _heal_instance_info_cache periodic.\n\nCloses-Bug: #1981813\nChange-Id: I1719f8eda04e8d15a3b01f0612977164c4e55e85\n(cherry picked from commit e43bf900dc8ca66578603bed333c56b215b1876e)\n(cherry picked from commit 1cdeb44f798fce2ce014a3d7de2310d82a4fd34f)\n(cherry picked from commit 4464141d393a1f3ffd25fec6b5d907ce0320e872)\n(cherry picked from commit f1ec1e38d7eb81fa65a4ca7628c363921923833f)\n'}, {'number': 2, 'created': '2023-01-25 16:38:53.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/network/test_neutron.py', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/network/neutron.py', 'releasenotes/notes/bug-1981813-vnic-type-change-9f3e16fae885b57f.yaml', 'nova/compute/manager.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/88df0d05e6ba4e2a5a4eb1185ad8cde6a9797c89', 'message': 'Gracefully ERROR in _init_instance if vnic_type changed\n\nIf the vnic_type of a bound port changes from ""direct"" to ""macvtap"" and\nthen the compute service is restarted then during _init_instance nova\ntries to plug the vif of the changed port. However as it now has macvtap\nvnic_type nova tries to look up the netdev of the parent VF. Still that\nVF is consumed by the instance so there is no such netdev on the host\nOS. This error killed the compute service at startup due to unhandled\nexception. This patch adds the exception handler, logs an ERROR and\ncontinue initializing other instances on the host.\n\nAlso this patch adds a detailed ERROR log when nova detects that the\nvnic_type changed during _heal_instance_info_cache periodic.\n\nCloses-Bug: #1981813\nChange-Id: I1719f8eda04e8d15a3b01f0612977164c4e55e85\n(cherry picked from commit e43bf900dc8ca66578603bed333c56b215b1876e)\n(cherry picked from commit a28c82719545d5c8ee7f3ff1361b3a796e05095a)\n(cherry picked from commit 1a98a1a650d065a8ab3e1c474f3b9fd537dc2206)\n(cherry picked from commit e5838298e7189f01a1eb99e90a9b4da6e1925c36)\n'}]",2,869584,88df0d05e6ba4e2a5a4eb1185ad8cde6a9797c89,11,1,2,9708,,,0,"Gracefully ERROR in _init_instance if vnic_type changed

If the vnic_type of a bound port changes from ""direct"" to ""macvtap"" and
then the compute service is restarted then during _init_instance nova
tries to plug the vif of the changed port. However as it now has macvtap
vnic_type nova tries to look up the netdev of the parent VF. Still that
VF is consumed by the instance so there is no such netdev on the host
OS. This error killed the compute service at startup due to unhandled
exception. This patch adds the exception handler, logs an ERROR and
continue initializing other instances on the host.

Also this patch adds a detailed ERROR log when nova detects that the
vnic_type changed during _heal_instance_info_cache periodic.

Closes-Bug: #1981813
Change-Id: I1719f8eda04e8d15a3b01f0612977164c4e55e85
(cherry picked from commit e43bf900dc8ca66578603bed333c56b215b1876e)
(cherry picked from commit a28c82719545d5c8ee7f3ff1361b3a796e05095a)
(cherry picked from commit 1a98a1a650d065a8ab3e1c474f3b9fd537dc2206)
(cherry picked from commit e5838298e7189f01a1eb99e90a9b4da6e1925c36)
",git fetch https://review.opendev.org/openstack/nova refs/changes/84/869584/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/network/test_neutron.py', 'nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/network/neutron.py', 'releasenotes/notes/bug-1981813-vnic-type-change-9f3e16fae885b57f.yaml', 'nova/compute/manager.py']",6,e624300e4a2b008283d33bd6f85ea6d5e604fe4b,bug/1981813," except exception.PciDeviceNotFoundById: # This is bug 1981813 where the bound port vnic_type has changed # from direct to macvtap. Nova does not support that and it # already printed an ERROR when the change is detected during # _heal_instance_info_cache. Now we print an ERROR again and skip # plugging the vifs but let the service startup continue to init # the other instances LOG.exception( 'Virtual interface plugging failed for instance. Probably the ' 'vnic_type of the bound port has been changed. Nova does not ' 'support such change.', instance=instance ) return",,252,7
openstack%2Fnova~857423,openstack/nova,stable/victoria,I3cb39a9ec2c260f422b3c48122b9db512cdd799b,"Revert ""Revert resize: wait for events according to hybrid plug""",ABANDONED,2022-09-13 12:42:02.000000000,2024-03-05 18:56:56.000000000,,"[{'_account_id': 782}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-09-13 12:42:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/00b43470956339f8ba00a4ddd99ab88a855e84ba', 'message': 'Revert ""Revert resize: wait for events according to hybrid plug""\n\nThis reverts commit 7a7a223602ca5aa0aca8f65a6ab143f1d8f8ec1b.\n\nThat commit was added because - tl\'dr - upon revert resize, Neutron\nwith the OVS backend and the iptables security group driver would send\nus the network-vif-plugged event as soon as we updated the port\nbinding.\n\nThat behaviour has changed with commit 66c7f00e1d9. With that commit,\nwe started unplugging the vifs on the source compute host when doing a\nresize. When reverting the resize, the vifs had to be re-plugged again,\nregarldess of the networking backend in use. This renders commit\n7a7a223602ca5aa0aca8f65a6ab143f1d8f8ec1b. pointless, and it can be\nreverted.\n\nBackport is clean from master, and the TODO that was present in the\ncommit message on master is removed, as its a driver interface change\nand can only be done on master.\n\nCloses-bug: 1952003\nChange-Id: I3cb39a9ec2c260f422b3c48122b9db512cdd799b\n(cherry picked from commit 0b0f40d1b308b29da537859b72080488560c23d4)\n(cherry picked from commit c3ebe0f39e82cf1df6886cfd03fd8de62548fb26)\n(cherry picked from commit 36378de1bdfe451d683ed1028ffd5f6c7130c6ee)\n    Conflicts:\n        zuul.yaml\n'}, {'number': 2, 'created': '2023-02-08 11:27:31.000000000', 'files': ['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/network/test_network_info.py', 'nova/tests/unit/objects/test_migration.py', 'nova/virt/libvirt/driver.py', 'nova/network/model.py', 'nova/tests/unit/compute/test_compute.py', 'nova/compute/manager.py', 'nova/objects/migration.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/cbb5ffd65893ed003344b10f73cebe26a4374697', 'message': 'Revert ""Revert resize: wait for events according to hybrid plug""\n\nThis reverts commit 7a7a223602ca5aa0aca8f65a6ab143f1d8f8ec1b.\n\nThat commit was added because - tl\'dr - upon revert resize, Neutron\nwith the OVS backend and the iptables security group driver would send\nus the network-vif-plugged event as soon as we updated the port\nbinding.\n\nThat behaviour has changed with commit 66c7f00e1d9. With that commit,\nwe started unplugging the vifs on the source compute host when doing a\nresize. When reverting the resize, the vifs had to be re-plugged again,\nregarldess of the networking backend in use. This renders commit\n7a7a223602ca5aa0aca8f65a6ab143f1d8f8ec1b. pointless, and it can be\nreverted.\n\nBackport is clean from master, and the TODO that was present in the\ncommit message on master is removed, as its a driver interface change\nand can only be done on master.\n\nCloses-bug: 1952003\nChange-Id: I3cb39a9ec2c260f422b3c48122b9db512cdd799b\n(cherry picked from commit 0b0f40d1b308b29da537859b72080488560c23d4)\n(cherry picked from commit c3ebe0f39e82cf1df6886cfd03fd8de62548fb26)\n(cherry picked from commit 36378de1bdfe451d683ed1028ffd5f6c7130c6ee)\n    Conflicts:\n        zuul.yaml\n'}]",8,857423,cbb5ffd65893ed003344b10f73cebe26a4374697,14,3,2,15554,,,0,"Revert ""Revert resize: wait for events according to hybrid plug""

This reverts commit 7a7a223602ca5aa0aca8f65a6ab143f1d8f8ec1b.

That commit was added because - tl'dr - upon revert resize, Neutron
with the OVS backend and the iptables security group driver would send
us the network-vif-plugged event as soon as we updated the port
binding.

That behaviour has changed with commit 66c7f00e1d9. With that commit,
we started unplugging the vifs on the source compute host when doing a
resize. When reverting the resize, the vifs had to be re-plugged again,
regarldess of the networking backend in use. This renders commit
7a7a223602ca5aa0aca8f65a6ab143f1d8f8ec1b. pointless, and it can be
reverted.

Backport is clean from master, and the TODO that was present in the
commit message on master is removed, as its a driver interface change
and can only be done on master.

Closes-bug: 1952003
Change-Id: I3cb39a9ec2c260f422b3c48122b9db512cdd799b
(cherry picked from commit 0b0f40d1b308b29da537859b72080488560c23d4)
(cherry picked from commit c3ebe0f39e82cf1df6886cfd03fd8de62548fb26)
(cherry picked from commit 36378de1bdfe451d683ed1028ffd5f6c7130c6ee)
    Conflicts:
        zuul.yaml
",git fetch https://review.opendev.org/openstack/nova refs/changes/23/857423/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/compute/test_compute_mgr.py', 'nova/tests/unit/network/test_network_info.py', 'nova/tests/unit/objects/test_migration.py', 'nova/virt/libvirt/driver.py', 'nova/network/model.py', 'nova/tests/unit/compute/test_compute.py', 'nova/compute/manager.py', 'nova/objects/migration.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",9,00b43470956339f8ba00a4ddd99ab88a855e84ba,bug/1952003," self, neutron_failure=None, power_on=True, power_on=power_on) if CONF.vif_plugging_timeout and power_on: def _test_finish_revert_migration(self, power_on): cleanup_instance_dir=False, cleanup_instance_disks=False, self.context, instance, network_model.NetworkInfo(), objects.Migration(), power_on=power_on) self._test_finish_revert_migration(True) self._test_finish_revert_migration(False)"," self, neutron_failure=None, power_on=True, events=None, events_passed_to_prepare = [] events_passed_to_prepare.append((name, tag)) power_on=power_on, external_events=events) if events and CONF.vif_plugging_timeout: self.assertEqual(events_passed_to_prepare, events) elif CONF.vif_plugging_timeout and power_on: def test_create_guest_with_network__events_passed_in(self): self._test_create_guest_with_network__events( events=[('network-vif-plugged', uuids.fake_vif)]) def test_create_guest_with_network__events_passed_in_0_timeout(self): self.flags(vif_plugging_timeout=0) self._test_create_guest_with_network__events( events=[('network-vif-plugged', uuids.fake_vif)]) def _test_finish_revert_migration(self, power_on, migration): external_events=None, cleanup_instance_dir=False, cleanup_instance_disks=False, self.assertEqual(self.events_passed_to_fake_create, external_events) network_info = network_model.NetworkInfo( [network_model.VIF(id=uuids.normal_vif), network_model.VIF(id=uuids.hybrid_vif, details={'ovs_hybrid_plug': True})]) if migration.is_same_host(): # Same host is all plug-time self.events_passed_to_fake_create = [ ('network-vif-plugged', uuids.normal_vif), ('network-vif-plugged', uuids.hybrid_vif)] else: # For different host migration only non-hybrid plug # (""normal"") VIFs ""emit"" plug-time events. self.events_passed_to_fake_create = [ ('network-vif-plugged', uuids.normal_vif)] self.context, instance, network_info, migration, power_on=power_on) migration = objects.Migration(id=42, source_compute='fake-host1', dest_compute='fake-host2') self._test_finish_revert_migration(power_on=True, migration=migration) migration = objects.Migration(id=42, source_compute='fake-host1', dest_compute='fake-host2') self._test_finish_revert_migration(power_on=False, migration=migration) def test_finish_revert_migration_same_host(self): migration = objects.Migration(id=42, source_compute='fake-host', dest_compute='fake-host') self._test_finish_revert_migration(power_on=True, migration=migration) def test_finish_revert_migration_diff_host(self): migration = objects.Migration(id=42, source_compute='fake-host1', dest_compute='fake-host2') self._test_finish_revert_migration(power_on=True, migration=migration)",51,284
openstack%2Fdesignate-dashboard~911257,openstack/designate-dashboard,unmaintained/wallaby,Icf4509b3cecaf95a134c465dfcd562dbebf8f39e,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:40:52.000000000,2024-03-05 18:56:53.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:40:52.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/designate-dashboard/commit/1d0d090c80b8edf65b39c25765a6a58d59b512d1', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: Icf4509b3cecaf95a134c465dfcd562dbebf8f39e\n'}]",0,911257,1d0d090c80b8edf65b39c25765a6a58d59b512d1,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: Icf4509b3cecaf95a134c465dfcd562dbebf8f39e
",git fetch https://review.opendev.org/openstack/designate-dashboard refs/changes/57/911257/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,1d0d090c80b8edf65b39c25765a6a58d59b512d1,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fnova~873242,openstack/nova,stable/victoria,I677882593903c53ec3d91ec2f641c8b0b6a86489,DNM: CI test,ABANDONED,2023-02-09 11:14:18.000000000,2024-03-05 18:56:52.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-02-09 11:14:18.000000000', 'files': ['nova/__init__.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/64f005b7cbbda991b10c6d51a3cb5b4914671b44', 'message': 'DNM: CI test\n\nDepends-On: https://review.opendev.org/872964\nChange-Id: I677882593903c53ec3d91ec2f641c8b0b6a86489\n'}]",2,873242,64f005b7cbbda991b10c6d51a3cb5b4914671b44,6,1,1,17685,,,0,"DNM: CI test

Depends-On: https://review.opendev.org/872964
Change-Id: I677882593903c53ec3d91ec2f641c8b0b6a86489
",git fetch https://review.opendev.org/openstack/nova refs/changes/42/873242/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/__init__.py'],1,64f005b7cbbda991b10c6d51a3cb5b4914671b44,drop-sdk-job-victoria,# dummy change,,1,0
openstack%2Ftacker-horizon~911247,openstack/tacker-horizon,unmaintained/xena,I6b524f2685900b732eb37ed6c4de567c2a424417,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:38:20.000000000,2024-03-05 18:56:51.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:38:20.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/tacker-horizon/commit/199db6887bed9d7f2272857eea9fdd3cc19f3a40', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I6b524f2685900b732eb37ed6c4de567c2a424417\n'}]",0,911247,199db6887bed9d7f2272857eea9fdd3cc19f3a40,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I6b524f2685900b732eb37ed6c4de567c2a424417
",git fetch https://review.opendev.org/openstack/tacker-horizon refs/changes/47/911247/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,199db6887bed9d7f2272857eea9fdd3cc19f3a40,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fnova~874071,openstack/nova,stable/victoria,I63208c7bd5f9f4c3d5e4a40bd0f6253d0f042a37,db: Resolve additional SAWarning warnings,ABANDONED,2023-02-16 09:31:44.000000000,2024-03-05 18:56:49.000000000,,"[{'_account_id': 15334}, {'_account_id': 20733}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-02-16 09:31:44.000000000', 'files': ['nova/objects/cell_mapping.py', 'nova/db/sqlalchemy/api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/3fd73d5935ac048eaa5f90c9f996e66aab0431b8', 'message': 'db: Resolve additional SAWarning warnings\n\nResolving the following SAWarning warnings:\n\n  Coercing Subquery object into a select() for use in IN(); please pass\n  a select() construct explicitly\n\n  SELECT statement has a cartesian product between FROM element(s)\n  ""foo"" and FROM element ""bar"". Apply join condition(s) between each\n  element to resolve.\n\nWhile the first of these was a trivial fix, the second one is a little\nmore involved. It was caused by attempting to build a query across\ntables that had no relationship as part of our archive logic. For\nexample, consider the following queries, generated early in\n\'_get_fk_stmts\':\n\n  SELECT instances.uuid\n  FROM instances, security_group_instance_association\n  WHERE security_group_instance_association.instance_uuid = instances.uuid\n    AND instances.id IN (__[POSTCOMPILE_id_1])\n\n  SELECT security_groups.id\n  FROM security_groups, security_group_instance_association, instances\n  WHERE security_group_instance_association.security_group_id = security_groups.id\n    AND instances.id IN (__[POSTCOMPILE_id_1])\n\nWhile the first of these is fine, the second is clearly wrong: why are\nwe filtering on a field that is of no relevance to our join? These were\ngenerated because we were attempting to archive one or more instances\n(in this case, the instance with id=1) and needed to find related tables\nto archive at the same time. A related table is any table that\nreferences our ""source"" table - \'instances\' here - by way of a foreign\nkey. For each of *these* tables, we then lookup each foreign key and\njoin back to the source table, filtering by matching entries in the\nsource table. The issue here is that we\'re looking up every foreign key.\nWhat we actually want to do is lookup only the foreign keys that point\nback to our source table. This flaw is why we were generating the second\nSELECT above: the \'security_group_instance_association\' has two foreign\nkeys, one pointing to our \'instances\' table but also another pointing to\nthe \'security_groups\' table. We want the first but not the second.\n\nResolve this by checking if the table that each foreign key points to is\nactually the source table and simply skip if not. With this issue\nresolved, we can enable errors on SAWarning warnings in general without\nany filters.\n\nChange-Id: I63208c7bd5f9f4c3d5e4a40bd0f6253d0f042a37\nSigned-off-by: Stephen Finucane <sfinucan@redhat.com>\n(cherry picked from commit 8142b9dc47b7096ab9d8180f0b5b1e52d513e2dc)\n(cherry picked from commit ce2cc54bfe236554badb9f6bf53a958417e5525d)\n(cherry picked from commit 5b1d487d7fc49580a606b68e1271cae5f2f2df87)\n(cherry picked from commit 5d0325a78b2a5f7a9109290fb23d46a841042da6)\n'}]",0,874071,3fd73d5935ac048eaa5f90c9f996e66aab0431b8,6,3,1,4690,,,0,"db: Resolve additional SAWarning warnings

Resolving the following SAWarning warnings:

  Coercing Subquery object into a select() for use in IN(); please pass
  a select() construct explicitly

  SELECT statement has a cartesian product between FROM element(s)
  ""foo"" and FROM element ""bar"". Apply join condition(s) between each
  element to resolve.

While the first of these was a trivial fix, the second one is a little
more involved. It was caused by attempting to build a query across
tables that had no relationship as part of our archive logic. For
example, consider the following queries, generated early in
'_get_fk_stmts':

  SELECT instances.uuid
  FROM instances, security_group_instance_association
  WHERE security_group_instance_association.instance_uuid = instances.uuid
    AND instances.id IN (__[POSTCOMPILE_id_1])

  SELECT security_groups.id
  FROM security_groups, security_group_instance_association, instances
  WHERE security_group_instance_association.security_group_id = security_groups.id
    AND instances.id IN (__[POSTCOMPILE_id_1])

While the first of these is fine, the second is clearly wrong: why are
we filtering on a field that is of no relevance to our join? These were
generated because we were attempting to archive one or more instances
(in this case, the instance with id=1) and needed to find related tables
to archive at the same time. A related table is any table that
references our ""source"" table - 'instances' here - by way of a foreign
key. For each of *these* tables, we then lookup each foreign key and
join back to the source table, filtering by matching entries in the
source table. The issue here is that we're looking up every foreign key.
What we actually want to do is lookup only the foreign keys that point
back to our source table. This flaw is why we were generating the second
SELECT above: the 'security_group_instance_association' has two foreign
keys, one pointing to our 'instances' table but also another pointing to
the 'security_groups' table. We want the first but not the second.

Resolve this by checking if the table that each foreign key points to is
actually the source table and simply skip if not. With this issue
resolved, we can enable errors on SAWarning warnings in general without
any filters.

Change-Id: I63208c7bd5f9f4c3d5e4a40bd0f6253d0f042a37
Signed-off-by: Stephen Finucane <sfinucan@redhat.com>
(cherry picked from commit 8142b9dc47b7096ab9d8180f0b5b1e52d513e2dc)
(cherry picked from commit ce2cc54bfe236554badb9f6bf53a958417e5525d)
(cherry picked from commit 5b1d487d7fc49580a606b68e1271cae5f2f2df87)
(cherry picked from commit 5d0325a78b2a5f7a9109290fb23d46a841042da6)
",git fetch https://review.opendev.org/openstack/nova refs/changes/71/874071/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/cell_mapping.py', 'nova/db/sqlalchemy/api.py']",2,3fd73d5935ac048eaa5f90c9f996e66aab0431b8,, if table != fk.column.table: # if the foreign key doesn't actually point to the table we're # archiving entries from then it's not relevant; trying to # resolve this would result in a cartesian product continue ,,15,4
openstack%2Fnova~883906,openstack/nova,stable/victoria,I16ed1143ead3779c87698aa29bac005678db2993,Add reno for fixing bug 1941005,ABANDONED,2023-05-23 11:45:33.000000000,2024-03-05 18:56:45.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-23 11:45:33.000000000', 'files': ['releasenotes/notes/bug-1983753-update-requestspec-pci_request-for-resize-a3c6b0a979db723f.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/82e1524d07389958098b66a726d71b10bbaaf049', 'message': 'Add reno for fixing bug 1941005\n\nRelated-Bug: #1941005\nRelated-Bug: #1983753\nChange-Id: I16ed1143ead3779c87698aa29bac005678db2993\n(cherry picked from commit 82cdfa23c7a0e269ab038e241bb7428b7f1391aa)\n(cherry picked from commit 19bac6e9c362ee692f4be92041bb3f6c3b9b6c23)\n(cherry picked from commit cbf785709968fffc0a760e28f1cdb5c38b254232)\n(cherry picked from commit 63c21cf68502a6c61727d9080e13a3882b9e7c11)\n'}]",0,883906,82e1524d07389958098b66a726d71b10bbaaf049,3,1,1,9708,,,0,"Add reno for fixing bug 1941005

Related-Bug: #1941005
Related-Bug: #1983753
Change-Id: I16ed1143ead3779c87698aa29bac005678db2993
(cherry picked from commit 82cdfa23c7a0e269ab038e241bb7428b7f1391aa)
(cherry picked from commit 19bac6e9c362ee692f4be92041bb3f6c3b9b6c23)
(cherry picked from commit cbf785709968fffc0a760e28f1cdb5c38b254232)
(cherry picked from commit 63c21cf68502a6c61727d9080e13a3882b9e7c11)
",git fetch https://review.opendev.org/openstack/nova refs/changes/06/883906/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/notes/bug-1983753-update-requestspec-pci_request-for-resize-a3c6b0a979db723f.yaml'],1,82e1524d07389958098b66a726d71b10bbaaf049,bug/1941005,--- fixes: - | `Bug #1941005 <https://bugs.launchpad.net/nova/+bug/1941005>`_ is fixed. During resize Nova now uses the PCI requests from the new flavor to select the destination host. ,,6,0
openstack%2Fnova~883904,openstack/nova,stable/victoria,Ic6566272b8c5af57cd1c73c73b3cba6cd265bebe,Reproducer for bug 1983753,ABANDONED,2023-05-23 11:45:33.000000000,2024-03-05 18:56:41.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-23 11:45:33.000000000', 'files': ['nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/tests/functional/regressions/test_bug_1983753.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/7f97c65b8c56facedc0fe69d150c22d7d9218b52', 'message': 'Reproducer for bug 1983753\n\nThere is a stable/victoria specific change in test_pci_sriov_servers.py\nas the assertPCIDeviceCounts was not available in the base test class in\nvictoria. So it is moved there by this patch\n\nRelated-Bug: #1983753\nChange-Id: Ic6566272b8c5af57cd1c73c73b3cba6cd265bebe\n(cherry picked from commit 6d602c6b734c2e360fa319ba22c2fced02ad3d29)\n(cherry picked from commit bdc32226e2d9ce4a073306f8f6267fbe305e64e4)\n(cherry picked from commit 87a8a7df9800f3c81dba2e2c0520168115ad1b28)\n(cherry picked from commit 81741d7ce8031367ca4055227ecd55014d0aced8)\n'}]",0,883904,7f97c65b8c56facedc0fe69d150c22d7d9218b52,3,1,1,9708,,,0,"Reproducer for bug 1983753

There is a stable/victoria specific change in test_pci_sriov_servers.py
as the assertPCIDeviceCounts was not available in the base test class in
victoria. So it is moved there by this patch

Related-Bug: #1983753
Change-Id: Ic6566272b8c5af57cd1c73c73b3cba6cd265bebe
(cherry picked from commit 6d602c6b734c2e360fa319ba22c2fced02ad3d29)
(cherry picked from commit bdc32226e2d9ce4a073306f8f6267fbe305e64e4)
(cherry picked from commit 87a8a7df9800f3c81dba2e2c0520168115ad1b28)
(cherry picked from commit 81741d7ce8031367ca4055227ecd55014d0aced8)
",git fetch https://review.opendev.org/openstack/nova refs/changes/04/883904/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/libvirt/test_pci_sriov_servers.py', 'nova/tests/functional/regressions/test_bug_1983753.py']",2,7f97c65b8c56facedc0fe69d150c22d7d9218b52,bug/1941005,"# All Rights Reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import fixtures from oslo_serialization import jsonutils from nova.tests.functional.api import client from nova.tests.functional.libvirt import test_pci_sriov_servers from nova.tests.unit.virt.libvirt import fakelibvirt class TestPciResize(test_pci_sriov_servers._PCIServersTestBase): # these tests use multiple different configs so the whitelist is set by # each testcase individually PCI_PASSTHROUGH_WHITELIST = [] PCI_ALIAS = [ jsonutils.dumps(x) for x in [ { ""vendor_id"": fakelibvirt.PCI_VEND_ID, ""product_id"": fakelibvirt.PCI_PROD_ID, ""name"": ""a-pci-dev"", }, { ""vendor_id"": fakelibvirt.PCI_VEND_ID, ""product_id"": fakelibvirt.PF_PROD_ID, ""device_type"": ""type-PF"", ""name"": ""a-pf"", }, { ""vendor_id"": fakelibvirt.PCI_VEND_ID, ""product_id"": fakelibvirt.VF_PROD_ID, ""device_type"": ""type-VF"", ""name"": ""a-vf"", }, ] ] def setUp(self): super().setUp() self.useFixture( fixtures.MockPatch( 'nova.virt.libvirt.driver.LibvirtDriver.' 'migrate_disk_and_power_off', return_value='{}' ) ) # These tests should not depend on the host's sysfs self.useFixture( fixtures.MockPatch('nova.pci.utils.is_physical_function')) self.useFixture( fixtures.MockPatch( 'nova.pci.utils.get_function_by_ifname', return_value=(None, False) ) ) def _test_resize_from_two_devs_to_one_dev(self, num_pci_on_dest): # The fake libvirt will emulate on the host: # * two type-PCI in slot 0, 1 compute1_pci_info = fakelibvirt.HostPCIDevicesInfo(num_pci=2) # the config matches the PCI dev compute1_device_spec = [ jsonutils.dumps(x) for x in [ { ""vendor_id"": fakelibvirt.PCI_VEND_ID, ""product_id"": fakelibvirt.PCI_PROD_ID, }, ] ] self.flags(group='pci', passthrough_whitelist=compute1_device_spec) self.start_compute(hostname=""compute1"", pci_info=compute1_pci_info) self.assertPCIDeviceCounts(""compute1"", total=2, free=2) # create a server that requests two PCI devs extra_spec = {""pci_passthrough:alias"": ""a-pci-dev:2""} flavor_id = self._create_flavor(extra_spec=extra_spec) server = self._create_server(flavor_id=flavor_id, networks=[]) self.assertPCIDeviceCounts(""compute1"", total=2, free=0) # start another compute with a different amount of PCI dev available compute2_pci_info = fakelibvirt.HostPCIDevicesInfo( num_pci=num_pci_on_dest) # the config matches the PCI dev compute2_device_spec = [ jsonutils.dumps(x) for x in [ { ""vendor_id"": fakelibvirt.PCI_VEND_ID, ""product_id"": fakelibvirt.PCI_PROD_ID, }, ] ] self.flags(group='pci', passthrough_whitelist=compute2_device_spec) self.start_compute(hostname=""compute2"", pci_info=compute2_pci_info) self.assertPCIDeviceCounts( ""compute2"", total=num_pci_on_dest, free=num_pci_on_dest) # resize the server to request only one PCI dev instead of the current # two. This should fit to compute2 having at least one dev extra_spec = {""pci_passthrough:alias"": ""a-pci-dev:1""} flavor_id = self._create_flavor(extra_spec=extra_spec) self._resize_server(server, flavor_id=flavor_id) self._confirm_resize(server) self.assertPCIDeviceCounts(""compute1"", total=2, free=2) self.assertPCIDeviceCounts( ""compute2"", total=num_pci_on_dest, free=num_pci_on_dest - 1) def test_resize_from_two_devs_to_one_dev_dest_has_two_devs(self): # this works self._test_resize_from_two_devs_to_one_dev(num_pci_on_dest=2) def test_resize_from_two_devs_to_one_dev_dest_has_one_dev(self): # This is bug 1983753 as nova uses the old InstancePciRequest during # the scheduling and therefore tries to find a compute with two PCI # devs even though the flavor only requests one. ex = self.assertRaises( client.OpenStackApiException, self._test_resize_from_two_devs_to_one_dev, num_pci_on_dest=1 ) self.assertIn('nova.exception.NoValidHost', str(ex)) def test_resize_from_vf_to_pf(self): # The fake libvirt will emulate on the host: # * one type-PF in slot 0 with one VF compute1_pci_info = fakelibvirt.HostPCIDevicesInfo( num_pfs=1, num_vfs=1) # the config matches only the VF compute1_device_spec = [ jsonutils.dumps(x) for x in [ { ""vendor_id"": fakelibvirt.PCI_VEND_ID, ""product_id"": fakelibvirt.VF_PROD_ID, }, ] ] self.flags(group='pci', passthrough_whitelist=compute1_device_spec) self.start_compute(hostname=""compute1"", pci_info=compute1_pci_info) self.assertPCIDeviceCounts(""compute1"", total=1, free=1) # create a server that requests one Vf extra_spec = {""pci_passthrough:alias"": ""a-vf:1""} flavor_id = self._create_flavor(extra_spec=extra_spec) server = self._create_server(flavor_id=flavor_id, networks=[]) self.assertPCIDeviceCounts(""compute1"", total=1, free=0) # start another compute with a single PF dev available # The fake libvirt will emulate on the host: # * one type-PF in slot 0 with 1 VF compute2_pci_info = fakelibvirt.HostPCIDevicesInfo( num_pfs=1, num_vfs=1) # the config matches the PF dev but not the VF compute2_device_spec = [ jsonutils.dumps(x) for x in [ { ""vendor_id"": fakelibvirt.PCI_VEND_ID, ""product_id"": fakelibvirt.PF_PROD_ID, }, ] ] self.flags(group='pci', passthrough_whitelist=compute2_device_spec) self.start_compute(hostname=""compute2"", pci_info=compute2_pci_info) self.assertPCIDeviceCounts(""compute2"", total=1, free=1) # resize the server to request on PF dev instead of the current VF # dev. This should fit to compute2 having exactly one PF dev. extra_spec = {""pci_passthrough:alias"": ""a-pf:1""} flavor_id = self._create_flavor(extra_spec=extra_spec) # This is bug 1983753 as nova uses the old InstancePciRequest during # the scheduling and therefore tries to find a compute with a VF dev # even though the flavor only requests a PF dev. ex = self.assertRaises( client.OpenStackApiException, self._resize_server, server, flavor_id=flavor_id, ) self.assertIn('nova.exception.NoValidHost', str(ex)) ",,202,9
openstack%2Fnova~883905,openstack/nova,stable/victoria,I73c9ae27e9c42ee211a53bed3d849650b65f08be,Update RequestSpec.pci_request for resize,ABANDONED,2023-05-23 11:45:33.000000000,2024-03-05 18:56:38.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-23 11:45:33.000000000', 'files': ['nova/tests/functional/regressions/test_bug_1983753.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/c530350360d1f003156ba0c4820047d336bba4d1', 'message': 'Update RequestSpec.pci_request for resize\n\nNova uses the RequestSpec.pci_request in the PciPassthroughFilter to\ndecide if the PCI devicesm, requested via the pci_alias in the flavor\nextra_spec, are available on a potential target host. During resize the\nnew flavor might contain different pci_alias request than the old flavor\nof the instance. In this case Nova should use the pci_alias from the new\nflavor to scheduler the destination host of the resize. However this\nlogic was missing and Nova used the old pci_request value based on the\nold flavor. This patch adds the missing logic.\n\nCloses-Bug: #1983753\nCloses-Bug: #1941005\nChange-Id: I73c9ae27e9c42ee211a53bed3d849650b65f08be\n(cherry picked from commit a93092e0d5c1483f9ad48276708ee35c54ce44fe)\n(cherry picked from commit b6c7ee07ad2a6503b8aad0921cca70e61e60259d)\n(cherry picked from commit 696d27a0e2ccf0916fc6bd3eabf73f2b007e7830)\n(cherry picked from commit 35ad4bbaf8b383436d3b972daa58e05a47e36d82)\n'}]",0,883905,c530350360d1f003156ba0c4820047d336bba4d1,3,1,1,9708,,,0,"Update RequestSpec.pci_request for resize

Nova uses the RequestSpec.pci_request in the PciPassthroughFilter to
decide if the PCI devicesm, requested via the pci_alias in the flavor
extra_spec, are available on a potential target host. During resize the
new flavor might contain different pci_alias request than the old flavor
of the instance. In this case Nova should use the pci_alias from the new
flavor to scheduler the destination host of the resize. However this
logic was missing and Nova used the old pci_request value based on the
old flavor. This patch adds the missing logic.

Closes-Bug: #1983753
Closes-Bug: #1941005
Change-Id: I73c9ae27e9c42ee211a53bed3d849650b65f08be
(cherry picked from commit a93092e0d5c1483f9ad48276708ee35c54ce44fe)
(cherry picked from commit b6c7ee07ad2a6503b8aad0921cca70e61e60259d)
(cherry picked from commit 696d27a0e2ccf0916fc6bd3eabf73f2b007e7830)
(cherry picked from commit 35ad4bbaf8b383436d3b972daa58e05a47e36d82)
",git fetch https://review.opendev.org/openstack/nova refs/changes/05/883905/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/regressions/test_bug_1983753.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",3,c530350360d1f003156ba0c4820047d336bba4d1,bug/1941005, fake_spec = objects.RequestSpec( pci_requests=objects.InstancePCIRequests(requests=[])), fake_spec = objects.RequestSpec(),20,22
openstack%2Fnova~884570,openstack/nova,stable/victoria,Id917d715c0c0955fbc6761d4b5af386514a343d2,libvirt: Stop NVMe and ScaleIO unit tests from calling os-brick,ABANDONED,2023-05-28 12:17:00.000000000,2024-03-05 18:56:34.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-28 12:17:00.000000000', 'files': ['nova/tests/unit/virt/libvirt/volume/test_nvme.py', 'nova/tests/unit/virt/libvirt/volume/test_scaleio.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/b706522152ecfeb52a67e3546aea5c4d95960a5a', 'message': 'libvirt: Stop NVMe and ScaleIO unit tests from calling os-brick\n\nBoth sets of tests would allow calls to the InitiatorConnector.factory\nwithin os-brick that returns an arch specific connector. When running\ntests on ppc64le hosts this would result in failures are the SCALEIO and\nNVME protocols are not supported on these architectures.\n\nCloses-Bug: #1912608\nChange-Id: Id917d715c0c0955fbc6761d4b5af386514a343d2\n(cherry picked from commit 0f558749d1489c6399bb009dfd2a1aeda8d85f9c)\n'}]",0,884570,b706522152ecfeb52a67e3546aea5c4d95960a5a,4,1,1,17685,,,0,"libvirt: Stop NVMe and ScaleIO unit tests from calling os-brick

Both sets of tests would allow calls to the InitiatorConnector.factory
within os-brick that returns an arch specific connector. When running
tests on ppc64le hosts this would result in failures are the SCALEIO and
NVME protocols are not supported on these architectures.

Closes-Bug: #1912608
Change-Id: Id917d715c0c0955fbc6761d4b5af386514a343d2
(cherry picked from commit 0f558749d1489c6399bb009dfd2a1aeda8d85f9c)
",git fetch https://review.opendev.org/openstack/nova refs/changes/70/884570/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/virt/libvirt/volume/test_nvme.py', 'nova/tests/unit/virt/libvirt/volume/test_scaleio.py']",2,b706522152ecfeb52a67e3546aea5c4d95960a5a,bug/2004555," @mock.patch('os_brick.initiator.connector.InitiatorConnector.factory', new=mock.Mock(return_value=mock.Mock())) def test_libvirt_scaleio_driver_connect(self): sio.connector.connect_volume.return_value = conn['data'] sio.connector.connect_volume.assert_called_once_with(conn['data']) self.assertEqual(disk_info['path'], conn['data']['device_path']) @mock.patch('os_brick.initiator.connector.InitiatorConnector.factory', new=mock.Mock(return_value=mock.Mock())) @mock.patch('os_brick.initiator.connector.InitiatorConnector.factory', new=mock.Mock(return_value=mock.Mock())) @mock.patch('os_brick.initiator.connector.InitiatorConnector.factory', new=mock.Mock(return_value=mock.Mock())) def test_libvirt_scaleio_driver_extend_volume(self): sio.connector.extend_volume.return_value = extended_vol_size self.assertEqual( extended_vol_size, sio.extend_volume(conn, mock.sentinel.instance, extended_vol_size))"," def test_libvirt_scaleio_driver_connect(self): def brick_conn_vol(data): return {'path': '/dev/vol01'} sio.connector.connect_volume = brick_conn_vol self.assertEqual('/dev/vol01', conn['data']['device_path']) sio.connector.disconnect_volume = mock.MagicMock() def test_libvirt_scaleio_driver_extend_volume(self): def brick_extend_vol(data): return data['size'] with mock.patch.object(sio.connector, 'extend_volume', side_effect=brick_extend_vol): self.assertEqual(extended_vol_size, sio.extend_volume(conn, mock.sentinel.instance, extended_vol_size))",26,20
openstack%2Fnova~887997,openstack/nova,stable/victoria,If39f6afb6359c67aa38cf315ec90ffa386d5c142,testing: Fix and robustify archive_deleted_rows test,ABANDONED,2023-07-07 21:16:53.000000000,2024-03-05 18:56:30.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-07 21:16:53.000000000', 'files': ['nova/tests/functional/test_nova_manage.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/afdf01aa1f95ab430f62661680b7b492f5f78ff8', 'message': 'testing: Fix and robustify archive_deleted_rows test\n\nThe regexes in test_archive_deleted_rows for multiple cells were\nincorrect in that they were not isolating the search pattern and rather\ncould match with other rows in the result table as well, resulting in a\nfalse positive.\n\nThis fixes the regexes and also adds one more server to the test\nscenario in order to make sure archive_deleted_rows iterates at least\nonce to expose bugs that may be present in its internal iteration.\n\nThis patch is in preparation for a future patch that will change the\nlogic in archive_deleted_rows. Making this test more robust will more\nthoroughly test for regression.\n\nChange-Id: If39f6afb6359c67aa38cf315ec90ffa386d5c142\n(cherry picked from commit f6620d48c86fb1c5034c09da6411ea46b4d9c2ed)\n(cherry picked from commit 8823da84e9d07309b860c3ce3ad4c9ebd3652f86)\n(cherry picked from commit ecfa7c405710451247018f189416ada7bba6fd36)\n(cherry picked from commit 956208d879ef2d49ac5a6f6c2067ff299114d193)\n(cherry picked from commit 600dba5571e830c1e274e391fe86d498efcd7e53)\n(cherry picked from commit 7287070758e7f99c35eb4827b5552df784084a09)\n'}]",0,887997,afdf01aa1f95ab430f62661680b7b492f5f78ff8,3,1,1,4690,,,0,"testing: Fix and robustify archive_deleted_rows test

The regexes in test_archive_deleted_rows for multiple cells were
incorrect in that they were not isolating the search pattern and rather
could match with other rows in the result table as well, resulting in a
false positive.

This fixes the regexes and also adds one more server to the test
scenario in order to make sure archive_deleted_rows iterates at least
once to expose bugs that may be present in its internal iteration.

This patch is in preparation for a future patch that will change the
logic in archive_deleted_rows. Making this test more robust will more
thoroughly test for regression.

Change-Id: If39f6afb6359c67aa38cf315ec90ffa386d5c142
(cherry picked from commit f6620d48c86fb1c5034c09da6411ea46b4d9c2ed)
(cherry picked from commit 8823da84e9d07309b860c3ce3ad4c9ebd3652f86)
(cherry picked from commit ecfa7c405710451247018f189416ada7bba6fd36)
(cherry picked from commit 956208d879ef2d49ac5a6f6c2067ff299114d193)
(cherry picked from commit 600dba5571e830c1e274e391fe86d498efcd7e53)
(cherry picked from commit 7287070758e7f99c35eb4827b5552df784084a09)
",git fetch https://review.opendev.org/openstack/nova refs/changes/97/887997/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/test_nova_manage.py'],1,afdf01aa1f95ab430f62661680b7b492f5f78ff8,," server_ids_by_cell = collections.defaultdict(list) # Create two servers per cell to make sure archive for table iterates # at least once. for i in range(2): # Boot a server to cell1 server = self._build_server(az='nova:host1') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids_by_cell['cell1'].append(created_server['id']) # Boot a server to cell2 server = self._build_server(az='nova:host2') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids_by_cell['cell2'].append(created_server['id']) # Boot a server to cell0 (cause ERROR state prior to schedule) server = self._build_server() # Flavor m1.xlarge cannot be fulfilled server['flavorRef'] = 'http://fake.server/5' created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ERROR') server_ids_by_cell['cell0'].append(created_server['id']) for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: with context.target_cell( admin_context, self.cell_mappings[cell_name] ) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: self.api.delete_server(server_id) for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: with context.target_cell( admin_context, self.cell_mappings[cell_name] ) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) # 6 instances should have been archived (cell0, cell1, cell2) r""\| cell0\.instances\s+\| 2"") r""\| cell1\.instances\s+\| 2"") r""\| cell2\.instances\s+\| 2"") r""\| API_DB\.instance_mappings\s+\| 6"") r""\| API_DB\.request_specs\s+\| 6"") for cell_name, server_ids in server_ids_by_cell.items(): for server_id in server_ids: with context.target_cell( admin_context, self.cell_mappings[cell_name] ) as cctxt: self.assertRaises(exception.InstanceNotFound, objects.Instance.get_by_uuid, cctxt, server_id)"," # Boot a server to cell1 server_ids = {} server = self._build_server(az='nova:host1') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids['cell1'] = created_server['id'] # Boot a server to cell2 server = self._build_server(az='nova:host2') created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ACTIVE') server_ids['cell2'] = created_server['id'] # Boot a server to cell0 (cause ERROR state prior to schedule) server = self._build_server() # Flavor m1.xlarge cannot be fulfilled server['flavorRef'] = 'http://fake.server/5' created_server = self.api.post_server({'server': server}) self._wait_for_state_change(created_server, 'ERROR') server_ids['cell0'] = created_server['id'] for cell_name, server_id in server_ids.items(): with context.target_cell(admin_context, self.cell_mappings[cell_name]) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) for cell_name in server_ids.keys(): self.api.delete_server(server_ids[cell_name]) for cell_name, server_id in server_ids.items(): with context.target_cell(admin_context, self.cell_mappings[cell_name]) as cctxt: objects.Instance.get_by_uuid(cctxt, server_id) # Three instances should have been archived (cell0, cell1, cell2) r""| cell0\.instances.*\| 1.*"") r""| cell1\.instances.*\| 1.*"") r""| cell2\.instances.*\| 1.*"") r""| API_DB\.instance_mappings.*\| 3.*"") r""| API_DB\.request_specs.*\| 3.*"") for cell_name, server_id in server_ids.items(): with context.target_cell(admin_context, self.cell_mappings[cell_name]) as cctxt: self.assertRaises(exception.InstanceNotFound, objects.Instance.get_by_uuid, cctxt, server_id)",54,40
openstack%2Fnova~887998,openstack/nova,stable/victoria,I2209bf1b3320901cf603ec39163cf923b25b0359,"database: Archive parent and child rows ""trees"" one at a time",ABANDONED,2023-07-07 21:16:53.000000000,2024-03-05 18:56:27.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-07 21:16:53.000000000', 'files': ['nova/tests/functional/db/test_archive.py', 'releasenotes/notes/db-archive-performance-degradation-3fdabc43398149b1.yaml', 'nova/tests/unit/cmd/test_manage.py', 'nova/cmd/manage.py', 'nova/db/sqlalchemy/api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/125009b215f8d8ca0d28a3bbf06c9ade6e5840ab', 'message': 'database: Archive parent and child rows ""trees"" one at a time\n\nPreviously, we archived deleted rows in batches of max_rows parents +\ntheir child rows in a single database transaction. Doing it that way\nlimited how high a value of max_rows could be specified by the caller\nbecause of the size of the database transaction it could generate.\n\nFor example, in a large scale deployment with hundreds of thousands of\ndeleted rows and constant server creation and deletion activity, a\nvalue of max_rows=1000 might exceed the database\'s configured maximum\npacket size or timeout due to a database deadlock, forcing the operator\nto use a much lower max_rows value like 100 or 50.\n\nAnd when the operator has e.g. 500,000 deleted instances rows (and\nmillions of deleted rows total) they are trying to archive, being\nforced to use a max_rows value several orders of magnitude lower than\nthe number of rows they need to archive was a poor user experience.\n\nThis changes the logic to archive one parent row and its foreign key\nrelated child rows one at a time in a single database transaction\nwhile limiting the total number of rows per table as soon as it reaches\n>= max_rows. Doing this will allow operators to choose more predictable\nvalues for max_rows and get more progress per invocation of\narchive_deleted_rows.\n\nConflicts:\n    nova/db/sqlalchemy/api.py\n\nNOTE(melwitt): The conflict is because change\nI23bb9e539d08f5c6202909054c2dd49b6c7a7a0e (Remove six.text_type (1/2))\nis not in Victoria.\n\nCloses-Bug: #2024258\n\nChange-Id: I2209bf1b3320901cf603ec39163cf923b25b0359\n(cherry picked from commit 697fa3c000696da559e52b664c04cbd8d261c037)\n(cherry picked from commit 75e4c86d90ae0229069fc2eb06bfb41436be7319)\n(cherry picked from commit 6972efdaa94d05952eb5b90e456b566c4c73360c)\n(cherry picked from commit b555279add583e6b0cee1bddb8d5642c68ad84a6)\n(cherry picked from commit 4dc6ec9dccba2695536cb3cbd5534e64003904c9)\n(cherry picked from commit 2d073fdd935d3df6511c16b0203dcc7933e68a89)\n'}]",0,887998,125009b215f8d8ca0d28a3bbf06c9ade6e5840ab,3,1,1,4690,,,0,"database: Archive parent and child rows ""trees"" one at a time

Previously, we archived deleted rows in batches of max_rows parents +
their child rows in a single database transaction. Doing it that way
limited how high a value of max_rows could be specified by the caller
because of the size of the database transaction it could generate.

For example, in a large scale deployment with hundreds of thousands of
deleted rows and constant server creation and deletion activity, a
value of max_rows=1000 might exceed the database's configured maximum
packet size or timeout due to a database deadlock, forcing the operator
to use a much lower max_rows value like 100 or 50.

And when the operator has e.g. 500,000 deleted instances rows (and
millions of deleted rows total) they are trying to archive, being
forced to use a max_rows value several orders of magnitude lower than
the number of rows they need to archive was a poor user experience.

This changes the logic to archive one parent row and its foreign key
related child rows one at a time in a single database transaction
while limiting the total number of rows per table as soon as it reaches
>= max_rows. Doing this will allow operators to choose more predictable
values for max_rows and get more progress per invocation of
archive_deleted_rows.

Conflicts:
    nova/db/sqlalchemy/api.py

NOTE(melwitt): The conflict is because change
I23bb9e539d08f5c6202909054c2dd49b6c7a7a0e (Remove six.text_type (1/2))
is not in Victoria.

Closes-Bug: #2024258

Change-Id: I2209bf1b3320901cf603ec39163cf923b25b0359
(cherry picked from commit 697fa3c000696da559e52b664c04cbd8d261c037)
(cherry picked from commit 75e4c86d90ae0229069fc2eb06bfb41436be7319)
(cherry picked from commit 6972efdaa94d05952eb5b90e456b566c4c73360c)
(cherry picked from commit b555279add583e6b0cee1bddb8d5642c68ad84a6)
(cherry picked from commit 4dc6ec9dccba2695536cb3cbd5534e64003904c9)
(cherry picked from commit 2d073fdd935d3df6511c16b0203dcc7933e68a89)
",git fetch https://review.opendev.org/openstack/nova refs/changes/98/887998/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/db/test_archive.py', 'releasenotes/notes/db-archive-performance-degradation-3fdabc43398149b1.yaml', 'nova/tests/unit/cmd/test_manage.py', 'nova/cmd/manage.py', 'nova/db/sqlalchemy/api.py']",5,125009b215f8d8ca0d28a3bbf06c9ade6e5840ab,," # This is a list of IDs of rows that should be archived from this table, # limited to a length of max_rows. # # extras = {tablename: number_of_extra_rows_archived} if not records: # Nothing to archive, so return. return rows_archived, deleted_instance_uuids, extras # Keep track of how many rows we accumulate for the insert+delete database # transaction and cap it as soon as it is >= max_rows. Because we will # archive all child rows of a parent row along with the parent at the same # time, we end up with extra rows to archive in addition to len(records). num_rows_in_batch = 0 # The sequence of query statements we will execute in a batch. These are # ordered: [child1, child1, parent1, child2, child2, child2, parent2, ...] # Parent + child ""trees"" are kept together to avoid FK constraint # violations. statements_in_batch = [] # The list of records in the batch. This is used for collecting deleted # instance UUIDs in the case of the 'instances' table. records_in_batch = [] # (melwitt): We will gather rows related by foreign key relationship for # each deleted row, one at a time. We do it this way to keep track of and # limit the total number of rows that will be archived in a single database # transaction. In a large scale database with potentially hundreds of # thousands of deleted rows, if we don't limit the size of the transaction # based on max_rows, we can get into a situation where we get stuck not # able to make much progress. The value of max_rows has to be 1) small # enough to not exceed the database's max packet size limit or timeout with # a deadlock but 2) large enough to make progress in an environment with a # constant high volume of create and delete traffic. By archiving each # parent + child rows tree one at a time, we can ensure meaningful progress # can be made while allowing the caller to predictably control the size of # the database transaction with max_rows. for record in records: metadata, conn, table, column, [record]) statements_in_batch.extend(fk_inserts + fk_deletes) # statement to add parent row to shadow table insert = shadow_table.insert(inline=True).\ from_select(columns, sql.select([table], column.in_([record]))) statements_in_batch.append(insert) # statement to remove parent row from main table delete = table.delete().where(column.in_([record])) statements_in_batch.append(delete) records_in_batch.append(record) # Check whether were have a full batch >= max_rows. Rows are counted as # the number of rows that will be moved in the database transaction. # So each insert+delete pair represents one row that will be moved. # 1 parent + its fks num_rows_in_batch += 1 + len(fk_inserts) if max_rows is not None and num_rows_in_batch >= max_rows: break # NOTE(tssurya): In order to facilitate the deletion of records from # instance_mappings, request_specs and instance_group_member tables in the # nova_api DB, the rows of deleted instances from the instances table are # stored prior to their deletion. Basically the uuids of the archived # instances are queried and returned. if tablename == ""instances"": query_select = sql.select( [table.c.uuid], table.c.id.in_(records_in_batch)) rows = conn.execute(query_select).fetchall() # deleted_instance_uuids = ['uuid1', 'uuid2', ...] deleted_instance_uuids = [r[0] for r in rows] try: # Group the insert and delete in a transaction. with conn.begin(): for statement in statements_in_batch: result = conn.execute(statement) result_tablename = statement.table.name # Add to archived row counts if not a shadow table. if not result_tablename.startswith(_SHADOW_TABLE_PREFIX): if result_tablename == tablename: # Number of tablename (parent) rows archived. rows_archived += result.rowcount else: # Number(s) of child rows archived. extras[result_tablename] += result.rowcount except db_exc.DBReferenceError as ex: # A foreign key constraint keeps us from deleting some of these rows # until we clean up a dependent table. Just skip this table for now; # we'll come back to it later. LOG.warning(""IntegrityError detected when archiving table "" ""%(tablename)s: %(error)s"", {'tablename': tablename, 'error': six.text_type(ex)})"," # {tablename: extra_rows_archived} if records: insert = shadow_table.insert(inline=True).\ from_select(columns, sql.select([table], column.in_(records))) delete = table.delete().where(column.in_(records)) metadata, conn, table, column, records) # NOTE(tssurya): In order to facilitate the deletion of records from # instance_mappings, request_specs and instance_group_member tables in # the nova_api DB, the rows of deleted instances from the instances # table are stored prior to their deletion. Basically the uuids of the # archived instances are queried and returned. if tablename == ""instances"": query_select = sql.select([table.c.uuid], table.c.id.in_(records)) rows = conn.execute(query_select).fetchall() deleted_instance_uuids = [r[0] for r in rows] try: # Group the insert and delete in a transaction. with conn.begin(): for fk_insert in fk_inserts: conn.execute(fk_insert) for fk_delete in fk_deletes: result_fk_delete = conn.execute(fk_delete) extras[fk_delete.table.name] += result_fk_delete.rowcount conn.execute(insert) result_delete = conn.execute(delete) rows_archived += result_delete.rowcount except db_exc.DBReferenceError as ex: # A foreign key constraint keeps us from deleting some of # these rows until we clean up a dependent table. Just # skip this table for now; we'll come back to it later. LOG.warning(""IntegrityError detected when archiving table "" ""%(tablename)s: %(error)s"", {'tablename': tablename, 'error': six.text_type(ex)})",200,43
openstack%2Fnova~888203,openstack/nova,stable/victoria,Icc9b6366aebba2f8468e2127da7b7e099098513a,Reproducer for bug 2003991 unshelving offloaded instance,ABANDONED,2023-07-12 02:38:48.000000000,2024-03-05 18:56:23.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-12 02:38:48.000000000', 'files': ['nova/tests/functional/test_servers.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/c0f06628eb883aa6d213cc9b57ffb8f5b3a64372', 'message': 'Reproducer for bug 2003991 unshelving offloaded instance\n\nThis adds test coverage for:\n\n  * Shelve/unshelve offloaded with legacy quota usage\n  * Shelve/unshelve offloaded with quota usage from placement\n  * Shelve/unshelve with legacy quota usage\n  * Shelve/unshelve with quota usage from placement\n\nRelated-Bug: #2003991\n\nChange-Id: Icc9b6366aebba2f8468e2127da7b7e099098513a\n(cherry picked from commit 427b2cb4d61cdfaf18b2467eb50b3772dffd3def)\n(cherry picked from commit 004a773a3a286f39889519bb5b2009fb9bf44fb1)\n(cherry picked from commit 710116f4beadb1553c9ad7991ea69b0e286657d6)\n(cherry picked from commit 291c02a7d51585551266fe5b7e7afd9726317671)\n(cherry picked from commit dc2d308118a126e087431d5c7810e1f958cbe895)\n(cherry picked from commit 1d91e71e74b57b0f2f108faeb522244a03540485)\n'}]",0,888203,c0f06628eb883aa6d213cc9b57ffb8f5b3a64372,3,1,1,4690,,,0,"Reproducer for bug 2003991 unshelving offloaded instance

This adds test coverage for:

  * Shelve/unshelve offloaded with legacy quota usage
  * Shelve/unshelve offloaded with quota usage from placement
  * Shelve/unshelve with legacy quota usage
  * Shelve/unshelve with quota usage from placement

Related-Bug: #2003991

Change-Id: Icc9b6366aebba2f8468e2127da7b7e099098513a
(cherry picked from commit 427b2cb4d61cdfaf18b2467eb50b3772dffd3def)
(cherry picked from commit 004a773a3a286f39889519bb5b2009fb9bf44fb1)
(cherry picked from commit 710116f4beadb1553c9ad7991ea69b0e286657d6)
(cherry picked from commit 291c02a7d51585551266fe5b7e7afd9726317671)
(cherry picked from commit dc2d308118a126e087431d5c7810e1f958cbe895)
(cherry picked from commit 1d91e71e74b57b0f2f108faeb522244a03540485)
",git fetch https://review.opendev.org/openstack/nova refs/changes/03/888203/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/tests/functional/test_servers.py'],1,c0f06628eb883aa6d213cc9b57ffb8f5b3a64372,bug/2003991," def test_unshelve_offloaded_overquota(self): # Use a quota limit of 3 vcpus. self.flags(cores=3, group='quota') # Use flavor that has vcpus = 1. for i in range(0, 3): server = self._create_server(flavor_id=1) # We should be at the quota limit now. Shelve an instance and wait for # it to become SHELVED_OFFLOADED. self._shelve_server(server, expected_state='SHELVED_OFFLOADED') # Try to boot another instance. It should fail because shelved # offloaded instances still consume quota. ex = self.assertRaises(client.OpenStackApiException, self._create_server, flavor_id=1) self.assertEqual(403, ex.response.status_code) # Unshelving the instance should also succeed. self._unshelve_server(server) def _test_unshelve_offloaded_overquota_placement(self): # Use flavor that has vcpus = 1. for i in range(0, 3): server = self._create_server(flavor_id=1) # We should be at the quota limit now. Shelve an instance and wait for # it to become SHELVED_OFFLOADED. self._shelve_server(server, expected_state='SHELVED_OFFLOADED') # Try to boot another instance. It should succeed because with # placement, shelved offloaded instances do not consume cores/ram # quota. self._create_server(flavor_id=1) # FIXME(melwitt): This is bug #2003991, the unshelve is supposed to # fail if we would be over quota after unshelving. # Now try to unshelve the earlier instance. It should fail because it # would put us over quota to have 4 running instances. # ex = self.assertRaises(client.OpenStackApiException, # self._unshelve_server, # server) # self.assertEqual(403, ex.response.status_code) self._unshelve_server(server) def test_unshelve_offloaded_overquota_placement(self): # Count quota usage from placement. self.flags(count_usage_from_placement=True, group='quota') # Use a quota limit of 3 vcpus. self.flags(cores=3, group='quota') self._test_unshelve_offloaded_overquota_placement() def test_unshelve_overquota(self): # Test for behavior where the shelved instance is not offloaded. self.flags(shelved_offload_time=3600) # Use a quota limit of 3 vcpus. self.flags(cores=3, group='quota') # Use flavor that has vcpus = 1. for i in range(0, 3): server = self._create_server(flavor_id=1) # We should be at the quota limit now. Shelve an instance. self._shelve_server(server, expected_state='SHELVED') # Try to boot another instance. It should fail because shelved # instances still consume quota. ex = self.assertRaises(client.OpenStackApiException, self._create_server, flavor_id=1) self.assertEqual(403, ex.response.status_code) # Verify that it's still SHELVED. self._wait_for_state_change(server, 'SHELVED') # Unshelving the instance should also succeed. self._unshelve_server(server) def test_unshelve_overquota_placement(self): # Count quota usage from placement, should behave the same as legacy. self.flags(count_usage_from_placement=True, group='quota') self.test_unshelve_overquota() ",,84,0
openstack%2Fnova~888204,openstack/nova,stable/victoria,I4ab97626c10052c7af9934a80ff8db9ddab82738,Enforce quota usage from placement when unshelving,ABANDONED,2023-07-12 02:38:48.000000000,2024-03-05 18:56:19.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-07-12 02:38:48.000000000', 'files': ['releasenotes/notes/quota-unshelve-offloaded-e4ea2d6a1449f549.yaml', 'nova/api/openstack/compute/shelve.py', 'nova/tests/unit/conductor/test_conductor.py', 'nova/conductor/manager.py', 'nova/tests/functional/test_servers.py', 'nova/compute/api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/da5e34e33d8ad0f85da1dd83c0e020efb6fc3978', 'message': 'Enforce quota usage from placement when unshelving\n\nWhen [quota]count_usage_from_placement = true or\n[quota]driver = nova.quota.UnifiedLimitsDriver, cores and ram quota\nusage are counted from placement. When an instance is SHELVED_OFFLOADED,\nit will not have allocations in placement, so its cores and ram should\nnot count against quota during that time.\n\nThis means however that when an instance is unshelved, there is a\npossibility of going over quota if the cores and ram it needs were\nallocated by some other instance(s) while it was SHELVED_OFFLOADED.\n\nThis fixes a bug where quota was not being properly enforced during\nunshelve of a SHELVED_OFFLOADED instance when quota usage is counted\nfrom placement. Test coverage is also added for the ""recheck"" quota\ncases.\n\nCloses-Bug: #2003991\n\nChange-Id: I4ab97626c10052c7af9934a80ff8db9ddab82738\n(cherry picked from commit 6f79d6321e7c3edaab2eb911198b7b7f851371b3)\n(cherry picked from commit c67e69c0e35d837fcefd7e4ea010a956569c3a55)\n(cherry picked from commit 490d5de6bb9ef3123cbbcea50e08ad0ad2edcbbe)\n(cherry picked from commit da4b7d1e70486402635a009724b263981cd22861)\n(cherry picked from commit 746bc7222276a8c6bb4f0f9317802e332d25b756)\n(cherry picked from commit c13c26f88edea2d762aef97013662859496dd3e6)\n'}]",0,888204,da5e34e33d8ad0f85da1dd83c0e020efb6fc3978,3,1,1,4690,,,0,"Enforce quota usage from placement when unshelving

When [quota]count_usage_from_placement = true or
[quota]driver = nova.quota.UnifiedLimitsDriver, cores and ram quota
usage are counted from placement. When an instance is SHELVED_OFFLOADED,
it will not have allocations in placement, so its cores and ram should
not count against quota during that time.

This means however that when an instance is unshelved, there is a
possibility of going over quota if the cores and ram it needs were
allocated by some other instance(s) while it was SHELVED_OFFLOADED.

This fixes a bug where quota was not being properly enforced during
unshelve of a SHELVED_OFFLOADED instance when quota usage is counted
from placement. Test coverage is also added for the ""recheck"" quota
cases.

Closes-Bug: #2003991

Change-Id: I4ab97626c10052c7af9934a80ff8db9ddab82738
(cherry picked from commit 6f79d6321e7c3edaab2eb911198b7b7f851371b3)
(cherry picked from commit c67e69c0e35d837fcefd7e4ea010a956569c3a55)
(cherry picked from commit 490d5de6bb9ef3123cbbcea50e08ad0ad2edcbbe)
(cherry picked from commit da4b7d1e70486402635a009724b263981cd22861)
(cherry picked from commit 746bc7222276a8c6bb4f0f9317802e332d25b756)
(cherry picked from commit c13c26f88edea2d762aef97013662859496dd3e6)
",git fetch https://review.opendev.org/openstack/nova refs/changes/04/888204/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/quota-unshelve-offloaded-e4ea2d6a1449f549.yaml', 'nova/api/openstack/compute/shelve.py', 'nova/tests/unit/conductor/test_conductor.py', 'nova/conductor/manager.py', 'nova/tests/functional/test_servers.py', 'nova/compute/api.py']",6,da5e34e33d8ad0f85da1dd83c0e020efb6fc3978,bug/2003991," @staticmethod def _check_quota_unshelve_offloaded( context: nova_context.RequestContext, instance: 'objects.Instance', request_spec: 'objects.RequestSpec' ): if not CONF.quota.count_usage_from_placement: return # TODO(melwitt): This is ugly but we have to do it this way because # instances quota is currently counted from the API database but cores # and ram are counted from placement. That means while an instance is # SHELVED_OFFLOADED, it will still consume instances quota but it will # not consume cores and ram. So we need an instances delta of # 0 but cores and ram deltas from the flavor. # Once instances usage is also being counted from placement, we can # replace this method with a normal check_num_instances_quota() call. vcpus = instance.flavor.vcpus memory_mb = instance.flavor.memory_mb # We are not looking to create a new server, we are unshelving an # existing one. deltas = {'instances': 0, 'cores': vcpus, 'ram': memory_mb} objects.Quotas.check_deltas( context, deltas, context.project_id, user_id=context.user_id, check_project_id=instance.project_id, check_user_id=instance.user_id, ) # Check quota before we save any changes to the database, but only if # we are counting quota usage from placement. When an instance is # SHELVED_OFFLOADED, it will not consume cores or ram resources in # placement. This means it is possible that an unshelve would cause the # project/user to go over quota. if instance.vm_state == vm_states.SHELVED_OFFLOADED: self._check_quota_unshelve_offloaded( context, instance, request_spec) ",,214,22
openstack%2Fnova~879705,openstack/nova,stable/victoria,Ib775c2210349b72b3dc033554ac6d8b35b8d2d79,Don't provide MTU value in metadata service if DHCP is enabled,ABANDONED,2023-04-06 13:52:52.000000000,2024-03-05 18:56:16.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-04-06 13:52:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/22ac7fdf05aac0c595d94e6e374449308ab1d336', 'message': 'Don\'t provide MTU value in metadata service if DHCP is enabled\n\nFor networks with subnets with enabled DHCP service don\'t provide\nmtu value in the metadata. That way cloud-init will not configure it\n""statically"" in e.g. netplan\'s config file and guest OS will use MTU\nvalue provided by the DHCP service.\n\n\nCloses-Bug: #1899487\nChange-Id: Ib775c2210349b72b3dc033554ac6d8b35b8d2d79\n(cherry picked from commit 6bdc79af30151f683c0f462bc6c69da30ebcbcf9)\n'}, {'number': 2, 'created': '2023-08-29 15:03:19.000000000', 'files': ['releasenotes/notes/Do-not-send-mtu-value-in-metadata-for-networks-with-enabled-dhcp-641506f2a13b540f.yaml', 'nova/tests/unit/virt/test_netutils.py', 'nova/virt/netutils.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/fb3eea22405fa50874a46b039a133d70df36be76', 'message': 'Don\'t provide MTU value in metadata service if DHCP is enabled\n\nFor networks with subnets with enabled DHCP service don\'t provide\nmtu value in the metadata. That way cloud-init will not configure it\n""statically"" in e.g. netplan\'s config file and guest OS will use MTU\nvalue provided by the DHCP service.\n\nCloses-Bug: #1899487\nChange-Id: Ib775c2210349b72b3dc033554ac6d8b35b8d2d79\n(cherry picked from commit 6bdc79af30151f683c0f462bc6c69da30ebcbcf9)\n(cherry picked from commit ec15df83d2d8eb9744438c7129f64a00e5c5694e)\n(cherry picked from commit 0aac193fe3f427eb5ca32e70df77dadaebd55bb9)\n(cherry picked from commit ebae52aefcc9d5c4882668ce1375e940ce46a675)\n(cherry picked from commit 9f49bd1142a9e0e7351490556b9d97fc34ea70d1)\n'}]",3,879705,fb3eea22405fa50874a46b039a133d70df36be76,16,1,2,16207,,,0,"Don't provide MTU value in metadata service if DHCP is enabled

For networks with subnets with enabled DHCP service don't provide
mtu value in the metadata. That way cloud-init will not configure it
""statically"" in e.g. netplan's config file and guest OS will use MTU
value provided by the DHCP service.

Closes-Bug: #1899487
Change-Id: Ib775c2210349b72b3dc033554ac6d8b35b8d2d79
(cherry picked from commit 6bdc79af30151f683c0f462bc6c69da30ebcbcf9)
(cherry picked from commit ec15df83d2d8eb9744438c7129f64a00e5c5694e)
(cherry picked from commit 0aac193fe3f427eb5ca32e70df77dadaebd55bb9)
(cherry picked from commit ebae52aefcc9d5c4882668ce1375e940ce46a675)
(cherry picked from commit 9f49bd1142a9e0e7351490556b9d97fc34ea70d1)
",git fetch https://review.opendev.org/openstack/nova refs/changes/05/879705/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/Do-not-send-mtu-value-in-metadata-for-networks-with-enabled-dhcp-641506f2a13b540f.yaml', 'nova/tests/unit/virt/test_netutils.py', 'nova/virt/netutils.py']",3,22ac7fdf05aac0c595d94e6e374449308ab1d336,bug/1899487," 'mtu': _get_link_mtu(vif),def _get_link_mtu(vif): for subnet in vif['network']['subnets']: if subnet['meta'].get('dhcp_server'): return None return vif['network']['meta'].get('mtu') "," 'mtu': vif['network']['meta'].get('mtu'),",36,1
openstack%2Fnova~837321,openstack/nova,stable/victoria,Ia593b500425c81e54eb401e38264db5cc5fc1f93,libvirt: Abort live-migration job when monitoring fails,ABANDONED,2022-04-11 19:24:11.000000000,2024-03-05 18:56:12.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2022-04-11 19:24:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/59d000202af5eb23270454547b7fb18c318b1172', 'message': 'libvirt: Abort live-migration job when monitoring fails\n\nDuring live migration process, a _live_migration_monitor thread\nchecks progress of migration on source host, if for any reason\nwe hit infrastructure issue involving a DB/RPC/libvirt-timeout\nfailure, an Exception is raised to the nova-compute service and\ninstance/migration is set to ERROR state.\n\nThe issue is that we may let live-migration job running out of nova\ncontrol. At the end of job, guest is resumed on target host while\nnova still reports it on source host, this may lead to a split-brain\nsituation if instance is restarted.\n\nThis change proposes to abort live-migration job if issue occurs\nduring _live_migration_monitor.\n\nChange-Id: Ia593b500425c81e54eb401e38264db5cc5fc1f93\nCloses-Bug: #1905944\n(cherry picked from commit 39f0af5d18d6bea34fa15b8f7778115b25432749)\n'}, {'number': 2, 'created': '2023-10-03 15:56:21.000000000', 'files': ['nova/virt/libvirt/driver.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/4772b112531560b5f8446944d64c6682dff4b357', 'message': 'libvirt: Abort live-migration job when monitoring fails\n\nDuring live migration process, a _live_migration_monitor thread\nchecks progress of migration on source host, if for any reason\nwe hit infrastructure issue involving a DB/RPC/libvirt-timeout\nfailure, an Exception is raised to the nova-compute service and\ninstance/migration is set to ERROR state.\n\nThe issue is that we may let live-migration job running out of nova\ncontrol. At the end of job, guest is resumed on target host while\nnova still reports it on source host, this may lead to a split-brain\nsituation if instance is restarted.\n\nThis change proposes to abort live-migration job if issue occurs\nduring _live_migration_monitor.\n\nChange-Id: Ia593b500425c81e54eb401e38264db5cc5fc1f93\nCloses-Bug: #1905944\n(cherry picked from commit 39f0af5d18d6bea34fa15b8f7778115b25432749)\n(cherry picked from commit 76ea8ee37707e0e2160d30cdb5c74d1fcad60de3)\n'}]",2,837321,4772b112531560b5f8446944d64c6682dff4b357,12,2,2,7130,,,0,"libvirt: Abort live-migration job when monitoring fails

During live migration process, a _live_migration_monitor thread
checks progress of migration on source host, if for any reason
we hit infrastructure issue involving a DB/RPC/libvirt-timeout
failure, an Exception is raised to the nova-compute service and
instance/migration is set to ERROR state.

The issue is that we may let live-migration job running out of nova
control. At the end of job, guest is resumed on target host while
nova still reports it on source host, this may lead to a split-brain
situation if instance is restarted.

This change proposes to abort live-migration job if issue occurs
during _live_migration_monitor.

Change-Id: Ia593b500425c81e54eb401e38264db5cc5fc1f93
Closes-Bug: #1905944
(cherry picked from commit 39f0af5d18d6bea34fa15b8f7778115b25432749)
(cherry picked from commit 76ea8ee37707e0e2160d30cdb5c74d1fcad60de3)
",git fetch https://review.opendev.org/openstack/nova refs/changes/21/837321/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",2,59d000202af5eb23270454547b7fb18c318b1172,bug/1905944," @mock.patch.object(libvirt_driver.LibvirtDriver, ""live_migration_abort"") def _test_live_migration_main(self, mock_abort, mock_copy_disk_path, mock_running, mock_guest, mock_monitor, mock_thread, mock_conn, mon_side_effect=None): mock_monitor.side_effect = mon_side_effect if mon_side_effect: self.assertRaises(mon_side_effect, drvr._live_migration, self.context, instance, ""fakehost"", fake_post, fake_recover, True, migrate_data) mock_abort.assert_called_once_with(instance) else: drvr._live_migration(self.context, instance, ""fakehost"", fake_post, fake_recover, True, migrate_data) def test_live_migration_main(self): self._test_live_migration_main() def test_live_migration_main_monitoring_failed(self): self._test_live_migration_main(mon_side_effect=Exception) "," def test_live_migration_main(self, mock_copy_disk_path, mock_running, mock_guest, mock_monitor, mock_thread, mock_conn): drvr._live_migration(self.context, instance, ""fakehost"", fake_post, fake_recover, True, migrate_data)",33,6
openstack%2Fnova~885349,openstack/nova,stable/victoria,I2ba035c09ace20e9835d9d12a5c5bee17d616718,Fix failed count for anti-affinity check,ABANDONED,2023-06-06 09:08:05.000000000,2024-03-05 18:56:08.000000000,,"[{'_account_id': 7166}, {'_account_id': 11604}, {'_account_id': 20733}, {'_account_id': 22348}, {'_account_id': 34860}, {'_account_id': 34951}]","[{'number': 1, 'created': '2023-06-06 09:08:05.000000000', 'files': ['nova/tests/functional/test_server_group.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'nova/exception.py', 'nova/compute/manager.py', 'nova/compute/build_results.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/3853ccc5fdf2abaabe9a5810af3343f5c86790e6', 'message': 'Fix failed count for anti-affinity check\n\nThe late anti-affinity check runs in the compute manager to avoid\nparallel scheduling requests to invalidate the anti-affinity server\ngroup policy. When the check fails the instance is re-scheduled.\nHowever this failure counted as a real instance boot failure of the\ncompute host and can lead to de-prioritization of the compute host\nin the scheduler via BuildFailureWeigher. As the late anti-affinity\ncheck does not indicate any fault of the compute host itself it\nshould not be counted towards the build failure counter.\nThis patch adds new build results to handle this case.\n\nCloses-Bug: #1996732\nChange-Id: I2ba035c09ace20e9835d9d12a5c5bee17d616718\nSigned-off-by: Yusuke Okada <okada.yusuke@fujitsu.com>\n(cherry picked from commit 56d320a203a13f262a2e94e491af222032e453d3)\n(cherry picked from commit 1b56714e9119ab4152e6f33985a499b2d83a491b)\n(cherry picked from commit 2f1d65774fbcf5c25c4ba53583b6a802a03f4c4d)\n(cherry picked from commit cd0403dd3b1099bd13da503500a50249db8e49ea)\n(cherry picked from commit 87488180e5633db5ef8d684684a4355de48ef428)\n(cherry picked from commit e48fb15aaa462813fe9334a83bc76b43eb465fbd)\n'}]",2,885349,3853ccc5fdf2abaabe9a5810af3343f5c86790e6,9,6,1,9708,,,0,"Fix failed count for anti-affinity check

The late anti-affinity check runs in the compute manager to avoid
parallel scheduling requests to invalidate the anti-affinity server
group policy. When the check fails the instance is re-scheduled.
However this failure counted as a real instance boot failure of the
compute host and can lead to de-prioritization of the compute host
in the scheduler via BuildFailureWeigher. As the late anti-affinity
check does not indicate any fault of the compute host itself it
should not be counted towards the build failure counter.
This patch adds new build results to handle this case.

Closes-Bug: #1996732
Change-Id: I2ba035c09ace20e9835d9d12a5c5bee17d616718
Signed-off-by: Yusuke Okada <okada.yusuke@fujitsu.com>
(cherry picked from commit 56d320a203a13f262a2e94e491af222032e453d3)
(cherry picked from commit 1b56714e9119ab4152e6f33985a499b2d83a491b)
(cherry picked from commit 2f1d65774fbcf5c25c4ba53583b6a802a03f4c4d)
(cherry picked from commit cd0403dd3b1099bd13da503500a50249db8e49ea)
(cherry picked from commit 87488180e5633db5ef8d684684a4355de48ef428)
(cherry picked from commit e48fb15aaa462813fe9334a83bc76b43eb465fbd)
",git fetch https://review.opendev.org/openstack/nova refs/changes/49/885349/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/functional/test_server_group.py', 'nova/tests/unit/compute/test_compute_mgr.py', 'nova/exception.py', 'nova/compute/manager.py', 'nova/compute/build_results.py']",5,3853ccc5fdf2abaabe9a5810af3343f5c86790e6,bug/1996732,"# Instance failed by policy violation (such as affinity or anti-affinity) # and was not rescheduled. In this case, the node's failed count won't be # increased. FAILED_BY_POLICY = 'failed_by_policy' # Instance failed by policy violation (such as affinity or anti-affinity) # but was rescheduled. In this case, the node's failed count won't be # increased. RESCHEDULED_BY_POLICY = 'rescheduled_by_policy'",,265,14
openstack%2Fnova~821980,openstack/nova,stable/victoria,I083929f36d9e78bf7713a87cae6d581e0d946867,Reattach mdevs to guest on resume,ABANDONED,2021-12-16 14:04:21.000000000,2024-03-05 18:56:04.000000000,,"[{'_account_id': 6062}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-12-16 14:04:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/39c51e57488abe9819e3940fe636f489d78c34ed', 'message': 'Reattach mdevs to guest on resume\n\nWhen suspending a VM in OpenStack, Nova detaches all the mediated\ndevices from the guest machine, but does not reattach them on the resume\noperation. This patch makes Nova reattach the mdevs that were detached\nwhen the guest was suspended.\n\nThis behavior is due to libvirt not supporting the hot-unplug of\nmediated devices at the time the feature was being developed. The\nlimitation has been lifted since then, and now we have to amend the\nresume function so it will reattach the mediated devices that were\ndetached on suspension.\n\nCloses-bug: #1948705\n\nSigned-off-by: Gustavo Santos <gustavofaganello.santos@windriver.com>\nChange-Id: I083929f36d9e78bf7713a87cae6d581e0d946867\n(cherry picked from commit 16f7c601b63bd1e7ca13917261300a7064ec72bc)\n'}, {'number': 2, 'created': '2022-01-26 18:05:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/4c23c52191463f7db3de8e724a86fa7a1d6eaf99', 'message': 'Reattach mdevs to guest on resume\n\nWhen suspending a VM in OpenStack, Nova detaches all the mediated\ndevices from the guest machine, but does not reattach them on the resume\noperation. This patch makes Nova reattach the mdevs that were detached\nwhen the guest was suspended.\n\nThis behavior is due to libvirt not supporting the hot-unplug of\nmediated devices at the time the feature was being developed. The\nlimitation has been lifted since then, and now we have to amend the\nresume function so it will reattach the mediated devices that were\ndetached on suspension.\n\nCloses-bug: #1948705\n\nSigned-off-by: Gustavo Santos <gustavofaganello.santos@windriver.com>\nChange-Id: I083929f36d9e78bf7713a87cae6d581e0d946867\n(cherry picked from commit 16f7c601b63bd1e7ca13917261300a7064ec72bc)\n'}, {'number': 3, 'created': '2023-04-05 15:55:23.000000000', 'files': ['nova/virt/libvirt/driver.py', 'releasenotes/notes/bug-1948705-ff80ae392c525475.yaml', 'doc/source/admin/virtual-gpu.rst', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/d72db209f295294d5492a5ebd2ae6a3395774075', 'message': 'Reattach mdevs to guest on resume\n\nWhen suspending a VM in OpenStack, Nova detaches all the mediated\ndevices from the guest machine, but does not reattach them on the resume\noperation. This patch makes Nova reattach the mdevs that were detached\nwhen the guest was suspended.\n\nThis behavior is due to libvirt not supporting the hot-unplug of\nmediated devices at the time the feature was being developed. The\nlimitation has been lifted since then, and now we have to amend the\nresume function so it will reattach the mediated devices that were\ndetached on suspension.\n\nCloses-bug: #1948705\n\nSigned-off-by: Gustavo Santos <gustavofaganello.santos@windriver.com>\nChange-Id: I083929f36d9e78bf7713a87cae6d581e0d946867\n(cherry picked from commit 16f7c601b63bd1e7ca13917261300a7064ec72bc)\n'}]",5,821980,d72db209f295294d5492a5ebd2ae6a3395774075,29,2,3,33006,,,0,"Reattach mdevs to guest on resume

When suspending a VM in OpenStack, Nova detaches all the mediated
devices from the guest machine, but does not reattach them on the resume
operation. This patch makes Nova reattach the mdevs that were detached
when the guest was suspended.

This behavior is due to libvirt not supporting the hot-unplug of
mediated devices at the time the feature was being developed. The
limitation has been lifted since then, and now we have to amend the
resume function so it will reattach the mediated devices that were
detached on suspension.

Closes-bug: #1948705

Signed-off-by: Gustavo Santos <gustavofaganello.santos@windriver.com>
Change-Id: I083929f36d9e78bf7713a87cae6d581e0d946867
(cherry picked from commit 16f7c601b63bd1e7ca13917261300a7064ec72bc)
",git fetch https://review.opendev.org/openstack/nova refs/changes/80/821980/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'releasenotes/notes/bug-1948705-ff80ae392c525475.yaml', 'doc/source/admin/virtual-gpu.rst', 'nova/tests/unit/virt/libvirt/test_driver.py']",4,39c51e57488abe9819e3940fe636f489d78c34ed,bug/1948705," mock.patch.object(drvr, '_get_mdevs_from_guest_config', return_value='fake_mdevs'), mock.patch.object(drvr, '_attach_mediated_devices'), mock_sync_time, mock_wait, _get_mdevs_from_guest_config, _attach_mediated_devices): _attach_mediated_devices.assert_has_calls( [mock.call(guest, 'fake_mdevs')] ) @mock.patch.object(libvirt_guest.Guest, 'attach_device') def _test_attach_mediated_devices(self, side_effect, attach_device): dom_without_vgpu = ( """"""<domain> <devices> <disk type='file' device='disk'> <driver name='qemu' type='qcow2' cache='none'/> <source file='xxx'/> <target dev='vda' bus='virtio'/> <alias name='virtio-disk0'/> <address type='pci' domain='0x0000' bus='0x00' slot='0x04' function='0x0'/> </disk> </devices></domain>"""""") vgpu_xml = ( """"""<domain> <devices> <hostdev mode='subsystem' type='mdev' managed='no' model='vfio-pci'> <source> <address uuid='81db53c6-6659-42a0-a34c-1507fdc72983'/> </source> <alias name='hostdev0'/> <address type='pci' domain='0x0000' bus='0x00' slot='0x05' function='0x0'/> </hostdev> </devices></domain>"""""") attach_device.side_effect = side_effect drvr = libvirt_driver.LibvirtDriver(fake.FakeVirtAPI(), True) guest = libvirt_guest.Guest(FakeVirtDomain(fake_xml=dom_without_vgpu)) mdevs = drvr._get_mdevs_from_guest_config(vgpu_xml) drvr._attach_mediated_devices(guest, mdevs) return attach_device def test_attach_mediated_devices(self): def fake_attach_device(cfg_obj, **kwargs): self.assertIsInstance(cfg_obj, vconfig.LibvirtConfigGuestHostdevMDEV) attach_mock = self._test_attach_mediated_devices(fake_attach_device) attach_mock.assert_called_once_with(mock.ANY, live=True) def test_attach_mediated_devices_raises_exc(self): exc = test.TestingException() self.assertRaises(test.TestingException, self._test_attach_mediated_devices, exc) "," mock_sync_time, mock_wait):",107,7
openstack%2Fnova~827873,openstack/nova,stable/victoria,I812d720555bdf008c83cae3d81541a37bd99e594,Migrate RequestSpec.numa_topology to use pcpuset,ABANDONED,2022-02-04 14:37:12.000000000,2024-03-05 18:56:01.000000000,,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 32761}]","[{'number': 1, 'created': '2022-02-04 14:37:12.000000000', 'files': ['nova/objects/request_spec.py', 'nova/tests/unit/objects/test_request_spec.py', 'nova/objects/instance_numa.py', 'releasenotes/notes/bug-1952941-request-spec-numa-topology-migration-c97dbd51b3c6c116.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/0d98f7b9902dd2c22f32dccabe3e7c3e630a9614', 'message': 'Migrate RequestSpec.numa_topology to use pcpuset\n\nWhen the InstanceNUMATopology OVO has changed in\nI901fbd7df00e45196395ff4c69e7b8aa3359edf6 to separately track\npcpus from vcpus a data migration was added. This data migration is\ntriggered when the InstanceNUMATopology object is loaded from the\ninstance_extra table. However that patch is missed the fact that the\nInstanceNUMATopology object can be loaded from the request_spec table as\nwell. So InstanceNUMATopology object in RequestSpec are not migrated.\nThis could lead to errors in the scheduler when such RequestSpec object\nis used for scheduling (e.g. during a migration of a pre Victoria\ninstance with cpu pinning)\n\nThis patch adds the missing data migration.\n\nChange-Id: I812d720555bdf008c83cae3d81541a37bd99e594\nCloses-Bug: #1952941\n(cherry picked from commit e853bb57181721725a89656b3cb3058636630a6e)\n(cherry picked from commit 7f6ec8cf546cf8f437ee94bb2308447427f54ada)\n(cherry picked from commit dad566614c92841aba65d3f0a69e0c580457cb46)\n'}]",2,827873,0d98f7b9902dd2c22f32dccabe3e7c3e630a9614,8,3,1,9708,,,0,"Migrate RequestSpec.numa_topology to use pcpuset

When the InstanceNUMATopology OVO has changed in
I901fbd7df00e45196395ff4c69e7b8aa3359edf6 to separately track
pcpus from vcpus a data migration was added. This data migration is
triggered when the InstanceNUMATopology object is loaded from the
instance_extra table. However that patch is missed the fact that the
InstanceNUMATopology object can be loaded from the request_spec table as
well. So InstanceNUMATopology object in RequestSpec are not migrated.
This could lead to errors in the scheduler when such RequestSpec object
is used for scheduling (e.g. during a migration of a pre Victoria
instance with cpu pinning)

This patch adds the missing data migration.

Change-Id: I812d720555bdf008c83cae3d81541a37bd99e594
Closes-Bug: #1952941
(cherry picked from commit e853bb57181721725a89656b3cb3058636630a6e)
(cherry picked from commit 7f6ec8cf546cf8f437ee94bb2308447427f54ada)
(cherry picked from commit dad566614c92841aba65d3f0a69e0c580457cb46)
",git fetch https://review.opendev.org/openstack/nova refs/changes/73/827873/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/request_spec.py', 'nova/tests/unit/objects/test_request_spec.py', 'nova/objects/instance_numa.py', 'releasenotes/notes/bug-1952941-request-spec-numa-topology-migration-c97dbd51b3c6c116.yaml']",4,0d98f7b9902dd2c22f32dccabe3e7c3e630a9614,bug/1952941,--- fixes: - | The `bug 1952941`_ is fixed where a pre-Victoria server with pinned CPUs cannot be migrated or evacuated after the cloud is upgraded to Victoria or newer as the scheduling fails with ``NotImplementedError: Cannot load 'pcpuset'`` error. .. _bug 1952941: https://bugs.launchpad.net/nova/+bug/1952941 ,,47,42
openstack%2Fnova~884571,openstack/nova,stable/victoria,I3629b84d3255a8fe9d8a7cea8c6131d7c40899e8,Use force=True for os-brick disconnect during delete,ABANDONED,2023-05-28 12:17:00.000000000,2024-03-05 18:55:57.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-05-28 12:17:00.000000000', 'files': ['nova/virt/libvirt/volume/scaleio.py', 'doc/source/admin/configuration/index.rst', 'nova/tests/unit/virt/libvirt/volume/test_nvme.py', 'nova/virt/libvirt/volume/fibrechannel.py', 'doc/source/admin/configuration/cross-cell-resize.rst', 'nova/virt/libvirt/driver.py', 'doc/source/install/controller-install-obs.rst', 'nova/virt/libvirt/volume/quobyte.py', 'nova/virt/libvirt/volume/smbfs.py', 'doc/source/install/compute-install-ubuntu.rst', 'nova/tests/unit/virt/libvirt/volume/test_iscsi.py', 'nova/tests/unit/virt/libvirt/volume/test_net.py', 'nova/virt/libvirt/volume/storpool.py', 'nova/virt/libvirt/volume/nvme.py', 'doc/source/install/compute-install-rdo.rst', 'nova/tests/unit/virt/hyperv/test_vmops.py', 'doc/source/admin/migrate-instance-with-snapshot.rst', 'nova/cmd/status.py', 'nova/virt/libvirt/volume/fs.py', 'nova/tests/unit/virt/libvirt/volume/test_storpool.py', 'nova/tests/unit/virt/hyperv/test_volumeops.py', 'doc/source/admin/support-compute.rst', 'doc/source/install/controller-install-ubuntu.rst', 'nova/virt/hyperv/volumeops.py', 'nova/tests/unit/virt/libvirt/test_driver.py', 'nova/tests/unit/cmd/test_status.py', 'nova/virt/hyperv/vmops.py', 'nova/virt/libvirt/volume/iscsi.py', 'nova/virt/libvirt/volume/vzstorage.py', 'nova/virt/libvirt/volume/net.py', 'doc/source/admin/live-migration-usage.rst', 'nova/tests/unit/virt/libvirt/volume/test_scaleio.py', 'nova/tests/unit/virt/libvirt/volume/test_vzstorage.py', 'nova/tests/unit/virt/libvirt/volume/test_fibrechannel.py', 'nova/virt/libvirt/volume/volume.py', 'releasenotes/notes/service-user-token-421d067c16257782.yaml', 'doc/source/admin/configuration/service-user-token.rst', 'doc/source/install/controller-install-rdo.rst', 'doc/source/install/compute-install-obs.rst'], 'web_link': 'https://opendev.org/openstack/nova/commit/65bb187045610b2630d3e32485aeecf2ca6a102a', 'message': ""Use force=True for os-brick disconnect during delete\n\nThe 'force' parameter of os-brick's disconnect_volume() method allows\ncallers to ignore flushing errors and ensure that devices are being\nremoved from the host.\n\nWe should use force=True when we are going to delete an instance to\navoid leaving leftover devices connected to the compute host which\ncould then potentially be reused to map to volumes to an instance that\nshould not have access to those volumes.\n\nWe can use force=True even when disconnecting a volume that will not be\ndeleted on termination because os-brick will always attempt to flush\nand disconnect gracefully before forcefully removing devices.\n\nConflicts:\n  nova/cmd/status.py\n  nova/tests/unit/cmd/test_status.py\n  nova/tests/unit/virt/libvirt/test_driver.py\n\nNOTE(elod.illes): the conflicts in status.py and test_status.py come\nfrom patch Ic3ae48c57e61c4e45883fbae1328a448be025953, which was merged\nin stable/wallaby when it was master.\nThe conflicts in test_driver.py is caused by missing backport of\nI7f2b6330decb92e2838aa7cee47fb228f00f47da.\n\nCloses-Bug: #2004555\n\nChange-Id: I3629b84d3255a8fe9d8a7cea8c6131d7c40899e8\n(cherry picked from commit db455548a12beac1153ce04eca5e728d7b773901)\n(cherry picked from commit efb01985db88d6333897018174649b425feaa1b4)\n(cherry picked from commit 8b4b99149a35663fc11d7d163082747b1b210b4d)\n(cherry picked from commit 4d8efa2d196f72fdde33136a0b50c4ee8da3c941)\n(cherry picked from commit b574901500d936488cdedf9fda90c4d36eeddd97)\n(cherry picked from commit 5b4cb92aa8adab2bd3d7905e0b76eceab680ab28)\n""}]",7,884571,65bb187045610b2630d3e32485aeecf2ca6a102a,15,1,1,17685,,,0,"Use force=True for os-brick disconnect during delete

The 'force' parameter of os-brick's disconnect_volume() method allows
callers to ignore flushing errors and ensure that devices are being
removed from the host.

We should use force=True when we are going to delete an instance to
avoid leaving leftover devices connected to the compute host which
could then potentially be reused to map to volumes to an instance that
should not have access to those volumes.

We can use force=True even when disconnecting a volume that will not be
deleted on termination because os-brick will always attempt to flush
and disconnect gracefully before forcefully removing devices.

Conflicts:
  nova/cmd/status.py
  nova/tests/unit/cmd/test_status.py
  nova/tests/unit/virt/libvirt/test_driver.py

NOTE(elod.illes): the conflicts in status.py and test_status.py come
from patch Ic3ae48c57e61c4e45883fbae1328a448be025953, which was merged
in stable/wallaby when it was master.
The conflicts in test_driver.py is caused by missing backport of
I7f2b6330decb92e2838aa7cee47fb228f00f47da.

Closes-Bug: #2004555

Change-Id: I3629b84d3255a8fe9d8a7cea8c6131d7c40899e8
(cherry picked from commit db455548a12beac1153ce04eca5e728d7b773901)
(cherry picked from commit efb01985db88d6333897018174649b425feaa1b4)
(cherry picked from commit 8b4b99149a35663fc11d7d163082747b1b210b4d)
(cherry picked from commit 4d8efa2d196f72fdde33136a0b50c4ee8da3c941)
(cherry picked from commit b574901500d936488cdedf9fda90c4d36eeddd97)
(cherry picked from commit 5b4cb92aa8adab2bd3d7905e0b76eceab680ab28)
",git fetch https://review.opendev.org/openstack/nova refs/changes/71/884571/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/volume/scaleio.py', 'doc/source/admin/configuration/index.rst', 'nova/tests/unit/virt/libvirt/volume/test_nvme.py', 'nova/virt/libvirt/volume/fibrechannel.py', 'doc/source/admin/configuration/cross-cell-resize.rst', 'nova/virt/libvirt/driver.py', 'doc/source/install/controller-install-obs.rst', 'nova/virt/libvirt/volume/quobyte.py', 'nova/virt/libvirt/volume/smbfs.py', 'doc/source/install/compute-install-ubuntu.rst', 'nova/tests/unit/virt/libvirt/volume/test_iscsi.py', 'nova/tests/unit/virt/libvirt/volume/test_net.py', 'nova/virt/libvirt/volume/storpool.py', 'nova/virt/libvirt/volume/nvme.py', 'doc/source/install/compute-install-rdo.rst', 'nova/tests/unit/virt/hyperv/test_vmops.py', 'doc/source/admin/migrate-instance-with-snapshot.rst', 'nova/cmd/status.py', 'nova/virt/libvirt/volume/fs.py', 'nova/tests/unit/virt/libvirt/volume/test_storpool.py', 'nova/tests/unit/virt/hyperv/test_volumeops.py', 'doc/source/admin/support-compute.rst', 'doc/source/install/controller-install-ubuntu.rst', 'nova/virt/hyperv/volumeops.py', 'nova/tests/unit/virt/libvirt/test_driver.py', 'nova/tests/unit/cmd/test_status.py', 'nova/virt/hyperv/vmops.py', 'nova/virt/libvirt/volume/iscsi.py', 'nova/virt/libvirt/volume/vzstorage.py', 'nova/virt/libvirt/volume/net.py', 'doc/source/admin/live-migration-usage.rst', 'nova/tests/unit/virt/libvirt/volume/test_scaleio.py', 'nova/tests/unit/virt/libvirt/volume/test_vzstorage.py', 'nova/tests/unit/virt/libvirt/volume/test_fibrechannel.py', 'nova/virt/libvirt/volume/volume.py', 'releasenotes/notes/service-user-token-421d067c16257782.yaml', 'doc/source/admin/configuration/service-user-token.rst', 'doc/source/install/controller-install-rdo.rst', 'doc/source/install/compute-install-obs.rst']",39,65bb187045610b2630d3e32485aeecf2ca6a102a,bug/2004555," * In the ``[service_user]`` section, configure :ref:`service user tokens <service_user_token>`: .. path /etc/nova/nova.conf .. code-block:: ini [service_user] send_service_user_token = true auth_url = https://controller/identity auth_strategy = keystone auth_type = password project_domain_name = Default project_name = service user_domain_name = Default username = nova password = NOVA_PASS Replace ``NOVA_PASS`` with the password you chose for the ``nova`` user in the Identity service. ",,407,114
openstack%2Fnova~904083,openstack/nova,stable/victoria,I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7,Fixed an error when caching multiple images in aggregate,ABANDONED,2023-12-20 07:46:22.000000000,2024-03-05 18:55:54.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-12-20 07:46:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/59539e997d77eaae92a20e78237016ce461521d1', 'message': 'Fixed an error when caching multiple images in aggregate\n\nBecause in the process of judging whether the image id is Duplicate,there is only deduplication without sorting, so no duplicate image error is judged as duplicate and an error ""Duplicate images in request"" is reported.\n\nNow it is changed to sort after deduplication and then compare.\n\nTwo unit test cases were added to verify the fix\n\nRelated-Bug: #2034702\nChange-Id: I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7\n(cherry picked from commit aa500fbb31d2f7129c048460e57a3dff229cabc8)\n'}, {'number': 2, 'created': '2023-12-20 07:49:43.000000000', 'files': ['nova/tests/unit/api/openstack/compute/test_aggregates.py', 'nova/api/openstack/compute/aggregates.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/c9de882ac8eec94acaeb333cabd7698b909cfb22', 'message': 'Fixed an error when caching multiple images in aggregate\n\nBecause in the process of judging whether the image id is Duplicate,there is only deduplication without sorting, so no duplicate image error is judged as duplicate and an error ""Duplicate images in request"" is reported.\n\nNow it is changed to sort after deduplication and then compare.\n\nTwo unit test cases were added to verify the fix\n\nRelated-Bug: #2034702\nChange-Id: I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7\n(cherry picked from commit aa500fbb31d2f7129c048460e57a3dff229cabc8)\n'}]",0,904083,c9de882ac8eec94acaeb333cabd7698b909cfb22,4,1,2,36115,,,0,"Fixed an error when caching multiple images in aggregate

Because in the process of judging whether the image id is Duplicate,there is only deduplication without sorting, so no duplicate image error is judged as duplicate and an error ""Duplicate images in request"" is reported.

Now it is changed to sort after deduplication and then compare.

Two unit test cases were added to verify the fix

Related-Bug: #2034702
Change-Id: I300a3e29ba56584f4c99d534a6cf8ee7dc0ed4b7
(cherry picked from commit aa500fbb31d2f7129c048460e57a3dff229cabc8)
",git fetch https://review.opendev.org/openstack/nova refs/changes/83/904083/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/unit/api/openstack/compute/test_aggregates.py', 'nova/api/openstack/compute/aggregates.py']",2,59539e997d77eaae92a20e78237016ce461521d1,bug/2034702-stable/2023.2-stable/2023.1-stable/zed-stable/yoga-stable/xena-stable/wallaby-stable/victoria-stable/victoria, if sorted(image_ids) != sorted(list(set(image_ids))):, if image_ids != list(set(image_ids)):,26,1
openstack%2Fnova~875348,openstack/nova,stable/victoria,Ia738a0972b050f549f446c85171d3f33e60ada4f,Handle InstanceInvalidState exception,ABANDONED,2023-02-27 12:33:49.000000000,2024-03-05 18:55:50.000000000,,"[{'_account_id': 7166}, {'_account_id': 8864}, {'_account_id': 9708}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-02-27 12:33:49.000000000', 'files': ['nova/api/openstack/compute/remote_consoles.py', 'nova/tests/unit/api/openstack/compute/test_remote_consoles.py', 'nova/tests/functional/api_sample_tests/test_remote_consoles.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/6ccdf83fe90b9d48cf6cf35011b02ea19c5b8694', 'message': ""Handle InstanceInvalidState exception\n\nWhen instance task state is 'deleting' or 'migrating', then\nget_vnc_console throws 500 error, as InstanceInvalidState\nexception is not handled there.\n\nThis change handles InstanceInvalidState in api layer in\nget_vnc_console call.\n\nCloses-Bug: #1968618\nChange-Id: Ia738a0972b050f549f446c85171d3f33e60ada4f\n(cherry picked from commit ec40d5aee34e9428e2a19231fc3df4d23d75b779)\n(cherry picked from commit 71855163a944e437f9c48a5765f683b55a28c720)\n(cherry picked from commit 286aadf289ef1b001ba7816e20b8cd53ba7a8618)\n(cherry picked from commit bb696a3274f7891dc7def0a33ef9528f6df7b085)\n(cherry picked from commit 1c809f744ea7cde185bbd86041cb58a730be65b0)\n""}]",6,875348,6ccdf83fe90b9d48cf6cf35011b02ea19c5b8694,23,5,1,20733,,,0,"Handle InstanceInvalidState exception

When instance task state is 'deleting' or 'migrating', then
get_vnc_console throws 500 error, as InstanceInvalidState
exception is not handled there.

This change handles InstanceInvalidState in api layer in
get_vnc_console call.

Closes-Bug: #1968618
Change-Id: Ia738a0972b050f549f446c85171d3f33e60ada4f
(cherry picked from commit ec40d5aee34e9428e2a19231fc3df4d23d75b779)
(cherry picked from commit 71855163a944e437f9c48a5765f683b55a28c720)
(cherry picked from commit 286aadf289ef1b001ba7816e20b8cd53ba7a8618)
(cherry picked from commit bb696a3274f7891dc7def0a33ef9528f6df7b085)
(cherry picked from commit 1c809f744ea7cde185bbd86041cb58a730be65b0)
",git fetch https://review.opendev.org/openstack/nova refs/changes/48/875348/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/api/openstack/compute/remote_consoles.py', 'nova/tests/unit/api/openstack/compute/test_remote_consoles.py', 'nova/tests/functional/api_sample_tests/test_remote_consoles.py']",3,6ccdf83fe90b9d48cf6cf35011b02ea19c5b8694,lp_1968618,"from unittest import mock from nova.compute import api as compute from nova import exception @mock.patch.object(compute.API, 'get_vnc_console') def test_get_vnc_console_instance_invalid_state(self, mock_get_vnc_console): uuid = self._post_server() def fake_get_vnc_console(*args, **kwargs): raise exception.InstanceInvalidState( attr='fake_attr', state='fake_state', method='fake_method', instance_uuid=uuid) mock_get_vnc_console.side_effect = fake_get_vnc_console response = self._do_post('servers/%s/action' % uuid, 'get-vnc-console-post-req', {'action': 'os-getVNCConsole'}) self.assertEqual(409, response.status_code) ",,35,0
openstack%2Fnova~875347,openstack/nova,stable/victoria,Id4c8c5f3b32985ac7d3d7c833b82e0876f7367c1,Fix rescue volume-based instance,ABANDONED,2023-02-27 12:32:27.000000000,2024-03-05 18:55:46.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-02-27 12:32:27.000000000', 'files': ['releasenotes/notes/rescue-volume-based-instance-c6e3fba236d90be7.yaml', 'nova/tests/functional/test_server_rescue.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/f9586b8b849a24af0fe41d8f25b857d6757ca2a2', 'message': 'Fix rescue volume-based instance\n\nAs of now, when attempting to rescue a volume-based instance\nusing an image without the hw_rescue_device and/or hw_rescue_bus\nproperties set, the rescue api call fails (as non-stable rescue\nfor volume-based instances are not supported) leaving the instance\nin error state.\n\nThis change checks for hw_rescue_device/hw_rescue_bus image\nproperties before attempting to rescue and if the property\nis not set, then fail with proper error message, without changing\ninstance state.\n\nRelated-Bug: #1978958\nCloses-Bug: #1926601\nChange-Id: Id4c8c5f3b32985ac7d3d7c833b82e0876f7367c1\n(cherry picked from commit 6eed55bf55469f4ceaa7d4d4eb1be635e14bc73b)\n(cherry picked from commit d00a848a735f98b028f5930798ee69ef205c8e2e)\n(cherry picked from commit 4073aa51f79be54e2e6e8143666a7c1f9a00e03d)\n(cherry picked from commit c977027b1933e408c58508e883f6a799ffacc4cc)\n(cherry picked from commit 99164cb1401bcf29d0e00263bc8d09ec5291468e)\n'}]",5,875347,f9586b8b849a24af0fe41d8f25b857d6757ca2a2,19,1,1,20733,,,0,"Fix rescue volume-based instance

As of now, when attempting to rescue a volume-based instance
using an image without the hw_rescue_device and/or hw_rescue_bus
properties set, the rescue api call fails (as non-stable rescue
for volume-based instances are not supported) leaving the instance
in error state.

This change checks for hw_rescue_device/hw_rescue_bus image
properties before attempting to rescue and if the property
is not set, then fail with proper error message, without changing
instance state.

Related-Bug: #1978958
Closes-Bug: #1926601
Change-Id: Id4c8c5f3b32985ac7d3d7c833b82e0876f7367c1
(cherry picked from commit 6eed55bf55469f4ceaa7d4d4eb1be635e14bc73b)
(cherry picked from commit d00a848a735f98b028f5930798ee69ef205c8e2e)
(cherry picked from commit 4073aa51f79be54e2e6e8143666a7c1f9a00e03d)
(cherry picked from commit c977027b1933e408c58508e883f6a799ffacc4cc)
(cherry picked from commit 99164cb1401bcf29d0e00263bc8d09ec5291468e)
",git fetch https://review.opendev.org/openstack/nova refs/changes/47/875347/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/rescue-volume-based-instance-c6e3fba236d90be7.yaml', 'nova/tests/functional/test_server_rescue.py', 'nova/compute/api.py', 'nova/tests/unit/compute/test_api.py']",4,f9586b8b849a24af0fe41d8f25b857d6757ca2a2,lp_1978958," rescue_image_meta_obj = image_meta_obj.ImageMeta.from_dict({ 'properties': {'hw_rescue_device': 'disk', 'hw_rescue_bus': 'scsi'} }) @mock.patch('nova.objects.instance.Instance.image_meta') mock_get_cn, mock_image_meta): instance.image_meta = image_meta_obj.ImageMeta.from_dict({ 'properties': {'hw_rescue_device': 'disk', 'hw_rescue_bus': 'scsi'} }) @mock.patch('nova.objects.image_meta.ImageMeta.from_image_ref') @mock.patch('nova.objects.compute_node.ComputeNode' '.get_by_host_and_nodename') @mock.patch('nova.compute.utils.is_volume_backed_instance', return_value=True) @mock.patch('nova.objects.block_device.BlockDeviceMappingList' '.get_by_instance_uuid') def test_rescue_bfv_with_required_image_properties( self, mock_get_bdms, mock_is_volume_backed, mock_get_cn, mock_image_meta_obj_from_ref): instance = self._create_instance_obj() bdms = objects.BlockDeviceMappingList(objects=[ objects.BlockDeviceMapping( boot_index=0, image_id=uuids.image_id, source_type='image', destination_type='volume', volume_type=None, snapshot_id=None, volume_id=uuids.volume_id, volume_size=None)]) rescue_image_meta_obj = image_meta_obj.ImageMeta.from_dict({ 'properties': {'hw_rescue_device': 'disk', 'hw_rescue_bus': 'scsi'} }) with test.nested( mock.patch.object(self.compute_api.placementclient, 'get_provider_traits'), mock.patch.object(self.compute_api.volume_api, 'get'), mock.patch.object(self.compute_api.volume_api, 'check_attached'), mock.patch.object(instance, 'save'), mock.patch.object(self.compute_api, '_record_action_start'), mock.patch.object(self.compute_api.compute_rpcapi, 'rescue_instance') ) as ( mock_get_traits, mock_get_volume, mock_check_attached, mock_instance_save, mock_record_start, mock_rpcapi_rescue ): # Mock out the returned compute node, image_meta, bdms and volume mock_image_meta_obj_from_ref.return_value = rescue_image_meta_obj mock_get_bdms.return_value = bdms mock_get_volume.return_value = mock.sentinel.volume mock_get_cn.return_value = mock.Mock(uuid=uuids.cn) # Ensure the required trait is returned, allowing BFV rescue mock_trait_info = mock.Mock(traits=[ot.COMPUTE_RESCUE_BFV]) mock_get_traits.return_value = mock_trait_info # Try to rescue the instance self.compute_api.rescue(self.context, instance, rescue_image_ref=uuids.rescue_image_id, allow_bfv_rescue=True) # Assert all of the calls made in the compute API mock_get_bdms.assert_called_once_with(self.context, instance.uuid) mock_get_volume.assert_called_once_with( self.context, uuids.volume_id) mock_check_attached.assert_called_once_with( self.context, mock.sentinel.volume) mock_is_volume_backed.assert_called_once_with( self.context, instance, bdms) mock_get_cn.assert_called_once_with( self.context, instance.host, instance.node) mock_get_traits.assert_called_once_with(self.context, uuids.cn) mock_instance_save.assert_called_once_with( expected_task_state=[None]) mock_record_start.assert_called_once_with( self.context, instance, instance_actions.RESCUE) mock_rpcapi_rescue.assert_called_once_with( self.context, instance=instance, rescue_password=None, rescue_image_ref=uuids.rescue_image_id, clean_shutdown=True) # Assert that the instance task state as set in the compute API self.assertEqual(task_states.RESCUING, instance.task_state) @mock.patch('nova.objects.image_meta.ImageMeta.from_image_ref') @mock.patch('nova.compute.utils.is_volume_backed_instance', return_value=True) @mock.patch('nova.objects.block_device.BlockDeviceMappingList' '.get_by_instance_uuid') def test_rescue_bfv_without_required_image_properties( self, mock_get_bdms, mock_is_volume_backed, mock_image_meta_obj_from_ref): instance = self._create_instance_obj() bdms = objects.BlockDeviceMappingList(objects=[ objects.BlockDeviceMapping( boot_index=0, image_id=uuids.image_id, source_type='image', destination_type='volume', volume_type=None, snapshot_id=None, volume_id=uuids.volume_id, volume_size=None)]) rescue_image_meta_obj = image_meta_obj.ImageMeta.from_dict({ 'properties': {} }) with test.nested( mock.patch.object(self.compute_api.volume_api, 'get'), mock.patch.object(self.compute_api.volume_api, 'check_attached'), ) as ( mock_get_volume, mock_check_attached ): # Mock out the returned bdms, volume and image_meta mock_get_bdms.return_value = bdms mock_get_volume.return_value = mock.sentinel.volume mock_image_meta_obj_from_ref.return_value = rescue_image_meta_obj # Assert that any attempt to rescue a bfv instance on a compute # node that does not report the COMPUTE_RESCUE_BFV trait fails and # raises InstanceNotRescuable self.assertRaises(exception.InstanceNotRescuable, self.compute_api.rescue, self.context, instance, rescue_image_ref=None, allow_bfv_rescue=True) # Assert the calls made in the compute API prior to the failure mock_get_bdms.assert_called_once_with(self.context, instance.uuid) mock_get_volume.assert_called_once_with( self.context, uuids.volume_id) mock_check_attached.assert_called_once_with( self.context, mock.sentinel.volume) mock_is_volume_backed.assert_called_once_with( self.context, instance, bdms) ", rescue_image_meta_obj = image_meta_obj.ImageMeta.from_dict({}) mock_get_cn):,220,11
openstack%2Fheat-translator~911244,openstack/heat-translator,unmaintained/xena,I210502050fc8dd868afdf9e8ccfe024c98aa95ca,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:38:06.000000000,2024-03-05 18:55:32.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:38:06.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/heat-translator/commit/bb5b4307ccc8912879ab3ad1d40e131578c40ffe', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I210502050fc8dd868afdf9e8ccfe024c98aa95ca\n'}]",0,911244,bb5b4307ccc8912879ab3ad1d40e131578c40ffe,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I210502050fc8dd868afdf9e8ccfe024c98aa95ca
",git fetch https://review.opendev.org/openstack/heat-translator refs/changes/44/911244/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,bb5b4307ccc8912879ab3ad1d40e131578c40ffe,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Ftosca-parser~911243,openstack/tosca-parser,unmaintained/wallaby,I2e22883a6c74342b98e9341d6d4c19766cc225e2,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:38:00.000000000,2024-03-05 18:55:31.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:38:00.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/tosca-parser/commit/c3243ad48b330c2f04cc532cc5fccda6f1fe5eb8', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I2e22883a6c74342b98e9341d6d4c19766cc225e2\n'}]",0,911243,c3243ad48b330c2f04cc532cc5fccda6f1fe5eb8,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I2e22883a6c74342b98e9341d6d4c19766cc225e2
",git fetch https://review.opendev.org/openstack/tosca-parser refs/changes/43/911243/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,c3243ad48b330c2f04cc532cc5fccda6f1fe5eb8,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Ftacker-horizon~911240,openstack/tacker-horizon,unmaintained/wallaby,Ibf876739bdb8e07a4fa03d05b9f6d73fefce1306,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:37:40.000000000,2024-03-05 18:55:31.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:37:40.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/tacker-horizon/commit/928070f40e4652635e16e698eeda54ba4b664d61', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: Ibf876739bdb8e07a4fa03d05b9f6d73fefce1306\n'}]",0,911240,928070f40e4652635e16e698eeda54ba4b664d61,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: Ibf876739bdb8e07a4fa03d05b9f6d73fefce1306
",git fetch https://review.opendev.org/openstack/tacker-horizon refs/changes/40/911240/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,928070f40e4652635e16e698eeda54ba4b664d61,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fheat-translator~911237,openstack/heat-translator,unmaintained/wallaby,I72f717b70944469803c9e580ccefe414d7b39161,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:37:24.000000000,2024-03-05 18:55:30.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:37:24.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/heat-translator/commit/06af02ceb5107573efb8d8765e370d4d63c19c8b', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I72f717b70944469803c9e580ccefe414d7b39161\n'}]",0,911237,06af02ceb5107573efb8d8765e370d4d63c19c8b,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I72f717b70944469803c9e580ccefe414d7b39161
",git fetch https://review.opendev.org/openstack/heat-translator refs/changes/37/911237/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,06af02ceb5107573efb8d8765e370d4d63c19c8b,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fec2-api~843407,openstack/ec2-api,stable/victoria,I9c9f09b339f46855a8ed4465f11db8c15e0ef5e9,Remove TripleO job,ABANDONED,2022-05-26 15:28:55.000000000,2024-03-05 18:55:30.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2022-05-26 15:28:55.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/ec2-api/commit/f69db1ed64a0562d2bc7346139be676402f3883c', 'message': 'Remove TripleO job\n\n... because TripleO deprecated support for EC2 API during Train cycle\nand removed it during Ussuri cycle.\n\nChange-Id: I9c9f09b339f46855a8ed4465f11db8c15e0ef5e9\n(cherry picked from commit ebb12611cadca3e6e817f1d7f5badce014fab2c3)\n(cherry picked from commit 14c86d1fc5d151adc64c62043b1754ecf032d742)\n(cherry picked from commit 6eaebd8672a4391b33885067a84cd4c2e204d584)\n(cherry picked from commit 0466881b9a74392f64c8b2fddffbea5a23ba5eb9)\n'}]",0,843407,f69db1ed64a0562d2bc7346139be676402f3883c,5,1,1,9816,,,0,"Remove TripleO job

... because TripleO deprecated support for EC2 API during Train cycle
and removed it during Ussuri cycle.

Change-Id: I9c9f09b339f46855a8ed4465f11db8c15e0ef5e9
(cherry picked from commit ebb12611cadca3e6e817f1d7f5badce014fab2c3)
(cherry picked from commit 14c86d1fc5d151adc64c62043b1754ecf032d742)
(cherry picked from commit 6eaebd8672a4391b33885067a84cd4c2e204d584)
(cherry picked from commit 0466881b9a74392f64c8b2fddffbea5a23ba5eb9)
",git fetch https://review.opendev.org/openstack/ec2-api refs/changes/07/843407/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,f69db1ed64a0562d2bc7346139be676402f3883c,remove-tripleo,," experimental: jobs: # TripleO jobs that deploy ec2-api. # Note we don't use a project-template here, so it's easier # to disable voting on one specific job if things go wrong. # If you need any support to debug these jobs in case of # failures, please reach us on #tripleo IRC channel. - tripleo-ci-centos-8-scenario002-standalone",0,8
openstack%2Fzaqar-ui~911192,openstack/zaqar-ui,unmaintained/xena,Id4fef86817f088eaeb2867e6bcf4bb791d03f455,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:24:48.000000000,2024-03-05 18:55:29.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:24:48.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/zaqar-ui/commit/49b11aa098dca84b43e690135d8cc10095a80b98', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: Id4fef86817f088eaeb2867e6bcf4bb791d03f455\n'}]",0,911192,49b11aa098dca84b43e690135d8cc10095a80b98,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: Id4fef86817f088eaeb2867e6bcf4bb791d03f455
",git fetch https://review.opendev.org/openstack/zaqar-ui refs/changes/92/911192/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,49b11aa098dca84b43e690135d8cc10095a80b98,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Ftosca-parser~911250,openstack/tosca-parser,unmaintained/xena,I225e9e720964b0afa423a572ff4b8ca0350a0b75,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:38:41.000000000,2024-03-05 18:54:06.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:38:41.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/tosca-parser/commit/883b08187c925222fa863d1d5b6b9e41b715c6a6', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I225e9e720964b0afa423a572ff4b8ca0350a0b75\n'}]",0,911250,883b08187c925222fa863d1d5b6b9e41b715c6a6,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I225e9e720964b0afa423a572ff4b8ca0350a0b75
",git fetch https://review.opendev.org/openstack/tosca-parser refs/changes/50/911250/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,883b08187c925222fa863d1d5b6b9e41b715c6a6,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Ftosca-parser~911236,openstack/tosca-parser,unmaintained/victoria,I2acc4123eb57d4b12333ac2793a3233e5f9d680e,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:37:17.000000000,2024-03-05 18:54:04.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:37:17.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/tosca-parser/commit/9e4a58a088882d07249317ab9579e826d9618d6c', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I2acc4123eb57d4b12333ac2793a3233e5f9d680e\n'}]",0,911236,9e4a58a088882d07249317ab9579e826d9618d6c,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I2acc4123eb57d4b12333ac2793a3233e5f9d680e
",git fetch https://review.opendev.org/openstack/tosca-parser refs/changes/36/911236/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,9e4a58a088882d07249317ab9579e826d9618d6c,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Ftacker-horizon~911233,openstack/tacker-horizon,unmaintained/victoria,I3b435cfa1247a72132839d382ff27b2cd0d28632,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:36:55.000000000,2024-03-05 18:52:51.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:36:55.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/tacker-horizon/commit/1b74ae1d83e3c3c835f69511fc35928139b718fa', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I3b435cfa1247a72132839d382ff27b2cd0d28632\n'}]",0,911233,1b74ae1d83e3c3c835f69511fc35928139b718fa,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I3b435cfa1247a72132839d382ff27b2cd0d28632
",git fetch https://review.opendev.org/openstack/tacker-horizon refs/changes/33/911233/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,1b74ae1d83e3c3c835f69511fc35928139b718fa,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fmasakari-monitors~911202,openstack/masakari-monitors,unmaintained/xena,I119c1a4595a235e434fa77201913c412eeacfb2e,Update .gitreview for unmaintained/xena,NEW,2024-03-05 18:25:20.000000000,2024-03-05 18:52:51.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:25:20.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/masakari-monitors/commit/49b46e8fb10ce4e603899bca14c82cdb57b6c3db', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I119c1a4595a235e434fa77201913c412eeacfb2e\n'}]",0,911202,49b46e8fb10ce4e603899bca14c82cdb57b6c3db,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I119c1a4595a235e434fa77201913c412eeacfb2e
",git fetch https://review.opendev.org/openstack/masakari-monitors refs/changes/02/911202/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,49b46e8fb10ce4e603899bca14c82cdb57b6c3db,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fzaqar~911171,openstack/zaqar,unmaintained/victoria,Ifcd276fd790b3cb013cafff2f698104442395929,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:23:52.000000000,2024-03-05 18:52:50.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:23:52.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/zaqar/commit/b41eef73969019e5fa04a7de6b00c2c2220c04be', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: Ifcd276fd790b3cb013cafff2f698104442395929\n'}]",0,911171,b41eef73969019e5fa04a7de6b00c2c2220c04be,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: Ifcd276fd790b3cb013cafff2f698104442395929
",git fetch https://review.opendev.org/openstack/zaqar refs/changes/71/911171/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,b41eef73969019e5fa04a7de6b00c2c2220c04be,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fheat-translator~911230,openstack/heat-translator,unmaintained/victoria,Ic5b77ece3e8c465ebe52f72d8567b912a80f2d59,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:36:42.000000000,2024-03-05 18:50:09.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:36:42.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/heat-translator/commit/a0045662bf045a0b0e2664339d54dfa02efd4f4a', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: Ic5b77ece3e8c465ebe52f72d8567b912a80f2d59\n'}]",0,911230,a0045662bf045a0b0e2664339d54dfa02efd4f4a,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: Ic5b77ece3e8c465ebe52f72d8567b912a80f2d59
",git fetch https://review.opendev.org/openstack/heat-translator refs/changes/30/911230/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,a0045662bf045a0b0e2664339d54dfa02efd4f4a,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Freleases~910387,openstack/releases,master,Ib19f52b45eb2b9c5509db05e3c2965f42fef8abc,[octavia] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:52:29.000000000,2024-03-05 18:48:53.000000000,2024-03-05 18:48:53.000000000,"[{'_account_id': 6469}, {'_account_id': 11628}, {'_account_id': 13252}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 29244}]","[{'number': 1, 'created': '2024-02-27 18:52:29.000000000', 'files': ['deliverables/xena/octavia.yaml', 'deliverables/wallaby/octavia-dashboard.yaml', 'deliverables/wallaby/python-octaviaclient.yaml', 'deliverables/wallaby/octavia.yaml', 'deliverables/xena/octavia-dashboard.yaml', 'deliverables/victoria/octavia-dashboard.yaml', 'deliverables/wallaby/octavia-lib.yaml', 'deliverables/victoria/octavia.yaml', 'deliverables/victoria/octavia-lib.yaml', 'deliverables/xena/octavia-lib.yaml', 'deliverables/xena/python-octaviaclient.yaml', 'deliverables/victoria/python-octaviaclient.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/ecca7b268cb78435ca3d9c8ed56b76a201598552', 'message': '[octavia] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: Ib19f52b45eb2b9c5509db05e3c2965f42fef8abc\n'}]",3,910387,ecca7b268cb78435ca3d9c8ed56b76a201598552,9,6,1,17685,,,0,"[octavia] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: Ib19f52b45eb2b9c5509db05e3c2965f42fef8abc
",git fetch https://review.opendev.org/openstack/releases refs/changes/87/910387/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/xena/octavia.yaml', 'deliverables/wallaby/octavia-dashboard.yaml', 'deliverables/wallaby/python-octaviaclient.yaml', 'deliverables/wallaby/octavia.yaml', 'deliverables/xena/octavia-dashboard.yaml', 'deliverables/victoria/octavia-dashboard.yaml', 'deliverables/wallaby/octavia-lib.yaml', 'deliverables/victoria/octavia.yaml', 'deliverables/victoria/octavia-lib.yaml', 'deliverables/xena/octavia-lib.yaml', 'deliverables/xena/python-octaviaclient.yaml', 'deliverables/victoria/python-octaviaclient.yaml']",12,ecca7b268cb78435ca3d9c8ed56b76a201598552,vwx-unmaintained, - version: victoria-eom projects: - repo: openstack/python-octaviaclient hash: c2aa20175c425b5ace32ec6862dba1189ae1ad5a - name: unmaintained/victoria location: victoria-eom release-notes: https://docs.openstack.org/releasenotes/python-octaviaclient/victoria.html,release-notes: https://docs.openstack.org/releasenotes/python-octaviaclient/victoria.html,84,6
openstack%2Fpython-masakariclient~911198,openstack/python-masakariclient,master,Ic079bb0c7b8a17bb07862d17082cc878213fdb08,reno: Update master for unmaintained/wallaby,NEW,2024-03-05 18:25:01.000000000,2024-03-05 18:47:15.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:25:01.000000000', 'files': ['releasenotes/source/wallaby.rst'], 'web_link': 'https://opendev.org/openstack/python-masakariclient/commit/81f53d741fe77df0b0c90d46e6a3c5959ecacbf3', 'message': 'reno: Update master for unmaintained/wallaby\n\nUpdate the wallaby release notes configuration to build from\nunmaintained/wallaby.\n\nChange-Id: Ic079bb0c7b8a17bb07862d17082cc878213fdb08\n'}]",0,911198,81f53d741fe77df0b0c90d46e6a3c5959ecacbf3,2,1,1,22816,,,0,"reno: Update master for unmaintained/wallaby

Update the wallaby release notes configuration to build from
unmaintained/wallaby.

Change-Id: Ic079bb0c7b8a17bb07862d17082cc878213fdb08
",git fetch https://review.opendev.org/openstack/python-masakariclient refs/changes/98/911198/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/source/wallaby.rst'],1,81f53d741fe77df0b0c90d46e6a3c5959ecacbf3,reno-eom-wallaby, :branch: unmaintained/wallaby, :branch: stable/wallaby,1,1
openstack%2Fmasakari-dashboard~911187,openstack/masakari-dashboard,master,I46324ca6cfdc2b580aa185d79e9be55c1678b4c0,reno: Update master for unmaintained/wallaby,NEW,2024-03-05 18:24:30.000000000,2024-03-05 18:45:59.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:24:30.000000000', 'files': ['releasenotes/source/wallaby.rst'], 'web_link': 'https://opendev.org/openstack/masakari-dashboard/commit/aa2a70472039d6ece53f800b0b9eb9e6d3219a8a', 'message': 'reno: Update master for unmaintained/wallaby\n\nUpdate the wallaby release notes configuration to build from\nunmaintained/wallaby.\n\nChange-Id: I46324ca6cfdc2b580aa185d79e9be55c1678b4c0\n'}]",0,911187,aa2a70472039d6ece53f800b0b9eb9e6d3219a8a,2,1,1,22816,,,0,"reno: Update master for unmaintained/wallaby

Update the wallaby release notes configuration to build from
unmaintained/wallaby.

Change-Id: I46324ca6cfdc2b580aa185d79e9be55c1678b4c0
",git fetch https://review.opendev.org/openstack/masakari-dashboard refs/changes/87/911187/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/source/wallaby.rst'],1,aa2a70472039d6ece53f800b0b9eb9e6d3219a8a,reno-eom-wallaby, :branch: unmaintained/wallaby, :branch: stable/wallaby,1,1
openstack%2Fglance~901429,openstack/glance,master,Icd6d79d563c6b5e8f2158bcad9b4f471d72def90,Use centralized_db cache driver in tempest jobs,MERGED,2023-11-20 06:20:06.000000000,2024-03-05 18:45:52.000000000,2024-03-05 18:37:55.000000000,"[{'_account_id': 4393}, {'_account_id': 8122}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-11-20 06:20:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/255329c3b392fec6d879cd978b120db405c0906f', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\n\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 2, 'created': '2023-11-20 07:51:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/81a5bebcc1bff471fb5b703f4a9b626cbb3d3878', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\n\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 3, 'created': '2023-11-20 08:48:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/6a8444dc0aa5b9f28ed0b80d02cadee1895b22da', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\n\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 4, 'created': '2023-11-21 07:53:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/db1665b5ce665c9e9c32b561d901008e8d0edac3', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 5, 'created': '2023-12-21 04:49:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/d705abf6f574e595c0177e0bad408f65a79cd318', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 6, 'created': '2024-01-16 04:12:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/a32bfc3c2936739c0ee06ecfde48a32a1f8d5b91', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 7, 'created': '2024-01-17 09:26:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/58b6448fd5e1e706f4d85a334670c4516529cbc8', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 8, 'created': '2024-01-17 18:28:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/976465a0e2e702139c3f823d4334eaec24ff5597', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 9, 'created': '2024-01-17 18:37:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/a7a646a36c310754ff47e1c788572d67f28490c3', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 10, 'created': '2024-01-18 05:59:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/043b23693acaa33d71b398d31951efbc726b6eda', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 11, 'created': '2024-01-19 10:17:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/3f872d44ed1d0f1d0d57836e5cb3693d2232d1a7', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 12, 'created': '2024-01-24 14:41:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/b80693421d28c1b6e2f9b7f8a5c5260cc4dc82c3', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 13, 'created': '2024-01-24 14:43:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/02b757df3306c5e1c25e014da37005abf8377f81', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 14, 'created': '2024-01-31 21:23:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/7ae5fac0cfa4ee6f793a58c03b9d6c1ed7787419', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 15, 'created': '2024-02-09 10:05:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/3e550099b922362c846aa7fae545eb8b1c0f8884', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 16, 'created': '2024-02-09 19:54:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/a41a14b5530914cbec513384e93fc74122e8bdf5', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 17, 'created': '2024-02-13 18:28:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/a2f316ad961e6708bb52110b81a29bd7d8ca6d3b', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 18, 'created': '2024-02-14 05:35:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/46966212e076e3349038c62b62a9a0833a5dc219', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 19, 'created': '2024-02-15 17:46:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/7575ec78bb139206324cddddf49b135b36bf9d77', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 20, 'created': '2024-02-16 17:12:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/0fff2caae3a80461f81387eef921db0c86da362b', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 21, 'created': '2024-02-20 20:30:08.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/7d9fe16fed1d4bff5800b761dc51b0923969ece7', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 22, 'created': '2024-02-27 18:45:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/7a2989f547ebca2d91670e37b780b474a78f15f9', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 23, 'created': '2024-02-28 15:06:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance/commit/31478e95d751759435c3643dfd8b5e3dc91bb4ce', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}, {'number': 24, 'created': '2024-03-01 05:45:41.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/glance/commit/68c3a802910e66f2a792821d7023789b39d29b73', 'message': 'Use centralized_db cache driver in tempest jobs\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/tempest/+/901525\nChange-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90\n'}]",27,901429,68c3a802910e66f2a792821d7023789b39d29b73,142,3,24,9303,,,0,"Use centralized_db cache driver in tempest jobs

Related blueprint centralized-cache-db
Depends-On: https://review.opendev.org/c/openstack/tempest/+/901525
Change-Id: Icd6d79d563c6b5e8f2158bcad9b4f471d72def90
",git fetch https://review.opendev.org/openstack/glance refs/changes/29/901429/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,255329c3b392fec6d879cd978b120db405c0906f,centralized-cache-db," image_cache_driver: ""centralized_db""",,1,0
openstack%2Fpython-masakariclient~911183,openstack/python-masakariclient,master,Ia409b7fb73d4a2538cb2f9869bd73ffa32aff21f,reno: Update master for unmaintained/victoria,NEW,2024-03-05 18:24:20.000000000,2024-03-05 18:45:43.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:24:20.000000000', 'files': ['releasenotes/source/victoria.rst'], 'web_link': 'https://opendev.org/openstack/python-masakariclient/commit/e9adbcbc523206236c60cc753b0eb92a86179699', 'message': 'reno: Update master for unmaintained/victoria\n\nUpdate the victoria release notes configuration to build from\nunmaintained/victoria.\n\nChange-Id: Ia409b7fb73d4a2538cb2f9869bd73ffa32aff21f\n'}]",0,911183,e9adbcbc523206236c60cc753b0eb92a86179699,2,1,1,22816,,,0,"reno: Update master for unmaintained/victoria

Update the victoria release notes configuration to build from
unmaintained/victoria.

Change-Id: Ia409b7fb73d4a2538cb2f9869bd73ffa32aff21f
",git fetch https://review.opendev.org/openstack/python-masakariclient refs/changes/83/911183/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/source/victoria.rst'],1,e9adbcbc523206236c60cc753b0eb92a86179699,reno-eom-victoria, :branch: unmaintained/victoria, :branch: stable/victoria,1,1
openstack%2Fzaqar-ui~911179,openstack/zaqar-ui,unmaintained/wallaby,I46c7ed7c2cbb419895fe75f04eae5e42e10a8be7,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:24:14.000000000,2024-03-05 18:45:42.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:24:14.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/zaqar-ui/commit/053bae3e6b77f5ea2c0ede2ee8d466fc3ecc61c7', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I46c7ed7c2cbb419895fe75f04eae5e42e10a8be7\n'}]",0,911179,053bae3e6b77f5ea2c0ede2ee8d466fc3ecc61c7,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I46c7ed7c2cbb419895fe75f04eae5e42e10a8be7
",git fetch https://review.opendev.org/openstack/zaqar-ui refs/changes/79/911179/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,053bae3e6b77f5ea2c0ede2ee8d466fc3ecc61c7,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fpython-zaqarclient~911176,openstack/python-zaqarclient,unmaintained/wallaby,I4569d5217dbbc67cf1ac4f7a5a69a15907e34795,Update TOX_CONSTRAINTS_FILE for unmaintained/wallaby,NEW,2024-03-05 18:24:04.000000000,2024-03-05 18:45:42.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:24:04.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/b40f5a2e5cd0db5cbba88c6befc6be4bb4fd3ebc', 'message': 'Update TOX_CONSTRAINTS_FILE for unmaintained/wallaby\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as unmaintained/wallaby branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: I4569d5217dbbc67cf1ac4f7a5a69a15907e34795\n'}]",0,911176,b40f5a2e5cd0db5cbba88c6befc6be4bb4fd3ebc,2,1,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for unmaintained/wallaby

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as unmaintained/wallaby branch, tests will
continue to use the upper-constraints list on master.

Change-Id: I4569d5217dbbc67cf1ac4f7a5a69a15907e34795
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/76/911176/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,b40f5a2e5cd0db5cbba88c6befc6be4bb4fd3ebc,create-wallaby, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/wallaby}, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master},1,1
openstack%2Fswift~910029,openstack/swift,master,I072974aab22d8b698152bf2f05c7ec97844f89f0,fallback to .data meta on PUT if .meta unavailable,NEW,2024-02-23 21:07:31.000000000,2024-03-05 18:45:37.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-02-23 21:07:31.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/2450bfcd2dffcde51b2ebca75e9590fa56c63458', 'message': 'fallback to .data meta on PUT w/ .meta unavailable\n\nChange-Id: I072974aab22d8b698152bf2f05c7ec97844f89f0\n'}, {'number': 2, 'created': '2024-02-26 15:18:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/f740bde10ed56ce11c4b2ffd8630ca6ed2535074', 'message': 'fallback to .data meta on PUT w/ .meta unavailable\n\nChange-Id: I072974aab22d8b698152bf2f05c7ec97844f89f0\n'}, {'number': 3, 'created': '2024-02-27 15:07:15.000000000', 'files': ['swift/obj/server.py', 'test/unit/obj/test_server.py', 'test/unit/obj/test_diskfile.py', 'swift/common/exceptions.py', 'swift/obj/diskfile.py'], 'web_link': 'https://opendev.org/openstack/swift/commit/79444c71355436334b924702c805c0961d909084', 'message': 'fallback to .data meta on PUT if .meta unavailable\n\nChange-Id: I072974aab22d8b698152bf2f05c7ec97844f89f0\n'}]",7,910029,79444c71355436334b924702c805c0961d909084,11,1,3,1179,,,0,"fallback to .data meta on PUT if .meta unavailable

Change-Id: I072974aab22d8b698152bf2f05c7ec97844f89f0
",git fetch https://review.opendev.org/openstack/swift refs/changes/29/910029/1 && git format-patch -1 --stdout FETCH_HEAD,"['swift/obj/server.py', 'test/unit/obj/test_server.py']",2,2450bfcd2dffcde51b2ebca75e9590fa56c63458,p-diskfile-meta-deleted," def _setup_metafile(self, test_req, t_put=None, t_post=None): # create a diskfile with a .data and .meta return t_put, t_post def _do_test_diskfile_metadata_unavailable(self, test_req): # a concurrent request may cause ondisk files to be removed between the # time they were listed and the time they were opened; verify that # appropriate response is returned to the client t_put, t_post = self._setup_metafile(test_req) return metadata def test_PUT_if_none_match_metafile_unavailable(self): req = Request.blank('/sda1/p/a/c/o', headers={'Content-Length': '0', 'Content-Type': 'plain/text', 'If-None-Match': '*'}, environ={'REQUEST_METHOD': 'PUT'}) # sanity, if-none-match with existing obj is 412 self._setup_metafile(req) resp = req.get_response(self.object_controller) self.assertEqual(resp.status_int, 412) # ... if-none-match with metadata unavailable is also 412 resp, head_resp = self._do_test_diskfile_metadata_unavailable(req) self.assertEqual(resp.status_int, 412) self.assertEqual(head_resp.status_int, 200) self.assertEqual('test', head_resp.headers.get('X-Object-Meta-Test')) "," def _do_test_diskfile_metadata_unavailable(self, test_req): # a concurrent request may cause ondisk files to be removed between the # time they were listed and the time they were opened; verify that # appropriate response is returned to the client",34,6
openstack%2Fpython-zaqarclient~911175,openstack/python-zaqarclient,unmaintained/wallaby,I9d5d60f9ca3d109a4956c7333d13362e3a6eebe1,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 18:24:03.000000000,2024-03-05 18:45:13.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:24:03.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/8ffb757bac90c41f18ab3b6c2ee9751b1c7ded51', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I9d5d60f9ca3d109a4956c7333d13362e3a6eebe1\n'}]",0,911175,8ffb757bac90c41f18ab3b6c2ee9751b1c7ded51,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I9d5d60f9ca3d109a4956c7333d13362e3a6eebe1
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/75/911175/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,8ffb757bac90c41f18ab3b6c2ee9751b1c7ded51,create-wallaby,defaultbranch=unmaintained/wallaby,,1,0
openstack%2Fpython-masakariclient~911207,openstack/python-masakariclient,master,I9d832aa7203dbd001a15598d4e1dab4215539646,reno: Update master for unmaintained/xena,NEW,2024-03-05 18:25:42.000000000,2024-03-05 18:43:13.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:25:42.000000000', 'files': ['releasenotes/source/xena.rst'], 'web_link': 'https://opendev.org/openstack/python-masakariclient/commit/ba7f806038e2051ce357c24f7bbdc9caec7f9dd3', 'message': 'reno: Update master for unmaintained/xena\n\nUpdate the xena release notes configuration to build from\nunmaintained/xena.\n\nChange-Id: I9d832aa7203dbd001a15598d4e1dab4215539646\n'}]",0,911207,ba7f806038e2051ce357c24f7bbdc9caec7f9dd3,2,1,1,22816,,,0,"reno: Update master for unmaintained/xena

Update the xena release notes configuration to build from
unmaintained/xena.

Change-Id: I9d832aa7203dbd001a15598d4e1dab4215539646
",git fetch https://review.opendev.org/openstack/python-masakariclient refs/changes/07/911207/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/source/xena.rst'],1,ba7f806038e2051ce357c24f7bbdc9caec7f9dd3,reno-eom-xena, :branch: unmaintained/xena, :branch: stable/xena,1,1
openstack%2Fmasakari-dashboard~911170,openstack/masakari-dashboard,master,I5773746707a74913032d0982039898b6b325adfa,reno: Update master for unmaintained/victoria,NEW,2024-03-05 18:23:44.000000000,2024-03-05 18:43:10.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:23:44.000000000', 'files': ['releasenotes/source/victoria.rst'], 'web_link': 'https://opendev.org/openstack/masakari-dashboard/commit/49aeb8b1993297d49cf490ce9a67b4a66328adb3', 'message': 'reno: Update master for unmaintained/victoria\n\nUpdate the victoria release notes configuration to build from\nunmaintained/victoria.\n\nChange-Id: I5773746707a74913032d0982039898b6b325adfa\n'}]",0,911170,49aeb8b1993297d49cf490ce9a67b4a66328adb3,2,1,1,22816,,,0,"reno: Update master for unmaintained/victoria

Update the victoria release notes configuration to build from
unmaintained/victoria.

Change-Id: I5773746707a74913032d0982039898b6b325adfa
",git fetch https://review.opendev.org/openstack/masakari-dashboard refs/changes/70/911170/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/source/victoria.rst'],1,49aeb8b1993297d49cf490ce9a67b4a66328adb3,reno-eom-victoria, :branch: unmaintained/victoria, :branch: stable/victoria,1,1
openstack%2Fmasakari-dashboard~911201,openstack/masakari-dashboard,master,Ic2fda9de94cd329f5ae53e5733fd936b3822e238,reno: Update master for unmaintained/xena,NEW,2024-03-05 18:25:11.000000000,2024-03-05 18:41:43.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:25:11.000000000', 'files': ['releasenotes/source/xena.rst'], 'web_link': 'https://opendev.org/openstack/masakari-dashboard/commit/6f55133c8d3eb78e2409258449b212418e4cc2d7', 'message': 'reno: Update master for unmaintained/xena\n\nUpdate the xena release notes configuration to build from\nunmaintained/xena.\n\nChange-Id: Ic2fda9de94cd329f5ae53e5733fd936b3822e238\n'}]",0,911201,6f55133c8d3eb78e2409258449b212418e4cc2d7,2,1,1,22816,,,0,"reno: Update master for unmaintained/xena

Update the xena release notes configuration to build from
unmaintained/xena.

Change-Id: Ic2fda9de94cd329f5ae53e5733fd936b3822e238
",git fetch https://review.opendev.org/openstack/masakari-dashboard refs/changes/01/911201/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/source/xena.rst'],1,6f55133c8d3eb78e2409258449b212418e4cc2d7,reno-eom-xena, :branch: unmaintained/xena, :branch: stable/xena,1,1
openstack%2Fpython-zaqarclient~911166,openstack/python-zaqarclient,unmaintained/victoria,Ib0c3cf99728b83f400c79dea318d614e134eb1ac,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:23:30.000000000,2024-03-05 18:37:48.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:23:30.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-zaqarclient/commit/2795105f929e3fe73029bdc0a2f889dd8a42e947', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: Ib0c3cf99728b83f400c79dea318d614e134eb1ac\n'}]",0,911166,2795105f929e3fe73029bdc0a2f889dd8a42e947,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: Ib0c3cf99728b83f400c79dea318d614e134eb1ac
",git fetch https://review.opendev.org/openstack/python-zaqarclient refs/changes/66/911166/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,2795105f929e3fe73029bdc0a2f889dd8a42e947,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fzaqar-ui~911167,openstack/zaqar-ui,unmaintained/victoria,I0bae2f4c93c535a6d1986c27c164ff0e76e689a5,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 18:23:39.000000000,2024-03-05 18:36:17.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 18:23:39.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/zaqar-ui/commit/c6bca20c64f75880572922f181aa821fd375bce6', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I0bae2f4c93c535a6d1986c27c164ff0e76e689a5\n'}]",0,911167,c6bca20c64f75880572922f181aa821fd375bce6,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I0bae2f4c93c535a6d1986c27c164ff0e76e689a5
",git fetch https://review.opendev.org/openstack/zaqar-ui refs/changes/67/911167/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,c6bca20c64f75880572922f181aa821fd375bce6,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Freleases~910385,openstack/releases,master,I212b8e818b075dcfcd9de810e22c2cbdc14ae21e,[nova] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:51:35.000000000,2024-03-05 18:34:10.000000000,2024-03-05 18:34:10.000000000,"[{'_account_id': 7166}, {'_account_id': 8556}, {'_account_id': 16207}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28522}, {'_account_id': 34860}]","[{'number': 1, 'created': '2024-02-27 18:51:35.000000000', 'files': ['deliverables/xena/placement.yaml', 'deliverables/victoria/os-vif.yaml', 'deliverables/wallaby/python-novaclient.yaml', 'deliverables/victoria/osc-placement.yaml', 'deliverables/wallaby/nova.yaml', 'deliverables/xena/python-novaclient.yaml', 'deliverables/victoria/placement.yaml', 'deliverables/wallaby/os-vif.yaml', 'deliverables/wallaby/osc-placement.yaml', 'deliverables/victoria/python-novaclient.yaml', 'deliverables/xena/nova.yaml', 'deliverables/victoria/nova.yaml', 'deliverables/xena/os-vif.yaml', 'deliverables/wallaby/placement.yaml', 'deliverables/xena/osc-placement.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/f62d97fb1e68ece972e3adbd46091fd8ff7424c7', 'message': '[nova] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: I212b8e818b075dcfcd9de810e22c2cbdc14ae21e\n'}]",4,910385,f62d97fb1e68ece972e3adbd46091fd8ff7424c7,11,7,1,17685,,,0,"[nova] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: I212b8e818b075dcfcd9de810e22c2cbdc14ae21e
",git fetch https://review.opendev.org/openstack/releases refs/changes/85/910385/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/xena/placement.yaml', 'deliverables/victoria/os-vif.yaml', 'deliverables/wallaby/python-novaclient.yaml', 'deliverables/victoria/osc-placement.yaml', 'deliverables/wallaby/nova.yaml', 'deliverables/xena/python-novaclient.yaml', 'deliverables/victoria/placement.yaml', 'deliverables/wallaby/os-vif.yaml', 'deliverables/wallaby/osc-placement.yaml', 'deliverables/victoria/python-novaclient.yaml', 'deliverables/xena/nova.yaml', 'deliverables/victoria/nova.yaml', 'deliverables/xena/os-vif.yaml', 'deliverables/wallaby/placement.yaml', 'deliverables/xena/osc-placement.yaml']",15,f62d97fb1e68ece972e3adbd46091fd8ff7424c7,vwx-unmaintained, - version: xena-eom projects: - repo: openstack/osc-placement hash: bf3a355928019216b4142d23000f802fbabee813 - name: unmaintained/xena location: xena-eom,,98,4
openstack%2Freleases~910429,openstack/releases,master,I8c57ac885b937c100f18f58947d06e6419f36f3f,[tacker] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:59:37.000000000,2024-03-05 18:33:30.000000000,2024-03-05 18:33:30.000000000,"[{'_account_id': 8556}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 25701}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-02-27 18:59:37.000000000', 'files': ['deliverables/victoria/python-tackerclient.yaml', 'deliverables/wallaby/tacker.yaml', 'deliverables/wallaby/tosca-parser.yaml', 'deliverables/wallaby/tacker-horizon.yaml', 'deliverables/xena/heat-translator.yaml', 'deliverables/xena/tosca-parser.yaml', 'deliverables/xena/tacker.yaml', 'deliverables/victoria/heat-translator.yaml', 'deliverables/wallaby/heat-translator.yaml', 'deliverables/victoria/tacker.yaml', 'deliverables/xena/tacker-horizon.yaml', 'deliverables/victoria/tosca-parser.yaml', 'deliverables/wallaby/python-tackerclient.yaml', 'deliverables/victoria/tacker-horizon.yaml', 'deliverables/xena/python-tackerclient.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/8d2a4e7247127f06e04c00394c665aca6a6ad48d', 'message': '[tacker] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: I8c57ac885b937c100f18f58947d06e6419f36f3f\n'}]",3,910429,8d2a4e7247127f06e04c00394c665aca6a6ad48d,10,5,1,17685,,,0,"[tacker] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: I8c57ac885b937c100f18f58947d06e6419f36f3f
",git fetch https://review.opendev.org/openstack/releases refs/changes/29/910429/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/victoria/python-tackerclient.yaml', 'deliverables/wallaby/tacker.yaml', 'deliverables/wallaby/tosca-parser.yaml', 'deliverables/wallaby/tacker-horizon.yaml', 'deliverables/xena/heat-translator.yaml', 'deliverables/xena/tosca-parser.yaml', 'deliverables/xena/tacker.yaml', 'deliverables/victoria/heat-translator.yaml', 'deliverables/wallaby/heat-translator.yaml', 'deliverables/victoria/tacker.yaml', 'deliverables/xena/tacker-horizon.yaml', 'deliverables/victoria/tosca-parser.yaml', 'deliverables/wallaby/python-tackerclient.yaml', 'deliverables/victoria/tacker-horizon.yaml', 'deliverables/xena/python-tackerclient.yaml']",15,8d2a4e7247127f06e04c00394c665aca6a6ad48d,vwx-unmaintained, - version: xena-eom projects: - repo: openstack/python-tackerclient hash: 98c1f145070022b5480cdd74e5e06c4ada860238 - name: unmaintained/xena location: xena-eom release-notes: https://docs.openstack.org/releasenotes/python-tackerclient/xena.html,release-notes: https://docs.openstack.org/releasenotes/python-tackerclient/xena.html,96,3
openstack%2Freleases~910416,openstack/releases,master,I3951afab5ad6ff901e5ffe7ccfa3a6a1294637c5,[designate] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:57:20.000000000,2024-03-05 18:31:16.000000000,2024-03-05 18:31:16.000000000,"[{'_account_id': 11628}, {'_account_id': 17685}, {'_account_id': 19298}, {'_account_id': 22348}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-02-27 18:57:20.000000000', 'files': ['deliverables/victoria/designate-dashboard.yaml', 'deliverables/xena/designate.yaml', 'deliverables/victoria/python-designateclient.yaml', 'deliverables/wallaby/designate.yaml', 'deliverables/wallaby/designate-dashboard.yaml', 'deliverables/wallaby/python-designateclient.yaml', 'deliverables/xena/designate-dashboard.yaml', 'deliverables/xena/python-designateclient.yaml', 'deliverables/victoria/designate.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/ef0885c5c722b6e3351513147bb1355d799e431c', 'message': '[designate] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: I3951afab5ad6ff901e5ffe7ccfa3a6a1294637c5\n'}]",2,910416,ef0885c5c722b6e3351513147bb1355d799e431c,10,5,1,17685,,,0,"[designate] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: I3951afab5ad6ff901e5ffe7ccfa3a6a1294637c5
",git fetch https://review.opendev.org/openstack/releases refs/changes/16/910416/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/victoria/designate-dashboard.yaml', 'deliverables/xena/designate.yaml', 'deliverables/victoria/python-designateclient.yaml', 'deliverables/wallaby/designate.yaml', 'deliverables/wallaby/designate-dashboard.yaml', 'deliverables/wallaby/python-designateclient.yaml', 'deliverables/xena/designate-dashboard.yaml', 'deliverables/xena/python-designateclient.yaml', 'deliverables/victoria/designate.yaml']",9,ef0885c5c722b6e3351513147bb1355d799e431c,vwx-unmaintained, - version: victoria-eom projects: - repo: openstack/designate hash: b1cd253895b8cefad3a2fa662543f88185151309 - name: unmaintained/victoria location: victoria-eom,,66,6
openstack%2Freleases~910431,openstack/releases,master,I7ffcf35c0eea2832f8fe7487c32d2bb0b0926597,[blazar] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:59:51.000000000,2024-03-05 18:23:14.000000000,2024-03-05 18:23:14.000000000,"[{'_account_id': 15197}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-02-27 18:59:51.000000000', 'files': ['deliverables/wallaby/blazar-dashboard.yaml', 'deliverables/xena/blazar-nova.yaml', 'deliverables/xena/blazar-dashboard.yaml', 'deliverables/wallaby/blazar-nova.yaml', 'deliverables/victoria/blazar-nova.yaml', 'deliverables/victoria/blazar.yaml', 'deliverables/victoria/python-blazarclient.yaml', 'deliverables/victoria/blazar-dashboard.yaml', 'deliverables/xena/blazar.yaml', 'deliverables/wallaby/blazar.yaml', 'deliverables/wallaby/python-blazarclient.yaml', 'deliverables/xena/python-blazarclient.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/f8cfa3fa47cc649182d0ebf4026845945fc30460', 'message': '[blazar] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: I7ffcf35c0eea2832f8fe7487c32d2bb0b0926597\n'}]",1,910431,f8cfa3fa47cc649182d0ebf4026845945fc30460,9,4,1,17685,,,0,"[blazar] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: I7ffcf35c0eea2832f8fe7487c32d2bb0b0926597
",git fetch https://review.opendev.org/openstack/releases refs/changes/31/910431/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/wallaby/blazar-dashboard.yaml', 'deliverables/xena/blazar-nova.yaml', 'deliverables/xena/blazar-dashboard.yaml', 'deliverables/wallaby/blazar-nova.yaml', 'deliverables/victoria/blazar-nova.yaml', 'deliverables/victoria/blazar.yaml', 'deliverables/victoria/python-blazarclient.yaml', 'deliverables/victoria/blazar-dashboard.yaml', 'deliverables/xena/blazar.yaml', 'deliverables/wallaby/blazar.yaml', 'deliverables/wallaby/python-blazarclient.yaml', 'deliverables/xena/python-blazarclient.yaml']",12,f8cfa3fa47cc649182d0ebf4026845945fc30460,vwx-unmaintained, - version: xena-eom projects: - repo: openstack/python-blazarclient hash: e653050bc27ae99dbbd59bb6c4beb8f34486c0ba - name: unmaintained/xena location: xena-eom release-notes: https://docs.openstack.org/releasenotes/python-blazarclient/xena.html,release-notes: https://docs.openstack.org/releasenotes/python-blazarclient/xena.html,82,5
openstack%2Freleases~910417,openstack/releases,master,I130499ade903691d09cb477a832ba30f8b71873d,[masakari] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:57:26.000000000,2024-03-05 18:19:12.000000000,2024-03-05 18:19:12.000000000,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28522}, {'_account_id': 30623}]","[{'number': 1, 'created': '2024-02-27 18:57:26.000000000', 'files': ['deliverables/victoria/masakari.yaml', 'deliverables/victoria/python-masakariclient.yaml', 'deliverables/wallaby/masakari.yaml', 'deliverables/wallaby/masakari-monitors.yaml', 'deliverables/victoria/masakari-dashboard.yaml', 'deliverables/wallaby/python-masakariclient.yaml', 'deliverables/xena/python-masakariclient.yaml', 'deliverables/xena/masakari-monitors.yaml', 'deliverables/xena/masakari-dashboard.yaml', 'deliverables/victoria/masakari-monitors.yaml', 'deliverables/xena/masakari.yaml', 'deliverables/wallaby/masakari-dashboard.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/b0f2b3dc2648c282eb2d71cad36039b2bd78df59', 'message': '[masakari] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: I130499ade903691d09cb477a832ba30f8b71873d\n'}]",1,910417,b0f2b3dc2648c282eb2d71cad36039b2bd78df59,9,4,1,17685,,,0,"[masakari] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: I130499ade903691d09cb477a832ba30f8b71873d
",git fetch https://review.opendev.org/openstack/releases refs/changes/17/910417/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/victoria/masakari.yaml', 'deliverables/victoria/python-masakariclient.yaml', 'deliverables/wallaby/masakari.yaml', 'deliverables/wallaby/masakari-monitors.yaml', 'deliverables/victoria/masakari-dashboard.yaml', 'deliverables/wallaby/python-masakariclient.yaml', 'deliverables/xena/python-masakariclient.yaml', 'deliverables/xena/masakari-monitors.yaml', 'deliverables/xena/masakari-dashboard.yaml', 'deliverables/victoria/masakari-monitors.yaml', 'deliverables/xena/masakari.yaml', 'deliverables/wallaby/masakari-dashboard.yaml']",12,b0f2b3dc2648c282eb2d71cad36039b2bd78df59,vwx-unmaintained, - version: wallaby-eom projects: - repo: openstack/masakari-dashboard hash: a879b6bbfbd17d2a4dbee4c0dde200db7d944631 - name: unmaintained/wallaby location: wallaby-eom release-notes: https://docs.openstack.org/releasenotes/masakari-dashboard/wallaby.html,release-notes: https://docs.openstack.org/releasenotes/masakari-dashboard/wallaby.html,90,9
openstack%2Freleases~910401,openstack/releases,master,I4ca342be29ad5d540fb262cc95f8f0b1b326b8f7,[zaqar] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:55:23.000000000,2024-03-05 18:16:36.000000000,2024-03-05 18:16:36.000000000,"[{'_account_id': 8846}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-02-27 18:55:23.000000000', 'files': ['deliverables/xena/zaqar-ui.yaml', 'deliverables/victoria/python-zaqarclient.yaml', 'deliverables/wallaby/zaqar.yaml', 'deliverables/victoria/zaqar.yaml', 'deliverables/xena/python-zaqarclient.yaml', 'deliverables/wallaby/python-zaqarclient.yaml', 'deliverables/wallaby/zaqar-ui.yaml', 'deliverables/xena/zaqar.yaml', 'deliverables/victoria/zaqar-ui.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/cd067b550fc949363fe6404b0cd808e4bb1baa63', 'message': '[zaqar] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: I4ca342be29ad5d540fb262cc95f8f0b1b326b8f7\n'}]",2,910401,cd067b550fc949363fe6404b0cd808e4bb1baa63,9,4,1,17685,,,0,"[zaqar] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: I4ca342be29ad5d540fb262cc95f8f0b1b326b8f7
",git fetch https://review.opendev.org/openstack/releases refs/changes/01/910401/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/xena/zaqar-ui.yaml', 'deliverables/victoria/python-zaqarclient.yaml', 'deliverables/wallaby/zaqar.yaml', 'deliverables/victoria/zaqar.yaml', 'deliverables/xena/python-zaqarclient.yaml', 'deliverables/wallaby/python-zaqarclient.yaml', 'deliverables/wallaby/zaqar-ui.yaml', 'deliverables/xena/zaqar.yaml', 'deliverables/victoria/zaqar-ui.yaml']",9,cd067b550fc949363fe6404b0cd808e4bb1baa63,vwx-unmaintained, - version: victoria-eom projects: - repo: openstack/zaqar-ui hash: 7e708d4c3954db7063093722ae721897c3ed8a08 - name: unmaintained/victoria location: victoria-eom,,54,0
openstack%2Fopenstack-helm-infra~910861,openstack/openstack-helm-infra,master,I9049e4312aa6cb92a832d5100ba1da995233c48e,bugfix: updated permissions of ceph user created to allow rbd profile,MERGED,2024-03-03 02:41:52.000000000,2024-03-05 18:16:12.000000000,2024-03-05 18:15:02.000000000,"[{'_account_id': 1004}, {'_account_id': 3009}, {'_account_id': 22348}, {'_account_id': 33330}, {'_account_id': 34520}]","[{'number': 1, 'created': '2024-03-03 02:41:52.000000000', 'files': ['gnocchi/templates/bin/_storage-init.sh.tpl', 'releasenotes/notes/gnocchi.yaml', 'gnocchi/Chart.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-helm-infra/commit/93e639a4bed6face95554ac33ad5ea0bb9bebaab', 'message': 'bugfix: updated permissions of ceph user created to allow rbd profile\n\nChange-Id: I9049e4312aa6cb92a832d5100ba1da995233c48e\n'}]",4,910861,93e639a4bed6face95554ac33ad5ea0bb9bebaab,18,5,1,33330,,,0,"bugfix: updated permissions of ceph user created to allow rbd profile

Change-Id: I9049e4312aa6cb92a832d5100ba1da995233c48e
",git fetch https://review.opendev.org/openstack/openstack-helm-infra refs/changes/61/910861/1 && git format-patch -1 --stdout FETCH_HEAD,"['gnocchi/templates/bin/_storage-init.sh.tpl', 'releasenotes/notes/gnocchi.yaml', 'gnocchi/Chart.yaml']",3,93e639a4bed6face95554ac33ad5ea0bb9bebaab,,version: 0.1.13,version: 0.1.12,6,5
openstack%2Fcinder~895731,openstack/cinder,master,I58f0f10b63431896e7532b16b561683cd242e9ee,[Pure Storage] Enable sync repl volume creation during failover,MERGED,2023-09-18 19:15:02.000000000,2024-03-05 18:01:08.000000000,2024-03-05 17:57:28.000000000,"[{'_account_id': 4523}, {'_account_id': 5314}, {'_account_id': 5997}, {'_account_id': 9236}, {'_account_id': 13425}, {'_account_id': 22348}, {'_account_id': 27615}, {'_account_id': 29122}]","[{'number': 1, 'created': '2023-09-18 19:15:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/6705d1ca022fbc69ac4f069fa384bbf5e3b75065', 'message': ""[Pure Storage] Enable sync repl volume creation during failver\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the promary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nDepends-On: If5b4459f989fb35b3483449f26b5cd3b22c39f58\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 2, 'created': '2023-09-18 19:36:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/05c4b53360dc6e3aa86cf1f239dbb7ded7c1dd1b', 'message': ""[Pure Storage] Enable sync repl volume creation during failver\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the promary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nDepends-On: If5b4459f989fb35b3483449f26b5cd3b22c39f58\nDepends-On: I7ed3ebd7fec389870edad0c1cc07ac553854dd8a\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 3, 'created': '2023-09-18 19:51:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/234ca0c216081602d1ad277afcefeaa75f102b62', 'message': ""[Pure Storage] Enable sync repl volume creation during failver\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the promary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nDepends-On: If5b4459f989fb35b3483449f26b5cd3b22c39f58\nDepends-On: I7ed3ebd7fec389870edad0c1cc07ac553854dd8a\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 4, 'created': '2023-09-18 19:53:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/486216a4e78db802345cee77be71e0c2297e638c', 'message': ""[Pure Storage] Enable sync repl volume creation during failver\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the promary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nDepends-On: If5b4459f989fb35b3483449f26b5cd3b22c39f58\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 5, 'created': '2023-09-18 20:13:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/878ff2dd0fe1548279686b6c3debe248065845ce', 'message': ""[Pure Storage] Enable sync repl volume creation during failver\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the promary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nDue to merge conflicts this change also includes all referneces\nmade in Change I7ed3ebd7fec389870edad0c1cc07ac553854dd8a\nrelated to A/A replication.\n\nAlso includes Pure specific changes from\nChange Icdbcae7cf9644ff9c21712df6cc66dc64f7e9556 that has\ngreater merge conflict issues.\n\nDepends-On: If5b4459f989fb35b3483449f26b5cd3b22c39f58\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 6, 'created': '2023-09-18 20:21:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/b6451187ac170ba291f00df976d65ba32add0d2a', 'message': ""[Pure Storage] Enable sync repl volume creation during failver\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nIncludes Pure specific changes from\nChange Icdbcae7cf9644ff9c21712df6cc66dc64f7e9556 that has\ngreater merge conflict issues.\n\nDepends-On:I7ed3ebd7fec389870edad0c1cc07ac553854dd8a\nDepends-On: If5b4459f989fb35b3483449f26b5cd3b22c39f58\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 7, 'created': '2023-09-18 20:25:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/7b16c102eaf3587ead5d6b7fee54976ac1d297ea', 'message': ""[Pure Storage] Enable sync repl volume creation during failver\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nIncludes Pure specific changes from\nChange Icdbcae7cf9644ff9c21712df6cc66dc64f7e9556 that has\ngreater merge conflict issues.\n\nDepends-On: If5b4459f989fb35b3483449f26b5cd3b22c39f58\nDepends-On: I7ed3ebd7fec389870edad0c1cc07ac553854dd8a\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 8, 'created': '2023-09-18 22:04:31.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/9dc1c9a54e60f903ebb9e66b496fceda16d8e249', 'message': ""[Pure Storage] Enable sync repl volume creation during failver\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nDepends-On: If5b4459f989fb35b3483449f26b5cd3b22c39f58\nDepends-On: I7ed3ebd7fec389870edad0c1cc07ac553854dd8a\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 9, 'created': '2023-09-20 17:43:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/0502fcd7027acb48b625551b8351796d5e4fe5d5', 'message': ""[Pure Storage] Enable sync repl volume creation during failver\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario for this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nDepends-On: If5b4459f989fb35b3483449f26b5cd3b22c39f58\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 10, 'created': '2023-09-20 17:51:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/64cb69d18864f786fb78a8517f7952059248107e', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario for this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAddiotnally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which reolves\nreplication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 11, 'created': '2023-09-20 17:55:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/19d5dcdc6c160493220c125b95b425242e5d7d66', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis to happen. When the failed array is available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backend's own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario for this scenario.\n\nCreating different replication volume types has been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAdditionally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which resolves\nreplication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 12, 'created': '2023-09-20 18:26:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/84b35b28561f47c268bd83bd3cbb97d6d6f72a2b', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario for this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAddiotnally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which reolves\nreplication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 13, 'created': '2023-09-22 15:37:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/2ae5018311638b2213bc40ca28182681bf598d05', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible. Sync volume attachment will also be allowed to\ncontinue should one of the backend replica pair arrays be down.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAddiotnally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which reolves\nreplication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 14, 'created': '2023-09-22 15:43:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/6f74277a34c810533ae4a73beeaf023878c2eb3c', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible. Sync volume attachment will also be allowed to\ncontinue should one of the backend replica pair arrays be down.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAddiotnally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which\nresolves replication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 15, 'created': '2023-09-22 17:55:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/a1a6d687dc9acd9a116f09027e593d653ad9c75d', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible. Sync volume attachment will also be allowed to\ncontinue should one of the backend replica pair arrays be down.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAddiotnally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which\nresolves replication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 16, 'created': '2023-09-25 16:24:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/614193fb5c279ecc4c465fa84175b0c6f1cb4ce3', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible to, in the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis happen. When the failed array in available again, any new\nsync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible. Sync volume attachment will also be allowed to\ncontinue should one of the backend replica pair arrays be down.\n\nAs this change is related to a full replication failover with\nthe primary array being down, there is no unit test that can\nemulate this scenario.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAddiotnally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which\nresolves replication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 17, 'created': '2023-09-25 16:52:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/95254c90d65c05171b9325210a9317e77d2fa652', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible, through the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis to happen. When the failed array in available again, any\nnew sync replication volumes created during the outage will be\nautomatically recovered by the backends own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible. Sync volume attachment will also be allowed to\ncontinue should one of the backend replica pair arrays be down.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAddiotnally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which\nresolves replication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 18, 'created': '2024-01-09 14:54:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/153f0e2d990514fcee7a55e7106214af340ccff7', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible, through the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis to happen. When the failed array is available again, any\nnew sync replication volumes created during the outage will be\nautomatically recovered by the backend's own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible. Sync volume attachment will also be allowed to\ncontinue should one of the backend replica pair arrays be down.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAdditionally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which\nresolves replication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}, {'number': 19, 'created': '2024-01-13 22:25:31.000000000', 'files': ['cinder/volume/drivers/pure.py', 'releasenotes/notes/pure_failover_sync-86814167598af2f8.yaml', 'cinder/tests/unit/volume/drivers/test_pure.py'], 'web_link': 'https://opendev.org/openstack/cinder/commit/e1d93531b94dfcfecb3cac08cfd1d849f29db467', 'message': ""[Pure Storage] Enable sync repl volume creation during failover\n\nCurrently when cinder failover is invoked, due to the primary\nstorage backend being down, it is not possible, through the\ndriver, to create a new volume with sync replication\nfunctionality. Non-replicated and async replicated volumes can\nbe created in this scenario - although not recommended due to\npotential issues after failback.\n\nA synchronously replicated volume could be safely created\nduring failover as the Pure Storage architecture can allow\nthis to happen. When the failed array is available again, any\nnew sync replication volumes created during the outage will be\nautomatically recovered by the backend's own internal systems.\n\nThis patch updates the driver to check, during volume creation,\nif the backend is in failover mode and then allow sync volumes\nto be correctly created, even though the primary array could be\ninaccessible. Sync volume attachment will also be allowed to\ncontinue should one of the backend replica pair arrays be down.\n\nCreating different replication volume types have been tested\nboth failover and failback scenarios in Pure's labs and this\npatch has proved to work as expected.\n\nAdditionally included is work from abandoned\nchange I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which\nresolves replication issues in A/A deployments.\n\nAlso, fixes bug where a deleted replication pod can cause the\ndriver to fail on restart.\n\nCloses-Bug: #2035404\nChange-Id: I58f0f10b63431896e7532b16b561683cd242e9ee\n""}]",56,895731,e1d93531b94dfcfecb3cac08cfd1d849f29db467,289,8,19,13425,,,0,"[Pure Storage] Enable sync repl volume creation during failover

Currently when cinder failover is invoked, due to the primary
storage backend being down, it is not possible, through the
driver, to create a new volume with sync replication
functionality. Non-replicated and async replicated volumes can
be created in this scenario - although not recommended due to
potential issues after failback.

A synchronously replicated volume could be safely created
during failover as the Pure Storage architecture can allow
this to happen. When the failed array is available again, any
new sync replication volumes created during the outage will be
automatically recovered by the backend's own internal systems.

This patch updates the driver to check, during volume creation,
if the backend is in failover mode and then allow sync volumes
to be correctly created, even though the primary array could be
inaccessible. Sync volume attachment will also be allowed to
continue should one of the backend replica pair arrays be down.

Creating different replication volume types have been tested
both failover and failback scenarios in Pure's labs and this
patch has proved to work as expected.

Additionally included is work from abandoned
change I7ed3ebd7fec389870edad0c1cc07ac553854dd8a, which
resolves replication issues in A/A deployments.

Also, fixes bug where a deleted replication pod can cause the
driver to fail on restart.

Closes-Bug: #2035404
Change-Id: I58f0f10b63431896e7532b16b561683cd242e9ee
",git fetch https://review.opendev.org/openstack/cinder refs/changes/31/895731/1 && git format-patch -1 --stdout FETCH_HEAD,"['cinder/volume/drivers/pure.py', 'releasenotes/notes/pure_failover_sync-86814167598af2f8.yaml']",2,6705d1ca022fbc69ac4f069fa384bbf5e3b75065,bug/2035404,--- features: - | Pure Storage driver: Allow synchronously replicated volumes to be created during a replication failover event. These will remain viable volumes when the replication is failed back to it's original state. ,,20,9
openstack%2Fdevstack~910990,openstack/devstack,stable/wallaby,Icd487e1012263a9b0bc13b529d31ff2025108adf,Drop the devstack-single-node-centos-7 nodeset,MERGED,2024-03-04 19:29:37.000000000,2024-03-05 18:00:55.000000000,2024-03-05 17:57:25.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 19:29:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/devstack/commit/bc59eb81a74a240efa52d5e7a61b1a395bf8eefc', 'message': ""Drop the devstack-single-node-centos-7 nodeset\n\nOpenDev is preparing to remove centos-7 nodes on March 15[*]. This\nchange drops one nodeset definition which is the last remaining\nreference on DevStack's master branch.\n\n[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/\n\nChange-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf\n(cherry picked from commit de9a15adbcc12dacef5b58da18c72d65c087651a)\n""}, {'number': 2, 'created': '2024-03-04 19:50:56.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/devstack/commit/ec783f0b044012d3d7e1410d3b599e67fc9dd624', 'message': ""Drop the devstack-single-node-centos-7 nodeset\n\nOpenDev is preparing to remove centos-7 nodes on March 15[*]. This\nchange drops one nodeset definition which is the last remaining\nreference on DevStack's master branch. Also clean up a lingering\nreference to swift-dsvm-functional-py3 which no longer exists.\n\n[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/\n\nChange-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf\n(cherry picked from commit de9a15adbcc12dacef5b58da18c72d65c087651a)\n""}]",4,910990,ec783f0b044012d3d7e1410d3b599e67fc9dd624,14,2,2,5263,,,0,"Drop the devstack-single-node-centos-7 nodeset

OpenDev is preparing to remove centos-7 nodes on March 15[*]. This
change drops one nodeset definition which is the last remaining
reference on DevStack's master branch. Also clean up a lingering
reference to swift-dsvm-functional-py3 which no longer exists.

[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/

Change-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf
(cherry picked from commit de9a15adbcc12dacef5b58da18c72d65c087651a)
",git fetch https://review.opendev.org/openstack/devstack refs/changes/90/910990/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,bc59eb81a74a240efa52d5e7a61b1a395bf8eefc,drop-centos-7,, name: devstack-single-node-centos-7 nodes: - name: controller label: centos-7 groups: - name: tempest nodes: - controller - nodeset:,0,10
openstack%2Fdevstack~910980,openstack/devstack,master,Icd487e1012263a9b0bc13b529d31ff2025108adf,Drop the devstack-single-node-centos-7 nodeset,MERGED,2024-03-04 18:28:35.000000000,2024-03-05 18:00:48.000000000,2024-03-05 17:57:23.000000000,"[{'_account_id': 8556}, {'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 18:28:35.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/devstack/commit/af57c0b778bb13a9b5ffd784fc456a21614e67b1', 'message': ""Drop the devstack-single-node-centos-7 nodeset\n\nOpenDev is preparing to remove centos-7 nodes on March 15[*]. This\nchange drops one nodeset definition which is the last remaining\nreference on DevStack's master branch.\n\n[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/\n\nChange-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf\n""}]",1,910980,af57c0b778bb13a9b5ffd784fc456a21614e67b1,13,3,1,5263,,,0,"Drop the devstack-single-node-centos-7 nodeset

OpenDev is preparing to remove centos-7 nodes on March 15[*]. This
change drops one nodeset definition which is the last remaining
reference on DevStack's master branch.

[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/

Change-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf
",git fetch https://review.opendev.org/openstack/devstack refs/changes/80/910980/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,af57c0b778bb13a9b5ffd784fc456a21614e67b1,drop-centos-7,, name: devstack-single-node-centos-7 nodes: - name: controller label: centos-7 groups: - name: tempest nodes: - controller - nodeset:,0,10
openstack%2Fmanila-ui~909659,openstack/manila-ui,master,I12ac14f664f59dbab11ded5f420de4ea290f21f6,Add new-note tox environment,MERGED,2024-02-21 13:25:36.000000000,2024-03-05 17:50:45.000000000,2024-03-05 17:49:32.000000000,"[{'_account_id': 16643}, {'_account_id': 22348}, {'_account_id': 29632}, {'_account_id': 30407}]","[{'number': 1, 'created': '2024-02-21 13:25:36.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/cf01f7a62c0878ca5d863c4895c7754e4e0b0ba3', 'message': 'Add a newnote command in tox config file and\nadd contributor guide on how to add release\nnotes.\n\nChange-Id: I12ac14f664f59dbab11ded5f420de4ea290f21f6\n'}, {'number': 2, 'created': '2024-02-26 09:51:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/aa912b118b9066673fbdc5c97dd2ed7f4228e5a2', 'message': 'Add new-note command to create relsease\nnotes\n\nonly reno command was possible to add a\nrelaease notes. modify tox config to allow\nnewnote command too.\n\nChange-Id: I12ac14f664f59dbab11ded5f420de4ea290f21f6\n'}, {'number': 3, 'created': '2024-02-29 12:34:10.000000000', 'files': ['doc/source/contributor/adding_release_notes.rst', 'doc/source/contributor/index.rst', 'tox.ini'], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/9f0aaf7dd4d737bdc35d50d9f92240a0ffb96dfa', 'message': 'Add new-note tox environment\n\nOnly reno command was possible to add a\nrelease notes. modify tox config to allow\nnewnote command too.\n\nChange-Id: I12ac14f664f59dbab11ded5f420de4ea290f21f6\n'}]",12,909659,9f0aaf7dd4d737bdc35d50d9f92240a0ffb96dfa,16,4,3,36483,,,0,"Add new-note tox environment

Only reno command was possible to add a
release notes. modify tox config to allow
newnote command too.

Change-Id: I12ac14f664f59dbab11ded5f420de4ea290f21f6
",git fetch https://review.opendev.org/openstack/manila-ui refs/changes/59/909659/1 && git format-patch -1 --stdout FETCH_HEAD,"['doc/source/contributor/adding_release_notes.rst', 'doc/source/contributor/index.rst', 'tox.ini']",3,cf01f7a62c0878ca5d863c4895c7754e4e0b0ba3,add-newnote-command,[testenv:newnote] deps = -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master} -r{toxinidir}/doc/requirements.txt commands = reno new {posargs} ,,188,0
openstack%2Fneutron~893185,openstack/neutron,master,Id5b0b230e342074d8ca27e4fc4ce1c1f0c1b0d34,Add release notes for l3-ext-gw-multihoming and adjacent features,MERGED,2023-08-30 13:35:47.000000000,2024-03-05 17:27:46.000000000,2024-03-05 17:26:27.000000000,"[{'_account_id': 1131}, {'_account_id': 13686}, {'_account_id': 13861}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-08-30 13:35:47.000000000', 'files': ['releasenotes/notes/l3-ext-gw-multihoming-99be481ddeaa3a6d.yaml', 'releasenotes/notes/enable-default-route-bfd-and-ecmp-2cbb3be64ee25410.yaml'], 'web_link': 'https://opendev.org/openstack/neutron/commit/f16310515860beac14ec04dddb97573a69181ecd', 'message': 'Add release notes for l3-ext-gw-multihoming and adjacent features\n\nThese features was added to Caracal.\n\nPartial-Bug: #2002687\nChange-Id: Id5b0b230e342074d8ca27e4fc4ce1c1f0c1b0d34\n'}]",2,893185,f16310515860beac14ec04dddb97573a69181ecd,10,4,1,13686,,,0,"Add release notes for l3-ext-gw-multihoming and adjacent features

These features was added to Caracal.

Partial-Bug: #2002687
Change-Id: Id5b0b230e342074d8ca27e4fc4ce1c1f0c1b0d34
",git fetch https://review.opendev.org/openstack/neutron refs/changes/85/893185/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/l3-ext-gw-multihoming-99be481ddeaa3a6d.yaml', 'releasenotes/notes/enable-default-route-bfd-and-ecmp-2cbb3be64ee25410.yaml']",2,f16310515860beac14ec04dddb97573a69181ecd,2023-aa-l3-gw-multihoming,--- features: - | Add ``enable_default_route_bfd`` and ``enable_default_route_ecmp`` configuration options which control default behavior for enabling BFD and ECMP on default routes for newly created routers. Both configuration options have a default value of 'False' and are only supported with the OVN driver. ,,14,0
openstack%2Fdevstack~907110,openstack/devstack,master,I75267988b1c80ac9daa5843ce8462bbac49ffe27,Make `centralized_db` driver as default cache driver,MERGED,2024-01-29 18:41:35.000000000,2024-03-05 17:27:29.000000000,2024-03-05 17:26:24.000000000,"[{'_account_id': 4393}, {'_account_id': 8556}, {'_account_id': 13252}, {'_account_id': 22348}, {'_account_id': 22873}]","[{'number': 1, 'created': '2024-01-29 18:41:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/devstack/commit/efec2dac286b3c6541e3a9d4f296b2338bf8a309', 'message': 'Always set worker_self_reference_url\n\nNew cache driver `centralized_db` needs `worker_self_reference_url`\nin glance-api.conf file otherwise glance api service will fail to\nstart.\n\nRelated blueprint centralized-cache-db\n\nChange-Id: I75267988b1c80ac9daa5843ce8462bbac49ffe27\n'}, {'number': 2, 'created': '2024-01-31 17:53:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/devstack/commit/db17d42a1b599c7b00ad4c827ed55502f39455bc', 'message': 'Make `centralized_db` driver as default cache driver\n\nMaking newly introduced `centralized_db` driver as default cache\ndriver for glance so that it can be tested in available CI jobs.\n\nNew cache driver `centralized_db` needs `worker_self_reference_url`\nin glance-api.conf file otherwise glance api service will fail to\nstart.\n\nRelated blueprint centralized-cache-db\n\nChange-Id: I75267988b1c80ac9daa5843ce8462bbac49ffe27\n'}, {'number': 3, 'created': '2024-01-31 20:26:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/devstack/commit/5fa1892995f3070ee918eb54be61e4f94c4dfa38', 'message': 'Make `centralized_db` driver as default cache driver\n\nMaking newly introduced `centralized_db` driver as default cache\ndriver for glance so that it can be tested in available CI jobs.\n\nNew cache driver `centralized_db` needs `worker_self_reference_url`\nin glance-api.conf file otherwise glance api service will fail to\nstart.\n\nRelated blueprint centralized-cache-db\n\nChange-Id: I75267988b1c80ac9daa5843ce8462bbac49ffe27\n'}, {'number': 4, 'created': '2024-01-31 21:37:20.000000000', 'files': ['lib/glance'], 'web_link': 'https://opendev.org/openstack/devstack/commit/d251d12d71ebca758e8584204a0ba14d3c6bab6c', 'message': 'Make `centralized_db` driver as default cache driver\n\nMaking newly introduced `centralized_db` driver as default cache\ndriver for glance so that it can be tested in available CI jobs.\n\nNew cache driver `centralized_db` needs `worker_self_reference_url`\nin glance-api.conf file otherwise glance api service will fail to\nstart.\n\nRelated blueprint centralized-cache-db\nDepends-On: https://review.opendev.org/c/openstack/glance/+/899871\n\nChange-Id: I75267988b1c80ac9daa5843ce8462bbac49ffe27\n'}]",9,907110,d251d12d71ebca758e8584204a0ba14d3c6bab6c,20,5,4,9303,,,0,"Make `centralized_db` driver as default cache driver

Making newly introduced `centralized_db` driver as default cache
driver for glance so that it can be tested in available CI jobs.

New cache driver `centralized_db` needs `worker_self_reference_url`
in glance-api.conf file otherwise glance api service will fail to
start.

Related blueprint centralized-cache-db
Depends-On: https://review.opendev.org/c/openstack/glance/+/899871

Change-Id: I75267988b1c80ac9daa5843ce8462bbac49ffe27
",git fetch https://review.opendev.org/openstack/devstack refs/changes/10/907110/1 && git format-patch -1 --stdout FETCH_HEAD,['lib/glance'],1,efec2dac286b3c6541e3a9d4f296b2338bf8a309,centralized-cache-db, iniset $GLANCE_API_CONF DEFAULT worker_self_reference_url $GLANCE_URL,,1,0
openstack%2Fironic~910445,openstack/ironic,master,Iabde23adc8504a5a443577c21e450b26f0e43da7,Remove downgrade_dnsmasq; 2.90 is upstream now,ABANDONED,2024-02-27 23:47:03.000000000,2024-03-05 17:20:02.000000000,,"[{'_account_id': 11655}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-27 23:47:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/e4fbf23202b6b5689994b02c5fde106eeaacd730', 'message': 'Remove downgrade_dnsmasq; 1.90 is upstream now\n\nUpstream ubuntu Jammy now has 1.90, with security fixes and the fix for\nthe bug we were avoiding. Lets get out of the custom dnsmasq business!\n\nChange-Id: Iabde23adc8504a5a443577c21e450b26f0e43da7\n'}, {'number': 2, 'created': '2024-02-28 19:20:08.000000000', 'files': ['devstack/lib/ironic', 'devstack/plugin.sh'], 'web_link': 'https://opendev.org/openstack/ironic/commit/377bc02fea6a88cafb266712f0995d885c30c250', 'message': 'Remove downgrade_dnsmasq; 2.90 is upstream now\n\nUpstream ubuntu Jammy now has 2.90, with security fixes and the fix for\nthe bug we were avoiding. Lets get out of the custom dnsmasq business!\n\nChange-Id: Iabde23adc8504a5a443577c21e450b26f0e43da7\n'}]",2,910445,377bc02fea6a88cafb266712f0995d885c30c250,12,2,2,10342,,,0,"Remove downgrade_dnsmasq; 2.90 is upstream now

Upstream ubuntu Jammy now has 2.90, with security fixes and the fix for
the bug we were avoiding. Lets get out of the custom dnsmasq business!

Change-Id: Iabde23adc8504a5a443577c21e450b26f0e43da7
",git fetch https://review.opendev.org/openstack/ironic refs/changes/45/910445/1 && git format-patch -1 --stdout FETCH_HEAD,"['devstack/lib/ironic', 'devstack/plugin.sh']",2,e4fbf23202b6b5689994b02c5fde106eeaacd730,bug/2026757,, downgrade_dnsmasq,0,14
openstack%2Fmagnum~910631,openstack/magnum,master,I2439dcda7d06a317188ff64e061c74e210fa1d98,CI: Add job to test with SQLAlchemy master (2.x),NEW,2024-02-29 14:48:42.000000000,2024-03-05 16:55:06.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-02-29 14:48:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/8ec99abe0174da3261ea55701110b5fa9b4af33c', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}, {'number': 2, 'created': '2024-02-29 14:49:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/78c1dad866c9d99bda004f767ce6b80d9dbf2512', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}, {'number': 3, 'created': '2024-02-29 16:20:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/68c62e65ca6fad790f70390e8fca0a96e79be88a', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}, {'number': 4, 'created': '2024-03-01 05:56:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/fa34b429c136439ebe93d7b9c14f93be3b2ad640', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}, {'number': 5, 'created': '2024-03-01 06:13:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/5cdbc60281fb0960823f1e8093fb9f91429abf4d', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nDepends-On: https://review.opendev.org/c/openstack/requirements/+/879743\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}, {'number': 6, 'created': '2024-03-01 06:25:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/d9a784b45250cb74cde819e124b0b4b5fa8fbb47', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}, {'number': 7, 'created': '2024-03-01 06:41:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/b93561e6e0aee662fd9e43a35465511db7653898', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}, {'number': 8, 'created': '2024-03-01 07:51:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/5a07a1ebc3060794f821d9701a58df360cf4f806', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nDepends-On: https://review.opendev.org/c/openstack/requirements/+/879743\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}, {'number': 9, 'created': '2024-03-02 07:31:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/fcc836704734d113eba2473c710f4f04d9abac3b', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nDepends-On: https://review.opendev.org/c/openstack/requirements/+/879743\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}, {'number': 10, 'created': '2024-03-05 15:53:11.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/magnum/commit/4bf0b413f72d16fe043846d52490fe0620ff1191', 'message': 'CI: Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98\n'}]",1,910631,4bf0b413f72d16fe043846d52490fe0620ff1191,18,1,10,22629,,,0,"CI: Add job to test with SQLAlchemy master (2.x)

Change-Id: I2439dcda7d06a317188ff64e061c74e210fa1d98
",git fetch https://review.opendev.org/openstack/magnum refs/changes/31/910631/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,8ec99abe0174da3261ea55701110b5fa9b4af33c,sqlalchemy-20,"# Temporary job until SQLAlchemy 2.0 is no longer blocked by upper-requirements - job: name: magnum-tox-py311-with-sqlalchemy-2x parent: openstack-tox-py311 description: | Run unit tests with main branch of SQLAlchemy, alembic and oslo.db. Takes advantage of the base tox job's install-siblings feature. # The job only tests the latest and shouldn't be run on the stable branches branches: ^(?!stable) required-projects: - name: github.com/sqlalchemy/sqlalchemy override-checkout: main - name: github.com/sqlalchemy/alembic override-checkout: main - name: openstack/oslo.db - magnum-tox-py311-with-sqlalchemy-2x - magnum-tox-py311-with-sqlalchemy-2x",,18,0
openstack%2Fopenstack-helm-images~910349,openstack/openstack-helm-images,master,I07ac4b70ce5eb0ceb1b805f24345ccc97cb99c7e,Update Ceph images to address https://tracker.ceph.com/issues/63684,MERGED,2024-02-27 15:00:43.000000000,2024-03-05 16:49:58.000000000,2024-03-05 16:47:30.000000000,"[{'_account_id': 3009}, {'_account_id': 22348}, {'_account_id': 34520}]","[{'number': 1, 'created': '2024-02-27 15:00:43.000000000', 'files': ['zuul.d/ceph.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-helm-images/commit/5c0935b2e3fe926e3dc4f0e8291692ef1aef976d', 'message': ""Update Ceph images to address https://tracker.ceph.com/issues/63684\n\nThis change updates the Ceph images to include new Reef 18.2.1 Ceph\npackages that include a patch to work around an RGW segfault that\nhas been seen in some cases. This isn't a permanent fix, but it\nprevents the radosgw binary from segfaulting while a permanent fix\nis in progress.\n\nChange-Id: I07ac4b70ce5eb0ceb1b805f24345ccc97cb99c7e\n""}]",0,910349,5c0935b2e3fe926e3dc4f0e8291692ef1aef976d,9,3,1,29974,,,0,"Update Ceph images to address https://tracker.ceph.com/issues/63684

This change updates the Ceph images to include new Reef 18.2.1 Ceph
packages that include a patch to work around an RGW segfault that
has been seen in some cases. This isn't a permanent fix, but it
prevents the radosgw binary from segfaulting while a permanent fix
is in progress.

Change-Id: I07ac4b70ce5eb0ceb1b805f24345ccc97cb99c7e
",git fetch https://review.opendev.org/openstack/openstack-helm-images refs/changes/49/910349/1 && git format-patch -1 --stdout FETCH_HEAD,['zuul.d/ceph.yaml'],1,5c0935b2e3fe926e3dc4f0e8291692ef1aef976d,," - ""CEPH_RELEASE_TAG='18.2.1-1~jammy'"" - ""CEPH_REPO='http://mirror.mirantis.com/acicd/ceph/debian-18.2.1.patch1/jammy'"" - ""CEPH_KEY='http://mirror.mirantis.com/acicd/ceph/debian-18.2.1.patch1/jammy/release.asc'"""," - ""CEPH_RELEASE_TAG='18.2.1-1jammy'"" - ""CEPH_REPO='https://mirror.mirantis.com/acicd/ceph-reef/'"" - ""CEPH_KEY='https://mirror.mirantis.com/acicd/ceph-reef/release.asc'""",3,3
openstack%2Fkuryr-kubernetes~910962,openstack/kuryr-kubernetes,master,Ib43164901cbc23038eff7c2b110078555d5e4ba3,Change k8s package repository,MERGED,2024-03-04 16:00:03.000000000,2024-03-05 16:48:36.000000000,2024-03-05 16:46:05.000000000,"[{'_account_id': 11600}, {'_account_id': 13692}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 16:00:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kuryr-kubernetes/commit/9aea2b3f00b5a1c03c2ce74f99b3e125ae54398d', 'message': 'Change k8s package repository\n\nCloses-Bug: #2055979\nChange-Id: Ib43164901cbc23038eff7c2b110078555d5e4ba3\n'}, {'number': 2, 'created': '2024-03-05 01:30:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kuryr-kubernetes/commit/8edd260d2a2e18bf03fb36cf5c2ae47b943442b0', 'message': 'Change k8s package repository\n\nCloses-Bug: #2055979\nChange-Id: Ib43164901cbc23038eff7c2b110078555d5e4ba3\n'}, {'number': 3, 'created': '2024-03-05 04:31:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kuryr-kubernetes/commit/7acb2be008a93dd8cf1e19f79a31a43452aac806', 'message': 'Change k8s package repository\n\nCloses-Bug: #2055979\nChange-Id: Ib43164901cbc23038eff7c2b110078555d5e4ba3\n'}, {'number': 4, 'created': '2024-03-05 13:03:54.000000000', 'files': ['.zuul.d/project.yaml', '.zuul.d/tempest-jobs.yaml', 'devstack/lib/kubernetes'], 'web_link': 'https://opendev.org/openstack/kuryr-kubernetes/commit/0c1fe5fd3c5b441c8d0b8e36997f4293ea891a27', 'message': 'Change k8s package repository\n\nCloses-Bug: #2055979\nChange-Id: Ib43164901cbc23038eff7c2b110078555d5e4ba3\n'}]",11,910962,0c1fe5fd3c5b441c8d0b8e36997f4293ea891a27,26,3,4,31857,,,0,"Change k8s package repository

Closes-Bug: #2055979
Change-Id: Ib43164901cbc23038eff7c2b110078555d5e4ba3
",git fetch https://review.opendev.org/openstack/kuryr-kubernetes refs/changes/62/910962/1 && git format-patch -1 --stdout FETCH_HEAD,['devstack/lib/kubernetes'],1,9aea2b3f00b5a1c03c2ce74f99b3e125ae54398d,bug/2055979, apt_get install apt-transport-https gpg sudo mkdir -p -m 755 /etc/apt/keyrings curl -fsSL https://pkgs.k8s.io/core:/stable:/v${KURYR_KUBERNETES_VERSION%.*}/deb/Release.key | \ sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v'${KURYR_KUBERNETES_VERSION%.*}'/deb/ /' | \ sudo tee /etc/apt/sources.list.d/kubernetes.list ," apt_get install apt-transport-https curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | \ sudo apt-key add - sudo add-apt-repository -y \ ""deb https://apt.kubernetes.io/ kubernetes-xenial main""",7,5
openstack%2Fvitrage~911142,openstack/vitrage,master,I31051e0d90d6628f9d917cda7c41e30cec7082fa,dnm: checking CI,NEW,2024-03-05 15:40:44.000000000,2024-03-05 16:42:54.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 15:40:44.000000000', 'files': ['setup.cfg'], 'web_link': 'https://opendev.org/openstack/vitrage/commit/53616ce0ecfab996e811f63a80b391d321c93fc2', 'message': 'dnm: checking CI\n\nChange-Id: I31051e0d90d6628f9d917cda7c41e30cec7082fa\n'}]",0,911142,53616ce0ecfab996e811f63a80b391d321c93fc2,2,1,1,9816,,,0,"dnm: checking CI

Change-Id: I31051e0d90d6628f9d917cda7c41e30cec7082fa
",git fetch https://review.opendev.org/openstack/vitrage refs/changes/42/911142/1 && git format-patch -1 --stdout FETCH_HEAD,['setup.cfg'],1,53616ce0ecfab996e811f63a80b391d321c93fc2,,,,1,0
openstack%2Fglance_store~907733,openstack/glance_store,stable/2023.1,I9193df38d613259b61bb369fa1040fb2c51a21d7,Do not show access_key in s3 driver,MERGED,2024-02-05 13:49:51.000000000,2024-03-05 16:30:17.000000000,2024-03-05 16:29:07.000000000,"[{'_account_id': 8122}, {'_account_id': 9303}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-05 13:49:51.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance_store/commit/d5d38fa0a9fe4a07935e4e903997666b952f91a7', 'message': 'Do not show access_key in s3 driver\n\nCloses-Bug: #2047688\nChange-Id: I9193df38d613259b61bb369fa1040fb2c51a21d7\n(cherry picked from commit a5ba027922ba1230b4ae9abb810f36427be6354a)\n'}, {'number': 2, 'created': '2024-02-15 22:37:31.000000000', 'files': ['glance_store/_drivers/s3.py'], 'web_link': 'https://opendev.org/openstack/glance_store/commit/45ad5df01fa7062ba7d3ec99966531623e35ab57', 'message': 'Do not show access_key in s3 driver\n\nAvoid possible leakage of s3 access keys by not including them in log\nmessages.\n\nThis patch includes commit d6e531af4821c8466b1e9404f12f89f6216417f2\n(change I8dc564bed33d6fc71965f4f573ae9109b410b1d4), which addressed\nsome more log messages that the original patch had missed.\n\nThe two commits are squashed here for ease in backporting (and also\nto make sure that *both* are always backported).\n\nCloses-Bug: #2047688\nChange-Id: I9193df38d613259b61bb369fa1040fb2c51a21d7\n(cherry picked from commit a5ba027922ba1230b4ae9abb810f36427be6354a)\n(cherry picked from commit 1583aebb69befea3173396ea161cf896b7d51beb)\n'}]",1,907733,45ad5df01fa7062ba7d3ec99966531623e35ab57,12,3,2,8122,,,0,"Do not show access_key in s3 driver

Avoid possible leakage of s3 access keys by not including them in log
messages.

This patch includes commit d6e531af4821c8466b1e9404f12f89f6216417f2
(change I8dc564bed33d6fc71965f4f573ae9109b410b1d4), which addressed
some more log messages that the original patch had missed.

The two commits are squashed here for ease in backporting (and also
to make sure that *both* are always backported).

Closes-Bug: #2047688
Change-Id: I9193df38d613259b61bb369fa1040fb2c51a21d7
(cherry picked from commit a5ba027922ba1230b4ae9abb810f36427be6354a)
(cherry picked from commit 1583aebb69befea3173396ea161cf896b7d51beb)
",git fetch https://review.opendev.org/openstack/glance_store refs/changes/33/907733/1 && git format-patch -1 --stdout FETCH_HEAD,['glance_store/_drivers/s3.py'],1,d5d38fa0a9fe4a07935e4e903997666b952f91a7,accesskey," ""bucket=%(bucket)s, key=%(key)s)"", {'s3_host': self.s3_host, 'bucket': bucket, 'key': key})"," ""access_key=%(access_key)s, bucket=%(bucket)s, "" ""key=%(key)s)"", {'s3_host': self.s3_host, 'access_key': loc.accesskey, 'bucket': bucket, 'key': key})",2,4
openstack%2Fglance_store~906484,openstack/glance_store,stable/2023.2,I9193df38d613259b61bb369fa1040fb2c51a21d7,Do not show access_key in s3 driver,MERGED,2024-01-24 07:42:11.000000000,2024-03-05 16:30:10.000000000,2024-03-05 16:29:08.000000000,"[{'_account_id': 5314}, {'_account_id': 8122}, {'_account_id': 9303}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-01-24 07:42:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance_store/commit/855c98c18e89ca9ef512661d10332a15dcd0a65c', 'message': 'Do not show access_key in s3 driver\n\nCloses-Bug: #2047688\nChange-Id: I9193df38d613259b61bb369fa1040fb2c51a21d7\n(cherry picked from commit a5ba027922ba1230b4ae9abb810f36427be6354a)\n'}, {'number': 2, 'created': '2024-02-15 22:27:49.000000000', 'files': ['glance_store/_drivers/s3.py'], 'web_link': 'https://opendev.org/openstack/glance_store/commit/1583aebb69befea3173396ea161cf896b7d51beb', 'message': 'Do not show access_key in s3 driver\n\nAvoid possible leakage of s3 access keys by not including them in log\nmessages.\n\nThis patch includes commit d6e531af4821c8466b1e9404f12f89f6216417f2\n(change I8dc564bed33d6fc71965f4f573ae9109b410b1d4), which addressed\nsome more log messages that the original patch had missed.\n\nThe two commits are squashed here for ease in backporting (and also\nto make sure that *both* are always backported).\n\nCloses-Bug: #2047688\nChange-Id: I9193df38d613259b61bb369fa1040fb2c51a21d7\n(cherry picked from commit a5ba027922ba1230b4ae9abb810f36427be6354a)\n'}]",3,906484,1583aebb69befea3173396ea161cf896b7d51beb,16,4,2,19138,,,0,"Do not show access_key in s3 driver

Avoid possible leakage of s3 access keys by not including them in log
messages.

This patch includes commit d6e531af4821c8466b1e9404f12f89f6216417f2
(change I8dc564bed33d6fc71965f4f573ae9109b410b1d4), which addressed
some more log messages that the original patch had missed.

The two commits are squashed here for ease in backporting (and also
to make sure that *both* are always backported).

Closes-Bug: #2047688
Change-Id: I9193df38d613259b61bb369fa1040fb2c51a21d7
(cherry picked from commit a5ba027922ba1230b4ae9abb810f36427be6354a)
",git fetch https://review.opendev.org/openstack/glance_store refs/changes/84/906484/1 && git format-patch -1 --stdout FETCH_HEAD,['glance_store/_drivers/s3.py'],1,855c98c18e89ca9ef512661d10332a15dcd0a65c,accesskey," ""bucket=%(bucket)s, key=%(key)s)"", {'s3_host': self.s3_host, 'bucket': bucket, 'key': key})"," ""access_key=%(access_key)s, bucket=%(bucket)s, "" ""key=%(key)s)"", {'s3_host': self.s3_host, 'access_key': loc.accesskey, 'bucket': bucket, 'key': key})",2,4
openstack%2Fglance_store~907736,openstack/glance_store,stable/zed,I9193df38d613259b61bb369fa1040fb2c51a21d7,Do not show access_key in s3 driver,MERGED,2024-02-05 13:52:44.000000000,2024-03-05 16:30:07.000000000,2024-03-05 16:29:06.000000000,"[{'_account_id': 8122}, {'_account_id': 9303}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-05 13:52:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/glance_store/commit/5a03d0a13349654e6e39562acfa9218e27dd3afd', 'message': 'Do not show access_key in s3 driver\n\nCloses-Bug: #2047688\nChange-Id: I9193df38d613259b61bb369fa1040fb2c51a21d7\n(cherry picked from commit a5ba027922ba1230b4ae9abb810f36427be6354a)\n'}, {'number': 2, 'created': '2024-02-15 22:40:33.000000000', 'files': ['glance_store/_drivers/s3.py'], 'web_link': 'https://opendev.org/openstack/glance_store/commit/f7f87019adbcdb069ea23ccb7b3e187cb52eaf55', 'message': 'Do not show access_key in s3 driver\n\nAvoid possible leakage of s3 access keys by not including them in log\nmessages.\n\nThis patch includes commit d6e531af4821c8466b1e9404f12f89f6216417f2\n(change I8dc564bed33d6fc71965f4f573ae9109b410b1d4), which addressed\nsome more log messages that the original patch had missed.\n\nThe two commits are squashed here for ease in backporting (and also\nto make sure that *both* are always backported).\n\nCloses-Bug: #2047688\nChange-Id: I9193df38d613259b61bb369fa1040fb2c51a21d7\n(cherry picked from commit a5ba027922ba1230b4ae9abb810f36427be6354a)\n(cherry picked from commit 1583aebb69befea3173396ea161cf896b7d51beb)\n(cherry picked from commit 45ad5df01fa7062ba7d3ec99966531623e35ab57)\n'}]",1,907736,f7f87019adbcdb069ea23ccb7b3e187cb52eaf55,12,3,2,8122,,,0,"Do not show access_key in s3 driver

Avoid possible leakage of s3 access keys by not including them in log
messages.

This patch includes commit d6e531af4821c8466b1e9404f12f89f6216417f2
(change I8dc564bed33d6fc71965f4f573ae9109b410b1d4), which addressed
some more log messages that the original patch had missed.

The two commits are squashed here for ease in backporting (and also
to make sure that *both* are always backported).

Closes-Bug: #2047688
Change-Id: I9193df38d613259b61bb369fa1040fb2c51a21d7
(cherry picked from commit a5ba027922ba1230b4ae9abb810f36427be6354a)
(cherry picked from commit 1583aebb69befea3173396ea161cf896b7d51beb)
(cherry picked from commit 45ad5df01fa7062ba7d3ec99966531623e35ab57)
",git fetch https://review.opendev.org/openstack/glance_store refs/changes/36/907736/1 && git format-patch -1 --stdout FETCH_HEAD,['glance_store/_drivers/s3.py'],1,5a03d0a13349654e6e39562acfa9218e27dd3afd,accesskey," ""bucket=%(bucket)s, key=%(key)s)"", {'s3_host': self.s3_host, 'bucket': bucket, 'key': key})"," ""access_key=%(access_key)s, bucket=%(bucket)s, "" ""key=%(key)s)"", {'s3_host': self.s3_host, 'access_key': loc.accesskey, 'bucket': bucket, 'key': key})",2,4
openstack%2Fopenstack-ansible~911051,openstack/openstack-ansible,stable/zed,I987dd5cffc267f0ccafbe5fd0d7d0fa764852d40,Bump SHAs for Zed,MERGED,2024-03-05 09:46:08.000000000,2024-03-05 16:27:37.000000000,2024-03-05 16:22:39.000000000,"[{'_account_id': 22348}, {'_account_id': 25023}, {'_account_id': 31542}]","[{'number': 1, 'created': '2024-03-05 09:46:08.000000000', 'files': ['playbooks/defaults/repo_packages/openstack_services.yml', 'playbooks/defaults/repo_packages/nova_consoles.yml'], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/b81f3e88c18b8a6e72a0d98e2fc171ac2baf762e', 'message': 'Bump SHAs for Zed\n\nChange-Id: I987dd5cffc267f0ccafbe5fd0d7d0fa764852d40\n'}]",0,911051,b81f3e88c18b8a6e72a0d98e2fc171ac2baf762e,8,3,1,28619,,,0,"Bump SHAs for Zed

Change-Id: I987dd5cffc267f0ccafbe5fd0d7d0fa764852d40
",git fetch https://review.opendev.org/openstack/openstack-ansible refs/changes/51/911051/1 && git format-patch -1 --stdout FETCH_HEAD,"['playbooks/defaults/repo_packages/openstack_services.yml', 'playbooks/defaults/repo_packages/nova_consoles.yml']",2,b81f3e88c18b8a6e72a0d98e2fc171ac2baf762e,,### HEAD as of 05.03.2024 ###novncproxy_git_install_branch: 786aba602f617bdc88536c82c35f3ccf6b173468,### HEAD as of 11.01.2024 ###novncproxy_git_install_branch: d3aaf4d5b3f33b80bb6fe21ae71a63c8a331da9b,19,19
openstack%2Fopenstack-ansible~911054,openstack/openstack-ansible,stable/2023.1,Iab37f42150536d9a42cf5061a26b8dc8b2d89844,Bump SHAs for 2023.1 (Antelope),MERGED,2024-03-05 09:55:49.000000000,2024-03-05 16:26:03.000000000,2024-03-05 16:22:41.000000000,"[{'_account_id': 22348}, {'_account_id': 25023}, {'_account_id': 31542}]","[{'number': 1, 'created': '2024-03-05 09:55:49.000000000', 'files': ['inventory/group_vars/trove_all/source_git.yml', 'inventory/group_vars/cinder_all/source_git.yml', 'inventory/group_vars/manila_all/source_git.yml', 'inventory/group_vars/ironic_all/source_git.yml', 'inventory/group_vars/ceilometer_all/source_git.yml', 'inventory/group_vars/keystone_all/source_git.yml', 'inventory/group_vars/cloudkitty_all/source_git.yml', 'inventory/group_vars/all/source_git.yml', 'inventory/group_vars/magnum_all/source_git.yml', 'inventory/group_vars/horizon_all/source_git.yml', 'ansible-role-requirements.yml', 'inventory/group_vars/blazar_all/source_git.yml', 'inventory/group_vars/swift_all/source_git.yml', 'inventory/group_vars/neutron_all/source_git.yml', 'inventory/group_vars/nova_all/source_git.yml', 'inventory/group_vars/octavia_all/source_git.yml', 'inventory/group_vars/aodh_all/source_git.yml'], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/b40c523d5f16a68b99c700194096a1575402ca6d', 'message': 'Bump SHAs for 2023.1 (Antelope)\n\nChange-Id: Iab37f42150536d9a42cf5061a26b8dc8b2d89844\n'}]",0,911054,b40c523d5f16a68b99c700194096a1575402ca6d,10,3,1,28619,,,0,"Bump SHAs for 2023.1 (Antelope)

Change-Id: Iab37f42150536d9a42cf5061a26b8dc8b2d89844
",git fetch https://review.opendev.org/openstack/openstack-ansible refs/changes/54/911054/1 && git format-patch -1 --stdout FETCH_HEAD,"['inventory/group_vars/trove_all/source_git.yml', 'inventory/group_vars/cinder_all/source_git.yml', 'inventory/group_vars/manila_all/source_git.yml', 'inventory/group_vars/ironic_all/source_git.yml', 'inventory/group_vars/ceilometer_all/source_git.yml', 'inventory/group_vars/keystone_all/source_git.yml', 'inventory/group_vars/cloudkitty_all/source_git.yml', 'inventory/group_vars/all/source_git.yml', 'inventory/group_vars/magnum_all/source_git.yml', 'inventory/group_vars/horizon_all/source_git.yml', 'ansible-role-requirements.yml', 'inventory/group_vars/blazar_all/source_git.yml', 'inventory/group_vars/swift_all/source_git.yml', 'inventory/group_vars/neutron_all/source_git.yml', 'inventory/group_vars/nova_all/source_git.yml', 'inventory/group_vars/octavia_all/source_git.yml', 'inventory/group_vars/aodh_all/source_git.yml']",17,b40c523d5f16a68b99c700194096a1575402ca6d,bump_osa,### HEAD as of 05.03.2024 ###aodh_git_install_branch: 61691e5d96fd97547807bece2910d4d982d457c1,### HEAD as of 18.05.2023 ###aodh_git_install_branch: 31b518d83836adf80111cb6bbec7f7b30246e8e7,54,54
openstack%2Fcharm-manila-netapp~909833,openstack/charm-manila-netapp,stable/yoga,I807edb61b6171cfd2260d1eba581019a130090c0,Enable a standalone network for shares,MERGED,2024-02-23 11:24:45.000000000,2024-03-05 16:25:15.000000000,2024-03-05 16:25:15.000000000,"[{'_account_id': 1131}, {'_account_id': 6737}, {'_account_id': 19298}, {'_account_id': 20648}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-23 11:24:45.000000000', 'files': ['templates/queens/manila.conf', 'config.yaml', 'src/charm.py'], 'web_link': 'https://opendev.org/openstack/charm-manila-netapp/commit/644f57c5425a91dd65b9a5ea66ac94924fac7ff9', 'message': 'Enable a standalone network for shares\n\nThe patch adds config options and template changes to enable a single\nstandalone network for serving shares from a NetApp appliance.\n\nCloses-Bug: #1989216\nChange-Id: I807edb61b6171cfd2260d1eba581019a130090c0\n(cherry picked from commit 29af821ce468f27dfe66c4ebde4b86e86c923984)\n(cherry picked from commit 046338217fdf309fcb6abd9127d53f1900f4d549)\n'}]",1,909833,644f57c5425a91dd65b9a5ea66ac94924fac7ff9,9,5,1,14567,,,0,"Enable a standalone network for shares

The patch adds config options and template changes to enable a single
standalone network for serving shares from a NetApp appliance.

Closes-Bug: #1989216
Change-Id: I807edb61b6171cfd2260d1eba581019a130090c0
(cherry picked from commit 29af821ce468f27dfe66c4ebde4b86e86c923984)
(cherry picked from commit 046338217fdf309fcb6abd9127d53f1900f4d549)
",git fetch https://review.opendev.org/openstack/charm-manila-netapp refs/changes/33/909833/1 && git format-patch -1 --stdout FETCH_HEAD,"['templates/queens/manila.conf', 'config.yaml', 'src/charm.py']",3,644f57c5425a91dd65b9a5ea66ac94924fac7ff9,, if self.options.standalone_network: required_configs.append('standalone-network-gateway') required_configs.append('standalone-network-mask'),,106,9
openstack%2Freleases~910433,openstack/releases,master,Ic47e05836819a01feea815af418448fec192bd0d,[requirements] Transition EM branches to Unmaintained,MERGED,2024-02-27 19:10:25.000000000,2024-03-05 16:11:00.000000000,2024-03-05 16:11:00.000000000,"[{'_account_id': 12898}, {'_account_id': 13252}, {'_account_id': 14288}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-27 19:10:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/releases/commit/4dcd70ffefc79ea8aef0e4a38cba03331bc0db52', 'message': '[requirements] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: Ic47e05836819a01feea815af418448fec192bd0d\n'}, {'number': 2, 'created': '2024-03-05 15:37:15.000000000', 'files': ['deliverables/xena/requirements.yaml', 'deliverables/victoria/requirements.yaml', 'deliverables/wallaby/requirements.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/ac6b438b75d6bcca477dca2d8929857697e2199d', 'message': '[requirements] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: Ic47e05836819a01feea815af418448fec192bd0d\n'}]",4,910433,ac6b438b75d6bcca477dca2d8929857697e2199d,10,5,2,17685,,,0,"[requirements] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: Ic47e05836819a01feea815af418448fec192bd0d
",git fetch https://review.opendev.org/openstack/releases refs/changes/33/910433/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/xena/requirements.yaml', 'deliverables/victoria/requirements.yaml', 'deliverables/wallaby/requirements.yaml']",3,4dcd70ffefc79ea8aef0e4a38cba03331bc0db52,vwx-unmaintained, - name: unmaintained/wallaby location: wallaby-eom releases: - version: wallaby-eom projects: - repo: openstack/requirements hash: 58ee43a8a505f4b9a4412e07d116064ac80dc1f0,,21,0
openstack%2Fblazar~910598,openstack/blazar,master,I055fed2ef2f4953cdd7b215ccafaa27767e915ae,Replace usage of LegacyEngineFacade,MERGED,2024-02-29 12:46:48.000000000,2024-03-05 16:09:23.000000000,2024-03-05 16:08:25.000000000,"[{'_account_id': 15197}, {'_account_id': 22348}, {'_account_id': 35263}]","[{'number': 1, 'created': '2024-02-29 12:46:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/blazar/commit/75698765bf921f3b92f8ae73486b5fcf9b4ad6ba', 'message': '[WIP] Remove usage of LegacyEngineFacade\n\nChange-Id: I055fed2ef2f4953cdd7b215ccafaa27767e915ae\n'}, {'number': 2, 'created': '2024-03-04 09:31:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/blazar/commit/67834f5b281ea37d7f0c58d0a4661653979621d5', 'message': '[WIP] Remove usage of LegacyEngineFacade\n\nChange-Id: I055fed2ef2f4953cdd7b215ccafaa27767e915ae\n'}, {'number': 3, 'created': '2024-03-04 11:09:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/blazar/commit/153e2dc357d85cf0b96251c1d60a2a721fe99b70', 'message': 'Replace usage of LegacyEngineFacade\n\nSwitch to using oslo_db.sqlalchemy.enginefacade instead, as this is\nrequired for SQLAlchemy 2.x support.\n\nChange-Id: I055fed2ef2f4953cdd7b215ccafaa27767e915ae\n'}, {'number': 4, 'created': '2024-03-04 16:13:03.000000000', 'files': ['blazar/db/sqlalchemy/facade_wrapper.py', 'blazar/tests/__init__.py', 'blazar/db/sqlalchemy/api.py', 'blazar/db/sqlalchemy/utils.py'], 'web_link': 'https://opendev.org/openstack/blazar/commit/b91c0f691ea562ccab7e1514ff9101f41e56b598', 'message': 'Replace usage of LegacyEngineFacade\n\nSwitch to using oslo_db.sqlalchemy.enginefacade instead, as this is\nrequired for SQLAlchemy 2.x support.\n\nChange-Id: I055fed2ef2f4953cdd7b215ccafaa27767e915ae\n'}]",44,910598,b91c0f691ea562ccab7e1514ff9101f41e56b598,15,3,4,35263,,,0,"Replace usage of LegacyEngineFacade

Switch to using oslo_db.sqlalchemy.enginefacade instead, as this is
required for SQLAlchemy 2.x support.

Change-Id: I055fed2ef2f4953cdd7b215ccafaa27767e915ae
",git fetch https://review.opendev.org/openstack/blazar refs/changes/98/910598/1 && git format-patch -1 --stdout FETCH_HEAD,"['blazar/db/sqlalchemy/facade_wrapper.py', 'blazar/tests/__init__.py', 'blazar/db/sqlalchemy/api.py', 'blazar/db/sqlalchemy/utils.py']",4,75698765bf921f3b92f8ae73486b5fcf9b4ad6ba,sqlalchemy-20," with facade_wrapper.session_for_read() as session: border0 = start_date <= models.Lease.end_date border1 = models.Lease.start_date <= end_date query = (session.query(models.Lease).join(models.Reservation) .filter(models.Reservation.resource_id == resource_id) .filter(sa.and_(border0, border1))) for lease in query: yield lease with facade_wrapper.session_for_read() as session: border0 = start_date <= models.Lease.end_date border1 = models.Lease.start_date <= end_date query = (session.query(models.Lease).join(models.Reservation) .join(models.ComputeHostAllocation) .filter(models.ComputeHostAllocation.compute_host_id == host_id) .filter(sa.and_(border0, border1))) for lease in query: yield lease with facade_wrapper.session_for_read() as session: border0 = sa.and_(models.Lease.start_date < start_date, models.Lease.end_date < start_date) border1 = sa.and_(models.Lease.start_date > end_date, models.Lease.end_date > end_date) query = (session.query(models.Lease).join(models.Reservation) .join(models.FloatingIPAllocation) .filter(models.FloatingIPAllocation.floatingip_id == fip_id) .filter(~sa.or_(border0, border1))) for lease in query: yield lease with facade_wrapper.session_for_read() as session: border0 = start_date <= models.Lease.end_date border1 = models.Lease.start_date <= end_date query = (session.query(models.Reservation).join(models.Lease) .join(models.ComputeHostAllocation) .filter(models.ComputeHostAllocation.compute_host_id == host_id) .filter(sa.and_(border0, border1))) return query.all() with facade_wrapper.session_for_read() as session: border0 = start_date <= models.Lease.end_date border1 = models.Lease.start_date <= end_date query = (session.query(models.Reservation).join(models.Lease) .join(models.ComputeHostAllocation) .filter(models.ComputeHostAllocation.compute_host_id .in_(host_ids)) .filter(sa.and_(border0, border1))) return query.all() with facade_wrapper.session_for_read() as session: # Get all reservations applicable reservations = get_reservations_for_allocations( session, start_date, end_date, lease_id, reservation_id) # Select (reservation_id, host_id) for all reservations allocations_query = (session.query( models.ComputeHostAllocation.reservation_id, models.ComputeHostAllocation.compute_host_id) .filter(models.ComputeHostAllocation.compute_host_id.in_(host_ids)) .filter(models.ComputeHostAllocation.reservation_id.in_( list(set([x['id'] for x in reservations]))))) # Create a mapping of reservation_id to list of host_ids allocations = defaultdict(list) for row in allocations_query.all(): allocations[row[0]].append(row[1]) # Copy the host id lists to the corresponding reservation for r in reservations: r['host_ids'] = allocations[r['id']] return reservations with facade_wrapper.session_for_read() as session: reservations = get_reservations_for_allocations( session, start_date, end_date, lease_id, reservation_id) allocations_query = (session.query( models.FloatingIPAllocation.reservation_id, models.FloatingIPAllocation.floatingip_id) .filter(models.FloatingIPAllocation.floatingip_id.in_(fip_ids)) .filter(models.FloatingIPAllocation.reservation_id.in_( list(set([x['id'] for x in reservations]))))) allocations = defaultdict(list) for row in allocations_query.all(): allocations[row[0]].append(row[1]) for r in reservations: r['floatingip_ids'] = allocations[r['id']] return reservations","get_session = facade_wrapper.get_session session = get_session() border0 = start_date <= models.Lease.end_date border1 = models.Lease.start_date <= end_date query = (session.query(models.Lease).join(models.Reservation) .filter(models.Reservation.resource_id == resource_id) .filter(sa.and_(border0, border1))) for lease in query: yield lease session = get_session() border0 = start_date <= models.Lease.end_date border1 = models.Lease.start_date <= end_date query = (session.query(models.Lease).join(models.Reservation) .join(models.ComputeHostAllocation) .filter(models.ComputeHostAllocation.compute_host_id == host_id) .filter(sa.and_(border0, border1))) for lease in query: yield lease session = get_session() border0 = sa.and_(models.Lease.start_date < start_date, models.Lease.end_date < start_date) border1 = sa.and_(models.Lease.start_date > end_date, models.Lease.end_date > end_date) query = (session.query(models.Lease).join(models.Reservation) .join(models.FloatingIPAllocation) .filter(models.FloatingIPAllocation.floatingip_id == fip_id) .filter(~sa.or_(border0, border1))) for lease in query: yield lease session = get_session() border0 = start_date <= models.Lease.end_date border1 = models.Lease.start_date <= end_date query = (session.query(models.Reservation).join(models.Lease) .join(models.ComputeHostAllocation) .filter(models.ComputeHostAllocation.compute_host_id == host_id) .filter(sa.and_(border0, border1))) return query.all() session = get_session() border0 = start_date <= models.Lease.end_date border1 = models.Lease.start_date <= end_date query = (session.query(models.Reservation).join(models.Lease) .join(models.ComputeHostAllocation) .filter(models.ComputeHostAllocation.compute_host_id .in_(host_ids)) .filter(sa.and_(border0, border1))) return query.all() session = get_session() # Get all reservations applicable reservations = get_reservations_for_allocations( session, start_date, end_date, lease_id, reservation_id) # Select (reservation_id, host_id) for all reservations allocations_query = (session.query( models.ComputeHostAllocation.reservation_id, models.ComputeHostAllocation.compute_host_id) .filter(models.ComputeHostAllocation.compute_host_id.in_(host_ids)) .filter(models.ComputeHostAllocation.reservation_id.in_( list(set([x['id'] for x in reservations]))))) # Create a mapping of reservation_id to list of host_ids allocations = defaultdict(list) for row in allocations_query.all(): allocations[row[0]].append(row[1]) # Copy the host id lists to the corresponding reservation for r in reservations: r['host_ids'] = allocations[r['id']] return reservations session = get_session() reservations = get_reservations_for_allocations( session, start_date, end_date, lease_id, reservation_id) allocations_query = (session.query( models.FloatingIPAllocation.reservation_id, models.FloatingIPAllocation.floatingip_id) .filter(models.FloatingIPAllocation.floatingip_id.in_(fip_ids)) .filter(models.FloatingIPAllocation.reservation_id.in_( list(set([x['id'] for x in reservations]))))) allocations = defaultdict(list) for row in allocations_query.all(): allocations[row[0]].append(row[1]) for r in reservations: r['floatingip_ids'] = allocations[r['id']] return reservations",244,279
openstack%2Fopenstack-ansible~910386,openstack/openstack-ansible,master,Idab46a7c557366dabd6979ee08c1332a2d2d7515,Update upstream SHAs,MERGED,2024-02-27 18:52:16.000000000,2024-03-05 16:09:12.000000000,2024-03-05 16:07:44.000000000,"[{'_account_id': 22348}, {'_account_id': 25023}, {'_account_id': 31542}]","[{'number': 1, 'created': '2024-02-27 18:52:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/40e595ee1ef7480d4d5eb95e594e9a7fefbaa568', 'message': 'Update upstream SHAs\n\nCloses-Bug: #2054224\nChange-Id: Idab46a7c557366dabd6979ee08c1332a2d2d7515\n'}, {'number': 2, 'created': '2024-02-28 14:11:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/75ed5ba058e5cd6d7ff816bad06eef38e9f3666c', 'message': 'Update upstream SHAs\n\nCloses-Bug: #2054224\nChange-Id: Idab46a7c557366dabd6979ee08c1332a2d2d7515\n'}, {'number': 3, 'created': '2024-03-05 09:18:38.000000000', 'files': ['ansible-collection-requirements.yml', 'inventory/group_vars/magnum_all/source_git.yml', 'inventory/group_vars/designate_all/source_git.yml', 'inventory/group_vars/blazar_all/source_git.yml', 'inventory/group_vars/zun_all/source_git.yml', 'inventory/group_vars/neutron_all/source_git.yml', 'inventory/group_vars/nova_all/source_git.yml', 'inventory/group_vars/masakari_all/source_git.yml', 'inventory/group_vars/trove_all/source_git.yml', 'inventory/group_vars/cinder_all/source_git.yml', 'inventory/group_vars/manila_all/source_git.yml', 'inventory/group_vars/placement_all/source_git.yml', 'inventory/group_vars/ironic_all/source_git.yml', 'inventory/group_vars/ceilometer_all/source_git.yml', 'inventory/group_vars/keystone_all/source_git.yml', 'inventory/group_vars/cloudkitty_all/source_git.yml', 'inventory/group_vars/all/source_git.yml', 'inventory/group_vars/heat_all/source_git.yml', 'inventory/group_vars/horizon_all/source_git.yml', 'inventory/group_vars/utility_all/source_git.yml', 'inventory/group_vars/tacker_all/source_git.yml', 'inventory/group_vars/mistral_all/source_git.yml', 'inventory/group_vars/swift_all/source_git.yml', 'inventory/group_vars/barbican_all/source_git.yml', 'inventory/group_vars/octavia_all/source_git.yml', 'inventory/group_vars/aodh_all/source_git.yml', 'inventory/group_vars/glance_all/source_git.yml'], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/e72984ca956d44d8056ca4ea8ea7e263bc3c8881', 'message': 'Update upstream SHAs\n\nCloses-Bug: #2054224\nChange-Id: Idab46a7c557366dabd6979ee08c1332a2d2d7515\n'}]",1,910386,e72984ca956d44d8056ca4ea8ea7e263bc3c8881,15,3,3,28619,,,0,"Update upstream SHAs

Closes-Bug: #2054224
Change-Id: Idab46a7c557366dabd6979ee08c1332a2d2d7515
",git fetch https://review.opendev.org/openstack/openstack-ansible refs/changes/86/910386/1 && git format-patch -1 --stdout FETCH_HEAD,"['ansible-collection-requirements.yml', 'inventory/group_vars/magnum_all/source_git.yml', 'inventory/group_vars/designate_all/source_git.yml', 'inventory/group_vars/blazar_all/source_git.yml', 'inventory/group_vars/zun_all/source_git.yml', 'inventory/group_vars/neutron_all/source_git.yml', 'inventory/group_vars/nova_all/source_git.yml', 'inventory/group_vars/masakari_all/source_git.yml', 'inventory/group_vars/trove_all/source_git.yml', 'inventory/group_vars/cinder_all/source_git.yml', 'inventory/group_vars/manila_all/source_git.yml', 'inventory/group_vars/placement_all/source_git.yml', 'inventory/group_vars/ironic_all/source_git.yml', 'inventory/group_vars/ceilometer_all/source_git.yml', 'inventory/group_vars/keystone_all/source_git.yml', 'inventory/group_vars/cloudkitty_all/source_git.yml', 'inventory/group_vars/all/source_git.yml', 'inventory/group_vars/heat_all/source_git.yml', 'inventory/group_vars/horizon_all/source_git.yml', 'inventory/group_vars/utility_all/source_git.yml', 'inventory/group_vars/tacker_all/source_git.yml', 'inventory/group_vars/mistral_all/source_git.yml', 'inventory/group_vars/swift_all/source_git.yml', 'inventory/group_vars/barbican_all/source_git.yml', 'inventory/group_vars/octavia_all/source_git.yml', 'inventory/group_vars/aodh_all/source_git.yml', 'inventory/group_vars/glance_all/source_git.yml']",27,40e595ee1ef7480d4d5eb95e594e9a7fefbaa568,bump_osa,### HEAD as of 27.02.2024 ###glance_git_install_branch: 7b40c33cb6e89ca5807e476f49927b32c99ce2bf,### HEAD as of 19.01.2024 ###glance_git_install_branch: f429b53e0474553992f43c7045498156ee36d5cb,88,88
openstack%2Fopenstack-helm-infra~910996,openstack/openstack-helm-infra,master,I0d69bd920c8e62915853ecc3b22825fa98f7edf3,[ceph-osd] Allow lvcreate to wipe existing LV metadata,MERGED,2024-03-04 20:37:52.000000000,2024-03-05 16:01:50.000000000,2024-03-05 16:00:50.000000000,"[{'_account_id': 3009}, {'_account_id': 22348}, {'_account_id': 34520}, {'_account_id': 34821}]","[{'number': 1, 'created': '2024-03-04 20:37:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm-infra/commit/be5506d7261c9462b7198463718070aa820e0997', 'message': '[ceph-osd] Allow lvcreate to wipe existing LV metadata\n\nIn some cases when OSD metadata disks are reused and redeployed,\nlvcreate can fail to create a DB or WAL volume because it overlaps\nan old, deleted volume on the same disk whose signature still\nexists at the offsets that trigger detection and abort the LV\ncreation process when the user is asked whether or not to wipe to\nold signature. Adding a --yes argument to the lvcreate command\nautomatically answers yes to the wipe question and allows lvcreate\nto wipe the old signature.\n\nChange-Id: I0d69bd920c8e62915853ecc3b22825fa98f7edf3\n'}, {'number': 2, 'created': '2024-03-04 20:40:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm-infra/commit/753e8a7341acd23906987e5f5798d4fdb93ba3b9', 'message': '[ceph-osd] Allow lvcreate to wipe existing LV metadata\n\nIn some cases when OSD metadata disks are reused and redeployed,\nlvcreate can fail to create a DB or WAL volume because it overlaps\nan old, deleted volume on the same disk whose signature still\nexists at the offsets that trigger detection and abort the LV\ncreation process when the user is asked whether or not to wipe to\nold signature. Adding a --yes argument to the lvcreate command\nautomatically answers yes to the wipe question and allows lvcreate\nto wipe the old signature.\n\nChange-Id: I0d69bd920c8e62915853ecc3b22825fa98f7edf3\n'}, {'number': 3, 'created': '2024-03-04 21:19:50.000000000', 'files': ['ceph-osd/templates/bin/osd/ceph-volume/_init-ceph-volume-helper-bluestore.sh.tpl', 'ceph-osd/Chart.yaml', 'releasenotes/notes/ceph-osd.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-helm-infra/commit/1e05f3151d84726f0c9c516dd14364fe88db0fe8', 'message': '[ceph-osd] Allow lvcreate to wipe existing LV metadata\n\nIn some cases when OSD metadata disks are reused and redeployed,\nlvcreate can fail to create a DB or WAL volume because it overlaps\nan old, deleted volume on the same disk whose signature still\nexists at the offsets that trigger detection and abort the LV\ncreation process when the user is asked whether or not to wipe to\nold signature. Adding a --yes argument to the lvcreate command\nautomatically answers yes to the wipe question and allows lvcreate\nto wipe the old signature.\n\nChange-Id: I0d69bd920c8e62915853ecc3b22825fa98f7edf3\n'}]",0,910996,1e05f3151d84726f0c9c516dd14364fe88db0fe8,12,4,3,29974,,,0,"[ceph-osd] Allow lvcreate to wipe existing LV metadata

In some cases when OSD metadata disks are reused and redeployed,
lvcreate can fail to create a DB or WAL volume because it overlaps
an old, deleted volume on the same disk whose signature still
exists at the offsets that trigger detection and abort the LV
creation process when the user is asked whether or not to wipe to
old signature. Adding a --yes argument to the lvcreate command
automatically answers yes to the wipe question and allows lvcreate
to wipe the old signature.

Change-Id: I0d69bd920c8e62915853ecc3b22825fa98f7edf3
",git fetch https://review.opendev.org/openstack/openstack-helm-infra refs/changes/96/910996/1 && git format-patch -1 --stdout FETCH_HEAD,['ceph-osd/templates/bin/osd/ceph-volume/_init-ceph-volume-helper-bluestore.sh.tpl'],1,be5506d7261c9462b7198463718070aa820e0997,," create_lv_if_needed ""${block_device}"" ""${vg}"" ""--yes -L ${block_device_size}"" ""${lv_name}"""," create_lv_if_needed ""${block_device}"" ""${vg}"" ""-L ${block_device_size}"" ""${lv_name}""",1,1
openstack%2Fironic~910528,openstack/ironic,stable/2023.1,Ibe3274d7fabfd4f06af8aba1af0957fa36e8d217,stable-only: pin proliantutils/scciclient to prevent break,MERGED,2024-02-28 15:53:31.000000000,2024-03-05 15:59:24.000000000,2024-03-05 15:56:50.000000000,"[{'_account_id': 10342}, {'_account_id': 11655}, {'_account_id': 15519}, {'_account_id': 22348}, {'_account_id': 32029}]","[{'number': 1, 'created': '2024-02-28 15:53:31.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/36bac66d2e77b9ebc070252c847191f5a77e6e16', 'message': 'stable-only: pin proliantutils to prevent break\n\nProliantutils 2.16.0 roughly times with the 2023.2\nrelease of ironic and a switch to lextudio-pysnmp,\nhowever in this branch of ironic, however this breaks\ndepending on order and collides with pysnmp namespace.\n\nChange-Id: Ibe3274d7fabfd4f06af8aba1af0957fa36e8d217\n'}, {'number': 2, 'created': '2024-02-29 01:05:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/0ce86d042a4a426050e0acad7686f94d664b6037', 'message': 'stable-only: pin proliantutils/scciclient to prevent break\n\nProliantutils 2.16.0 roughly times with the 2023.2\nrelease of ironic and a switch to lextudio-pysnmp,\nhowever in this branch of ironic, however this breaks\ndepending on order and collides with pysnmp namespace.\n\nAlso pins python-scciclient to <0.14.0 as to also not\npull in the dependency difference.\n\nChange-Id: Ibe3274d7fabfd4f06af8aba1af0957fa36e8d217\n'}, {'number': 3, 'created': '2024-02-29 18:28:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/9534c7261c8f1deec5cf6fbef50d68d4c6b5d23d', 'message': 'stable-only: pin proliantutils/scciclient to prevent break\n\nProliantutils 2.16.0 roughly times with the 2023.2\nrelease of ironic and a switch to lextudio-pysnmp,\nhowever in this branch of ironic, however this breaks\ndepending on order and collides with pysnmp namespace.\n\nAlso pins python-scciclient to <0.14.0 as to also not\npull in the dependency difference.\n\nAlso, Also, disables standalone jobs from voting while we\nwork to figure out what broke.\n\nChange-Id: Ibe3274d7fabfd4f06af8aba1af0957fa36e8d217\n'}, {'number': 4, 'created': '2024-03-01 14:01:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/cf8c0c1de19eebf379434157b2587ed236624d3f', 'message': 'stable-only: pin proliantutils/scciclient to prevent break\n\nProliantutils 2.16.0 roughly times with the 2023.2\nrelease of ironic and a switch to lextudio-pysnmp,\nhowever in this branch of ironic, however this breaks\ndepending on order and collides with pysnmp namespace.\n\nAlso pins python-scciclient to <0.14.0 as to also not\npull in the dependency difference.\n\nAlso, Also, disables standalone, grenade, and metalsmith\njobs from voting while we work to stabilize CI across multiple\nbranches.\n\nChange-Id: Ibe3274d7fabfd4f06af8aba1af0957fa36e8d217\n'}, {'number': 5, 'created': '2024-03-04 15:47:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/91e06baa071ef0cc5a376f250a8d0e92799b6a81', 'message': 'stable-only: pin proliantutils/scciclient to prevent break\n\nProliantutils 2.16.0 roughly times with the 2023.2\nrelease of ironic and a switch to lextudio-pysnmp,\nhowever in this branch of ironic, however this breaks\ndepending on order and collides with pysnmp namespace.\n\nAlso pins python-scciclient to <0.14.0 as to also not\npull in the dependency difference.\n\nAlso, Also, disables standalone, grenade, and metalsmith,\nand snmp jobs from voting while we work to stabilize CI across\nmultiple branches.\n\nChange-Id: Ibe3274d7fabfd4f06af8aba1af0957fa36e8d217\n'}, {'number': 6, 'created': '2024-03-05 04:44:54.000000000', 'files': ['driver-requirements.txt', 'zuul.d/project.yaml'], 'web_link': 'https://opendev.org/openstack/ironic/commit/d278fdb6d25250232aca776003cdf6eb675a1132', 'message': 'stable-only: pin proliantutils/scciclient to prevent break\n\nProliantutils 2.16.0 roughly times with the 2023.2\nrelease of ironic and a switch to lextudio-pysnmp,\nhowever in this branch of ironic, however this breaks\ndepending on order and collides with pysnmp namespace.\n\nAlso pins python-scciclient to <0.14.0 as to also not\npull in the dependency difference.\n\nAlso, Also, disables standalone, grenade, and metalsmith,\nand snmp jobs from voting while we work to stabilize CI across\nmultiple branches.\n\nChange-Id: Ibe3274d7fabfd4f06af8aba1af0957fa36e8d217\n'}]",5,910528,d278fdb6d25250232aca776003cdf6eb675a1132,46,5,6,11655,,,0,"stable-only: pin proliantutils/scciclient to prevent break

Proliantutils 2.16.0 roughly times with the 2023.2
release of ironic and a switch to lextudio-pysnmp,
however in this branch of ironic, however this breaks
depending on order and collides with pysnmp namespace.

Also pins python-scciclient to <0.14.0 as to also not
pull in the dependency difference.

Also, Also, disables standalone, grenade, and metalsmith,
and snmp jobs from voting while we work to stabilize CI across
multiple branches.

Change-Id: Ibe3274d7fabfd4f06af8aba1af0957fa36e8d217
",git fetch https://review.opendev.org/openstack/ironic refs/changes/28/910528/1 && git format-patch -1 --stdout FETCH_HEAD,['driver-requirements.txt'],1,36bac66d2e77b9ebc070252c847191f5a77e6e16,,"# NOTE(TheJulia): Proliantutils 2.16.0 moves to pysnmp-lextudio # however that breaks on imports and with testing due to collission # with pysnmp. proliantutils>=2.14.0,<2.16.0",proliantutils>=2.14.0,4,1
openstack%2Fdevstack~910989,openstack/devstack,stable/xena,Icd487e1012263a9b0bc13b529d31ff2025108adf,Drop the devstack-single-node-centos-7 nodeset,MERGED,2024-03-04 19:28:49.000000000,2024-03-05 15:57:56.000000000,2024-03-05 15:55:07.000000000,"[{'_account_id': 8556}, {'_account_id': 13252}, {'_account_id': 22348}, {'_account_id': 32029}]","[{'number': 1, 'created': '2024-03-04 19:28:49.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/devstack/commit/de9a15adbcc12dacef5b58da18c72d65c087651a', 'message': ""Drop the devstack-single-node-centos-7 nodeset\n\nOpenDev is preparing to remove centos-7 nodes on March 15[*]. This\nchange drops one nodeset definition which is the last remaining\nreference on DevStack's master branch.\n\n[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/\n\nChange-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf\n(cherry picked from commit c7472801f78c8b9f4b4d54c256a1274fdc8c08cb)\n""}]",1,910989,de9a15adbcc12dacef5b58da18c72d65c087651a,11,4,1,5263,,,0,"Drop the devstack-single-node-centos-7 nodeset

OpenDev is preparing to remove centos-7 nodes on March 15[*]. This
change drops one nodeset definition which is the last remaining
reference on DevStack's master branch.

[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/

Change-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf
(cherry picked from commit c7472801f78c8b9f4b4d54c256a1274fdc8c08cb)
",git fetch https://review.opendev.org/openstack/devstack refs/changes/89/910989/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,de9a15adbcc12dacef5b58da18c72d65c087651a,drop-centos-7,, name: devstack-single-node-centos-7 nodes: - name: controller label: centos-7 groups: - name: tempest nodes: - controller - nodeset:,0,10
openstack%2Fcharm-nova-compute~908187,openstack/charm-nova-compute,stable/zed,I1ae12d787a1f8e7761ca06b5a80049c1c62e9e90,[v2] Fix migration across nova-compute apps using ceph,MERGED,2024-02-06 18:29:54.000000000,2024-03-05 15:57:54.000000000,2024-03-05 15:57:54.000000000,"[{'_account_id': 1131}, {'_account_id': 10058}, {'_account_id': 19298}, {'_account_id': 20648}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-06 18:29:54.000000000', 'files': ['hooks/nova_compute_context.py', 'unit_tests/test_nova_compute_hooks.py', 'hooks/nova_compute_hooks.py', 'unit_tests/test_nova_compute_contexts.py'], 'web_link': 'https://opendev.org/openstack/charm-nova-compute/commit/8c3549d828c5ba0d6306b76494fdbd1abd9d8471', 'message': ""[v2] Fix migration across nova-compute apps using ceph\n\nThis change reworks previous changes [1] and [2] that had\nbeen respectively reverted and abandoned.\n\nWhen using the config libvirt-image-backend=rbd, VMs\ncreated from image have their disk data stored in ceph\ninstead of the compute node itself.\n\nWhen performing live-migrations, both nodes need to\naccess the same ceph credentials to access the VM's\ndisk in ceph, but this is currently not possible\nif the nodes involved pertain to different\nnova-compute charm apps.\n\nThis patch changes app name sent to ceph to\n'nova-compute-ceph-auth-c91ce26f', a unique name common to\nall nova-compute apps, allowing all nova-compute apps to\nuse the same ceph auth.\n\nThis change also ensures newly deployed nodes install\nthe old credentials first on ceph-joined hook,\nand then supercedes it with the new credentials\non ceph-changed hook, therefore also retaining\nthe old credentials.\n\n[1] https://review.opendev.org/889642\n[2] https://review.opendev.org/896155\n\nCloses-bug: #2028559\nRelated-bug: #2037003\n\nFunc-Test-Pr: https://github.com/openstack-charmers/zaza-openstack-tests/pull/1183\n\nChange-Id: I1ae12d787a1f8e7761ca06b5a80049c1c62e9e90\n(cherry picked from commit 650f3a5d511690ec27648b30f3b24532378a33a1)\n(cherry picked from commit 28233f9a943f9c6c67d4934cf693869c9c03b1e4)\n(cherry picked from commit ecaf8010fc6ee2e28e6a0f05cb2ae0a8ce25b5e6)\n""}]",3,908187,8c3549d828c5ba0d6306b76494fdbd1abd9d8471,12,5,1,14567,,,0,"[v2] Fix migration across nova-compute apps using ceph

This change reworks previous changes [1] and [2] that had
been respectively reverted and abandoned.

When using the config libvirt-image-backend=rbd, VMs
created from image have their disk data stored in ceph
instead of the compute node itself.

When performing live-migrations, both nodes need to
access the same ceph credentials to access the VM's
disk in ceph, but this is currently not possible
if the nodes involved pertain to different
nova-compute charm apps.

This patch changes app name sent to ceph to
'nova-compute-ceph-auth-c91ce26f', a unique name common to
all nova-compute apps, allowing all nova-compute apps to
use the same ceph auth.

This change also ensures newly deployed nodes install
the old credentials first on ceph-joined hook,
and then supercedes it with the new credentials
on ceph-changed hook, therefore also retaining
the old credentials.

[1] https://review.opendev.org/889642
[2] https://review.opendev.org/896155

Closes-bug: #2028559
Related-bug: #2037003

Func-Test-Pr: https://github.com/openstack-charmers/zaza-openstack-tests/pull/1183

Change-Id: I1ae12d787a1f8e7761ca06b5a80049c1c62e9e90
(cherry picked from commit 650f3a5d511690ec27648b30f3b24532378a33a1)
(cherry picked from commit 28233f9a943f9c6c67d4934cf693869c9c03b1e4)
(cherry picked from commit ecaf8010fc6ee2e28e6a0f05cb2ae0a8ce25b5e6)
",git fetch https://review.opendev.org/openstack/charm-nova-compute refs/changes/87/908187/1 && git format-patch -1 --stdout FETCH_HEAD,"['hooks/nova_compute_context.py', 'unit_tests/test_nova_compute_hooks.py', 'hooks/nova_compute_hooks.py', 'unit_tests/test_nova_compute_contexts.py']",4,8c3549d828c5ba0d6306b76494fdbd1abd9d8471,," 'service_name', @patch('nova_compute_context.local_unit') def test_sent_ceph_application_name_empty_rel_data_default( self, local_unit): local_unit.return_value = 'nova-compute-kvm/0' self.relation_ids.return_value = ['ceph:0'] self.test_relation.set({}) self.service_name.return_value = 'nova-compute-kvm' self.assertEqual( context.sent_ceph_application_name(), 'nova-compute-kvm') @patch('nova_compute_context.local_unit') def test_sent_ceph_application_name(self, local_unit): local_unit.return_value = 'nova-compute-kvm/0' self.relation_ids.return_value = ['ceph:0'] self.test_relation.set({'application-name': 'ceph-nova-compute'}) self.service_name.return_value = 'nova-compute-kvm' self.assertEqual( context.sent_ceph_application_name(), 'ceph-nova-compute') @patch('nova_compute_context.sent_ceph_application_name') @patch('charmhelpers.contrib.openstack.context.CephContext.__call__') def test_secret_uuid_old(self, mock_call, sent_name): sent_name.return_value = 'nova-compute-kvm' mock_call.return_value = {'foo': 'bar'} ctxt = context.NovaComputeCephContext()() self.assertEqual( context.CEPH_OLD_SECRET_UUID, ctxt['ceph_secret_uuid']) self.assertEqual( context.CEPH_OLD_SECRET_UUID, ctxt['rbd_secret_uuid']) self.assertEqual('nova-compute-kvm', ctxt['service_name']) self.assertEqual('nova-compute-kvm', ctxt['rbd_user']) @patch('nova_compute_context.sent_ceph_application_name') @patch('charmhelpers.contrib.openstack.context.CephContext.__call__') def test_secret_uuid_old_2(self, mock_call, sent_name): sent_name.return_value = 'nova-compute' mock_call.return_value = {'foo': 'bar'} ctxt = context.NovaComputeCephContext()() self.assertEqual( context.CEPH_OLD_SECRET_UUID, ctxt['ceph_secret_uuid']) self.assertEqual( context.CEPH_OLD_SECRET_UUID, ctxt['rbd_secret_uuid']) self.assertEqual('nova-compute', ctxt['service_name']) self.assertEqual('nova-compute', ctxt['rbd_user']) @patch('nova_compute_context.sent_ceph_application_name') @patch('charmhelpers.contrib.openstack.context.CephContext.__call__') def test_secret_uuid_new(self, mock_call, sent_name): sent_name.return_value = context.CEPH_AUTH_CRED_NAME mock_call.return_value = {'foo': 'bar'} ctxt = context.NovaComputeCephContext()() self.assertEqual(context.CEPH_SECRET_UUID, ctxt['ceph_secret_uuid']) self.assertEqual(context.CEPH_SECRET_UUID, ctxt['rbd_secret_uuid']) self.assertEqual(context.CEPH_AUTH_CRED_NAME, ctxt['service_name']) self.assertEqual(context.CEPH_AUTH_CRED_NAME, ctxt['rbd_user']) ",,195,19
openstack%2Fcharm-nova-compute~908936,openstack/charm-nova-compute,stable/2023.2,Ia23fbf341d5b7ad469337d8a0c65c18ec519a891,AppArmor policy update for NVMeoF,MERGED,2024-02-14 16:31:41.000000000,2024-03-05 15:50:35.000000000,2024-03-05 15:50:35.000000000,"[{'_account_id': 1131}, {'_account_id': 10058}, {'_account_id': 19298}, {'_account_id': 20648}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-14 16:31:41.000000000', 'files': ['templates/usr.bin.nova-compute'], 'web_link': 'https://opendev.org/openstack/charm-nova-compute/commit/557c47f37baa83e96f5618ae0a46a554897977b4', 'message': 'AppArmor policy update for NVMeoF\n\nWhen using NVMeoF feature with nova-compute apparmor in enforce\nmode, nova-compute is denied from running /usr/sbin/nvme and\n/usr/sbin/blkid, and reading /etc/nvme/hostnqn.\n\nChange-Id: Ia23fbf341d5b7ad469337d8a0c65c18ec519a891\nCloses-Bug: #2039161\n(cherry picked from commit 0f9c730817b4f175e617ab5ce362bf9ff5157092)\n'}]",3,908936,557c47f37baa83e96f5618ae0a46a554897977b4,14,5,1,14567,,,0,"AppArmor policy update for NVMeoF

When using NVMeoF feature with nova-compute apparmor in enforce
mode, nova-compute is denied from running /usr/sbin/nvme and
/usr/sbin/blkid, and reading /etc/nvme/hostnqn.

Change-Id: Ia23fbf341d5b7ad469337d8a0c65c18ec519a891
Closes-Bug: #2039161
(cherry picked from commit 0f9c730817b4f175e617ab5ce362bf9ff5157092)
",git fetch https://review.opendev.org/openstack/charm-nova-compute refs/changes/36/908936/1 && git format-patch -1 --stdout FETCH_HEAD,['templates/usr.bin.nova-compute'],1,557c47f37baa83e96f5618ae0a46a554897977b4,bug/2039161-stable/2023.2," /usr/sbin/blkid rix, /usr/sbin/nvme rix, /etc/nvme/hostnqn r,",,3,0
openstack%2Fnova~906151,openstack/nova,master,I3dba527152605f95030a89d4d16a627005620c1f,document how to ask for more a single vGPU,NEW,2024-01-19 17:44:37.000000000,2024-03-05 15:27:57.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-01-19 17:44:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/c15d4d2d771149ac003b6ae0370774b5b46305c2', 'message': 'document how to ask for more a single vGPU\n\nNow that we fixed the gap, we could document a recommended approach\nfor asking multiple vGPUs in the flavor.\n\nChange-Id: I3dba527152605f95030a89d4d16a627005620c1f\nRelated-Bug: #1758086\n'}, {'number': 2, 'created': '2024-01-19 18:06:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/711ee51053a1e3cbd45681d782426d42d377ab1e', 'message': 'document how to ask for more a single vGPU\n\nNow that we fixed the gap, we could document a recommended approach\nfor asking multiple vGPUs in the flavor.\n\nChange-Id: I3dba527152605f95030a89d4d16a627005620c1f\nRelated-Bug: #1758086\n'}, {'number': 3, 'created': '2024-01-22 09:57:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8c972fe8a01a01838803fbc9727a090ff9f85c72', 'message': 'document how to ask for more a single vGPU\n\nNow that we fixed the gap, we could document a recommended approach\nfor asking multiple vGPUs in the flavor.\n\nChange-Id: I3dba527152605f95030a89d4d16a627005620c1f\nRelated-Bug: #1758086\n'}, {'number': 4, 'created': '2024-03-05 15:15:23.000000000', 'files': ['doc/source/admin/virtual-gpu.rst'], 'web_link': 'https://opendev.org/openstack/nova/commit/014eca9ef513ff49b46fd917301135a17951040f', 'message': 'document how to ask for more a single vGPU\n\nNow that we fixed the gap, we could document a recommended approach\nfor asking multiple vGPUs in the flavor.\n\nChange-Id: I3dba527152605f95030a89d4d16a627005620c1f\nRelated-Bug: #1758086\n'}]",1,906151,014eca9ef513ff49b46fd917301135a17951040f,14,1,4,7166,,,0,"document how to ask for more a single vGPU

Now that we fixed the gap, we could document a recommended approach
for asking multiple vGPUs in the flavor.

Change-Id: I3dba527152605f95030a89d4d16a627005620c1f
Related-Bug: #1758086
",git fetch https://review.opendev.org/openstack/nova refs/changes/51/906151/1 && git format-patch -1 --stdout FETCH_HEAD,['doc/source/admin/virtual-gpu.rst'],1,c15d4d2d771149ac003b6ae0370774b5b46305c2,test_multiple_vgpus,"Ask for more than one vGPU per instance by the flavor ----------------------------------------------------- .. versionchanged:: 29.0.0 We have an open bug report `bug 1758086`_ explaining that the nvidia driver doesn't support more than one vGPU per instance (and per physical GPU). In order to alleviate this problem, this is mandatory to require in the flavor to have all the vGPUs to be spread between multiple physical PCI devices. There are multiple ways to request it in Placement, but you need to think about interoperability and other resource requests first. If you're requesting only vGPU resources without asking for other resources like bandwidth-available ports and you're sure you'll never ask for that, then the simplest to configure is just to set the flavor with the ``group_policy`` extra spec parameter this way : .. code-block:: console $ openstack flavor set vgpu_2 --property ""resources1:VGPU=1"" \ --property ""resources2:VGPU=1"" \ --property ""group_policy=isolate"" By using the ``group_policy`` value to be ``isolate``, that means that you ask the nova scheduler (and the Placement API) to use different resource providers for each of the groups. .. warning:: Be careful when using ``group_policy`` as this policy is global to all the resources request. If you ask for other resources but only VGPUs in your flavor, that ``isolate`` policy will also apply for other ResourceProviders. .. note:: Physical GPU types that only support a single vGPU per type or SR-IOV GPUs where VFs only have 1 vGPU support don't require the ``group_policy`` property to be defined. .. note:: If you use ``AggregateInstanceExtraSpecsFilter`` filter, you also need to configure your aggregates metadata with the ``group_policy`` values. Another more portable approach would be to use specific custom traits or custom resource classes against each child Resource Provider (see `(Optional) Provide custom traits for multiple GPU types`_). That way, you could request to have multiple vGPUs on different classes that way : .. code-block:: console $ openstack flavor set vgpu_2 --property ""resources1:CUSTOM_GPU1=1"" \ --property ""resources2:CUSTOM_GPU2=1"" \ or with traits : .. code-block:: console $ openstack flavor set vgpu_2 --property ""resources1:VGPU=1"" \ --property ""resources2:VGPU=1"" \ --property ""required1=CUSTOM_GPU1"" \ --property ""required2=CUSTOM_GPU2"" .. note:: As you can understand, you either need to decorate all your GPU Resource Providers with distinct custom traits or you need to configure all your compute nodes with distinct custom resource classes for each PCI device using placement.yaml .. _bug 1758086: https://bugs.launchpad.net/nova/+bug/1758086",,70,0
openstack%2Fcloudkitty-dashboard~911117,openstack/cloudkitty-dashboard,unmaintained/victoria,I01846c6104b94647353d6cf8e9adca137b52c01f,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 14:54:09.000000000,2024-03-05 15:12:20.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 14:54:09.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/cloudkitty-dashboard/commit/a6b2a1d56bbb1bd9c657af46bb894499dd4f6bde', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I01846c6104b94647353d6cf8e9adca137b52c01f\n'}]",0,911117,a6b2a1d56bbb1bd9c657af46bb894499dd4f6bde,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I01846c6104b94647353d6cf8e9adca137b52c01f
",git fetch https://review.opendev.org/openstack/cloudkitty-dashboard refs/changes/17/911117/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,a6b2a1d56bbb1bd9c657af46bb894499dd4f6bde,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fcloudkitty-dashboard~911123,openstack/cloudkitty-dashboard,unmaintained/wallaby,I20e131b8d87209e5b98089a4b7a07604527f76f2,Update .gitreview for unmaintained/wallaby,NEW,2024-03-05 14:54:33.000000000,2024-03-05 15:11:43.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 14:54:33.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/cloudkitty-dashboard/commit/111854e8329aeda3948d7d44ecc63b72821546ef', 'message': 'Update .gitreview for unmaintained/wallaby\n\nChange-Id: I20e131b8d87209e5b98089a4b7a07604527f76f2\n'}]",0,911123,111854e8329aeda3948d7d44ecc63b72821546ef,2,1,1,22816,,,0,"Update .gitreview for unmaintained/wallaby

Change-Id: I20e131b8d87209e5b98089a4b7a07604527f76f2
",git fetch https://review.opendev.org/openstack/cloudkitty-dashboard refs/changes/23/911123/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,111854e8329aeda3948d7d44ecc63b72821546ef,create-wallaby,defaultbranch=unmaintained/wallaby,defaultbranch=stable/wallaby,1,1
openstack%2Fpython-cloudkittyclient~911121,openstack/python-cloudkittyclient,unmaintained/victoria,I8025e6268e0c345b36eaa4b21fff9e4e1dd712fe,Update .gitreview for unmaintained/victoria,NEW,2024-03-05 14:54:25.000000000,2024-03-05 15:11:29.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 14:54:25.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-cloudkittyclient/commit/cfb51fe73b62854c7c86fd7ee8342fa801fe7a4e', 'message': 'Update .gitreview for unmaintained/victoria\n\nChange-Id: I8025e6268e0c345b36eaa4b21fff9e4e1dd712fe\n'}]",0,911121,cfb51fe73b62854c7c86fd7ee8342fa801fe7a4e,2,1,1,22816,,,0,"Update .gitreview for unmaintained/victoria

Change-Id: I8025e6268e0c345b36eaa4b21fff9e4e1dd712fe
",git fetch https://review.opendev.org/openstack/python-cloudkittyclient refs/changes/21/911121/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,cfb51fe73b62854c7c86fd7ee8342fa801fe7a4e,create-victoria,defaultbranch=unmaintained/victoria,defaultbranch=stable/victoria,1,1
openstack%2Fcloudkitty-dashboard~911129,openstack/cloudkitty-dashboard,unmaintained/xena,I3dd2702a337d1bc2bfbbf8dca83d7ec27f2ebde1,Update .gitreview for unmaintained/xena,NEW,2024-03-05 14:54:58.000000000,2024-03-05 15:10:16.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-05 14:54:58.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/cloudkitty-dashboard/commit/abcc9604d62867b3f5401395db560397cbbfe281', 'message': 'Update .gitreview for unmaintained/xena\n\nChange-Id: I3dd2702a337d1bc2bfbbf8dca83d7ec27f2ebde1\n'}]",0,911129,abcc9604d62867b3f5401395db560397cbbfe281,2,1,1,22816,,,0,"Update .gitreview for unmaintained/xena

Change-Id: I3dd2702a337d1bc2bfbbf8dca83d7ec27f2ebde1
",git fetch https://review.opendev.org/openstack/cloudkitty-dashboard refs/changes/29/911129/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,abcc9604d62867b3f5401395db560397cbbfe281,create-xena,defaultbranch=unmaintained/xena,defaultbranch=stable/xena,1,1
openstack%2Fpython-manilaclient~909364,openstack/python-manilaclient,master,Iae8ec60ed91708f428ef24d5fec07e95d68986ac,Add new-note tox environment,MERGED,2024-02-19 08:02:10.000000000,2024-03-05 15:09:02.000000000,2024-03-05 15:07:09.000000000,"[{'_account_id': 16643}, {'_account_id': 22348}, {'_account_id': 29632}, {'_account_id': 30407}]","[{'number': 1, 'created': '2024-02-19 08:02:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/cbd2e5f2baa29b0cff98dee62a9d66d161715ef6', 'message': 'Add a newnote command in tox config file and\nadd contributor guide on how to add release\nnotes.\n\nChange-Id: Iae8ec60ed91708f428ef24d5fec07e95d68986ac\n'}, {'number': 2, 'created': '2024-02-21 13:03:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/ee410dce99b0fcd52373002236e6a5869601cf5f', 'message': 'Add a newnote command in tox config file and\nadd contributor guide on how to add release\nnotes.\n\nChange-Id: Iae8ec60ed91708f428ef24d5fec07e95d68986ac\n'}, {'number': 3, 'created': '2024-02-26 09:56:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/d035943e23f9543cd72f800657e192a2568ac6f9', 'message': 'Add new-note command to create relsease\nnotes\n\nonly reno command was possible to add a\nrelaease notes. modify tox config to allow\nnewnote command too.\n\nChange-Id: Iae8ec60ed91708f428ef24d5fec07e95d68986ac\n'}, {'number': 4, 'created': '2024-02-29 12:07:11.000000000', 'files': ['doc/source/contributor/adding_release_notes.rst', 'doc/source/contributor/index.rst', 'tox.ini'], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/129ddada81b7c6315b1d2529c826269d9e403e99', 'message': 'Add new-note tox environment\n\nonly reno command was possible to add a\nrelease notes. modify tox config to allow\nnewnote command too.\n\nChange-Id: Iae8ec60ed91708f428ef24d5fec07e95d68986ac\n'}]",25,909364,129ddada81b7c6315b1d2529c826269d9e403e99,21,4,4,36483,,,0,"Add new-note tox environment

only reno command was possible to add a
release notes. modify tox config to allow
newnote command too.

Change-Id: Iae8ec60ed91708f428ef24d5fec07e95d68986ac
",git fetch https://review.opendev.org/openstack/python-manilaclient refs/changes/64/909364/1 && git format-patch -1 --stdout FETCH_HEAD,"['doc/source/contributor/adding_release_notes.rst', 'tox.ini']",2,cbd2e5f2baa29b0cff98dee62a9d66d161715ef6,add-newnote-command,[testenv:newnote] deps = -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master} -r{toxinidir}/doc/requirements.txt commands = reno new {posargs} ,,209,0
openstack%2Fdevstack~910982,openstack/devstack,stable/2023.2,Icd487e1012263a9b0bc13b529d31ff2025108adf,Drop the devstack-single-node-centos-7 nodeset,MERGED,2024-03-04 18:50:25.000000000,2024-03-05 15:05:14.000000000,2024-03-05 15:02:54.000000000,"[{'_account_id': 8556}, {'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 18:50:25.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/devstack/commit/8ed5e01b1a3e4daeec5747b16aa1f46c7d506a24', 'message': ""Drop the devstack-single-node-centos-7 nodeset\n\nOpenDev is preparing to remove centos-7 nodes on March 15[*]. This\nchange drops one nodeset definition which is the last remaining\nreference on DevStack's master branch.\n\n[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/\n\nChange-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf\n(cherry picked from commit af57c0b778bb13a9b5ffd784fc456a21614e67b1)\n""}]",1,910982,8ed5e01b1a3e4daeec5747b16aa1f46c7d506a24,9,3,1,5263,,,0,"Drop the devstack-single-node-centos-7 nodeset

OpenDev is preparing to remove centos-7 nodes on March 15[*]. This
change drops one nodeset definition which is the last remaining
reference on DevStack's master branch.

[*] https://lists.openstack.org/archives/list/openstack-discuss@lists.openstack.org/message/A2YIY5L7MVYSQMTVZU3L3OM7GLVVZPLK/

Change-Id: Icd487e1012263a9b0bc13b529d31ff2025108adf
(cherry picked from commit af57c0b778bb13a9b5ffd784fc456a21614e67b1)
",git fetch https://review.opendev.org/openstack/devstack refs/changes/82/910982/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,8ed5e01b1a3e4daeec5747b16aa1f46c7d506a24,drop-centos-7,, name: devstack-single-node-centos-7 nodes: - name: controller label: centos-7 groups: - name: tempest nodes: - controller - nodeset:,0,10
openstack%2Freleases~910391,openstack/releases,master,Ie133d8beb7ecdc056150b3ae897dd3c582b90ada,[ec2-api] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:53:18.000000000,2024-03-05 14:56:29.000000000,2024-03-05 14:56:29.000000000,"[{'_account_id': 10234}, {'_account_id': 13252}, {'_account_id': 22348}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-02-27 18:53:18.000000000', 'files': ['deliverables/victoria/ec2-api.yaml', 'deliverables/wallaby/ec2-api.yaml', 'deliverables/xena/ec2-api.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/0a0d6ea5ac749c224c40294af12a9192528096fd', 'message': '[ec2-api] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: Ie133d8beb7ecdc056150b3ae897dd3c582b90ada\n'}]",1,910391,0a0d6ea5ac749c224c40294af12a9192528096fd,9,4,1,17685,,,0,"[ec2-api] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: Ie133d8beb7ecdc056150b3ae897dd3c582b90ada
",git fetch https://review.opendev.org/openstack/releases refs/changes/91/910391/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/victoria/ec2-api.yaml', 'deliverables/wallaby/ec2-api.yaml', 'deliverables/xena/ec2-api.yaml']",3,0a0d6ea5ac749c224c40294af12a9192528096fd,vwx-unmaintained, - version: xena-eom projects: - repo: openstack/ec2-api hash: d199bce02d7c2b5d079d51c464ae723e5bdf39ce - name: unmaintained/xena location: xena-eom,,18,0
openstack%2Freleases~910390,openstack/releases,master,I702c610267e72bf894d74935ed0db0f99274a41a,[cloudkitty] Transition EM branches to Unmaintained,MERGED,2024-02-27 18:53:01.000000000,2024-03-05 14:49:57.000000000,2024-03-05 14:49:57.000000000,"[{'_account_id': 13252}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28356}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-02-27 18:53:01.000000000', 'files': ['deliverables/xena/cloudkitty-dashboard.yaml', 'deliverables/xena/python-cloudkittyclient.yaml', 'deliverables/victoria/cloudkitty.yaml', 'deliverables/wallaby/python-cloudkittyclient.yaml', 'deliverables/victoria/cloudkitty-dashboard.yaml', 'deliverables/wallaby/cloudkitty.yaml', 'deliverables/wallaby/cloudkitty-dashboard.yaml', 'deliverables/victoria/python-cloudkittyclient.yaml', 'deliverables/xena/cloudkitty.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/248731d7929c1a140b357d791f2cce790dcbc952', 'message': '[cloudkitty] Transition EM branches to Unmaintained\n\nWith the new TC resolution the community replaces Extended Maintenance\nwith Unmaintained status [1].\n\nSo this patch transitions victoria, wallaby, and xena EM branches to\nUnmaintained as follows:\n- tip of the given branch will be tagged with <series>-eom tag\n- unmaintained/<series> branch will be cut from <series>-eom tag\n- stable/<series> branch will be deleted\n\nSome further notes:\n- stable policy still applies\n- backports can be pushed against unmaintained/<series> branch\n- openstack-unmaintained-core group have the rights to merge patches\n\nFor further details please read the resolution [1] & review and +1 this\npatch if this is correct as soon as possible.\n\n[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html\n\nChange-Id: I702c610267e72bf894d74935ed0db0f99274a41a\n'}]",2,910390,248731d7929c1a140b357d791f2cce790dcbc952,10,5,1,17685,,,0,"[cloudkitty] Transition EM branches to Unmaintained

With the new TC resolution the community replaces Extended Maintenance
with Unmaintained status [1].

So this patch transitions victoria, wallaby, and xena EM branches to
Unmaintained as follows:
- tip of the given branch will be tagged with <series>-eom tag
- unmaintained/<series> branch will be cut from <series>-eom tag
- stable/<series> branch will be deleted

Some further notes:
- stable policy still applies
- backports can be pushed against unmaintained/<series> branch
- openstack-unmaintained-core group have the rights to merge patches

For further details please read the resolution [1] & review and +1 this
patch if this is correct as soon as possible.

[1] https://governance.openstack.org/tc/resolutions/20230724-unmaintained-branches.html

Change-Id: I702c610267e72bf894d74935ed0db0f99274a41a
",git fetch https://review.opendev.org/openstack/releases refs/changes/90/910390/1 && git format-patch -1 --stdout FETCH_HEAD,"['deliverables/xena/cloudkitty-dashboard.yaml', 'deliverables/xena/python-cloudkittyclient.yaml', 'deliverables/victoria/cloudkitty.yaml', 'deliverables/wallaby/python-cloudkittyclient.yaml', 'deliverables/victoria/cloudkitty-dashboard.yaml', 'deliverables/wallaby/cloudkitty.yaml', 'deliverables/wallaby/cloudkitty-dashboard.yaml', 'deliverables/victoria/python-cloudkittyclient.yaml', 'deliverables/xena/cloudkitty.yaml']",9,248731d7929c1a140b357d791f2cce790dcbc952,vwx-unmaintained, - version: xena-eom projects: - repo: openstack/cloudkitty hash: f647e44f422bb3b78b16e8c4193260308807fff8 - name: unmaintained/xena location: xena-eom,,66,6
openstack%2Fosc-lib~910919,openstack/osc-lib,stable/zed,Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512,Drop master-only job from zuul config,MERGED,2024-03-05 06:40:19.000000000,2024-03-05 14:18:38.000000000,2024-03-05 14:16:38.000000000,"[{'_account_id': 22348}, {'_account_id': 27900}]","[{'number': 1, 'created': '2024-03-05 06:40:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/osc-lib/commit/b05025909e5a08d410abbf4f4307d4c627c00c58', 'message': 'Drop master-only job from zuul config\n\nThe tips job should only run on the master branch, drop it from the zuul\nconfig for stable branches.\n\nChange-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512\n(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)\n'}, {'number': 2, 'created': '2024-03-05 08:15:59.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/osc-lib/commit/4b1808da4837628d8c03a02ba4aa2a7a6c3da94f', 'message': 'Drop master-only job from zuul config\n\nThe tips job should only run on the master branch, drop it from the zuul\nconfig for stable branches.\n\nUpdated for zed and older: Drop openstack-lower-constraints-jobs\n\nChange-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512\n(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)\n'}]",0,910919,4b1808da4837628d8c03a02ba4aa2a7a6c3da94f,10,2,2,13252,,,0,"Drop master-only job from zuul config

The tips job should only run on the master branch, drop it from the zuul
config for stable branches.

Updated for zed and older: Drop openstack-lower-constraints-jobs

Change-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512
(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)
",git fetch https://review.opendev.org/openstack/osc-lib refs/changes/19/910919/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,b05025909e5a08d410abbf4f4307d4c627c00c58,zuul-config-errors,, - osc-functional-devstack-tips: voting: false # The functional-tips job only tests the latest and shouldn't be run # on the stable branches branches: ^(?!stable) required-projects: - openstack/python-openstackclient,0,7
openstack%2Fosc-lib~910918,openstack/osc-lib,stable/2023.1,Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512,Drop master-only job from zuul config,MERGED,2024-03-05 06:39:48.000000000,2024-03-05 14:11:10.000000000,2024-03-05 14:08:26.000000000,"[{'_account_id': 22348}, {'_account_id': 27900}]","[{'number': 1, 'created': '2024-03-05 06:39:48.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/osc-lib/commit/1f33f2dd09033f5be76dc29ed38c4b0ed3d065b3', 'message': 'Drop master-only job from zuul config\n\nThe tips job should only run on the master branch, drop it from the zuul\nconfig for stable branches.\n\nChange-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512\n(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)\n'}]",0,910918,1f33f2dd09033f5be76dc29ed38c4b0ed3d065b3,8,2,1,13252,,,0,"Drop master-only job from zuul config

The tips job should only run on the master branch, drop it from the zuul
config for stable branches.

Change-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512
(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)
",git fetch https://review.opendev.org/openstack/osc-lib refs/changes/18/910918/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,1f33f2dd09033f5be76dc29ed38c4b0ed3d065b3,zuul-config-errors,, - osc-functional-devstack-tips: voting: false # The functional-tips job only tests the latest and shouldn't be run # on the stable branches branches: ^(?!stable) required-projects: - openstack/python-openstackclient,0,7
openstack%2Fopenstack-ansible-openstack_hosts~907433,openstack/openstack-ansible-openstack_hosts,master,I15cc331ad5ec11507860bf61b0c2b20fa8c0b2a0,Drop task that deletes old UCA repo,MERGED,2024-02-01 15:14:45.000000000,2024-03-05 13:57:28.000000000,2024-03-05 13:56:30.000000000,"[{'_account_id': 22348}, {'_account_id': 28619}, {'_account_id': 31542}]","[{'number': 1, 'created': '2024-02-01 15:14:45.000000000', 'files': ['tasks/openstack_hosts_configure_apt.yml'], 'web_link': 'https://opendev.org/openstack/openstack-ansible-openstack_hosts/commit/08784f1e6704ba257ddef7ef94935c9cb8277a33', 'message': 'Drop task that deletes old UCA repo\n\nThe variable `uca_apt_source_list_filename` is not defined anywhere\nin openstack-ansible so this task is redundant.\n\nChange-Id: I15cc331ad5ec11507860bf61b0c2b20fa8c0b2a0\n'}]",3,907433,08784f1e6704ba257ddef7ef94935c9cb8277a33,20,3,1,25023,,,0,"Drop task that deletes old UCA repo

The variable `uca_apt_source_list_filename` is not defined anywhere
in openstack-ansible so this task is redundant.

Change-Id: I15cc331ad5ec11507860bf61b0c2b20fa8c0b2a0
",git fetch https://review.opendev.org/openstack/openstack-ansible-openstack_hosts refs/changes/33/907433/1 && git format-patch -1 --stdout FETCH_HEAD,['tasks/openstack_hosts_configure_apt.yml'],1,08784f1e6704ba257ddef7ef94935c9cb8277a33,,,"- name: Remove any old UCA repository using the old filename file: path: ""{{ uca_apt_source_list_filename | default('ubuntu_cloud_archive_canonical_com_ubuntu') }}"" state: absent ",0,5
openstack%2Fosc-lib~911061,openstack/osc-lib,stable/xena,Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512,Drop master-only job from zuul config,MERGED,2024-03-05 06:42:11.000000000,2024-03-05 13:57:06.000000000,2024-03-05 13:55:00.000000000,"[{'_account_id': 22348}, {'_account_id': 27900}]","[{'number': 1, 'created': '2024-03-05 06:42:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/osc-lib/commit/23d82dd1ad96789487192663656f56d24f459a04', 'message': 'Drop master-only job from zuul config\n\nThe tips job should only run on the master branch, drop it from the zuul\nconfig for stable branches.\n\nChange-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512\n(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)\n'}, {'number': 2, 'created': '2024-03-05 10:30:09.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/osc-lib/commit/b3cb7b86e7e34876177c4e92f83a59d3c369a7c1', 'message': 'Drop master-only job from zuul config\n\nThe tips job should only run on the master branch, drop it from the zuul\nconfig for stable branches.\n\nUpdated for zed and older: Drop openstack-lower-constraints-jobs\n\nChange-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512\n(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)\n'}]",0,911061,b3cb7b86e7e34876177c4e92f83a59d3c369a7c1,10,2,2,13252,,,0,"Drop master-only job from zuul config

The tips job should only run on the master branch, drop it from the zuul
config for stable branches.

Updated for zed and older: Drop openstack-lower-constraints-jobs

Change-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512
(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)
",git fetch https://review.opendev.org/openstack/osc-lib refs/changes/61/911061/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,23d82dd1ad96789487192663656f56d24f459a04,zuul-config-errors,, - osc-functional-devstack-tips: voting: false # The functional-tips job only tests the latest and shouldn't be run # on the stable branches branches: ^(?!stable) required-projects: - openstack/python-openstackclient,0,7
openstack%2Fnetworking-generic-switch~908550,openstack/networking-generic-switch,master,I806dbf98e0824360cbd26d7b2b89b5e3cae3173a,Replace usage of deprecated path for test decorators,MERGED,2024-02-09 04:11:35.000000000,2024-03-05 13:21:40.000000000,2024-03-05 13:20:41.000000000,"[{'_account_id': 10239}, {'_account_id': 11655}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-09 04:11:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/networking-generic-switch/commit/fefd05cc8b5c29ba750f59da4b9d6babeaa06895', 'message': 'Replace usage of deprecated path for test decorator\n\nThese decorators were moved to the common module in tempest 17.0.0[1].\n\n[1] cd36841ca25b39b9c8ad1b83e0abd0a191d538a0\n\nChange-Id: I806dbf98e0824360cbd26d7b2b89b5e3cae3173a\n'}, {'number': 2, 'created': '2024-02-09 04:17:55.000000000', 'files': ['tempest_plugin/tests/scenario/test_ngs_basic_ops.py'], 'web_link': 'https://opendev.org/openstack/networking-generic-switch/commit/253ee4524fcf66a5eb6da4ee2c2a543e178e5f75', 'message': 'Replace usage of deprecated path for test decorators\n\nThese decorators were moved to the common module in tempest 17.0.0[1].\n\n[1] cd36841ca25b39b9c8ad1b83e0abd0a191d538a0\n\nChange-Id: I806dbf98e0824360cbd26d7b2b89b5e3cae3173a\n'}]",0,908550,253ee4524fcf66a5eb6da4ee2c2a543e178e5f75,10,3,2,9816,,,0,"Replace usage of deprecated path for test decorators

These decorators were moved to the common module in tempest 17.0.0[1].

[1] cd36841ca25b39b9c8ad1b83e0abd0a191d538a0

Change-Id: I806dbf98e0824360cbd26d7b2b89b5e3cae3173a
",git fetch https://review.opendev.org/openstack/networking-generic-switch refs/changes/50/908550/1 && git format-patch -1 --stdout FETCH_HEAD,['tempest_plugin/tests/scenario/test_ngs_basic_ops.py'],1,fefd05cc8b5c29ba750f59da4b9d6babeaa06895,,from tempest.common import utils @utils.services('network') @utils.services('network'),from tempest import test @test.services('network') @test.services('network'),3,3
openstack%2Fosc-lib~911062,openstack/osc-lib,stable/wallaby,Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512,Drop master-only job from zuul config,MERGED,2024-03-05 06:42:42.000000000,2024-03-05 13:18:35.000000000,2024-03-05 13:16:34.000000000,"[{'_account_id': 22348}, {'_account_id': 27900}]","[{'number': 1, 'created': '2024-03-05 06:42:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/osc-lib/commit/f1f870f815a39701db4ca32b5f2e39f9ffb4ad1c', 'message': 'Drop master-only job from zuul config\n\nThe tips job should only run on the master branch, drop it from the zuul\nconfig for stable branches.\n\nChange-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512\n(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)\n'}, {'number': 2, 'created': '2024-03-05 10:30:57.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/osc-lib/commit/ba61c4f5c32f99f45d67db3aba07eeaf4908661c', 'message': 'Drop master-only job from zuul config\n\nThe tips job should only run on the master branch, drop it from the zuul\nconfig for stable branches.\n\nUpdated for zed and older: Drop openstack-lower-constraints-jobs\n\nChange-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512\n(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)\n'}]",0,911062,ba61c4f5c32f99f45d67db3aba07eeaf4908661c,10,2,2,13252,,,0,"Drop master-only job from zuul config

The tips job should only run on the master branch, drop it from the zuul
config for stable branches.

Updated for zed and older: Drop openstack-lower-constraints-jobs

Change-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512
(cherry picked from commit 923a847dea1d4577e75d4044a58596a0665941f1)
",git fetch https://review.opendev.org/openstack/osc-lib refs/changes/62/911062/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,f1f870f815a39701db4ca32b5f2e39f9ffb4ad1c,zuul-config-errors,, - osc-functional-devstack-tips: voting: false # The functional-tips job only tests the latest and shouldn't be run # on the stable branches branches: ^(?!stable) required-projects: - openstack/python-openstackclient,0,7
openstack%2Fpbr~910690,openstack/pbr,master,I9d3417d5803b9ba3e4731fdebbd26778031effcd,Omnibus PBR CI fixups,MERGED,2024-03-01 02:58:07.000000000,2024-03-05 13:11:09.000000000,2024-03-05 13:08:58.000000000,"[{'_account_id': 5263}, {'_account_id': 8556}, {'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 02:58:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/pbr/commit/8816856fe9f3286c945fdac1f1c8350f24a1d09b', 'message': 'Retire TripleO: remove the TripleO jobs\n\nTripleO is retired so removing its jobs\n\n- https://review.opendev.org/q/topic:%22retire-tripleo%22\n\nChange-Id: I9d3417d5803b9ba3e4731fdebbd26778031effcd\n'}, {'number': 2, 'created': '2024-03-01 06:58:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/pbr/commit/8895ba54ead62c5eea1849bca44b14792ea88d96', 'message': 'Retire TripleO: remove the TripleO jobs\n\nTripleO is retired so removing its jobs\n\n- https://review.opendev.org/q/topic:%22retire-tripleo%22\n\nChange-Id: I9d3417d5803b9ba3e4731fdebbd26778031effcd\n'}, {'number': 3, 'created': '2024-03-04 16:01:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/pbr/commit/399d0880ba1bc3880be3973b7f857cd389b99dd1', 'message': 'Omnibus PBR CI fixups\n\nThese fixes have to go in together as they are not mergeable\nindividually.\n\nFirst up remove the TripleO jobs\n\nTripleO is retired so removing its jobs\n\n- https://review.opendev.org/q/topic:%22retire-tripleo%22\n\nNext the train EOL has largely completed so we need to add more\ntrain-eol checkout overrides to the tempest-full job.\n\nThis job is primarily used to ensure PBR maintains compatibility with\npython2 projects. Now that swift is the main thing with python2\ncompatibility we might consider replacing this job with a swift install\nand functional test instead.\n\nCo-Authored-By: Clark Boylan <clark.boylan@gmail.com>\nChange-Id: I9d3417d5803b9ba3e4731fdebbd26778031effcd\n'}, {'number': 4, 'created': '2024-03-04 16:09:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/pbr/commit/379925f7d2dba46a36d8bd9b3bb4c9fe7dc337e2', 'message': ""Omnibus PBR CI fixups\n\nThese fixes have to go in together as they are not mergeable\nindividually.\n\nFirst up remove the TripleO jobs\n\nTripleO is retired so removing its jobs\n\n- https://review.opendev.org/q/topic:%22retire-tripleo%22\n\nNext the train EOL has largely completed so we need to add more\ntrain-eol checkout overrides to the tempest-full job.\n\nThis job is primarily used to ensure PBR maintains compatibility with\npython2 projects. Now that swift is the main thing with python2\ncompatibility we might consider replacing this job with a swift install\nand functional test instead.\n\nFinally we update a test case to check for modern pip's normalized\npackage names (previously installing pkg_b resulted in a normalized name\nof pkg-b, but now pkg_b remains pkg_b and we need to check for that\ninstead).\n\nCo-Authored-By: Clark Boylan <clark.boylan@gmail.com>\nChange-Id: I9d3417d5803b9ba3e4731fdebbd26778031effcd\n""}, {'number': 5, 'created': '2024-03-04 16:15:04.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/pbr/commit/a5b7f543c95b9db9d6adf5260707d860480338c8', 'message': ""Omnibus PBR CI fixups\n\nThese fixes have to go in together as they are not mergeable\nindividually.\n\nFirst up remove the TripleO jobs\n\nTripleO is retired so removing its jobs\n\n- https://review.opendev.org/q/topic:%22retire-tripleo%22\n\nNext the train EOL has largely completed so we need to add more\ntrain-eol checkout overrides to the tempest-full job.\n\nThis job is primarily used to ensure PBR maintains compatibility with\npython2 projects. Now that swift is the main thing with python2\ncompatibility we might consider replacing this job with a swift install\nand functional test instead.\n\nFinally we update a test case to check for modern pip's normalized\npackage names (previously installing pkg_b resulted in a normalized name\nof pkg-b, but now pkg_b remains pkg_b and we need to check for that\ninstead). Check for both variations as we want the tests to pass\nregardless of pip and setuptools versions used.\n\nCo-Authored-By: Clark Boylan <clark.boylan@gmail.com>\nChange-Id: I9d3417d5803b9ba3e4731fdebbd26778031effcd\n""}, {'number': 6, 'created': '2024-03-04 16:50:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/pbr/commit/69a7d7a41c5fe67d5fab9032bf9ef76ddc3eeffa', 'message': ""Omnibus PBR CI fixups\n\nThese fixes have to go in together as they are not mergeable\nindividually.\n\nFirst up remove the TripleO jobs\n\nTripleO is retired so removing its jobs\n\n- https://review.opendev.org/q/topic:%22retire-tripleo%22\n\nNext the train EOL has largely completed so we need to add more\ntrain-eol checkout overrides to the tempest-full job. We also need to\nset a python2 specific bionic nodeset as the devstack stable branch that\ndid this for our job has been dropped.\n\nThis job is primarily used to ensure PBR maintains compatibility with\npython2 projects. Now that swift is the main thing with python2\ncompatibility we might consider replacing this job with a swift install\nand functional test instead.\n\nFinally we update a test case to check for modern pip's normalized\npackage names (previously installing pkg_b resulted in a normalized name\nof pkg-b, but now pkg_b remains pkg_b and we need to check for that\ninstead). Check for both variations as we want the tests to pass\nregardless of pip and setuptools versions used.\n\nCo-Authored-By: Clark Boylan <clark.boylan@gmail.com>\nChange-Id: I9d3417d5803b9ba3e4731fdebbd26778031effcd\n""}, {'number': 7, 'created': '2024-03-04 17:13:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/pbr/commit/a2b25602fb64376f8d6586ecadd8f3cc8ecaad18', 'message': ""Omnibus PBR CI fixups\n\nThese fixes have to go in together as they are not mergeable\nindividually.\n\nFirst up remove the TripleO jobs\n\nTripleO is retired so removing its jobs\n\n- https://review.opendev.org/q/topic:%22retire-tripleo%22\n\nNext the train EOL has largely completed and leaves us in an awkward\nposition for running tempest-full against python2. While branchless\ntempest continues to define a tempest-full job this job is no longer\nworking after devstack's stable/train branch deletion. There are two\nreasons for this. The first is checking out correct branches of\nopenstack software which we can address in a straightforward manner\nthrough zuul branch checkout overrides from stable/train to train-eol.\nThe other issue is that we previously relied on zuul running the\nstable/train version of devstack's base jobs under tempest-full. Now\nthat the branch is gone we're getting master devstack base jobs which\ndon't do things like setup virtualenv (needed for python2) or override\nthe nodeset to ubuntu-bionic.\n\nInstead of trying to continue to make this job work we accept the\ndecrease in python2 coverage and will rely on python2 unittesting\ninstead. An alternative would be to set up functional testing with swift\nsince swift continues to maintain python2 compatibility in its newer\nbranches.\n\nFinally we update a test case to check for modern pip's normalized\npackage names (previously installing pkg_b resulted in a normalized name\nof pkg-b, but now pkg_b remains pkg_b and we need to check for that\ninstead). Check for both variations as we want the tests to pass\nregardless of pip and setuptools versions used.\n\nCo-Authored-By: Clark Boylan <clark.boylan@gmail.com>\nChange-Id: I9d3417d5803b9ba3e4731fdebbd26778031effcd\n""}, {'number': 8, 'created': '2024-03-04 17:23:55.000000000', 'files': ['pbr/tests/test_integration.py', '.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/pbr/commit/f75e1056f1763b567d7044ec63279afe110aa75e', 'message': ""Omnibus PBR CI fixups\n\nThese fixes have to go in together as they are not mergeable\nindividually.\n\nFirst up remove the TripleO jobs\n\nTripleO is retired so removing its jobs\n\n- https://review.opendev.org/q/topic:%22retire-tripleo%22\n\nNext the train EOL has largely completed and leaves us in an awkward\nposition for running tempest-full against python2. While branchless\ntempest continues to define a tempest-full job this job is no longer\nworking after devstack's stable/train branch deletion. There are two\nreasons for this. The first is checking out correct branches of\nopenstack software which we can address in a straightforward manner\nthrough zuul branch checkout overrides from stable/train to train-eol.\nThe other issue is that we previously relied on zuul running the\nstable/train version of devstack's base jobs under tempest-full. Now\nthat the branch is gone we're getting master devstack base jobs which\ndon't do things like setup virtualenv (needed for python2) or override\nthe nodeset to ubuntu-bionic.\n\nInstead of trying to continue to make this job work we accept the\ndecrease in python2 coverage and will rely on python2 unittesting\ninstead. An alternative would be to set up functional testing with swift\nsince swift continues to maintain python2 compatibility in its newer\nbranches.\n\nFinally we update a test case to check for modern pip's normalized\npackage names (previously installing pkg_b resulted in a normalized name\nof pkg-b, but now pkg_b remains pkg_b and we need to check for that\ninstead). Check for both variations as we want the tests to pass\nregardless of pip and setuptools versions used.\n\nCo-Authored-By: Clark Boylan <clark.boylan@gmail.com>\nChange-Id: I9d3417d5803b9ba3e4731fdebbd26778031effcd\n""}]",6,910690,f75e1056f1763b567d7044ec63279afe110aa75e,24,4,8,8556,,,0,"Omnibus PBR CI fixups

These fixes have to go in together as they are not mergeable
individually.

First up remove the TripleO jobs

TripleO is retired so removing its jobs

- https://review.opendev.org/q/topic:%22retire-tripleo%22

Next the train EOL has largely completed and leaves us in an awkward
position for running tempest-full against python2. While branchless
tempest continues to define a tempest-full job this job is no longer
working after devstack's stable/train branch deletion. There are two
reasons for this. The first is checking out correct branches of
openstack software which we can address in a straightforward manner
through zuul branch checkout overrides from stable/train to train-eol.
The other issue is that we previously relied on zuul running the
stable/train version of devstack's base jobs under tempest-full. Now
that the branch is gone we're getting master devstack base jobs which
don't do things like setup virtualenv (needed for python2) or override
the nodeset to ubuntu-bionic.

Instead of trying to continue to make this job work we accept the
decrease in python2 coverage and will rely on python2 unittesting
instead. An alternative would be to set up functional testing with swift
since swift continues to maintain python2 compatibility in its newer
branches.

Finally we update a test case to check for modern pip's normalized
package names (previously installing pkg_b resulted in a normalized name
of pkg-b, but now pkg_b remains pkg_b and we need to check for that
instead). Check for both variations as we want the tests to pass
regardless of pip and setuptools versions used.

Co-Authored-By: Clark Boylan <clark.boylan@gmail.com>
Change-Id: I9d3417d5803b9ba3e4731fdebbd26778031effcd
",git fetch https://review.opendev.org/openstack/pbr refs/changes/90/910690/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,8816856fe9f3286c945fdac1f1c8350f24a1d09b,more-train-overrides,, - openstack/tripleo-ci - openstack/dib-utils - openstack/tripleo-heat-templates - openstack/tripleo-image-elements,0,4
openstack%2Fsushy-tools~908789,openstack/sushy-tools,master,I98e55372488fb0acc24d08b23ca6b41f7cb2764a,Force constraints when installing a package during tox test,MERGED,2024-02-12 14:02:02.000000000,2024-03-05 13:02:43.000000000,2024-03-05 13:00:52.000000000,"[{'_account_id': 10239}, {'_account_id': 10342}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-12 14:02:02.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/sushy-tools/commit/0f9c9dc0c612f1822ed7211a9801857645f5d7b8', 'message': 'Force constraints when installing a package during tox test\n\nThe tox deps option grants installation of single dependencies and\nrequirements, optionally pinned using constraints, before installing\na package, therefore not granting installation of the correct\nconstraint during the package installation.\nTo fix that tox 4.4.0 has introduced the constrain_package_deps\noption [1]\n\n[1] https://tox.wiki/en/4.12.1/faq.html#using-constraint-files\n\nChange-Id: I98e55372488fb0acc24d08b23ca6b41f7cb2764a\n'}]",0,908789,0f9c9dc0c612f1822ed7211a9801857645f5d7b8,9,3,1,23851,,,0,"Force constraints when installing a package during tox test

The tox deps option grants installation of single dependencies and
requirements, optionally pinned using constraints, before installing
a package, therefore not granting installation of the correct
constraint during the package installation.
To fix that tox 4.4.0 has introduced the constrain_package_deps
option [1]

[1] https://tox.wiki/en/4.12.1/faq.html#using-constraint-files

Change-Id: I98e55372488fb0acc24d08b23ca6b41f7cb2764a
",git fetch https://review.opendev.org/openstack/sushy-tools refs/changes/89/908789/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,0f9c9dc0c612f1822ed7211a9801857645f5d7b8,tox-constraints,minversion = 4.4.0constrain_package_deps = true -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master} codespell {posargs} ,minversion = 3.18.0 codespell {posargs},4,2
openstack%2Fmagnum~908423,openstack/magnum,master,Iab738b4120c0ac823b247b04f0cd750de0147779,Move Helm client install to separate script,MERGED,2024-02-08 13:51:41.000000000,2024-03-05 12:36:11.000000000,2024-03-05 12:33:14.000000000,"[{'_account_id': 8064}, {'_account_id': 14394}, {'_account_id': 22348}, {'_account_id': 22629}, {'_account_id': 26285}]","[{'number': 1, 'created': '2024-02-08 13:51:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/67bcfd0181e250ff35da2813c502629456767181', 'message': 'Move Helm client install to separate script\n\nTo deploy Calico with Tigera Operator helm charts it was necessary\nto move Helm client install to separate script for earlier execution.\n\nChange-Id: Iab738b4120c0ac823b247b04f0cd750de0147779\n'}, {'number': 2, 'created': '2024-02-22 17:25:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/a4fe3d0a124fe3867aaf131590d6898dd90cdf9e', 'message': 'Move Helm client install to separate script\n\nTo deploy Calico with Tigera Operator helm charts it was necessary\nto move Helm client install to separate script for earlier execution.\n\nChange-Id: Iab738b4120c0ac823b247b04f0cd750de0147779\n'}, {'number': 3, 'created': '2024-02-27 08:47:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/38bcdd64727766fd9ce547e9766d475c1bfc7adf', 'message': 'Move Helm client install to separate script\n\nTo deploy Calico with Tigera Operator helm charts it was necessary\nto move Helm client install to separate script for earlier execution.\n\nChange-Id: Iab738b4120c0ac823b247b04f0cd750de0147779\n'}, {'number': 4, 'created': '2024-02-27 09:56:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/4ec5ac875f923e6932f4e5a89ada34432a718453', 'message': 'Move Helm client install to separate script\n\nTo deploy Calico with Tigera Operator helm charts it was necessary\nto move Helm client install to separate script for earlier execution.\n\nChange-Id: Iab738b4120c0ac823b247b04f0cd750de0147779\n'}, {'number': 5, 'created': '2024-02-27 16:33:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/60d677311912ce69a97ed5308cb520239f615b90', 'message': 'Move Helm client install to separate script\n\nTo deploy Calico with Tigera Operator helm charts it was necessary\nto move Helm client install to separate script for earlier execution.\n\nChange-Id: Iab738b4120c0ac823b247b04f0cd750de0147779\n'}, {'number': 6, 'created': '2024-02-27 16:35:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/881eb07b52f423c76da7f3bd18cdbead323acd34', 'message': 'Move Helm client install to separate script\n\nTo deploy Calico with Tigera Operator helm charts it was necessary\nto move Helm client install to separate script for earlier execution.\n\nChange-Id: Iab738b4120c0ac823b247b04f0cd750de0147779\n'}, {'number': 7, 'created': '2024-02-28 09:19:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/34302cfb5c50aa43bbf5a523e4d2d3db9d21f438', 'message': 'Move Helm client install to separate script\n\nTo deploy Calico with Tigera Operator helm charts it was necessary\nto move Helm client install to separate script for earlier execution.\n\nChange-Id: Iab738b4120c0ac823b247b04f0cd750de0147779\n'}, {'number': 8, 'created': '2024-02-29 14:41:37.000000000', 'files': ['magnum/drivers/k8s_fedora_coreos_v1/templates/kubecluster.yaml', 'magnum/drivers/common/templates/kubernetes/fragments/install-helm-modules.sh', 'magnum/drivers/common/templates/kubernetes/fragments/install-helm.sh'], 'web_link': 'https://opendev.org/openstack/magnum/commit/b6e2aa8af766197fc585605b30e91e85f97bc401', 'message': 'Move Helm client install to separate script\n\nTo deploy Calico with Tigera Operator helm charts it was necessary\nto move Helm client install to separate script for earlier execution.\n\nChange-Id: Iab738b4120c0ac823b247b04f0cd750de0147779\n'}]",0,908423,b6e2aa8af766197fc585605b30e91e85f97bc401,24,5,8,34076,,,0,"Move Helm client install to separate script

To deploy Calico with Tigera Operator helm charts it was necessary
to move Helm client install to separate script for earlier execution.

Change-Id: Iab738b4120c0ac823b247b04f0cd750de0147779
",git fetch https://review.opendev.org/openstack/magnum refs/changes/23/908423/1 && git format-patch -1 --stdout FETCH_HEAD,"['magnum/drivers/k8s_fedora_coreos_v1/templates/kubecluster.yaml', 'magnum/drivers/common/templates/kubernetes/fragments/install-helm-modules.sh', 'magnum/drivers/common/templates/kubernetes/fragments/install-helm.sh']",3,67bcfd0181e250ff35da2813c502629456767181,calico-helm,"step=""install-helm"" echo ""START: ${step}"" set +x . /etc/sysconfig/heat-params set -ex if [ ! -z ""$HTTP_PROXY"" ]; then export HTTP_PROXY fi if [ ! -z ""$HTTPS_PROXY"" ]; then export HTTPS_PROXY fi if [ ! -z ""$NO_PROXY"" ]; then export NO_PROXY fi ssh_cmd=""ssh -F /srv/magnum/.ssh/config root@localhost"" if [ -z ""${HELM_CLIENT_URL}"" ] ; then HELM_CLIENT_URL=""https://get.helm.sh/helm-$HELM_CLIENT_TAG-linux-amd64.tar.gz"" fi i=0 until curl -o /srv/magnum/helm-client.tar.gz ""${HELM_CLIENT_URL}""; do i=$((i + 1)) [ $i -lt 5 ] || break; sleep 5 done if ! echo ""${HELM_CLIENT_SHA256} /srv/magnum/helm-client.tar.gz"" | sha256sum -c - ; then echo ""ERROR helm-client.tar.gz computed checksum did NOT match, exiting."" exit 1 fi source /etc/bashrc $ssh_cmd tar xzvf /srv/magnum/helm-client.tar.gz linux-amd64/helm -O > /srv/magnum/bin/helm $ssh_cmd chmod +x /srv/magnum/bin/helm echo ""END: ${step}""",,42,21
openstack%2Ftenks~911086,openstack/tenks,master,I8e18ab4eb7d49e31aa28586aba92d3afa5871bad,Fix Python dependencies,NEW,2024-03-05 11:13:48.000000000,2024-03-05 12:23:49.000000000,,"[{'_account_id': 14826}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-05 11:13:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/tenks/commit/163db6658194f9f79d46d3345878bd96b2faa15b', 'message': 'Fix Python dependencies\n\nChange-Id: I8e18ab4eb7d49e31aa28586aba92d3afa5871bad\n'}, {'number': 2, 'created': '2024-03-05 11:19:54.000000000', 'files': ['ansible/roles/virtualbmc-domain/library/virtualbmc_domain.py', 'releasenotes/notes/fix-python-dependencies-54f3b76dc93d6c65.yaml', 'requirements.txt'], 'web_link': 'https://opendev.org/openstack/tenks/commit/0b3e4935732bfd12152c3b3cea77971251a3f839', 'message': 'Fix Python dependencies\n\nThe `/usr/bin/env python` shebang can override the ansible python\ninterpreter. This change instead uses /usr/bin/python which is correctly\nintepreted by ansible.\n\nAdded paramiko, a missing python dependency.\n\nChange-Id: I8e18ab4eb7d49e31aa28586aba92d3afa5871bad\n'}]",3,911086,0b3e4935732bfd12152c3b3cea77971251a3f839,6,2,2,35264,,,0,"Fix Python dependencies

The `/usr/bin/env python` shebang can override the ansible python
interpreter. This change instead uses /usr/bin/python which is correctly
intepreted by ansible.

Added paramiko, a missing python dependency.

Change-Id: I8e18ab4eb7d49e31aa28586aba92d3afa5871bad
",git fetch https://review.opendev.org/openstack/tenks refs/changes/86/911086/1 && git format-patch -1 --stdout FETCH_HEAD,"['ansible/roles/virtualbmc-domain/library/virtualbmc_domain.py', 'requirements.txt']",2,163db6658194f9f79d46d3345878bd96b2faa15b,,paramiko # GPLv2.1,,2,1
openstack%2Fneutron-tempest-plugin~899846,openstack/neutron-tempest-plugin,master,I42bea9217462226e8650e55997449e1cc05f085c,"Makes ""segmentation_id"" configurable",MERGED,2023-11-01 11:06:22.000000000,2024-03-05 12:12:46.000000000,2024-03-05 12:12:46.000000000,"[{'_account_id': 1131}, {'_account_id': 8313}, {'_account_id': 9656}, {'_account_id': 9800}, {'_account_id': 11975}, {'_account_id': 13861}, {'_account_id': 16688}, {'_account_id': 22348}, {'_account_id': 34777}]","[{'number': 1, 'created': '2023-11-01 11:06:22.000000000', 'files': ['neutron_tempest_plugin/scenario/test_dns_integration.py', 'neutron_tempest_plugin/config.py'], 'web_link': 'https://opendev.org/openstack/neutron-tempest-plugin/commit/88d1d5752a0f2762df052d70a85edfab1db5a87c', 'message': 'Makes ""segmentation_id"" configurable\n\nWe should add the segmentation_id as tempest option,\nso that it can be changed to match the deployment if needed.\n\nChange-Id: I42bea9217462226e8650e55997449e1cc05f085c\n'}]",1,899846,88d1d5752a0f2762df052d70a85edfab1db5a87c,9,9,1,28609,,,0,"Makes ""segmentation_id"" configurable

We should add the segmentation_id as tempest option,
so that it can be changed to match the deployment if needed.

Change-Id: I42bea9217462226e8650e55997449e1cc05f085c
",git fetch https://review.opendev.org/openstack/neutron-tempest-plugin refs/changes/46/899846/1 && git format-patch -1 --stdout FETCH_HEAD,"['neutron_tempest_plugin/scenario/test_dns_integration.py', 'neutron_tempest_plugin/config.py']",2,88d1d5752a0f2762df052d70a85edfab1db5a87c,add_seg_id,"# DNS Integration with an External Service DnsFeatureGroup = [ cfg.IntOpt( 'segmentation_id', default=12345, help=""For network types VLAN, GRE, VXLAN or GENEVE, the segmentation"" "" ID must be outside the ranges assigned to project networks.""), ] dns_feature_group = cfg.OptGroup( name='designate_feature_enabled', title='Enabled Designate Features') CONF.register_group(dns_feature_group) CONF.register_opts(DnsFeatureGroup, group=""designate_feature_enabled"")",,15,5
openstack%2Foctavia-tempest-plugin~755281,openstack/octavia-tempest-plugin,master,Ifc0dda5f810244251baa8823f1a7f519ea3c683c,"Adding LB functionality test coverage into: ""_test_load_balancer_CRUD""",NEW,2020-09-30 12:45:28.000000000,2024-03-05 12:02:14.000000000,,"[{'_account_id': 1131}, {'_account_id': 6469}, {'_account_id': 7249}, {'_account_id': 10273}, {'_account_id': 11628}, {'_account_id': 13995}, {'_account_id': 15025}, {'_account_id': 18894}, {'_account_id': 22348}, {'_account_id': 28609}, {'_account_id': 29244}, {'_account_id': 29681}, {'_account_id': 31664}, {'_account_id': 34429}]","[{'number': 1, 'created': '2020-09-30 12:45:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/e6b8b490c7106ab556fd2a614182c078deac2bbd', 'message': 'New test - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\nPolarion test ID: RHELOSP-63928\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 2, 'created': '2020-09-30 18:12:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/9dfda996c5e2616325ee60babded2a867360b62a', 'message': 'New test - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\nPolarion test ID: RHELOSP-63928\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 3, 'created': '2020-10-01 01:56:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/3b0709f49bf0c00dbb11c8dee38d4aa5bb3ad371', 'message': 'New test - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\nPolarion test ID: RHELOSP-63928\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 4, 'created': '2020-10-01 07:58:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/513430a22455f5dec464f969f224b9629247da59', 'message': 'New test - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\nPolarion test ID: RHELOSP-63928\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 5, 'created': '2020-10-03 06:39:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/2f8fc5b0464c4aa5f07287eba2c400ff32579dca', 'message': 'New test - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\nPolarion test ID: RHELOSP-63928\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 6, 'created': '2020-10-27 10:49:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/94b707d401123f4e7982f9728eb0ade12441e0bf', 'message': 'New test - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\nPolarion test ID: RHELOSP-63928\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 7, 'created': '2020-11-16 15:41:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/351d23ffca0415e7fd926e9b464e1477dae57fe6', 'message': 'New test - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 8, 'created': '2020-11-16 15:44:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/4f999849c6abaa8d5180baeef2df4bdbcc29ed43', 'message': 'New test - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 9, 'created': '2020-11-17 11:17:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/b2f252f63777d284c5eb0fd8c369bc6ad603980b', 'message': 'New test - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 10, 'created': '2020-12-02 11:34:08.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/0a48a3dff78089742b41890faa6469b00d589104', 'message': 'New negative test case - test_delete_udp_scenario\n\nTest scenario:\n1) Create UDP listener and validate UDP traffic\n2) Delete LB\n3) Send UDP traffic\nNo UDP response is expected\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 11, 'created': '2021-01-18 16:16:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/48ae25bcce4b287a5338d8286c1610217eec6421', 'message': 'New test case - test_delete_lb_cascade_is_true\n\nThe target of this test is to initiate traffic toward not existing LB\n(was already deleted) and to make sure that the traffic fails.\nNote: this specific test based on UDP traffic.\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 12, 'created': '2021-01-18 20:43:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/e0d1819a666ea9156c2a81a38ce2a73f4f3118d1', 'message': 'New test case - test_delete_lb_cascade_is_true\n\nThe target of this test is to initiate traffic toward not existing LB\n(was already deleted) and to make sure that the traffic fails.\nNote: this specific test based on UDP traffic.\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 13, 'created': '2021-01-19 08:01:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/deef327e0ab58a28dece5618117d82347899d88c', 'message': 'New test case - test_delete_lb_cascade_is_true\n\nThe target of this test is to initiate traffic toward not existing LB\n(was already deleted) and to make sure that the traffic fails.\nNote: this specific test based on UDP traffic.\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 14, 'created': '2021-02-24 12:53:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/3a80f943cf0901478ec454924291164d1e1612a2', 'message': 'New test case - test_delete_lb_cascade_is_true\n\nThe target of this test is to initiate traffic toward not existing LB\n(was already deleted) and to make sure that the traffic fails.\nNote: this specific test based on UDP traffic.\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 15, 'created': '2021-05-27 12:22:32.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/c27df6b9917d6456eef2c637dea882517e4b5eda', 'message': 'Adding more LB functionality testing coverage into: ""_test_load_balancer_CRUD""\n\n1) When no pool is associated with VIP, 503 status code is expected\n   Note: HTTP listener should exist.\n2) Traffic toward VIP should fail, if LB instance has beed deleted\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}, {'number': 16, 'created': '2021-05-31 04:50:44.000000000', 'files': ['octavia_tempest_plugin/tests/scenario/v2/test_load_balancer.py'], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/c337b48c7e1ab200c2619aec26f70cccbb043e55', 'message': 'Adding LB functionality test coverage into: ""_test_load_balancer_CRUD""\n\n1) When no pool is associated with VIP, 503 status code is expected\n   Note: HTTP listener should exist.\n2) Traffic toward VIP should fail, if LB instance has beed deleted\nNote: to save execution time, the above is tested for ipv4 only.\n\nChange-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c\n'}]",36,755281,c337b48c7e1ab200c2619aec26f70cccbb043e55,105,14,16,28609,,,0,"Adding LB functionality test coverage into: ""_test_load_balancer_CRUD""

1) When no pool is associated with VIP, 503 status code is expected
   Note: HTTP listener should exist.
2) Traffic toward VIP should fail, if LB instance has beed deleted
Note: to save execution time, the above is tested for ipv4 only.

Change-Id: Ifc0dda5f810244251baa8823f1a7f519ea3c683c
",git fetch https://review.opendev.org/openstack/octavia-tempest-plugin refs/changes/81/755281/1 && git format-patch -1 --stdout FETCH_HEAD,['octavia_tempest_plugin/tests/scenario/v2/test_traffic_ops.py'],1,e6b8b490c7106ab556fd2a614182c078deac2bbd,loadbalancer_delete," @testtools.skipIf(CONF.load_balancer.test_with_noop, 'Traffic tests will not work in noop mode.') @decorators.idempotent_id('8a85d79a-02fc-11eb-a2c0-74e5f9e2a801') def test_delete_udp_scenario(self): if not self.mem_listener_client.is_version_supported( self.api_version, '2.1'): raise self.skipException('UDP listener support is only available ' 'in Octavia API version 2.1 or newer') listener_id, pool_id = self._listener_pool_create(const.UDP, 8080) self._test_basic_traffic(const.UDP, 8080, listener_id, pool_id) self.mem_lb_client.delete_loadbalancer(self.lb_id, cascade=True) waiters.wait_for_deleted_status_or_not_found( self.mem_lb_client.show_loadbalancer, self.lb_id, const.PROVISIONING_STATUS, CONF.load_balancer.lb_build_interval, CONF.load_balancer.lb_build_timeout) try: self.make_udp_request(self.lb_vip_address, 8080, timeout=20) udp_traffic_received = True except Exception as e: LOG.info('test_delete_udp_scenario '+str(e)) udp_traffic_received = False self.assertFalse( udp_traffic_received, 'Failed - UDP traffic was successful sent and' ' received from non existing LB')",,27,0
openstack%2Foctavia-tempest-plugin~777412,openstack/octavia-tempest-plugin,master,I3cf49f6281529058b86b88501872292771812c6c,"New test case: ""test_connection_limit""",NEW,2021-02-24 15:47:44.000000000,2024-03-05 11:48:37.000000000,,"[{'_account_id': 6469}, {'_account_id': 6732}, {'_account_id': 6773}, {'_account_id': 7249}, {'_account_id': 8556}, {'_account_id': 10273}, {'_account_id': 10850}, {'_account_id': 11628}, {'_account_id': 13995}, {'_account_id': 15025}, {'_account_id': 18894}, {'_account_id': 22348}, {'_account_id': 27153}, {'_account_id': 29244}, {'_account_id': 29681}, {'_account_id': 30042}, {'_account_id': 31664}, {'_account_id': 32137}, {'_account_id': 34429}]","[{'number': 1, 'created': '2021-02-24 15:47:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/5b28d597422cad265870a9a539fe0a2f94dc4808', 'message': 'New ""test_connection_limit"" traffic based test.\n\nUpdate listener with ""connection_limit"" and send\nHTTP requests in parallel using Python ""Requests sessions""\nand threads modules.\n\nChange-Id: I3cf49f6281529058b86b88501872292771812c6c\n'}, {'number': 2, 'created': '2021-06-01 10:04:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/b6d71a7d1232489a7f6d868e5cf2f187b16191f8', 'message': 'New test case: ""test_connection_limit""\n\nTraffic based test, that is planned to validate ""connection_limit""\nfunctionality. Once set, LB should limit clients\' connections\n(parallel sessions) to the set value.\n\nChange-Id: I3cf49f6281529058b86b88501872292771812c6c\n'}, {'number': 3, 'created': '2021-06-10 08:46:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/2327b21798c192b16f48b212ce68ef38ebca915f', 'message': 'New test case: ""test_connection_limit""\n\nTraffic based test, that is planned to validate ""connection_limit""\nfunctionality. Once set, LB should limit clients\' connections\n(parallel sessions) to the set value.\n\nChange-Id: I3cf49f6281529058b86b88501872292771812c6c\n'}, {'number': 4, 'created': '2021-12-21 12:55:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/c038248171b3ad83a032e44b4b8b4bdcf5e131a7', 'message': 'New test case: ""test_connection_limit""\n\nTraffic based test, that is planned to validate ""connection_limit""\nfunctionality. Once set, LB should limit clients\' connections\n(parallel sessions) to the set value.\n\nChange-Id: I3cf49f6281529058b86b88501872292771812c6c\n'}, {'number': 5, 'created': '2021-12-21 17:13:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/361d863c353a4f228eb23e2ef9177a425a9f0676', 'message': 'New test case: ""test_connection_limit""\n\nTraffic based test, that is planned to validate ""connection_limit""\nfunctionality. Once set, LB should limit clients\' connections\n(parallel sessions) to the set value.\n\nChange-Id: I3cf49f6281529058b86b88501872292771812c6c\n'}, {'number': 6, 'created': '2022-02-24 21:57:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/bf6ed494093a0d50498eecd9b58812002b022856', 'message': 'New test case: ""test_connection_limit""\n\nTraffic based test, that is planned to validate ""connection_limit""\nfunctionality. Once set, LB should limit clients\' connections\n(parallel sessions) to the set value.\n\nChange-Id: I3cf49f6281529058b86b88501872292771812c6c\n'}, {'number': 7, 'created': '2023-07-18 11:37:09.000000000', 'files': ['octavia_tempest_plugin/tests/scenario/v2/test_traffic_ops.py', 'octavia_tempest_plugin/tests/validators.py'], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/7d2e4cdd0f9838a80d68819c1fb1e9088118d129', 'message': 'New test case: ""test_connection_limit""\n\nTraffic based test, that is planned to validate ""connection_limit""\nfunctionality. Once set, LB should limit clients\' connections\n(parallel sessions) to the set value.\n\nChange-Id: I3cf49f6281529058b86b88501872292771812c6c\n'}]",31,777412,7d2e4cdd0f9838a80d68819c1fb1e9088118d129,62,19,7,28609,,,0,"New test case: ""test_connection_limit""

Traffic based test, that is planned to validate ""connection_limit""
functionality. Once set, LB should limit clients' connections
(parallel sessions) to the set value.

Change-Id: I3cf49f6281529058b86b88501872292771812c6c
",git fetch https://review.opendev.org/openstack/octavia-tempest-plugin refs/changes/12/777412/1 && git format-patch -1 --stdout FETCH_HEAD,"['octavia_tempest_plugin/tests/scenario/v2/test_traffic_ops.py', 'octavia_tempest_plugin/tests/validators.py']",2,5b28d597422cad265870a9a539fe0a2f94dc4808,change-777412," @staticmethod def _http_requests_single_connection( dst_ip, dst_port, request_number, delay, result, index, tcp_timeout=1): """"""This function is used as a worker, target thread function. :param dst_ip: Destination HTTP server IP. :param dst_port: Destination HTTP server port. :param request_number: Number of subsequent GET requests to send on the same TCP connection (Session). :param delay: Delay in [sec] between GET requests. :param result is ""returned list of results"". List of Nones [None, None..., None] in a length of thread s number. This list holds the ""return"" results for all executed threads. :param index: used to index threads. :param tcp_timeout: Python Requests module TCP timeout. :return: see result ""param"" """""" try: s = requests.Session() responses = [] for req in range(0, request_number): r = s.get('http://'+dst_ip+':'+str(dst_port), timeout=tcp_timeout) responses.append({ 'RequestNumber': req, 'ResponseCode': r.status_code, 'ResponseContentSize': len(r.content)}) time.sleep(delay) result[index] = { 'ConnectionStatus': True, 'RespondData': responses} except Exception as e: result[index] = {'ConnectionStatus': False, 'RespondData': e}",,98,0
openstack%2Foctavia-tempest-plugin~751617,openstack/octavia-tempest-plugin,master,I46aee56904d39e5482acdac32feb83771102fc63,"New ""test_trigger_amphorae_failover"" test case",NEW,2020-09-13 16:51:48.000000000,2024-03-05 11:46:35.000000000,,"[{'_account_id': 6469}, {'_account_id': 6732}, {'_account_id': 7249}, {'_account_id': 8556}, {'_account_id': 10273}, {'_account_id': 10850}, {'_account_id': 11628}, {'_account_id': 13995}, {'_account_id': 15025}, {'_account_id': 18894}, {'_account_id': 22348}, {'_account_id': 24791}, {'_account_id': 27153}, {'_account_id': 28609}, {'_account_id': 29244}, {'_account_id': 29681}, {'_account_id': 31664}, {'_account_id': 32137}, {'_account_id': 34429}]","[{'number': 1, 'created': '2020-09-13 16:51:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/2b204fca2b7d0136d178af9ec860bb06401c7a45', 'message': 'Adding failover test.\nSending HTTP traffic while MASTER Amphore is rebooted.\nBACKUP Amphore should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 2, 'created': '2020-09-13 19:39:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/f8c24054c44244f5c93a9270046af8dfd72df530', 'message': 'Adding failover test.\nSending HTTP traffic while MASTER Amphore is rebooted.\nBACKUP Amphore should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 3, 'created': '2020-09-14 08:04:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/6ff07e076af844ae957d2bd8902920ef5d41d189', 'message': 'Adding failover test.\nSend HTTP traffic while MASTER Amphore is rebooted.\nBACKUP Amphore should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 4, 'created': '2020-09-15 11:37:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/f65b27d5e999d39e2d5123afdcf46fd6fda2ada7', 'message': 'Adding failover test.\nSend HTTP traffic while MASTER Amphore is rebooted.\nBACKUP Amphore should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 5, 'created': '2020-09-23 13:48:36.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/006e83d0803aaa51662a7d4188194d1443a7c191', 'message': 'Adding failover test.\nSend HTTP traffic while MASTER Amphorae is rebooted.\nBACKUP Amphorae should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 6, 'created': '2020-09-25 16:51:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/8df665589467992776f51f6a839536a5c17ebdd1', 'message': 'Adding failover test.\nSend HTTP traffic while MASTER Amphorae is rebooted.\nBACKUP Amphorae should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 7, 'created': '2020-09-27 19:15:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/cf0afaed39492de56816160019f60082ca100046', 'message': 'Adding failover test.\nSend HTTP traffic while MASTER Amphorae is rebooted.\nBACKUP Amphorae should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 8, 'created': '2020-11-13 11:47:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/d18af9f77e7afde7cfec22b1d041497c33bbbde0', 'message': 'Adding failover test.\nSend HTTP traffic while MASTER Amphorae is rebooted.\nBACKUP Amphorae should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 9, 'created': '2020-11-13 16:47:36.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/3a0051790167e3006f55e70a92460ac0735d7a82', 'message': 'Adding failover test.\nSend HTTP traffic while MASTER Amphorae is rebooted.\nBACKUP Amphorae should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 10, 'created': '2020-11-13 19:47:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/083dde4971d6244f0585ca8f528f8f37205c17bf', 'message': 'Adding failover test.\nSend HTTP traffic while MASTER Amphorae is rebooted.\nBACKUP Amphorae should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 11, 'created': '2021-01-13 12:50:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/e76f0e334403f722966f01fc9b3ef4cf2aacce93', 'message': 'Adding failover test.\nSend HTTP traffic while MASTER Amphorae is rebooted.\nBACKUP Amphorae should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 12, 'created': '2021-02-06 14:02:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/d0766bd50fccd02d03ca9646d68603b02b08e2e5', 'message': 'Adding VRRP test, ""HARD type"" reboot is used to restart MASTER Amphorae.\n\nTest scenario:\nSend HTTP traffic while MASTER Amphorae is rebooted.\nExpected: BACKUP Amphorae should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 13, 'created': '2021-02-06 17:13:36.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/5235b54c851610c3b48656a33906277e37b2a7a2', 'message': 'Adding VRRP test, ""HARD type"" reboot is used to restart MASTER Amphorae.\n\nTest scenario:\nSend HTTP traffic while MASTER Amphorae is rebooted.\nExpected: BACKUP Amphorae should serve the traffic.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 14, 'created': '2021-02-07 09:48:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/ba19289c4bfc222368829ad296a537bdfe69f9a8', 'message': 'Adding VRRP test, ""HARD type"" reboot is used to restart BACKUP Amphorae.\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: BACKUP Amphorae should serve the traffic.\nNo VRRP/failover is triggered\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 15, 'created': '2021-02-07 12:43:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/51decf8db60713ac8498a8e7853fa54b61636743', 'message': 'False Positive sceario, send traffic while BACKUP Amphorae reboots\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normal.\nNo VRRP/failover is triggered.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 16, 'created': '2021-02-07 12:50:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/9755d205811c5f3a895352e2e3ecda3794f2d220', 'message': 'False Positive sceario, send traffic while BACKUP Amphorae reboots\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normal.\nNo VRRP/failover is triggered.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 17, 'created': '2021-02-08 12:32:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/37fb3c0c7eccc7513a29efe3fc6f1c3b4e0f290e', 'message': 'False Positive sceario, send traffic while BACKUP Amphorae reboots\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normal.\nNo VRRP/failover is triggered.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 18, 'created': '2021-02-08 17:10:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/0c3bca758fa7a9c9c41142ce17900dd3d3be6599', 'message': 'False Positive sceario, send traffic while BACKUP Amphorae reboots\n\n________NOT FOR REVIEW!!!_______\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normal.\nNo VRRP/failover is triggered.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 19, 'created': '2021-02-08 21:17:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/09fb06e57870caff8aa2c9ee713ef8702ac5bdeb', 'message': 'False Positive sceario, send traffic while BACKUP Amphorae reboots\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normal.\nNo VRRP/failover is triggered.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 20, 'created': '2021-02-09 09:52:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/3e195356673007006a55ed19e4cd09269f56eaf3', 'message': 'False Positive sceario, send traffic while BACKUP Amphorae reboots\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normal.\nNo VRRP/failover is triggered.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 21, 'created': '2021-02-09 16:58:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/3b520d8b5d771a895da62e6cff2f20219a5fc2e4', 'message': 'False Positive scenario, send traffic while BACKUP Amphorae reboots\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normally.\nNo VRRP/failover is triggered, LB stays in ACTIVE status\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 22, 'created': '2021-02-12 08:09:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/0e5c50d78c979256ddceff72ea56b444edf7eb5c', 'message': 'False Positive scenario, send traffic while BACKUP Amphorae reboots\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normally.\nNo VRRP/failover is triggered, LB stays in ACTIVE status\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 23, 'created': '2021-02-24 12:55:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/577a5756d20f2cba676a4c92532b56eb44b16d47', 'message': 'False Positive scenario, send traffic while BACKUP Amphorae reboots\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normally.\nNo VRRP/failover is triggered, LB stays in ACTIVE status\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 24, 'created': '2021-05-18 11:19:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/26bfc952bde36c0ca5cbf7fbcca24941e6f3a47d', 'message': 'False Positive scenario, send traffic while BACKUP Amphorae reboots\n\nTest scenario:\nSend HTTP traffic while BACKUP Amphorae is rebooted.\nExpected: MASTER Amphorae serves the traffic as normally.\nNo VRRP/failover is triggered, LB stays in ACTIVE status\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 25, 'created': '2021-07-27 13:42:32.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/0340d3fada54b5674ec7f1f090a40a75afe9ae14', 'message': 'Adding failover scenario test cases\n\n1) test_reboot_backup_amphorae\n   False Positive scenario, send traffic while BACKUP Amphorae reboots\n   Send HTTP traffic while BACKUP Amphorae is rebooted\n   Expected: MASTER Amphorae serves the traffic as normally\n   No VRRP/failover is triggered, LB stays in ACTIVE status\n\n2) test_trigger_amphorae_failover\n   Detect the ID of ACTIVE Amphorae\n   Force failover an ACTIVE Amphorae\n   Validate HTTP traffic toward LB VIP\n   Make sure that BACKUP amphorae became ACTIVE\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 26, 'created': '2022-07-28 09:30:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/5557dee011e82322028e93ffa38bee7ab0f6c0dc', 'message': 'New ""test_trigger_amphorae_failover"" test case\n\nTest  scenario:\n  Detect the ID of ACTIVE Amphorae\n  Force failover an ACTIVE Amphorae\n  Validate HTTP traffic toward LB VIP\n  Make sure that BACKUP amphorae became ACTIVE\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 27, 'created': '2022-07-31 15:26:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/64cf4201330db0615ee544d3ee64592a25e48754', 'message': 'New ""test_trigger_amphorae_failover"" test case\n\nTest  scenario:\n1) Detect master amphorae ID and force a failover\n2) Validate HTTP traffic is now served by backup amphorae\n3) Wait till LB is in active, ensure backup amphorae has\n   became a master amphorae.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 28, 'created': '2022-08-01 12:57:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/c79c3f8076bf9824598d67e58c2f3b0e8f2b0244', 'message': 'New ""test_trigger_amphorae_failover"" test case\n\nTest  scenario:\n1) Detect master amphorae ID and force a failover\n2) Validate HTTP traffic is now served by backup amphorae\n3) Wait till LB is in active, ensure backup amphorae has\n   became a master amphorae.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}, {'number': 29, 'created': '2022-08-01 13:59:48.000000000', 'files': ['octavia_tempest_plugin/tests/act_stdby_scenario/v2/test_active_standby.py'], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/39482902728764d74d60683291b0b6908c6bb522', 'message': 'New ""test_trigger_amphorae_failover"" test case\n\nTest  scenario:\n1) Detect master amphorae ID and force a failover\n2) Validate HTTP traffic is now served by backup amphorae\n3) Wait till LB is in active, ensure backup amphorae has\n   became a master amphorae.\n\nChange-Id: I46aee56904d39e5482acdac32feb83771102fc63\n'}]",77,751617,39482902728764d74d60683291b0b6908c6bb522,108,19,29,28609,,,0,"New ""test_trigger_amphorae_failover"" test case

Test  scenario:
1) Detect master amphorae ID and force a failover
2) Validate HTTP traffic is now served by backup amphorae
3) Wait till LB is in active, ensure backup amphorae has
   became a master amphorae.

Change-Id: I46aee56904d39e5482acdac32feb83771102fc63
",git fetch https://review.opendev.org/openstack/octavia-tempest-plugin refs/changes/17/751617/1 && git format-patch -1 --stdout FETCH_HEAD,['octavia_tempest_plugin/tests/act_stdby_scenario/v2/test_active_standby.py'],1,2b204fca2b7d0136d178af9ec860bb06401c7a45,change-751617-24," @testtools.skipIf(CONF.load_balancer.test_with_noop, 'Traffic tests will not work in noop mode.') @testtools.skipIf(CONF.load_balancer.loadbalancer_topology != 'ACTIVE_STANDBY', 'Test is relevant only for ACTIVE_STANDBY topology') @decorators.idempotent_id('050300da-f27f-11ea-a9de-52540029477a') def test_traffic_on_reboot(self): """"""Test scenario: 1) Pool of 2 HTTP members is created by ""resource_setup"" 2) Detect the ID of MASTER Amphora and ""hard"" reboot Amphora VM 3) Send HTTP traffic to LB VIP, BACKUP Amphora should serve the traffic. """""" # We have to do this here as the api_version and clients are not # setup in time to use a decorator or the skip_checks mixin if not self.mem_listener_client.is_version_supported( self.api_version, '2.4'): raise self.skipException( 'Active/Standby VRRP failover tests require ' 'Octavia API version 2.3 or newer.') # Get the IDs: ""amp_id"" and ""master_amp_compute_id"" amphoras_list = self.lb_admin_amphora_client.list_amphorae() LOG.info('test_traffic_on_reboot amphoras_list: ' + str(amphoras_list)) master_amp_compute_id = [dic['compute_id'] for dic in amphoras_list if dic['role'].lower() == 'master'][0] amp_id = [dic['id'] for dic in amphoras_list if dic['role'].lower() == 'backup'][0] LOG.info('test_traffic_on_reboot master_amp_compute_id: ' + str(master_amp_compute_id)) LOG.info('test_traffic_on_reboot amp_id: ' + str(amp_id)) # Reboot Backup Amphora VM (""HARD reboot"") reboot_result = self.os_admin_servers_client.reboot_server( master_amp_compute_id, type=""HARD"") LOG.info('test_traffic_on_reboot HARD Reboot API response: ' + str(reboot_result)) # Try sending HTTP traffic until it's being detected on Backup Amphora connections = 0 retries = 0 while connections == 0 and retries < 10: LOG.info('test_traffic_on_reboot ' + str(connections) + str(retries)) self.check_members_balanced(self.lb_vip_address) amp_stat = self.os_admin.amphora_client.get_amphora_stats(amp_id) for listener in amp_stat: connections += listener[const.TOTAL_CONNECTIONS] retries += 1 LOG.info('test_traffic_on_reboot Retry No: ' + str(retries) + ' Amphora statistics: ' + str(amp_stat)) self.assertGreater(connections, 0, 'Error - no traffic has been ' 'detected on Backup Amphora!')",,55,0
openstack%2Foctavia-tempest-plugin~851840,openstack/octavia-tempest-plugin,master,I038e48c2cf1d934da8c8050e884e3bc07d6b54a8,"Adds ""test_healtmonitor_status_error_if_members_are_paused""",NEW,2022-08-02 11:00:16.000000000,2024-03-05 11:33:39.000000000,,"[{'_account_id': 15025}, {'_account_id': 18894}, {'_account_id': 22348}, {'_account_id': 29244}, {'_account_id': 29681}, {'_account_id': 31664}, {'_account_id': 34067}, {'_account_id': 34429}]","[{'number': 1, 'created': '2022-08-02 11:00:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/7be2a5f4992fd1bfa2c03cdf8d797d3e4cfb8b83', 'message': 'Adds ""test_healtmonitor_status_error_if_members_are_paused""\n\nValidate that the healthmoitor is getting into the ERROR\noperation status when VMs (LB\'s members) are paused.\n\nChange-Id: I038e48c2cf1d934da8c8050e884e3bc07d6b54a8\n'}, {'number': 2, 'created': '2022-08-02 14:58:23.000000000', 'files': ['octavia_tempest_plugin/tests/scenario/v2/test_healthmonitor_traffic.py'], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/56de13e5cea920dfcb2a36ba1930d95ae3bb1b79', 'message': 'Adds ""test_healtmonitor_status_error_if_members_are_paused""\n\nValidate that the healthmoitor is getting into the ERROR\noperation status when VMs (LB\'s members) are paused.\n\nChange-Id: I038e48c2cf1d934da8c8050e884e3bc07d6b54a8\n'}]",10,851840,56de13e5cea920dfcb2a36ba1930d95ae3bb1b79,20,8,2,28609,,,0,"Adds ""test_healtmonitor_status_error_if_members_are_paused""

Validate that the healthmoitor is getting into the ERROR
operation status when VMs (LB's members) are paused.

Change-Id: I038e48c2cf1d934da8c8050e884e3bc07d6b54a8
",git fetch https://review.opendev.org/openstack/octavia-tempest-plugin refs/changes/40/851840/1 && git format-patch -1 --stdout FETCH_HEAD,['octavia_tempest_plugin/tests/scenario/v2/test_healthmonitor_traffic.py'],1,7be2a5f4992fd1bfa2c03cdf8d797d3e4cfb8b83,health_monitor_traffic,"# Copyright 2022 Red Hat, Inc. All rights reserved. # # Licensed under the Apache License, Version 2.0 (the ""License""); you may # not use this file except in compliance with the License. You may obtain # a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the # License for the specific language governing permissions and limitations # under the License. import testtools from oslo_log import log as logging from tempest import config from tempest.lib.common.utils import data_utils from tempest.lib import decorators from octavia_tempest_plugin.common import constants as const from octavia_tempest_plugin.tests import test_base from octavia_tempest_plugin.tests import waiters CONF = config.CONF LOG = logging.getLogger(__name__) class HealthMonitorScenarioTest(test_base.LoadBalancerBaseTestWithCompute): @classmethod def skip_checks(cls): super().skip_checks() if not CONF.validation.run_validation: raise cls.skipException('Traffic tests will not work without ' 'run_validation enabled.') if CONF.load_balancer.test_with_noop: raise cls.skipException('Traffic tests will not work in noop ' 'mode.') @classmethod def resource_setup(cls): """"""Setup resources needed by the tests."""""" super(HealthMonitorScenarioTest, cls).resource_setup() lb_name = data_utils.rand_name(""lb_member_lb1_operations"") lb_kwargs = {const.PROVIDER: CONF.load_balancer.provider, const.NAME: lb_name} # TODO(rm_work): Make this work with ipv6 and split this test for both ip_version = 4 cls._setup_lb_network_kwargs(lb_kwargs, ip_version) lb = cls.mem_lb_client.create_loadbalancer(**lb_kwargs) cls.lb_id = lb[const.ID] cls.addClassResourceCleanup( cls.mem_lb_client.cleanup_loadbalancer, cls.lb_id, cascade=True) waiters.wait_for_status(cls.mem_lb_client.show_loadbalancer, cls.lb_id, const.PROVISIONING_STATUS, const.ACTIVE, CONF.load_balancer.lb_build_interval, CONF.load_balancer.lb_build_timeout) if CONF.validation.connect_method == 'floating': port_id = lb[const.VIP_PORT_ID] result = cls.lb_mem_float_ip_client.create_floatingip( floating_network_id=CONF.network.public_network_id, port_id=port_id) floating_ip = result['floatingip'] LOG.info('lb1_floating_ip: {}'.format(floating_ip)) cls.addClassResourceCleanup( waiters.wait_for_not_found, cls.lb_mem_float_ip_client.delete_floatingip, cls.lb_mem_float_ip_client.show_floatingip, floatingip_id=floating_ip['id']) cls.lb_vip_address = floating_ip['floating_ip_address'] else: cls.lb_vip_address = lb[const.VIP_ADDRESS] @classmethod def _listener_pool_create(cls, protocol, protocol_port, pool_algorithm=const.LB_ALGORITHM_ROUND_ROBIN, insert_headers_dic=None): if (protocol == const.UDP and not cls.mem_listener_client.is_version_supported( cls.api_version, '2.1')): return if (pool_algorithm == const.LB_ALGORITHM_SOURCE_IP_PORT and not cls.mem_listener_client.is_version_supported( cls.api_version, '2.13')): raise testtools.TestCase.skipException( 'Skipping this test as load balancing algorithm ' 'SOURCE_IP_PORT requires API version 2.13 or newer.') listener_name = data_utils.rand_name(""lb_member_listener1_operations"") listener_kwargs = { const.NAME: listener_name, const.PROTOCOL: protocol, const.PROTOCOL_PORT: protocol_port, const.LOADBALANCER_ID: cls.lb_id, # For branches that don't support multiple listeners in single # haproxy process and use haproxy>=1.8: const.CONNECTION_LIMIT: 200, } if insert_headers_dic: listener_kwargs[const.INSERT_HEADERS] = insert_headers_dic listener = cls.mem_listener_client.create_listener(**listener_kwargs) waiters.wait_for_status(cls.mem_lb_client.show_loadbalancer, cls.lb_id, const.PROVISIONING_STATUS, const.ACTIVE, CONF.load_balancer.build_interval, CONF.load_balancer.build_timeout) pool_name = data_utils.rand_name(""lb_member_pool1_operations"") pool_kwargs = { const.NAME: pool_name, const.PROTOCOL: protocol, const.LB_ALGORITHM: pool_algorithm, const.LISTENER_ID: listener[const.ID], } pool = cls.mem_pool_client.create_pool(**pool_kwargs) waiters.wait_for_status(cls.mem_lb_client.show_loadbalancer, cls.lb_id, const.PROVISIONING_STATUS, const.ACTIVE, CONF.load_balancer.build_interval, CONF.load_balancer.build_timeout) return listener[const.ID], pool[const.ID] def _pool_add_healthmonitor(self, pool_id, protocol): hm_name = data_utils.rand_name(""lb_member_hm1-hm-traffic"") if protocol != const.HTTP: if protocol == const.UDP: hm_type = const.HEALTH_MONITOR_UDP_CONNECT elif protocol == const.TCP: hm_type = const.HEALTH_MONITOR_TCP hm_kwargs = { const.POOL_ID: pool_id, const.NAME: hm_name, const.TYPE: hm_type, const.DELAY: 3, const.TIMEOUT: 2, const.MAX_RETRIES: 2, const.MAX_RETRIES_DOWN: 2, const.ADMIN_STATE_UP: True, } else: hm_kwargs = { const.POOL_ID: pool_id, const.NAME: hm_name, const.TYPE: const.HEALTH_MONITOR_HTTP, const.DELAY: 2, const.TIMEOUT: 2, const.MAX_RETRIES: 2, const.MAX_RETRIES_DOWN: 2, const.HTTP_METHOD: const.GET, const.URL_PATH: '/', const.EXPECTED_CODES: '200', const.ADMIN_STATE_UP: True, } hm = self.mem_healthmonitor_client.create_healthmonitor(**hm_kwargs) self.addCleanup( self.mem_healthmonitor_client.cleanup_healthmonitor, hm[const.ID], lb_client=self.mem_lb_client, lb_id=self.lb_id) waiters.wait_for_status( self.mem_lb_client.show_loadbalancer, self.lb_id, const.PROVISIONING_STATUS, const.ACTIVE, CONF.load_balancer.build_interval, CONF.load_balancer.build_timeout) hm = waiters.wait_for_status( self.mem_healthmonitor_client.show_healthmonitor, hm[const.ID], const.PROVISIONING_STATUS, const.ACTIVE, CONF.load_balancer.build_interval, CONF.load_balancer.build_timeout) return hm def _test_basic_traffic( self, protocol, protocol_port, pool_id, persistent=True, traffic_member_count=2, source_port=None, delay=None): """"""Tests sending traffic through a loadbalancer * Set up members on a loadbalancer. * Test traffic to ensure it is balanced properly. """""" # Set up Member 1 for Webserver 1 member1_name = data_utils.rand_name(""lb_member_member1-traffic"") member1_kwargs = { const.POOL_ID: pool_id, const.NAME: member1_name, const.ADMIN_STATE_UP: True, const.ADDRESS: self.webserver1_ip, const.PROTOCOL_PORT: 80, } if self.lb_member_1_subnet: member1_kwargs[const.SUBNET_ID] = self.lb_member_1_subnet[const.ID] member1 = self.mem_member_client.create_member(**member1_kwargs) self.addCleanup( self.mem_member_client.cleanup_member, member1[const.ID], pool_id=pool_id, lb_client=self.mem_lb_client, lb_id=self.lb_id) waiters.wait_for_status( self.mem_lb_client.show_loadbalancer, self.lb_id, const.PROVISIONING_STATUS, const.ACTIVE, CONF.load_balancer.check_interval, CONF.load_balancer.check_timeout) # Set up Member 2 for Webserver 2 member2_name = data_utils.rand_name(""lb_member_member2-traffic"") member2_kwargs = { const.POOL_ID: pool_id, const.NAME: member2_name, const.ADMIN_STATE_UP: True, const.ADDRESS: self.webserver2_ip, const.PROTOCOL_PORT: 80, } if self.lb_member_2_subnet: member2_kwargs[const.SUBNET_ID] = self.lb_member_2_subnet[const.ID] member2 = self.mem_member_client.create_member(**member2_kwargs) self.addCleanup( self.mem_member_client.cleanup_member, member2[const.ID], pool_id=pool_id, lb_client=self.mem_lb_client, lb_id=self.lb_id) waiters.wait_for_status( self.mem_lb_client.show_loadbalancer, self.lb_id, const.PROVISIONING_STATUS, const.ACTIVE, CONF.load_balancer.check_interval, CONF.load_balancer.check_timeout) # Send some traffic self.check_members_balanced( self.lb_vip_address, protocol_port=protocol_port, persistent=persistent, protocol=protocol, traffic_member_count=traffic_member_count, source_port=source_port, delay=delay) def _pause_vm(self, vm_id, action): if action == 'pause': return self.os_admin_servers_client.pause_server(vm_id) elif action == 'unpause': return self.os_admin_servers_client.unpause_server(vm_id) else: raise RuntimeError('Unsupported action:""{}"" for VM:{} '.format( action, vm_id)) @decorators.idempotent_id('ce037ad2-089b-11eb-abec-74e5f9e2a801') def test_healtmonitor_status_error_if_members_are_paused(self): """"""Test scenario: * Create TCP listener, pool and TCP healthmonitor Validate TCP traffic. * Pause the VMs used for pool's members. Validate that healthmoitor is getting into appropriate ERROR operation status. * Note: Unpause the VMs (done by cleanup in tear down) """""" if not self.mem_listener_client.is_version_supported( self.api_version, '2.1'): raise self.skipException('TCP listener support is only available ' 'in Octavia API version 2.1 or newer') listener_port = 104 listener_id, pool_id = self._listener_pool_create( const.TCP, listener_port) self._pool_add_healthmonitor(pool_id, protocol=const.TCP) self._test_basic_traffic(const.TCP, listener_port, pool_id, persistent=False) vm_ids = [self.lb_member_webserver1[const.ID], self.lb_member_webserver2[const.ID]] for vm_id in vm_ids: self._pause_vm(vm_id, action='pause') self.addCleanup(self._pause_vm, vm_id, 'unpause') mb_ids = [mb[const.ID] for mb in self.mem_member_client.list_members(pool_id)] for mb_id in mb_ids: waiters.wait_for_status( self.mem_member_client.show_member, mb_id, const.OPERATING_STATUS, const.ERROR, CONF.load_balancer.build_interval, CONF.load_balancer.build_timeout, pool_id=pool_id) ",,293,0
openstack%2Fansible-collections-openstack~907515,openstack/ansible-collections-openstack,master,Ieb7cfd796991645db44dafc0e5ba82855c08853a,Replace 3rd party mock,NEW,2024-02-02 02:33:25.000000000,2024-03-05 11:16:56.000000000,,"[{'_account_id': 10239}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-02 02:33:25.000000000', 'files': ['tests/unit/modules/cloud/openstack/test_server.py'], 'web_link': 'https://opendev.org/openstack/ansible-collections-openstack/commit/6a93ef96ee81bf39a6e0811a00bdbcf360327c16', 'message': 'Replace 3rd party mock\n\n... by the built-in unittest.mock which is available in Python 3.\n\nChange-Id: Ieb7cfd796991645db44dafc0e5ba82855c08853a\n'}]",3,907515,6a93ef96ee81bf39a6e0811a00bdbcf360327c16,6,2,1,9816,,,0,"Replace 3rd party mock

... by the built-in unittest.mock which is available in Python 3.

Change-Id: Ieb7cfd796991645db44dafc0e5ba82855c08853a
",git fetch https://review.opendev.org/openstack/ansible-collections-openstack refs/changes/15/907515/1 && git format-patch -1 --stdout FETCH_HEAD,['tests/unit/modules/cloud/openstack/test_server.py'],1,6a93ef96ee81bf39a6e0811a00bdbcf360327c16,,from unittest import mock,import mock,1,1
openstack%2Ftempest~901525,openstack/tempest,master,I866abe25e9c8204bcfb452dd2fac6181b6dfd7e0,Add coverage for caching image on remote node,MERGED,2023-11-21 07:51:02.000000000,2024-03-05 11:16:23.000000000,2024-03-05 11:13:15.000000000,"[{'_account_id': 4393}, {'_account_id': 8556}, {'_account_id': 22348}, {'_account_id': 22873}, {'_account_id': 34510}]","[{'number': 1, 'created': '2023-11-21 07:51:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/tempest/commit/f30f7bfe5be0f2b301ba9550ca49ead1500cb8d1', 'message': 'Add coverage for caching image on remote node\n\nDepends-On: https://review.opendev.org/c/openstack/glance/+/901429\nChange-Id: I866abe25e9c8204bcfb452dd2fac6181b6dfd7e0\n'}, {'number': 2, 'created': '2023-11-21 07:55:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/tempest/commit/2c5ce9896e43632fc887af1ccd97382789eaa578', 'message': 'Add coverage for caching image on remote node\n\nDepends-On: https://review.opendev.org/c/openstack/glance/+/900419\nChange-Id: I866abe25e9c8204bcfb452dd2fac6181b6dfd7e0\n'}, {'number': 3, 'created': '2024-02-28 10:00:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/tempest/commit/7b0e609472df5cbc884d1e2f6666f4d04386df37', 'message': 'Add coverage for caching image on remote node\n\nDepends-On: https://review.opendev.org/c/openstack/glance/+/900419\nChange-Id: I866abe25e9c8204bcfb452dd2fac6181b6dfd7e0\n'}, {'number': 4, 'created': '2024-03-04 15:26:15.000000000', 'files': ['tempest/api/image/v2/admin/test_image_caching.py', 'tempest/clients.py'], 'web_link': 'https://opendev.org/openstack/tempest/commit/56364027879c655e38957780059f41007e6516ea', 'message': 'Add coverage for caching image on remote node\n\nAdded test coverage to verify image is cached on remote glance\nnode as well.\n\nNote: Removed potential race condtion logic where earlier we were\nchecking for image stays in queued state.\n\nDepends-On: https://review.opendev.org/c/openstack/glance/+/900419\nChange-Id: I866abe25e9c8204bcfb452dd2fac6181b6dfd7e0\n'}]",15,901525,56364027879c655e38957780059f41007e6516ea,24,5,4,9303,,,0,"Add coverage for caching image on remote node

Added test coverage to verify image is cached on remote glance
node as well.

Note: Removed potential race condtion logic where earlier we were
checking for image stays in queued state.

Depends-On: https://review.opendev.org/c/openstack/glance/+/900419
Change-Id: I866abe25e9c8204bcfb452dd2fac6181b6dfd7e0
",git fetch https://review.opendev.org/openstack/tempest refs/changes/25/901525/1 && git format-patch -1 --stdout FETCH_HEAD,"['tempest/api/image/v2/admin/test_image_caching.py', 'tempest/clients.py']",2,f30f7bfe5be0f2b301ba9550ca49ead1500cb8d1,centralized-cache-db," # NOTE(abhishekk): If no alternate endpoint is configured, # this client will work the same as the base # self.image_cache_client. If your test needs to know if # these are different, check the config option to see if # the alternate_image_endpoint is set. self.cache_client_remote = self.image_v2.ImageCacheClient( service=CONF.image.alternate_image_endpoint, endpoint_type=CONF.image.alternate_image_endpoint_type, region=CONF.image.region)",,103,12
openstack%2Fopenstack-zuul-jobs~910256,openstack/openstack-zuul-jobs,master,Ib37c638a2703f323156ec6d08519f1016c413b75,Drop integrated-gate template,MERGED,2024-02-26 17:56:59.000000000,2024-03-05 11:08:07.000000000,2024-03-05 11:05:37.000000000,"[{'_account_id': 8556}, {'_account_id': 13252}, {'_account_id': 19138}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-26 17:56:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-zuul-jobs/commit/5ee2a6bed4ed36c410062fd2769e60792050f898', 'message': 'Drop integrated-gate template\n\nThe old tempest-full legacy job is to be removed, because all branches\nthat were using it have been EOLed. Drop the template that references\nit.\n\nChange-Id: Ib37c638a2703f323156ec6d08519f1016c413b75\n'}, {'number': 2, 'created': '2024-03-05 09:02:46.000000000', 'files': ['zuul.d/zuul-legacy-project-templates.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-zuul-jobs/commit/0415d86ac390783f77933527fafc9b603a976aee', 'message': 'Drop integrated-gate template\n\nThe old tempest-full legacy job is to be removed, because all branches\nthat were using it have been EOLed. Drop the template that references\nit.\n\nChange-Id: Ib37c638a2703f323156ec6d08519f1016c413b75\n'}]",5,910256,0415d86ac390783f77933527fafc9b603a976aee,18,4,2,13252,,,0,"Drop integrated-gate template

The old tempest-full legacy job is to be removed, because all branches
that were using it have been EOLed. Drop the template that references
it.

Change-Id: Ib37c638a2703f323156ec6d08519f1016c413b75
",git fetch https://review.opendev.org/openstack/openstack-zuul-jobs refs/changes/56/910256/1 && git format-patch -1 --stdout FETCH_HEAD,['zuul.d/zuul-legacy-project-templates.yaml'],1,5ee2a6bed4ed36c410062fd2769e60792050f898,drop-tempest-full,, name: integrated-gate description: | Jobs that are run across several projects to test the base OpenStack functionality. check: jobs: - tempest-full gate: jobs: - tempest-full - project-template:,0,12
openstack%2Fdevstack-plugin-ceph~910966,openstack/devstack-plugin-ceph,master,Ic39b48fb2dd48f47d5b3c6165e4f4c6b1c47cc7d,Fix cephadm binary URL to the numeric ceph version,MERGED,2024-03-04 16:40:10.000000000,2024-03-05 10:52:42.000000000,2024-03-05 10:51:21.000000000,"[{'_account_id': 4393}, {'_account_id': 8556}, {'_account_id': 13252}, {'_account_id': 22348}, {'_account_id': 29632}]","[{'number': 1, 'created': '2024-03-04 16:40:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/devstack-plugin-ceph/commit/53196353e4ea4a0afb0ce1cc2bb229539325118c', 'message': ""Fix cephadm binary URL to the numeric ceph version\n\ndownload.ceph.com used to maintain named versions of ceph\nreleases, which were hardlinked folders corresponding\nto the latest minor release from a stable branch; we've noticed\nthat these folders can be deleted. Let's instead look for\ncephadm under the corresponding numeric release tag folder.\n\nChange-Id: Ic39b48fb2dd48f47d5b3c6165e4f4c6b1c47cc7d\nSigned-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>\n""}, {'number': 2, 'created': '2024-03-04 19:07:16.000000000', 'files': ['devstack/lib/cephadm'], 'web_link': 'https://opendev.org/openstack/devstack-plugin-ceph/commit/24d9517b78c13777bfb3583a30328a9eedbf6fe8', 'message': ""Fix cephadm binary URL to the numeric ceph version\n\ndownload.ceph.com used to maintain named versions of ceph\nreleases, which were hardlinked folders corresponding\nto the latest minor release from a stable branch; we've noticed\nthat these folders can be deleted. Let's instead look for\ncephadm under the corresponding numeric release tag folder.\n\nChange-Id: Ic39b48fb2dd48f47d5b3c6165e4f4c6b1c47cc7d\nSigned-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>\n""}]",10,910966,24d9517b78c13777bfb3583a30328a9eedbf6fe8,26,5,2,16643,,,0,"Fix cephadm binary URL to the numeric ceph version

download.ceph.com used to maintain named versions of ceph
releases, which were hardlinked folders corresponding
to the latest minor release from a stable branch; we've noticed
that these folders can be deleted. Let's instead look for
cephadm under the corresponding numeric release tag folder.

Change-Id: Ic39b48fb2dd48f47d5b3c6165e4f4c6b1c47cc7d
Signed-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>
",git fetch https://review.opendev.org/openstack/devstack-plugin-ceph refs/changes/66/910966/1 && git format-patch -1 --stdout FETCH_HEAD,['devstack/lib/cephadm'],1,53196353e4ea4a0afb0ce1cc2bb229539325118c,, ceph_version=$(_get_ceph_version) curl -O https://download.ceph.com/rpm-${ceph_version}/${os_release}/noarch/cephadm, curl -O https://download.ceph.com/rpm-${CEPH_RELEASE}/${os_release}/noarch/cephadm,2,1
openstack%2Fneutron~910718,openstack/neutron,stable/2023.1,I7ff300e9634e5e3fc68d70540392109fd8b9babc,[OVN] Set MTU of the VETH interfaces between OVS and metadata,MERGED,2024-03-01 10:32:11.000000000,2024-03-05 10:39:13.000000000,2024-03-05 10:37:52.000000000,"[{'_account_id': 11975}, {'_account_id': 21798}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 10:32:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/885b33e7a654660259eba39b2bfd951e7803734d', 'message': '[OVN] Set MTU of the VETH interfaces between OVS and metadata\n\nThe VETH pair between the metadata namespace and the local OVS now\nhas the same MTU as the network associated to this metadata service.\nThe ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".\nThis is the value of the network MTU.\n\nThis patch does not update the previous metadata datapaths nor the\nexisting LSP. This change will affect only to new created ports\nand the corresponding metadata datapaths.\n\nConflicts:\n    neutron/agent/ovn/metadata/agent.py\n\nCloses-Bug: #2053274\nChange-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc\n(cherry picked from commit 47b4d14955451c320ce612e4e2e7d0a896e2fe36)\n(cherry picked from commit 6205860d795d318b6f3566f1b27e2c2ceb5b7102)\n'}, {'number': 2, 'created': '2024-03-04 10:54:56.000000000', 'files': ['neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'neutron/agent/ovn/metadata/agent.py', 'neutron/tests/unit/agent/ovn/metadata/test_agent.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/5ffec5d17a0aa03afb6353c39865b42290b678c1', 'message': '[OVN] Set MTU of the VETH interfaces between OVS and metadata\n\nThe VETH pair between the metadata namespace and the local OVS now\nhas the same MTU as the network associated to this metadata service.\nThe ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".\nThis is the value of the network MTU.\n\nThis patch does not update the previous metadata datapaths nor the\nexisting LSP. This change will affect only to new created ports\nand the corresponding metadata datapaths.\n\nConflicts:\n    neutron/agent/ovn/metadata/agent.py\n\nCloses-Bug: #2053274\nChange-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc\n(cherry picked from commit 47b4d14955451c320ce612e4e2e7d0a896e2fe36)\n(cherry picked from commit 101898fde869a5f530580d1c69c52cdc4a33cd98)\n'}]",1,910718,5ffec5d17a0aa03afb6353c39865b42290b678c1,12,3,2,16688,,,0,"[OVN] Set MTU of the VETH interfaces between OVS and metadata

The VETH pair between the metadata namespace and the local OVS now
has the same MTU as the network associated to this metadata service.
The ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".
This is the value of the network MTU.

This patch does not update the previous metadata datapaths nor the
existing LSP. This change will affect only to new created ports
and the corresponding metadata datapaths.

Conflicts:
    neutron/agent/ovn/metadata/agent.py

Closes-Bug: #2053274
Change-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc
(cherry picked from commit 47b4d14955451c320ce612e4e2e7d0a896e2fe36)
(cherry picked from commit 101898fde869a5f530580d1c69c52cdc4a33cd98)
",git fetch https://review.opendev.org/openstack/neutron refs/changes/18/910718/1 && git format-patch -1 --stdout FETCH_HEAD,"['neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'neutron/agent/ovn/metadata/agent.py', 'neutron/tests/unit/agent/ovn/metadata/test_agent.py']",3,885b33e7a654660259eba39b2bfd951e7803734d,bug/2053274," pdp.assert_has_calls([mock.call(p) for p in self.ports], any_order=True) pdp.assert_has_calls([mock.call(p) for p in self.ports], any_order=True) pdp.assert_has_calls([mock.call(p) for p in self.ports], any_order=True) def test_get_networks_port_bindings(self): """"""Test get_networks_port_bindings returns only the port binding objects for ports with VIF type empty ('') or 'external'. This test simulates that this chassis has the following ports: * port0: datapath 1, type '' * port1: datapath 1, type 'external' * port2: datapath 1, type 'unknown' * port3: datapath 2, type '' * port4: datapath 3, type 'external' * port5: datapath 4, type 'unknown' Only port bindings from ports 0, 1, 3, and 4 are expected. self.assertEqual([ports[0], ports[1], ports[3], ports[4]], self.agent.get_networks_port_bindings()) mock.patch.object(ip_link, 'set_address') as link_set_addr, \ mock.patch.object(ip_link, 'set_mtu') as link_set_mtu, \ mtu = 1500 port_binding = mock.Mock( datapath='fake_datapath', external_ids={ovn_const.OVN_NETWORK_MTU_EXT_ID_KEY: str(mtu)}) self.agent.provision_datapath(port_binding) link_set_mtu.assert_has_calls([mock.call(mtu), mock.call(mtu)])"," pdp.assert_has_calls( [ mock.call(p.datapath) for p in self.ports ], any_order=True ) pdp.assert_has_calls( [ mock.call(p.datapath) for p in self.ports ], any_order=True ) pdp.assert_has_calls( [ mock.call(p.datapath) for p in self.ports ], any_order=True ) def test_get_networks_datapaths(self): """"""Test get_networks_datapaths returns only datapath objects for the networks containing vif ports of type ''(blank) and 'external'. This test simulates that this chassis has the following ports: * datapath '1': 1 port type '' , 1 port 'external' and 1 port 'unknown' * datapath '2': 1 port type '' * datapath '3': 1 port with type 'external' * datapath '4': 1 port with type 'unknown' It is expected that only datapaths '1', '2' and '3' are returned expected_datapaths = set([datapath_1, datapath_2, datapath_3]) self.assertSetEqual( expected_datapaths, self.agent.get_networks_datapaths() ) mock.patch.object(ip_link, 'set_address') as link_set_addr,\ self.agent.provision_datapath('fake_datapath')",54,56
openstack%2Fneutron~910717,openstack/neutron,stable/2023.2,I7ff300e9634e5e3fc68d70540392109fd8b9babc,[OVN] Set MTU of the VETH interfaces between OVS and metadata,MERGED,2024-03-01 10:30:58.000000000,2024-03-05 10:39:05.000000000,2024-03-05 10:37:48.000000000,"[{'_account_id': 11975}, {'_account_id': 21798}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 10:30:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/c7be425d2280f8c32c7a51e9aa16971b89fbe985', 'message': '[OVN] Set MTU of the VETH interfaces between OVS and metadata\n\nThe VETH pair between the metadata namespace and the local OVS now\nhas the same MTU as the network associated to this metadata service.\nThe ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".\nThis is the value of the network MTU.\n\nThis patch does not update the previous metadata datapaths nor the\nexisting LSP. This change will affect only to new created ports\nand the corresponding metadata datapaths.\n\nCloses-Bug: #2053274\n\nChange-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc\n(cherry picked from commit 47b4d14955451c320ce612e4e2e7d0a896e2fe36)\n'}, {'number': 2, 'created': '2024-03-01 10:31:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/6205860d795d318b6f3566f1b27e2c2ceb5b7102', 'message': '[OVN] Set MTU of the VETH interfaces between OVS and metadata\n\nThe VETH pair between the metadata namespace and the local OVS now\nhas the same MTU as the network associated to this metadata service.\nThe ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".\nThis is the value of the network MTU.\n\nThis patch does not update the previous metadata datapaths nor the\nexisting LSP. This change will affect only to new created ports\nand the corresponding metadata datapaths.\n\nConflicts:\n    neutron/agent/ovn/metadata/agent.py\n\nCloses-Bug: #2053274\nChange-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc\n(cherry picked from commit 47b4d14955451c320ce612e4e2e7d0a896e2fe36)\n'}, {'number': 3, 'created': '2024-03-04 10:53:46.000000000', 'files': ['neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'neutron/agent/ovn/metadata/agent.py', 'neutron/tests/unit/agent/ovn/metadata/test_agent.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/101898fde869a5f530580d1c69c52cdc4a33cd98', 'message': '[OVN] Set MTU of the VETH interfaces between OVS and metadata\n\nThe VETH pair between the metadata namespace and the local OVS now\nhas the same MTU as the network associated to this metadata service.\nThe ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".\nThis is the value of the network MTU.\n\nThis patch does not update the previous metadata datapaths nor the\nexisting LSP. This change will affect only to new created ports\nand the corresponding metadata datapaths.\n\nConflicts:\n    neutron/agent/ovn/metadata/agent.py\n\nCloses-Bug: #2053274\nChange-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc\n(cherry picked from commit 47b4d14955451c320ce612e4e2e7d0a896e2fe36)\n'}]",2,910717,101898fde869a5f530580d1c69c52cdc4a33cd98,13,3,3,16688,,,0,"[OVN] Set MTU of the VETH interfaces between OVS and metadata

The VETH pair between the metadata namespace and the local OVS now
has the same MTU as the network associated to this metadata service.
The ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".
This is the value of the network MTU.

This patch does not update the previous metadata datapaths nor the
existing LSP. This change will affect only to new created ports
and the corresponding metadata datapaths.

Conflicts:
    neutron/agent/ovn/metadata/agent.py

Closes-Bug: #2053274
Change-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc
(cherry picked from commit 47b4d14955451c320ce612e4e2e7d0a896e2fe36)
",git fetch https://review.opendev.org/openstack/neutron refs/changes/17/910717/1 && git format-patch -1 --stdout FETCH_HEAD,"['neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'neutron/agent/ovn/metadata/agent.py', 'neutron/tests/unit/agent/ovn/metadata/test_agent.py']",3,c7be425d2280f8c32c7a51e9aa16971b89fbe985,bug/2053274," pdp.assert_has_calls([mock.call(p) for p in self.ports], any_order=True) pdp.assert_has_calls([mock.call(p) for p in self.ports], any_order=True) pdp.assert_has_calls([mock.call(p) for p in self.ports], any_order=True) def test_get_networks_port_bindings(self): """"""Test get_networks_port_bindings returns only the port binding objects for ports with VIF type empty ('') or 'external'. This test simulates that this chassis has the following ports: * port0: datapath 1, type '' * port1: datapath 1, type 'external' * port2: datapath 1, type 'unknown' * port3: datapath 2, type '' * port4: datapath 3, type 'external' * port5: datapath 4, type 'unknown' Only port bindings from ports 0, 1, 3, and 4 are expected. self.assertEqual([ports[0], ports[1], ports[3], ports[4]], self.agent.get_networks_port_bindings()) mock.patch.object(ip_link, 'set_address') as link_set_addr, \ mock.patch.object(ip_link, 'set_mtu') as link_set_mtu, \ mtu = 1500 port_binding = mock.Mock( datapath='fake_datapath', external_ids={ovn_const.OVN_NETWORK_MTU_EXT_ID_KEY: str(mtu)}) self.agent.provision_datapath(port_binding) link_set_mtu.assert_has_calls([mock.call(mtu), mock.call(mtu)])"," pdp.assert_has_calls( [ mock.call(p.datapath) for p in self.ports ], any_order=True ) pdp.assert_has_calls( [ mock.call(p.datapath) for p in self.ports ], any_order=True ) pdp.assert_has_calls( [ mock.call(p.datapath) for p in self.ports ], any_order=True ) def test_get_networks_datapaths(self): """"""Test get_networks_datapaths returns only datapath objects for the networks containing vif ports of type ''(blank) and 'external'. This test simulates that this chassis has the following ports: * datapath '1': 1 port type '' , 1 port 'external' and 1 port 'unknown' * datapath '2': 1 port type '' * datapath '3': 1 port with type 'external' * datapath '4': 1 port with type 'unknown' It is expected that only datapaths '1', '2' and '3' are returned expected_datapaths = set([datapath_1, datapath_2, datapath_3]) self.assertSetEqual( expected_datapaths, self.agent.get_networks_datapaths() ) mock.patch.object(ip_link, 'set_address') as link_set_addr,\ self.agent.provision_datapath('fake_datapath')",54,56
openstack%2Fskyline-apiserver~911055,openstack/skyline-apiserver,master,I049577641440e8b1dd15a13dca65e9c40b4a4be6,[translate] add korean README,ABANDONED,2024-03-05 10:04:18.000000000,2024-03-05 10:13:20.000000000,,[],"[{'number': 1, 'created': '2024-03-05 10:04:18.000000000', 'files': ['README/README.rst', 'README/README-ko-KR.rst', 'README/README-zh_CN.rst', 'setup.cfg'], 'web_link': 'https://opendev.org/openstack/skyline-apiserver/commit/19417045a023c1b99f695fbc3e9e22f913dde62f', 'message': '[translate] add korean README\n\nadd korean readme file\nrelative file edit\n\nChange-Id: I049577641440e8b1dd15a13dca65e9c40b4a4be6\nSigned-off-by: HyoBin Kim <hb.kim@okestro.com>\n'}]",0,911055,19417045a023c1b99f695fbc3e9e22f913dde62f,2,0,1,36208,,,0,"[translate] add korean README

add korean readme file
relative file edit

Change-Id: I049577641440e8b1dd15a13dca65e9c40b4a4be6
Signed-off-by: HyoBin Kim <hb.kim@okestro.com>
",git fetch https://review.opendev.org/openstack/skyline-apiserver refs/changes/55/911055/1 && git format-patch -1 --stdout FETCH_HEAD,"['README/README.rst', 'README/README-ko-KR.rst', 'README/README-zh_CN.rst', 'setup.cfg']",4,19417045a023c1b99f695fbc3e9e22f913dde62f,Organizing-README-and-Korean-README, README/README.rst, README.rst,827,1
openstack%2Freleases~910710,openstack/releases,master,I18265cfbc7158148b3b19ac512116b585f3f40ff,fix R-5 template,MERGED,2024-03-01 09:40:07.000000000,2024-03-05 10:10:24.000000000,2024-03-05 10:10:24.000000000,"[{'_account_id': 13252}, {'_account_id': 17685}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 09:40:07.000000000', 'files': ['doc/source/reference/process.rst'], 'web_link': 'https://opendev.org/openstack/releases/commit/31528065d74ce500dc79a35a367647f225462748', 'message': ""fix R-5 template\n\nCycle Highlights has been moved to R-4:\nhttps://review.opendev.org/c/openstack/releases/+/906351\n\nR-5's email template remains outdated.\n\nChange-Id: I18265cfbc7158148b3b19ac512116b585f3f40ff\n""}]",2,910710,31528065d74ce500dc79a35a367647f225462748,7,3,1,28522,,,0,"fix R-5 template

Cycle Highlights has been moved to R-4:
https://review.opendev.org/c/openstack/releases/+/906351

R-5's email template remains outdated.

Change-Id: I18265cfbc7158148b3b19ac512116b585f3f40ff
",git fetch https://review.opendev.org/openstack/releases refs/changes/10/910710/1 && git format-patch -1 --stdout FETCH_HEAD,['doc/source/reference/process.rst'],1,31528065d74ce500dc79a35a367647f225462748,,," Finally, if you haven't proposed $series cycle-highlights yet, you are already late to the party. Please see $email for details. ",0,3
openstack%2Fskyline-apiserver~911058,openstack/skyline-apiserver,master,I6e0e42d932f8f1ab8f20b632523a8fe665f7180d,[translate] korean readme translate 1,ABANDONED,2024-03-05 10:04:18.000000000,2024-03-05 10:07:08.000000000,,[],"[{'number': 1, 'created': '2024-03-05 10:04:18.000000000', 'files': ['README/README-ko_KR.rst', 'README/README-zh_CN.rst'], 'web_link': 'https://opendev.org/openstack/skyline-apiserver/commit/2031a5d74788b0acea0bd44f041d4b5dc47dff7f', 'message': '[translate] korean readme translate 1\n\ntranslate\n\nChange-Id: I6e0e42d932f8f1ab8f20b632523a8fe665f7180d\nSigned-off-by: HyoBin Kim <hb.kim@okestro.com>\n'}]",0,911058,2031a5d74788b0acea0bd44f041d4b5dc47dff7f,2,0,1,36208,,,0,"[translate] korean readme translate 1

translate

Change-Id: I6e0e42d932f8f1ab8f20b632523a8fe665f7180d
Signed-off-by: HyoBin Kim <hb.kim@okestro.com>
",git fetch https://review.opendev.org/openstack/skyline-apiserver refs/changes/58/911058/1 && git format-patch -1 --stdout FETCH_HEAD,"['README/README-ko_KR.rst', 'README/README-zh_CN.rst']",2,2031a5d74788b0acea0bd44f041d4b5dc47dff7f,Organizing-README-and-Korean-README," 可以参考 `sample file <../etc/skyline.yaml.sample>`__,`与 Devstack 快速集成，搭建环境。 <../devstack/README.rst>`__`使用 Kolla Ansible 部署环境。 <../kolla/README-zh_CN.md>`__"," 可以参考 `sample file <etc/skyline.yaml.sample>`__,`与 Devstack 快速集成，搭建环境。 <./devstack/README.rst>`__`使用 Kolla Ansible 部署环境。 <./kolla/README-zh_CN.md>`__",90,88
openstack%2Fskyline-apiserver~911057,openstack/skyline-apiserver,master,Ie47ac0a15d2801e9c553fe5f703d852c619cfe82,[fix] readme (english version) move root dir,ABANDONED,2024-03-05 10:04:18.000000000,2024-03-05 10:07:03.000000000,,[],"[{'number': 1, 'created': '2024-03-05 10:04:18.000000000', 'files': ['README/README-ko_KR.rst', 'README/README-ko-KR.rst', 'README/README-zh_CN.rst', 'README.rst'], 'web_link': 'https://opendev.org/openstack/skyline-apiserver/commit/3b04cc5f9c05b2264342328323cc1b953be18e03', 'message': '[fix] readme (english version) move root dir\n\nfix readme path\n\nChange-Id: Ie47ac0a15d2801e9c553fe5f703d852c619cfe82\nSigned-off-by: HyoBin Kim <hb.kim@okestro.com>\n'}]",0,911057,3b04cc5f9c05b2264342328323cc1b953be18e03,2,0,1,36208,,,0,"[fix] readme (english version) move root dir

fix readme path

Change-Id: Ie47ac0a15d2801e9c553fe5f703d852c619cfe82
Signed-off-by: HyoBin Kim <hb.kim@okestro.com>
",git fetch https://review.opendev.org/openstack/skyline-apiserver refs/changes/57/911057/1 && git format-patch -1 --stdout FETCH_HEAD,"['README/README-ko_KR.rst', 'README/README-ko-KR.rst', 'README/README-zh_CN.rst', 'README.rst']",4,3b04cc5f9c05b2264342328323cc1b953be18e03,Organizing-README-and-Korean-README,English \| `简体中文 <./README/README-zh_CN.rst>`__ \| `한국어 <./README/README-ko_KR.rst>`__.. |image0| image:: doc/source/images/logo/OpenStack_Project_Skyline_horizontal.png .. |image1| image:: doc/source/images/logo/nine-color-deer-64.png,English \| `简体中文 <./README-zh_CN.rst>`__ \| `한국어 <./README-ko_KR.rst>`__.. |image0| image:: ../doc/source/images/logo/OpenStack_Project_Skyline_horizontal.png .. |image1| image:: ../doc/source/images/logo/nine-color-deer-64.png,5,269
openstack%2Fskyline-apiserver~911056,openstack/skyline-apiserver,master,If6fe26913f7cb60a12ed3db5b551ed1bba3a93e6,[fix] remove readme file,ABANDONED,2024-03-05 10:04:18.000000000,2024-03-05 10:06:47.000000000,,[],"[{'number': 1, 'created': '2024-03-05 10:04:18.000000000', 'files': ['README-zh_CN.rst', 'README.rst'], 'web_link': 'https://opendev.org/openstack/skyline-apiserver/commit/7761e78c3206a43a5f622d5f44960197c924d57c', 'message': '[fix] remove readme file\n\nmove README Folder\n\nChange-Id: If6fe26913f7cb60a12ed3db5b551ed1bba3a93e6\nSigned-off-by: HyoBin Kim <hb.kim@okestro.com>\n'}]",0,911056,7761e78c3206a43a5f622d5f44960197c924d57c,2,0,1,36208,,,0,"[fix] remove readme file

move README Folder

Change-Id: If6fe26913f7cb60a12ed3db5b551ed1bba3a93e6
Signed-off-by: HyoBin Kim <hb.kim@okestro.com>
",git fetch https://review.opendev.org/openstack/skyline-apiserver refs/changes/56/911056/1 && git format-patch -1 --stdout FETCH_HEAD,"['README-zh_CN.rst', 'README.rst']",2,7761e78c3206a43a5f622d5f44960197c924d57c,Organizing-README-and-Korean-README,,"================== Skyline API Server ================== English \| `简体中文 <./README-zh_CN.rst>`__ Skyline is an OpenStack dashboard optimized by UI and UE, support OpenStack Train+. It has a modern technology stack and ecology, is easier for developers to maintain and operate by users, and has higher concurrency performance. Skyline's mascot is the nine-color deer. The nine-color deer comes from Dunhuang mural “the nine-color king deer”, whose moral is Buddhist cause-effect and gratefulness, which is consistent with 99cloud's philosophy of embracing and feedback community since its inception. We also hope Skyline can keep light, elegant and powerful as the nine-color deer, to provide a better dashboard for the openstack community and users. |image0| **Table of contents** - `Skyline API Server <#skyline-api-server>`__ - `Resources <#resources>`__ - `Quick Start <#quick-start>`__ - `Prerequisites <#prerequisites>`__ - `Configure <#configure>`__ - `Deployment with Sqlite <#deployment-with-sqlite>`__ - `Deployment with MariaDB <#deployment-with-mariadb>`__ - `Test Access <#test-access>`__ - `Develop Skyline-apiserver <#develop-skyline-apiserver>`__ - `Dependent tools <#dependent-tools>`__ - `Install & Run <#install--run>`__ - `Devstack Integration <#devstack-integration>`__ - `Kolla Ansible Deployment <#kolla-ansible-deployment>`__ Resources --------- - `Developer Docs <https://docs.openstack.org/skyline-apiserver/latest/>`__ - `Release notes <https://docs.openstack.org/releasenotes/skyline-apiserver/>`__ - `Wiki <https://wiki.openstack.org/wiki/Skyline>`__ - `Bug Tracker <https://launchpad.net/skyline-apiserver>`__ Quick Start ----------- Prerequisites ~~~~~~~~~~~~~ - An OpenStack environment that runs at least core components and can access OpenStack components through Keystone endpoints - A Linux server with container engine (`docker <https://docs.docker.com/engine/install/>`__ or `podman <https://podman.io/getting-started/installation>`__) installed Configure ~~~~~~~~~ 1. Edit the ``/etc/skyline/skyline.yaml`` file in linux server You can refer to the `sample file <etc/skyline.yaml.sample>`__, and modify the following parameters according to the actual environment - database_url - keystone_url - default_region - interface_type - system_project_domain - system_project - system_user_domain - system_user_name - system_user_password Deployment with Sqlite ~~~~~~~~~~~~~~~~~~~~~~ 1. Run the skyline_bootstrap container to bootstrap .. code:: bash rm -rf /tmp/skyline && mkdir /tmp/skyline && mkdir /var/log/skyline docker run -d --name skyline_bootstrap -e KOLLA_BOOTSTRAP="""" -v /var/log/skyline:/var/log/skyline -v /etc/skyline/skyline.yaml:/etc/skyline/skyline.yaml -v /tmp/skyline:/tmp --net=host 99cloud/skyline:latest # Check bootstrap is normal `exit 0` docker logs skyline_bootstrap 2. Run the skyline service after bootstrap is complete .. code:: bash docker rm -f skyline_bootstrap If you need to modify skyline port, add ``-e LISTEN_ADDRESS=<ip:port>`` in the following command ``LISTEN_ADDRESS`` defaults to ``0.0.0.0:9999`` If you need to modify the policy rules of a service, add ``-v /etc/skyline/policy:/etc/skyline/policy`` in the following command Rename the service policy yaml file to ``<service_name>_policy.yaml``, and place it in ``/etc/skyline/policy`` folder .. code:: bash docker run -d --name skyline --restart=always -v /var/log/skyline:/var/log/skyline -v /etc/skyline/skyline.yaml:/etc/skyline/skyline.yaml -v /tmp/skyline:/tmp --net=host 99cloud/skyline:latest Deployment with MariaDB ~~~~~~~~~~~~~~~~~~~~~~~ https://docs.openstack.org/skyline-apiserver/latest/install/docker-install-ubuntu.html API Doc ~~~~~~~~~ You can visit the API doc ``https://<ip_address>:9999/api/openstack/skyline/docs`` Test Access ~~~~~~~~~~~ You can now access the dashboard: ``https://<ip_address>:9999`` Develop Skyline-apiserver ------------------------- **Support Linux & Mac OS (Recommend Linux OS) (Because uvloop & cython)** Dependent tools ~~~~~~~~~~~~~~~ Use the new feature Context Variables of python37 & uvloop(0.15.0+ requires python37). Considering that most systems do not support python37, we choose to support python38 at least. - make >= 3.82 - python >= 3.8 - node >= 10.22.0 (Optional if you only develop with apiserver) - yarn >= 1.22.4 (Optional if you only develop with apiserver) Install & Run ~~~~~~~~~~~~~ 1. Installing dependency packages .. code:: bash tox -e venv 2. Set skyline.yaml config file .. code:: bash cp etc/skyline.yaml.sample etc/skyline.yaml export OS_CONFIG_DIR=$(pwd)/etc Maybe you should change the params with your real environment as followed: .. code:: yaml - database_url - keystone_url - default_region - interface_type - system_project_domain - system_project - system_user_domain - system_user_name - system_user_password If you set such as ``sqlite:////tmp/skyline.db`` for ``database_url`` , just do as followed. If you set such as ``mysql://root:root@localhost:3306/skyline`` for ``database_url`` , you should refer to steps ``1`` and ``2`` of the chapter ``Deployment with MariaDB`` at first. 3. Init skyline database .. code:: bash source .tox/venv/bin/activate make db_sync deactivate 4. Run skyline-apiserver .. code:: console $ source .tox/venv/bin/activate $ uvicorn --reload --reload-dir skyline_apiserver --port 28000 --log-level debug skyline_apiserver.main:app INFO: Uvicorn running on http://127.0.0.1:28000 (Press CTRL+C to quit) INFO: Started reloader process [154033] using statreload INFO: Started server process [154037] INFO: Waiting for application startup. INFO: Application startup complete. You can now access the online API documentation: ``http://127.0.0.1:28000/docs``. Or, you can launch debugger with ``.vscode/lauch.json`` with vscode. 5. Build Image .. code:: bash make build Devstack Integration -------------------- `Fast integration with Devstack to build an environment. <./devstack/README.rst>`__ Kolla Ansible Deployment ------------------------ `Kolla Ansible to build an environment. <./kolla/README.md>`__ |image1| .. |image0| image:: doc/source/images/logo/OpenStack_Project_Skyline_horizontal.png .. |image1| image:: doc/source/images/logo/nine-color-deer-64.png FAQ --- 1. Policy Q: Why common user could login, but could list the nova servers? `Bug #2049807 <https://bugs.launchpad.net/skyline-apiserver/+bug/2049807>`_ :: Symptom: ----------------------------------- 1. Login Horizon with common user A, list servers OK. 2. Login Skyline with same common user A, could list the nova servers, F12 show no http requests sent from network, however webpage show 401, do not allow to list servers Root Cause Analysis: ----------------------------------- 1. Horizon don't know whether a user could do an action at a resource or not. It simply pass request to recording service, & service (Nova) do the check by its policy file. So it works. 2. Skyline check the action by itself, with /policy API. If you do not configure it, the default value follows community, like: https://docs.openstack.org/nova/2023.2/configuration/sample-policy.html How to fix: ----------------------------------- 1. By default, list servers need ""project_reader_api"": ""role:reader and project_id:%(project_id)s"" 2. You should config your customized role, for example: member, _member_, projectAdmin, etc, create implied reader role. ""openstack implied role create --implied-role member projectAdmin"", or ""openstack implied role create --implied-role reader _member_"" # openstack implied role list +----------------------------------+-----------------+----------------------------------+-------------------+ | Prior Role ID | Prior Role Name | Implied Role ID | Implied Role Name | +----------------------------------+-----------------+----------------------------------+-------------------+ | fe21c5a0d17149c2a7b02bf39154d110 | admin | 4376fc38ba6a44e794671af0a9c60ef5 | member | | 4376fc38ba6a44e794671af0a9c60ef5 | member | e081e01b7a4345bc85f8d3210b95362d | reader | | bee8fa36149e434ebb69b61d12113031 | projectAdmin | 4376fc38ba6a44e794671af0a9c60ef5 | member | | 77cec9fc7e764bd4bf60581869c048de | _member_ | e081e01b7a4345bc85f8d3210b95362d | reader | +----------------------------------+-----------------+----------------------------------+-------------------+ ",0,562
openstack%2Fopenstack-ansible~908499,openstack/openstack-ansible,master,I9ff589583e7e53941c81c52e7ca5dae77c5de1d9,reno: Update master for unmaintained/yoga,MERGED,2024-02-08 15:01:30.000000000,2024-03-05 10:02:32.000000000,2024-03-05 10:01:14.000000000,"[{'_account_id': 22348}, {'_account_id': 25023}, {'_account_id': 28619}]","[{'number': 1, 'created': '2024-02-08 15:01:30.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/03a6e6363de5b9f5a84c5ba50d3f50e2fffd334a', 'message': 'reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n'}, {'number': 2, 'created': '2024-02-28 18:27:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/c8cebe1e9cadda2eb46755750faa0afde45041a2', 'message': 'reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n'}, {'number': 3, 'created': '2024-02-29 09:44:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/f7f23e6e26a20bafb2a15ce5a0281e1d7d830fd6', 'message': ""reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nThis also workaround the issue with Zed not being able to\nfind out where it's changes started by defining\nproper regexp for `closed_branch_tag_re`\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n""}, {'number': 4, 'created': '2024-02-29 09:45:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/39036f87929ff2798cd16c0b981919e2c33c9e0f', 'message': ""reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nThis also workaround the issue with Zed not being able to\nfind out where it's changes started by defining\nproper regexp for `closed_branch_tag_re`\n\nPresumably, default for reno should be adjusted to avoid this\nconfig override, ie with [1]\n\n[1] https://review.opendev.org/c/openstack/reno/+/910547\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n""}, {'number': 5, 'created': '2024-02-29 11:14:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/ad4212c96add02791c9ddb56ed9a850d372bdc69', 'message': ""reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nThis also workaround the issue with Zed not being able to\nfind out where it's changes started by defining\nproper regexp for `closed_branch_tag_re`\n\nPresumably, default for reno should be adjusted to avoid this\nconfig override, ie with [1]\n\n[1] https://review.opendev.org/c/openstack/reno/+/910547\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n""}, {'number': 6, 'created': '2024-02-29 11:31:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/f48bedaa780d7d0122740cec891d4d0e0ffb95ac', 'message': ""reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nThis also workaround the issue with Zed not being able to\nfind out where it's changes started by defining\nproper regexp for `closed_branch_tag_re`\n\nPresumably, default for reno should be adjusted to avoid this\nconfig override, ie with [1]\n\n[1] https://review.opendev.org/c/openstack/reno/+/910547\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n""}, {'number': 7, 'created': '2024-02-29 12:16:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/3c426f89d6a38368945e427e051cecd4344e4177', 'message': ""reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nThis also workaround the issue with Zed not being able to\nfind out where it's changes started by defining\nproper regexp for `closed_branch_tag_re`\n\nPresumably, default for reno should be adjusted to avoid this\nconfig override, ie with [1]\n\n[1] https://review.opendev.org/c/openstack/reno/+/910547\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n""}, {'number': 8, 'created': '2024-03-01 08:33:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/cae5850af932cfacbdd883b0d0367fcf2932b4c6', 'message': ""reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nThis also workaround the issue with Zed not being able to\nfind out where it's changes started by defining\nproper regexp for `closed_branch_tag_re`\n\nPresumably, default for reno should be adjusted to avoid this\nconfig override, ie with [1]\n\n[1] https://review.opendev.org/c/openstack/reno/+/910547\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n""}, {'number': 9, 'created': '2024-03-04 17:08:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/6b020987e093c413b69f5ebdfd5f3f2d2b87f8bf', 'message': ""reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nThis also workaround the issue with Zed not being able to\nfind out where it's changes started by defining\nproper regexp for `closed_branch_tag_re`\n\nPresumably, default for reno should be adjusted to avoid this\nconfig override, ie with [1]\n\n[1] https://review.opendev.org/c/openstack/reno/+/910547\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n""}, {'number': 10, 'created': '2024-03-05 09:17:00.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/openstack-ansible/commit/f73cf9a0a94b2efe858bf8aff7fc112dfc62a72b', 'message': ""reno: Update master for unmaintained/yoga\n\nUpdate the yoga release notes configuration to build from\nunmaintained/yoga.\n\nThis also workaround the issue with Zed not being able to\nfind out where it's changes started by defining\nproper regexp for `closed_branch_tag_re`\n\nPresumably, default for reno should be adjusted to avoid this\nconfig override, ie with [1]\n\n[1] https://review.opendev.org/c/openstack/reno/+/910547\n\nChange-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9\n""}]",6,908499,f73cf9a0a94b2efe858bf8aff7fc112dfc62a72b,33,3,10,22816,,,0,"reno: Update master for unmaintained/yoga

Update the yoga release notes configuration to build from
unmaintained/yoga.

This also workaround the issue with Zed not being able to
find out where it's changes started by defining
proper regexp for `closed_branch_tag_re`

Presumably, default for reno should be adjusted to avoid this
config override, ie with [1]

[1] https://review.opendev.org/c/openstack/reno/+/910547

Change-Id: I9ff589583e7e53941c81c52e7ca5dae77c5de1d9
",git fetch https://review.opendev.org/openstack/openstack-ansible refs/changes/99/908499/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/source/yoga.rst'],1,03a6e6363de5b9f5a84c5ba50d3f50e2fffd334a,reno-eom-yoga, :branch: unmaintained/yoga, :branch: stable/yoga,1,1
openstack%2Fkolla-ansible~904005,openstack/kolla-ansible,stable/zed,Ibf9a9a0c18938f638c8e8b00b6017c64f1523b23,quorum: add missing octavia and masakari,ABANDONED,2023-12-19 16:17:22.000000000,2024-03-05 09:59:07.000000000,,"[{'_account_id': 14826}, {'_account_id': 22348}, {'_account_id': 22629}]","[{'number': 1, 'created': '2023-12-19 16:17:22.000000000', 'files': ['ansible/roles/octavia/templates/octavia.conf.j2', 'ansible/roles/masakari/templates/masakari.conf.j2'], 'web_link': 'https://opendev.org/openstack/kolla-ansible/commit/dbdb2b2a4f99ffc872ada539140c31b22170f0bc', 'message': 'quorum: add missing octavia and masakari\n\nChange-Id: Ibf9a9a0c18938f638c8e8b00b6017c64f1523b23\n(cherry picked from commit be5dc32c8628688a97bbb44419b147c4fab78b7c)\n'}]",5,904005,dbdb2b2a4f99ffc872ada539140c31b22170f0bc,9,3,1,32553,,,0,"quorum: add missing octavia and masakari

Change-Id: Ibf9a9a0c18938f638c8e8b00b6017c64f1523b23
(cherry picked from commit be5dc32c8628688a97bbb44419b147c4fab78b7c)
",git fetch https://review.opendev.org/openstack/kolla-ansible refs/changes/05/904005/1 && git format-patch -1 --stdout FETCH_HEAD,"['ansible/roles/octavia/templates/octavia.conf.j2', 'ansible/roles/masakari/templates/masakari.conf.j2']",2,dbdb2b2a4f99ffc872ada539140c31b22170f0bc,,{% if om_enable_rabbitmq_quorum_queues | bool %} rabbit_quorum_queue = true {% endif %},,6,0
openstack%2Fkolla-ansible~904090,openstack/kolla-ansible,stable/zed,I6c033d460a5c9b93c346e9e47e93b159d3c27830,provide a flag to enable quorum queues,ABANDONED,2023-12-20 14:29:53.000000000,2024-03-05 09:57:49.000000000,,"[{'_account_id': 14200}, {'_account_id': 22348}, {'_account_id': 22629}]","[{'number': 1, 'created': '2023-12-20 14:29:53.000000000', 'files': ['ansible/roles/tacker/templates/tacker.conf.j2', 'ansible/roles/ironic/templates/ironic.conf.j2', 'ansible/roles/keystone/templates/keystone.conf.j2', 'ansible/roles/aodh/templates/aodh.conf.j2', 'ansible/roles/sahara/templates/sahara.conf.j2', 'ansible/roles/cinder/templates/cinder.conf.j2', 'ansible/roles/heat/templates/heat.conf.j2', 'ansible/roles/designate/templates/designate.conf.j2', 'ansible/roles/solum/templates/solum.conf.j2', 'ansible/roles/blazar/templates/blazar.conf.j2', 'ansible/roles/nova/templates/nova.conf.j2', 'ansible/roles/ceilometer/templates/ceilometer.conf.j2', 'ansible/roles/senlin/templates/senlin.conf.j2', 'ansible/roles/mistral/templates/mistral.conf.j2', 'ansible/roles/glance/templates/glance-api.conf.j2', 'ansible/roles/zun/templates/zun.conf.j2', 'ansible/roles/murano/templates/murano.conf.j2', 'ansible/roles/vitrage/templates/vitrage.conf.j2', 'ansible/roles/watcher/templates/watcher.conf.j2', 'ansible/roles/magnum/templates/magnum.conf.j2', 'ansible/roles/cyborg/templates/cyborg.conf.j2', 'ansible/roles/ironic/templates/ironic-inspector.conf.j2', 'ansible/roles/neutron/templates/neutron.conf.j2', 'ansible/roles/nova-cell/templates/nova.conf.j2', 'ansible/roles/trove/templates/trove.conf.j2', 'ansible/roles/cloudkitty/templates/cloudkitty.conf.j2', 'releasenotes/notes/make-quorum-queues-usable-552bfb2e8975f83f.yaml', 'ansible/group_vars/all.yml', 'doc/source/reference/message-queues/rabbitmq.rst', 'ansible/roles/manila/templates/manila.conf.j2', 'ansible/roles/prechecks/tasks/service_checks.yml', 'ansible/roles/barbican/templates/barbican.conf.j2'], 'web_link': 'https://opendev.org/openstack/kolla-ansible/commit/d2c2c00a5e79fab1f361e8eee6bc389ea2ff476a', 'message': ""provide a flag to enable quorum queues\n\nThis implements a global toggle `om_enable_rabbitmq_quorum_queues`\nto enable quorum queues for each service in RabbitMQ, similar to\nwhat was done for HA[0].\n\nQuorum Queues are not enabled by default in stable branches backports.\n\nQuorum queues are more reliable, safer, simpler and faster than\nreplicated mirrored classic queues[1].\n\nMirrored classic queues are deprecated and scheduled for removal\nin RabbitMQ 4.0[2].\n\nNotice, that we do not need a new policy in the RabbitMQ definitions\ntemplate, because their usage is enabled on the client side and can't\nbe set using a policy[3].\n\nNotice also, that quorum queues are not yet enabled in oslo.messaging\nfor the usage of reply_ and fanout_ queues (transient queues).\nThis will change once[4] is merged.\n\n[0]: https://review.opendev.org/c/openstack/kolla-ansible/+/867771\n[1]: https://www.rabbitmq.com/quorum-queues.html\n[2]: https://blog.rabbitmq.com/posts/2021/08/4.0-deprecation-announcements/\n[3]: https://www.rabbitmq.com/quorum-queues.html#declaring\n[4]: https://review.opendev.org/c/openstack/oslo.messaging/+/888479\n\nChange-Id: I6c033d460a5c9b93c346e9e47e93b159d3c27830\n(cherry picked from commit 64575519aa742236fa1ebd493e7f198b7b1d26ba)\nSigned-off-by: Sven Kieske <kieske@osism.tech>\n""}]",2,904090,d2c2c00a5e79fab1f361e8eee6bc389ea2ff476a,6,3,1,32553,,,0,"provide a flag to enable quorum queues

This implements a global toggle `om_enable_rabbitmq_quorum_queues`
to enable quorum queues for each service in RabbitMQ, similar to
what was done for HA[0].

Quorum Queues are not enabled by default in stable branches backports.

Quorum queues are more reliable, safer, simpler and faster than
replicated mirrored classic queues[1].

Mirrored classic queues are deprecated and scheduled for removal
in RabbitMQ 4.0[2].

Notice, that we do not need a new policy in the RabbitMQ definitions
template, because their usage is enabled on the client side and can't
be set using a policy[3].

Notice also, that quorum queues are not yet enabled in oslo.messaging
for the usage of reply_ and fanout_ queues (transient queues).
This will change once[4] is merged.

[0]: https://review.opendev.org/c/openstack/kolla-ansible/+/867771
[1]: https://www.rabbitmq.com/quorum-queues.html
[2]: https://blog.rabbitmq.com/posts/2021/08/4.0-deprecation-announcements/
[3]: https://www.rabbitmq.com/quorum-queues.html#declaring
[4]: https://review.opendev.org/c/openstack/oslo.messaging/+/888479

Change-Id: I6c033d460a5c9b93c346e9e47e93b159d3c27830
(cherry picked from commit 64575519aa742236fa1ebd493e7f198b7b1d26ba)
Signed-off-by: Sven Kieske <kieske@osism.tech>
",git fetch https://review.opendev.org/openstack/kolla-ansible refs/changes/90/904090/1 && git format-patch -1 --stdout FETCH_HEAD,"['ansible/roles/tacker/templates/tacker.conf.j2', 'ansible/roles/ironic/templates/ironic.conf.j2', 'ansible/roles/keystone/templates/keystone.conf.j2', 'ansible/roles/aodh/templates/aodh.conf.j2', 'ansible/roles/sahara/templates/sahara.conf.j2', 'ansible/roles/cinder/templates/cinder.conf.j2', 'ansible/roles/heat/templates/heat.conf.j2', 'ansible/roles/designate/templates/designate.conf.j2', 'ansible/roles/solum/templates/solum.conf.j2', 'ansible/roles/blazar/templates/blazar.conf.j2', 'ansible/roles/nova/templates/nova.conf.j2', 'ansible/roles/ceilometer/templates/ceilometer.conf.j2', 'ansible/roles/senlin/templates/senlin.conf.j2', 'ansible/roles/mistral/templates/mistral.conf.j2', 'ansible/roles/glance/templates/glance-api.conf.j2', 'ansible/roles/zun/templates/zun.conf.j2', 'ansible/roles/murano/templates/murano.conf.j2', 'ansible/roles/vitrage/templates/vitrage.conf.j2', 'ansible/roles/watcher/templates/watcher.conf.j2', 'ansible/roles/magnum/templates/magnum.conf.j2', 'ansible/roles/cyborg/templates/cyborg.conf.j2', 'ansible/roles/ironic/templates/ironic-inspector.conf.j2', 'ansible/roles/neutron/templates/neutron.conf.j2', 'ansible/roles/nova-cell/templates/nova.conf.j2', 'ansible/roles/trove/templates/trove.conf.j2', 'ansible/roles/cloudkitty/templates/cloudkitty.conf.j2', 'releasenotes/notes/make-quorum-queues-usable-552bfb2e8975f83f.yaml', 'ansible/group_vars/all.yml', 'doc/source/reference/message-queues/rabbitmq.rst', 'ansible/roles/manila/templates/manila.conf.j2', 'ansible/roles/prechecks/tasks/service_checks.yml', 'ansible/roles/barbican/templates/barbican.conf.j2']",32,d2c2c00a5e79fab1f361e8eee6bc389ea2ff476a,enable_quorum_queues-stable/2023.1-stable/zed,{% if om_enable_rabbitmq_quorum_queues | bool %} rabbit_quorum_queue = true {% endif %},,115,4
openstack%2Ftacker~907284,openstack/tacker,master,I58064a76401c3156239137a6d411938662c59875,Fix db-migration-tool issues,MERGED,2024-01-31 06:13:13.000000000,2024-03-05 09:55:43.000000000,2024-03-05 09:53:57.000000000,"[{'_account_id': 17255}, {'_account_id': 22348}, {'_account_id': 25701}, {'_account_id': 32707}, {'_account_id': 34107}]","[{'number': 1, 'created': '2024-01-31 06:13:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/tacker/commit/f5170005a52beaed51194aa6ea95840b3caf40e6', 'message': 'Fix db-migration-tool issues\n\nThis patch fixes the following db-migration-tool issues.\n1. Difference of map key for vimConnectionInfo between VnfInstanceV2\n   and VnfLcmOpOccV2.\n2. `NoSuchOptError` during executing db-migration-tool.\n3. Fail to convert of `computeResource`, `networkResource` and\n   `storageResource` data fails in `Resource Changes` of VnfLcmOpOccV2.\n\nCloses-Bug: #2051469\nChange-Id: I58064a76401c3156239137a6d411938662c59875\n'}, {'number': 2, 'created': '2024-01-31 06:13:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/tacker/commit/9381382ce52496141e8ae3a8e73eeabc95bfe835', 'message': 'Fix db-migration-tool issues\n\nThis patch fixes the following db-migration-tool issues.\n1. Difference of map key for vimConnectionInfo between VnfInstanceV2\n   and VnfLcmOpOccV2.\n2. `NoSuchOptError` during executing db-migration-tool.\n3. Fail to convert of `computeResource`, `networkResource` and\n   `storageResource` data fails in `Resource Changes` of VnfLcmOpOccV2.\n\nCloses-Bug: #2051469\nChange-Id: I58064a76401c3156239137a6d411938662c59875\n'}, {'number': 3, 'created': '2024-02-09 06:47:06.000000000', 'files': ['tacker/db/migration/migrate_to_v2.py', 'tacker/tests/unit/db/test_db_migration_to_v2.py'], 'web_link': 'https://opendev.org/openstack/tacker/commit/aa73583b50eed576809f58e9bd4313aedf8e2622', 'message': 'Fix db-migration-tool issues\n\nThis patch fixes the following db-migration-tool issues.\n1. Difference of map key for vimConnectionInfo between VnfInstanceV2\n   and VnfLcmOpOccV2.\n2. `NoSuchOptError` during executing db-migration-tool.\n3. Fail to convert of `computeResource`, `networkResource` and\n   `storageResource` data fails in `Resource Changes` of VnfLcmOpOccV2.\n\nCloses-Bug: #2051469\nImplements: blueprint db-migration-tool\nChange-Id: I58064a76401c3156239137a6d411938662c59875\n'}]",1,907284,aa73583b50eed576809f58e9bd4313aedf8e2622,13,5,3,31857,,,0,"Fix db-migration-tool issues

This patch fixes the following db-migration-tool issues.
1. Difference of map key for vimConnectionInfo between VnfInstanceV2
   and VnfLcmOpOccV2.
2. `NoSuchOptError` during executing db-migration-tool.
3. Fail to convert of `computeResource`, `networkResource` and
   `storageResource` data fails in `Resource Changes` of VnfLcmOpOccV2.

Closes-Bug: #2051469
Implements: blueprint db-migration-tool
Change-Id: I58064a76401c3156239137a6d411938662c59875
",git fetch https://review.opendev.org/openstack/tacker refs/changes/84/907284/1 && git format-patch -1 --stdout FETCH_HEAD,"['tacker/db/migration/migrate_to_v2.py', 'tacker/tests/unit/db/test_db_migration_to_v2.py', 'worker_instance.hot.yaml']",3,f5170005a52beaed51194aa6ea95840b3caf40e6,bug/2051469,heat_template_version: 2013-05-23 description: Scaling template parameters: vdu1_flavor_id: type: string resources: VDU1: type: OS::Nova::Server properties: flavor: { get_param: vdu1_flavor_id } name: VDU1 image: #ADD_YOUR_IMAGE_HERE networks: - port: { get_resource: CP1 } CP1: type: OS::Neutron::Port properties: network: #ADD_YOUR_NETWORK_HERE ,,37,13
openstack%2Fneutron~909684,openstack/neutron,master,I7ff300e9634e5e3fc68d70540392109fd8b9babc,[OVN] Set MTU of the VETH interfaces between OVS and metadata,MERGED,2024-02-21 15:35:52.000000000,2024-03-05 09:50:53.000000000,2024-03-05 09:48:42.000000000,"[{'_account_id': 1004}, {'_account_id': 1131}, {'_account_id': 9656}, {'_account_id': 9845}, {'_account_id': 11975}, {'_account_id': 16688}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-21 15:35:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/5c74d5f8506765914a2f612621ca6494149bab9c', 'message': 'WIP === [OVN] Set MTU of the VETH interfaces between OVS and metadata\n\nBug 2053274\n\nChange-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc\n'}, {'number': 2, 'created': '2024-02-26 09:35:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/2820ddbeedb445f38aba9e013ff06190140979b0', 'message': '[OVN] Set MTU of the VETH interfaces between OVS and metadata\n\nThe VETH pair between the metadata namespace and the local OVS now\nhas the same MTU as the network associated to this metadata service.\nThe ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".\nThis is the value of the network MTU.\n\nThis patch does not update the previous metadata datapaths nor the\nexisting LSP. This change will affect only to new created ports\nand the corresponding metadata datapaths.\n\nCloses-Bug: #2053274\n\nChange-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc\n'}, {'number': 3, 'created': '2024-02-28 15:55:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/9399485458bb0362a0d3305d89ae4718a7d1211a', 'message': '[OVN] Set MTU of the VETH interfaces between OVS and metadata\n\nThe VETH pair between the metadata namespace and the local OVS now\nhas the same MTU as the network associated to this metadata service.\nThe ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".\nThis is the value of the network MTU.\n\nThis patch does not update the previous metadata datapaths nor the\nexisting LSP. This change will affect only to new created ports\nand the corresponding metadata datapaths.\n\nCloses-Bug: #2053274\n\nChange-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc\n'}, {'number': 4, 'created': '2024-03-01 10:18:25.000000000', 'files': ['neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'neutron/agent/ovn/metadata/agent.py', 'neutron/tests/unit/agent/ovn/metadata/test_agent.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/47b4d14955451c320ce612e4e2e7d0a896e2fe36', 'message': '[OVN] Set MTU of the VETH interfaces between OVS and metadata\n\nThe VETH pair between the metadata namespace and the local OVS now\nhas the same MTU as the network associated to this metadata service.\nThe ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".\nThis is the value of the network MTU.\n\nThis patch does not update the previous metadata datapaths nor the\nexisting LSP. This change will affect only to new created ports\nand the corresponding metadata datapaths.\n\nCloses-Bug: #2053274\n\nChange-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc\n'}]",7,909684,47b4d14955451c320ce612e4e2e7d0a896e2fe36,29,7,4,16688,,,0,"[OVN] Set MTU of the VETH interfaces between OVS and metadata

The VETH pair between the metadata namespace and the local OVS now
has the same MTU as the network associated to this metadata service.
The ""LSP.external_ids"" field has a new key defined: ""neutron:mtu"".
This is the value of the network MTU.

This patch does not update the previous metadata datapaths nor the
existing LSP. This change will affect only to new created ports
and the corresponding metadata datapaths.

Closes-Bug: #2053274

Change-Id: I7ff300e9634e5e3fc68d70540392109fd8b9babc
",git fetch https://review.opendev.org/openstack/neutron refs/changes/84/909684/1 && git format-patch -1 --stdout FETCH_HEAD,"['neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'neutron/agent/ovn/metadata/agent.py']",2,5c74d5f8506765914a2f612621ca6494149bab9c,bug/2053274," self.agent.provision_datapath(row) def get_networks_port_bindings(self): """"""Return a set of Port_Binding objects of the VIF ports on the current return set(p for p in self._vif_ports(ports)) net_port_bindings = self.get_networks_port_bindings() for datapath in (pb.datapath for pb in net_port_bindings) for port_binding in net_port_bindings: self.provision_datapath(port_binding) def provision_datapath(self, port_binding): :param port_binding: Port_Binding object. :return: The metadata namespace name for the Port_Binding.datapath or None if namespace was not provisioned datapath = port_binding.datapath mtu = int(port_binding.external_ids.get( ovn_const.OVN_NETWORK_MTU_EXT_ID_KEY) or '0') # Set VETH ports MTU. if mtu: ip1.link.set_mtu(mtu) ip2.link.set_mtu(mtu) "," self.agent.provision_datapath(row.datapath) def get_networks_datapaths(self): """"""Return a set of datapath objects of the VIF ports on the current return set(p.datapath for p in self._vif_ports(ports)) net_datapaths = self.get_networks_datapaths() for datapath in net_datapaths for datapath in net_datapaths: self.provision_datapath(datapath) def provision_datapath(self, datapath): :param datapath: datapath object. :return: The metadata namespace name for the datapath or None if namespace was not provisioned",26,16
openstack%2Freleases~910883,openstack/releases,master,I01be64a2b7e060903bdb3edb182478743ad482b1,Create new castellan with major bump,MERGED,2024-03-04 08:22:33.000000000,2024-03-05 09:43:49.000000000,2024-03-05 09:43:49.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}, {'_account_id': 28522}, {'_account_id': 31245}]","[{'number': 1, 'created': '2024-03-04 08:22:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/releases/commit/39534c9f83c9c1cd2c9beef9b32d3465b415a002', 'message': 'Create new castellan with major bump\n\ncastellan 4.4.0 introduced the change which breaks any external\nimplementations inheriting the core KeyManager class, because of\nthe two new abstract methods added.\n\nThis creates a new release, with the same hash but major version bumped\nto more clearly announce the impact.\n\nChange-Id: I01be64a2b7e060903bdb3edb182478743ad482b1\n'}, {'number': 2, 'created': '2024-03-04 09:09:26.000000000', 'files': ['deliverables/caracal/castellan.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/59482c21d6a06cd6a523dd3a39fe33aa1591f428', 'message': 'Create new castellan with major bump\n\ncastellan 4.4.0 introduced the change which breaks any external\nimplementations inheriting the core KeyManager class, because of\nthe two new abstract methods added.\n\nThis creates a new release, with major version bumped and a release\nnote about upgrade impact added, to more clearly announce the impact.\n\nChange-Id: I01be64a2b7e060903bdb3edb182478743ad482b1\n'}]",2,910883,59482c21d6a06cd6a523dd3a39fe33aa1591f428,16,4,2,9816,,,0,"Create new castellan with major bump

castellan 4.4.0 introduced the change which breaks any external
implementations inheriting the core KeyManager class, because of
the two new abstract methods added.

This creates a new release, with major version bumped and a release
note about upgrade impact added, to more clearly announce the impact.

Change-Id: I01be64a2b7e060903bdb3edb182478743ad482b1
",git fetch https://review.opendev.org/openstack/releases refs/changes/83/910883/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/caracal/castellan.yaml'],1,39534c9f83c9c1cd2c9beef9b32d3465b415a002,, - version: 5.0.0 projects: - repo: openstack/castellan hash: 4925356be6f0f347b36119a981fefdd9c5c29ac8,,4,0
openstack%2Freleases~906842,openstack/releases,master,Ic2aa34f9d07c8fe8bbc659843fd932f9edef09f7,Release horizon for stable/zed,MERGED,2024-01-26 15:21:39.000000000,2024-03-05 09:37:39.000000000,2024-03-05 09:37:39.000000000,"[{'_account_id': 13252}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 29313}]","[{'number': 1, 'created': '2024-01-26 15:21:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/releases/commit/5a90c6583721c183d3d0fdb60b9da4732872e4fe', 'message': 'Release horizon for stable/zed\n\nThis release picks up new commits to horizon since\nthe last release from stable/zed.\n\nThis is being proposed as a convenience to help make sure stable\nchanges are being released. If the team is good with this going out,\nplease respond with a +1 to let the release team know it is OK to\nproceed.\n\nIf it is not wanted at this time, or if there are more changes that\nwould be good to get merged before doing a stable release, please\nleave a -1 with a comment with what the team would prefer. We can\nthen either abandon this patch, or wait for an update with a new\ncommit hash to use instead.\n\n$ git log --oneline --no-merges 23.0.0..b1a26caae\n253882cbe Fix manage.py to use python3\ne17d3c8ea Fix ""Set admin password"" checkbox visibility\n4f0d4d161 Fix object-store container toggle for turning public access on/off\na29c93d20 Remove usage of openstack/xstatic-font-awesome\n24c655379 Fix qos and trunks tables\n0cb616d26 Disable form auto-complete on login form\na72e5440a Unskipping test_floatingip_associate_disassociate test case\nb2a9046fb Remove Description from Edit Image Metadata\nd4ff4f3c2 fix(swift): allow object creation\nca5609c9b Make integration tests stop on first failure\ne39b3e2bd Fix instance error with attribute cells.\n13824f3af Fix instance table behavior after deleting an instance\nad778d75c Fix applying OPENSTACK_SERVER_DEFAULT_USER_DATA value\n25c107d71 Fix delete image tests.\nf5ca3b202 Integration test navigation machinery for Angular pages\n4cc580d94 Pin tox<4 for stable branches testing\n6acabc4f3 Fix flavor id auto generation\n5264497e9 Make readonly metadata properties unable to edit\n4cf74f323 Fix preselection for launch Instance dialog\na6f450050 Imported Translations from Zanata\n761e466e7 Fix rescue of volume-based instances\n494f5baf0 Imported Translations from Zanata\n778a52e66 Fix app cred create without project_id for domain admins\n6e8788580 Fix flavor specification at instance overview page\n34717d905 Imported Translations from Zanata\ne79aa87e1 Don\'t try and update port security if its not changing\nb67481019 Update TOX_CONSTRAINTS_FILE for stable/zed\ne51c56fa6 Update .gitreview for stable/zed\n\nChange-Id: Ic2aa34f9d07c8fe8bbc659843fd932f9edef09f7\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}, {'number': 2, 'created': '2024-03-04 12:35:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/releases/commit/0a2799c23c0d175413cbdc0de71e09d30aee9155', 'message': 'Release horizon for stable/zed\n\nThis release picks up new commits to horizon since\nthe last release from stable/zed.\n\nThis is being proposed as a convenience to help make sure stable\nchanges are being released. If the team is good with this going out,\nplease respond with a +1 to let the release team know it is OK to\nproceed.\n\nIf it is not wanted at this time, or if there are more changes that\nwould be good to get merged before doing a stable release, please\nleave a -1 with a comment with what the team would prefer. We can\nthen either abandon this patch, or wait for an update with a new\ncommit hash to use instead.\n\n$ git log --oneline --no-merges 23.0.0..b1a26caae\n253882cbe Fix manage.py to use python3\ne17d3c8ea Fix ""Set admin password"" checkbox visibility\n4f0d4d161 Fix object-store container toggle for turning public access on/off\na29c93d20 Remove usage of openstack/xstatic-font-awesome\n24c655379 Fix qos and trunks tables\n0cb616d26 Disable form auto-complete on login form\na72e5440a Unskipping test_floatingip_associate_disassociate test case\nb2a9046fb Remove Description from Edit Image Metadata\nd4ff4f3c2 fix(swift): allow object creation\nca5609c9b Make integration tests stop on first failure\ne39b3e2bd Fix instance error with attribute cells.\n13824f3af Fix instance table behavior after deleting an instance\nad778d75c Fix applying OPENSTACK_SERVER_DEFAULT_USER_DATA value\n25c107d71 Fix delete image tests.\nf5ca3b202 Integration test navigation machinery for Angular pages\n4cc580d94 Pin tox<4 for stable branches testing\n6acabc4f3 Fix flavor id auto generation\n5264497e9 Make readonly metadata properties unable to edit\n4cf74f323 Fix preselection for launch Instance dialog\na6f450050 Imported Translations from Zanata\n761e466e7 Fix rescue of volume-based instances\n494f5baf0 Imported Translations from Zanata\n778a52e66 Fix app cred create without project_id for domain admins\n6e8788580 Fix flavor specification at instance overview page\n34717d905 Imported Translations from Zanata\ne79aa87e1 Don\'t try and update port security if its not changing\nb67481019 Update TOX_CONSTRAINTS_FILE for stable/zed\ne51c56fa6 Update .gitreview for stable/zed\n\nChange-Id: Ic2aa34f9d07c8fe8bbc659843fd932f9edef09f7\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}, {'number': 3, 'created': '2024-03-04 12:48:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/releases/commit/d062ede355323302f3e5165336147beed2550540', 'message': 'Release horizon for stable/zed\n\nThis release picks up new commits to horizon since\nthe last release from stable/zed.\n\nThis is being proposed as a convenience to help make sure stable\nchanges are being released. If the team is good with this going out,\nplease respond with a +1 to let the release team know it is OK to\nproceed.\n\nIf it is not wanted at this time, or if there are more changes that\nwould be good to get merged before doing a stable release, please\nleave a -1 with a comment with what the team would prefer. We can\nthen either abandon this patch, or wait for an update with a new\ncommit hash to use instead.\n\n$ git log --oneline --no-merges 23.0.0..b1a26caae\n253882cbe Fix manage.py to use python3\ne17d3c8ea Fix ""Set admin password"" checkbox visibility\n4f0d4d161 Fix object-store container toggle for turning public access on/off\na29c93d20 Remove usage of openstack/xstatic-font-awesome\n24c655379 Fix qos and trunks tables\n0cb616d26 Disable form auto-complete on login form\na72e5440a Unskipping test_floatingip_associate_disassociate test case\nb2a9046fb Remove Description from Edit Image Metadata\nd4ff4f3c2 fix(swift): allow object creation\nca5609c9b Make integration tests stop on first failure\ne39b3e2bd Fix instance error with attribute cells.\n13824f3af Fix instance table behavior after deleting an instance\nad778d75c Fix applying OPENSTACK_SERVER_DEFAULT_USER_DATA value\n25c107d71 Fix delete image tests.\nf5ca3b202 Integration test navigation machinery for Angular pages\n4cc580d94 Pin tox<4 for stable branches testing\n6acabc4f3 Fix flavor id auto generation\n5264497e9 Make readonly metadata properties unable to edit\n4cf74f323 Fix preselection for launch Instance dialog\na6f450050 Imported Translations from Zanata\n761e466e7 Fix rescue of volume-based instances\n494f5baf0 Imported Translations from Zanata\n778a52e66 Fix app cred create without project_id for domain admins\n6e8788580 Fix flavor specification at instance overview page\n34717d905 Imported Translations from Zanata\ne79aa87e1 Don\'t try and update port security if its not changing\nb67481019 Update TOX_CONSTRAINTS_FILE for stable/zed\ne51c56fa6 Update .gitreview for stable/zed\n\nChange-Id: Ic2aa34f9d07c8fe8bbc659843fd932f9edef09f7\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}, {'number': 4, 'created': '2024-03-05 08:53:06.000000000', 'files': ['deliverables/zed/horizon.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/c4e6178d954549068a32fefe60916d99689c1588', 'message': 'Release horizon for stable/zed\n\nThis release picks up new commits to horizon since\nthe last release from stable/zed.\n\nThis is being proposed as a convenience to help make sure stable\nchanges are being released. If the team is good with this going out,\nplease respond with a +1 to let the release team know it is OK to\nproceed.\n\nIf it is not wanted at this time, or if there are more changes that\nwould be good to get merged before doing a stable release, please\nleave a -1 with a comment with what the team would prefer. We can\nthen either abandon this patch, or wait for an update with a new\ncommit hash to use instead.\n\nChange-Id: Ic2aa34f9d07c8fe8bbc659843fd932f9edef09f7\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}]",10,906842,c4e6178d954549068a32fefe60916d99689c1588,26,4,4,17685,,,0,"Release horizon for stable/zed

This release picks up new commits to horizon since
the last release from stable/zed.

This is being proposed as a convenience to help make sure stable
changes are being released. If the team is good with this going out,
please respond with a +1 to let the release team know it is OK to
proceed.

If it is not wanted at this time, or if there are more changes that
would be good to get merged before doing a stable release, please
leave a -1 with a comment with what the team would prefer. We can
then either abandon this patch, or wait for an update with a new
commit hash to use instead.

Change-Id: Ic2aa34f9d07c8fe8bbc659843fd932f9edef09f7
Signed-off-by: Elod Illes <elod.illes@est.tech>
",git fetch https://review.opendev.org/openstack/releases refs/changes/42/906842/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/zed/horizon.yaml'],1,5a90c6583721c183d3d0fdb60b9da4732872e4fe,zed-stable, - version: 23.0.1 projects: - repo: openstack/horizon hash: b1a26caae888b7f75720046c22838a90a228f2ac,,4,0
openstack%2Freleases~906874,openstack/releases,master,I112d2376225ad455ca4f8c44d0879c9eefed062a,Release python-manilaclient for stable/zed,ABANDONED,2024-01-26 16:45:05.000000000,2024-03-05 09:22:03.000000000,,"[{'_account_id': 16643}, {'_account_id': 22348}, {'_account_id': 29632}]","[{'number': 1, 'created': '2024-01-26 16:45:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/releases/commit/09209c1e281cc8ec9e98938688a72f8c22d224b4', 'message': 'Release python-manilaclient for stable/zed\n\nThis release picks up new commits to python-manilaclient since\nthe last release from stable/zed.\n\nThis is being proposed as a convenience to help make sure stable\nchanges are being released. If the team is good with this going out,\nplease respond with a +1 to let the release team know it is OK to\nproceed.\n\nIf it is not wanted at this time, or if there are more changes that\nwould be good to get merged before doing a stable release, please\nleave a -1 with a comment with what the team would prefer. We can\nthen either abandon this patch, or wait for an update with a new\ncommit hash to use instead.\n\n$ git log --oneline --no-merges 4.1.2..9b4e03d\n145259b Fix ""test_share_access_show"" osc functional test\n6e494f1 Enable the option to return the response body\n\nChange-Id: I112d2376225ad455ca4f8c44d0879c9eefed062a\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}, {'number': 2, 'created': '2024-01-29 12:55:11.000000000', 'files': ['deliverables/zed/python-manilaclient.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/a610535314f945cf9ab3e843a654e47246463131', 'message': 'Release python-manilaclient for stable/zed\n\nThis release picks up new commits to python-manilaclient since\nthe last release from stable/zed.\n\nThis is being proposed as a convenience to help make sure stable\nchanges are being released. If the team is good with this going out,\nplease respond with a +1 to let the release team know it is OK to\nproceed.\n\nIf it is not wanted at this time, or if there are more changes that\nwould be good to get merged before doing a stable release, please\nleave a -1 with a comment with what the team would prefer. We can\nthen either abandon this patch, or wait for an update with a new\ncommit hash to use instead.\n\n$ git log --oneline --no-merges 4.1.2..9b4e03d\n145259b Fix ""test_share_access_show"" osc functional test\n6e494f1 Enable the option to return the response body\n\nChange-Id: I112d2376225ad455ca4f8c44d0879c9eefed062a\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}]",4,906874,a610535314f945cf9ab3e843a654e47246463131,8,3,2,17685,,,0,"Release python-manilaclient for stable/zed

This release picks up new commits to python-manilaclient since
the last release from stable/zed.

This is being proposed as a convenience to help make sure stable
changes are being released. If the team is good with this going out,
please respond with a +1 to let the release team know it is OK to
proceed.

If it is not wanted at this time, or if there are more changes that
would be good to get merged before doing a stable release, please
leave a -1 with a comment with what the team would prefer. We can
then either abandon this patch, or wait for an update with a new
commit hash to use instead.

$ git log --oneline --no-merges 4.1.2..9b4e03d
145259b Fix ""test_share_access_show"" osc functional test
6e494f1 Enable the option to return the response body

Change-Id: I112d2376225ad455ca4f8c44d0879c9eefed062a
Signed-off-by: Elod Illes <elod.illes@est.tech>
",git fetch https://review.opendev.org/openstack/releases refs/changes/74/906874/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/zed/python-manilaclient.yaml'],1,09209c1e281cc8ec9e98938688a72f8c22d224b4,zed-stable, - version: 4.1.3 projects: - repo: openstack/python-manilaclient hash: 9b4e03d1f28356700bfb589aab523b5567fb9fcbrelease-notes: https://docs.openstack.org/releasenotes/python-manilaclient/zed.html,release-notes: https://docs.openstack.org/releasenotes/python-manilaclient/zed.html,6,1
openstack%2Fopenstack-zuul-jobs~910979,openstack/openstack-zuul-jobs,master,I984c494afc5ba58b50350bc9eae58260cc66f2ee,Cleanup legacy CentOS 7 jobs and nodesets,MERGED,2024-03-04 18:19:50.000000000,2024-03-05 08:50:12.000000000,2024-03-05 08:48:06.000000000,"[{'_account_id': 5263}, {'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 18:19:50.000000000', 'files': ['zuul.d/zuul-legacy-jobs.yaml', 'zuul.d/project-templates.yaml', 'playbooks/legacy/puppet-midonet-puppet-unit-latest-centos-7/run.yaml', 'playbooks/legacy/tempest-dsvm-neutron-full-centos-7/post.yaml', 'playbooks/legacy/tempest-dsvm-neutron-full-centos-7/run.yaml', 'zuul.d/zuul-legacy-project-templates.yaml', 'zuul.d/nodesets.yaml', 'playbooks/legacy/puppet-midonet-puppet-unit-4.5-centos-7/run.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-zuul-jobs/commit/9ec0fa8ca54e57be022b252d4fe008efd454b6b2', 'message': 'Cleanup legacy CentOS 7 jobs and nodesets\n\nWe are starting work to remove CentOS 7 from Zuul and Nodepool. The\nfirst step there is to delete everything that appears to be unused. We\ndo that here cleaning up nodesets and jobs that should be unused at this\npoint in time.\n\nNote we keep the wheel cache/mirror build and publication jobs around\nfor just a bit longer. We will clean those up when we are closer to\nbeing able to remove everything CentOS 7 related.\n\nDepends-On: https://review.opendev.org/c/openstack/project-config/+/910978\nChange-Id: I984c494afc5ba58b50350bc9eae58260cc66f2ee\n'}]",1,910979,9ec0fa8ca54e57be022b252d4fe008efd454b6b2,15,3,1,4146,,,0,"Cleanup legacy CentOS 7 jobs and nodesets

We are starting work to remove CentOS 7 from Zuul and Nodepool. The
first step there is to delete everything that appears to be unused. We
do that here cleaning up nodesets and jobs that should be unused at this
point in time.

Note we keep the wheel cache/mirror build and publication jobs around
for just a bit longer. We will clean those up when we are closer to
being able to remove everything CentOS 7 related.

Depends-On: https://review.opendev.org/c/openstack/project-config/+/910978
Change-Id: I984c494afc5ba58b50350bc9eae58260cc66f2ee
",git fetch https://review.opendev.org/openstack/openstack-zuul-jobs refs/changes/79/910979/1 && git format-patch -1 --stdout FETCH_HEAD,"['zuul.d/zuul-legacy-jobs.yaml', 'zuul.d/project-templates.yaml', 'playbooks/legacy/puppet-midonet-puppet-unit-latest-centos-7/run.yaml', 'playbooks/legacy/tempest-dsvm-neutron-full-centos-7/post.yaml', 'playbooks/legacy/tempest-dsvm-neutron-full-centos-7/run.yaml', 'zuul.d/zuul-legacy-project-templates.yaml', 'zuul.d/nodesets.yaml', 'playbooks/legacy/puppet-midonet-puppet-unit-4.5-centos-7/run.yaml']",8,9ec0fa8ca54e57be022b252d4fe008efd454b6b2,drop-centos-7,,"- hosts: all name: Autoconverted job legacy-puppet-midonet-puppet-unit-4.5-centos-7 from old job gate-puppet-midonet-puppet-unit-4.5-centos-7 roles: - bindep tasks: - name: Ensure legacy workspace directory file: path: '{{ ansible_user_dir }}/workspace' state: directory - shell: cmd: | set -e set -x CLONEMAP=`mktemp` function cleanup { # In cases where zuul-cloner is aborted during a git # clone operation, git will remove the git work tree in # its cleanup. The work tree in these jobs is the # workspace directory, which means that subsequent # jenkins post-build actions can not run because the # workspace has been removed. # To reduce the likelihood of this having an impact, # recreate the workspace directory if needed mkdir -p $WORKSPACE rm -f $CLONEMAP } trap cleanup EXIT cat > $CLONEMAP << EOF clonemap: - name: $ZUUL_PROJECT dest: . EOF /usr/zuul-env/bin/zuul-cloner -m $CLONEMAP --cache-dir /opt/git \ https://opendev.org $ZUUL_PROJECT executable: /bin/bash chdir: '{{ ansible_user_dir }}/workspace' environment: '{{ zuul | zuul_legacy_vars }}' - shell: cmd: | set -e set -x if [ -f /usr/bin/yum ]; then sudo yum -y remove rdo-release ""centos-release-openstack-*"" ""centos-release-ceph-*"" sudo yum -y install libxml2-devel libxslt-devel ruby-devel zlib-devel sudo yum -y groupinstall ""Development Tools"" # Uninstall python-requests from pip, since we install it in # system-config/install_puppet.sh sudo pip uninstall requests -y || true elif [ -f /usr/bin/apt-get ]; then sudo apt-get update sudo apt-get install -y libxml2-dev libxslt-dev ruby-dev zlib1g-dev fi executable: /bin/bash chdir: '{{ ansible_user_dir }}/workspace' environment: '{{ zuul | zuul_legacy_vars }}' - shell: cmd: | set -x sudo rm -f /etc/sudoers.d/zuul # Prove that general sudo access is actually revoked ! sudo -n true executable: /bin/bash chdir: '{{ ansible_user_dir }}/workspace' environment: '{{ zuul | zuul_legacy_vars }}' - shell: cmd: | if [ ""4.5"" != ""latest"" ]; then export PUPPET_GEM_VERSION='~> 4.5.0' fi mkdir .bundled_gems export GEM_HOME=`pwd`/.bundled_gems gem install bundler --no-rdoc --no-ri --verbose $GEM_HOME/bin/bundle install --retry 3 $GEM_HOME/bin/bundle exec rake spec SPEC_OPTS='--format documentation' chdir: '{{ ansible_user_dir }}/workspace' environment: '{{ zuul | zuul_legacy_vars }}' ",0,304
openstack%2Frequirements~910735,openstack/requirements,master,I1a888456df86c793c90c8f4b1fc8949b0695f2b2,update constraint for python-designateclient to new release 6.0.1,MERGED,2024-03-01 13:59:33.000000000,2024-03-05 07:59:57.000000000,2024-03-05 07:59:02.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 13:59:33.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/8ace413f24e7917a07a993616e607db761a0cd12', 'message': 'update constraint for python-designateclient to new release 6.0.1\n\nmeta: version: 6.0.1\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: no\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: Ia4d0a279edd02d8e00645eabba5b5bccf106ae71\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nChange-Id: I1a888456df86c793c90c8f4b1fc8949b0695f2b2\n'}]",3,910735,8ace413f24e7917a07a993616e607db761a0cd12,17,2,1,11131,,,0,"update constraint for python-designateclient to new release 6.0.1

meta: version: 6.0.1
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: no
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: Ia4d0a279edd02d8e00645eabba5b5bccf106ae71
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
Change-Id: I1a888456df86c793c90c8f4b1fc8949b0695f2b2
",git fetch https://review.opendev.org/openstack/requirements refs/changes/35/910735/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,8ace413f24e7917a07a993616e607db761a0cd12,new-release,python-designateclient===6.0.1,python-designateclient===6.0.0,1,1
openstack%2Fpuppet-keystone~911044,openstack/puppet-keystone,master,I2fb86cb33408a357019454d6fb17262056c43a9c,openidc: Fix typo in redis password option,ABANDONED,2024-03-05 07:01:01.000000000,2024-03-05 07:14:58.000000000,,[],"[{'number': 1, 'created': '2024-03-05 07:01:01.000000000', 'files': ['templates/openidc.conf.erb'], 'web_link': 'https://opendev.org/openstack/puppet-keystone/commit/fe101399a17b848d6cf843ab3d14b1cbcc027b77', 'message': 'openidc: Fix typo in redis password option\n\nThe option name should be OIDCRedisCachePassword instead of\nOIDCRedisCachecPassword.\n\nChange-Id: I2fb86cb33408a357019454d6fb17262056c43a9c\n'}]",0,911044,fe101399a17b848d6cf843ab3d14b1cbcc027b77,2,0,1,9816,,,0,"openidc: Fix typo in redis password option

The option name should be OIDCRedisCachePassword instead of
OIDCRedisCachecPassword.

Change-Id: I2fb86cb33408a357019454d6fb17262056c43a9c
",git fetch https://review.opendev.org/openstack/puppet-keystone refs/changes/44/911044/1 && git format-patch -1 --stdout FETCH_HEAD,['templates/openidc.conf.erb'],1,fe101399a17b848d6cf843ab3d14b1cbcc027b77,, OIDCRedisCachePassword scope['::keystone::federation::openidc::redis_password'] %>, OIDCRedisCachecPassword scope['::keystone::federation::openidc::redis_password'] %>,1,1
openstack%2Fironic~891334,openstack/ironic,master,Iaec9926fe031e65de4732ff0bc7988c5604d4755,Log upon completion of power sync,MERGED,2023-08-14 16:59:31.000000000,2024-03-05 06:01:11.000000000,2024-03-05 05:59:51.000000000,"[{'_account_id': 10239}, {'_account_id': 10342}, {'_account_id': 11292}, {'_account_id': 22348}, {'_account_id': 24828}]","[{'number': 1, 'created': '2023-08-14 16:59:31.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/4f5e08d995ca28dd3781d517be1f054a9e2285b2', 'message': 'Log upon completion of power sync\n\nPreviously, we updated node_periodic so we understood from the\nlogs when a periodic task was completed, so we could understand\nwhere things were at in our hunt for database lock racess.\n\nIn any event, we now explicitly log in the _sync_power_state\nmethod of the conductor, because it is not a node_periodic.\n\nChange-Id: Iaec9926fe031e65de4732ff0bc7988c5604d4755\n'}, {'number': 2, 'created': '2023-08-15 14:28:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/400768d6180c01fe1dbb8d240c24d4cb049d4a6b', 'message': 'Log upon completion of power sync\n\nPreviously, we updated node_periodic so we understood from the\nlogs when a periodic task was completed, so we could understand\nwhere things were at in our hunt for database lock racess.\n\nIn any event, we now explicitly log in the _sync_power_state\nmethod of the conductor, because it is not a node_periodic.\n\nChange-Id: Iaec9926fe031e65de4732ff0bc7988c5604d4755\n'}, {'number': 3, 'created': '2024-01-03 23:06:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/ff06b31a93b092f4198e4439317526c86654604b', 'message': 'Log upon completion of power sync\n\nPreviously, we updated node_periodic so we understood from the\nlogs when a periodic task was completed, so we could understand\nwhere things were at in our hunt for database lock racess.\n\nIn any event, we now explicitly log in the _sync_power_state\nmethod of the conductor, because it is not a node_periodic.\n\nChange-Id: Iaec9926fe031e65de4732ff0bc7988c5604d4755\n'}, {'number': 4, 'created': '2024-01-05 14:30:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/279e57eb5c854d3ceb19af6bf2adb423beddba1c', 'message': 'Log upon completion of power sync\n\nPreviously, we updated node_periodic so we understood from the\nlogs when a periodic task was completed, so we could understand\nwhere things were at in our hunt for database lock racess.\n\nIn any event, we now explicitly log in the _sync_power_state\nmethod of the conductor, because it is not a node_periodic.\n\nChange-Id: Iaec9926fe031e65de4732ff0bc7988c5604d4755\n'}, {'number': 5, 'created': '2024-02-13 23:28:48.000000000', 'files': ['ironic/conductor/manager.py'], 'web_link': 'https://opendev.org/openstack/ironic/commit/82dbaa96687848c5d5b95fe56c9ca635a023fef2', 'message': 'Log upon completion of power sync\n\nPreviously, we updated node_periodic so we understood from the\nlogs when a periodic task was completed, so we could understand\nwhere things were at in our hunt for database lock racess.\n\nIn any event, we now explicitly log in the _sync_power_state\nmethod of the conductor, because it is not a node_periodic.\n\nChange-Id: Iaec9926fe031e65de4732ff0bc7988c5604d4755\n'}]",11,891334,82dbaa96687848c5d5b95fe56c9ca635a023fef2,40,5,5,11655,,,0,"Log upon completion of power sync

Previously, we updated node_periodic so we understood from the
logs when a periodic task was completed, so we could understand
where things were at in our hunt for database lock racess.

In any event, we now explicitly log in the _sync_power_state
method of the conductor, because it is not a node_periodic.

Change-Id: Iaec9926fe031e65de4732ff0bc7988c5604d4755
",git fetch https://review.opendev.org/openstack/ironic refs/changes/34/891334/1 && git format-patch -1 --stdout FETCH_HEAD,['ironic/conductor/manager.py'],1,4f5e08d995ca28dd3781d517be1f054a9e2285b2,," LOG.debug('Completed _sync_power_state operation, evaluated %s' 'nodes.', len(nodes))",,2,0
openstack%2Fkuryr-kubernetes~910947,openstack/kuryr-kubernetes,master,Ia5a7e852fa07b56e3b4cc684f14ef48cd4ccea8c,DNM: gate health test,NEW,2024-03-04 14:35:54.000000000,2024-03-05 04:29:01.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-04 14:35:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kuryr-kubernetes/commit/32d83b4ef6964de7fbfe6913dc4fff282ff4e499', 'message': 'DNM: gate health test\n\nChange-Id: Ia5a7e852fa07b56e3b4cc684f14ef48cd4ccea8c\n'}, {'number': 2, 'created': '2024-03-04 15:06:59.000000000', 'files': ['kuryr_kubernetes/clients.py'], 'web_link': 'https://opendev.org/openstack/kuryr-kubernetes/commit/9e1566dedf50ba2d1af406a3745c6e31020f4d1e', 'message': 'DNM: gate health test\n\nChange-Id: Ia5a7e852fa07b56e3b4cc684f14ef48cd4ccea8c\n'}]",2,910947,9e1566dedf50ba2d1af406a3745c6e31020f4d1e,5,1,2,31857,,,0,"DNM: gate health test

Change-Id: Ia5a7e852fa07b56e3b4cc684f14ef48cd4ccea8c
",git fetch https://review.opendev.org/openstack/kuryr-kubernetes refs/changes/47/910947/1 && git format-patch -1 --stdout FETCH_HEAD,['kuryr_kubernetes/__init__.py'],1,32d83b4ef6964de7fbfe6913dc4fff282ff4e499,dnm-gate-check,# do-not-merge change ,,1,0
openstack%2Fpuppet-neutron~910684,openstack/puppet-neutron,master,Ib722982e06a15396d09d9ff380abe4f24b0280da,cache: Support options for SASL mechanism in memcached,MERGED,2024-03-01 01:39:49.000000000,2024-03-05 04:06:52.000000000,2024-03-05 04:05:50.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}, {'_account_id': 32029}]","[{'number': 1, 'created': '2024-03-01 01:39:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/puppet-neutron/commit/baea65f8a0dc7cf0056e9e538f94fca8658adea0', 'message': 'cache: Support options for SASL mechanism in memcached\n\nDepends-on: https://review.opendev.org/910122\nChange-Id: Ib722982e06a15396d09d9ff380abe4f24b0280da\n'}, {'number': 2, 'created': '2024-03-01 01:41:21.000000000', 'files': ['releasenotes/notes/cache-memcache-sasl-6c1d07f71d2d24c2.yaml', 'manifests/cache.pp', 'spec/classes/neutron_cache_spec.rb'], 'web_link': 'https://opendev.org/openstack/puppet-neutron/commit/3832c80d64883212761ff32d22e9df2fc727ac96', 'message': 'cache: Support options for SASL mechanism in memcached\n\nDepends-on: https://review.opendev.org/910122\nChange-Id: Ib722982e06a15396d09d9ff380abe4f24b0280da\n'}]",2,910684,3832c80d64883212761ff32d22e9df2fc727ac96,16,4,2,9816,,,0,"cache: Support options for SASL mechanism in memcached

Depends-on: https://review.opendev.org/910122
Change-Id: Ib722982e06a15396d09d9ff380abe4f24b0280da
",git fetch https://review.opendev.org/openstack/puppet-neutron refs/changes/84/910684/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/cache-memcache-sasl-6c1d07f71d2d24c2.yaml', 'manifests/cache.pp', 'spec/classes/neutron_cache_spec.rb']",3,baea65f8a0dc7cf0056e9e538f94fca8658adea0,memcache-sasl," :memcache_sasl_enabled => '<SERVICE DEFAULT>', :memcache_username => '<SERVICE DEFAULT>', :memcache_password => '<SERVICE DEFAULT>', :memcache_sasl_enabled => false, :memcache_username => 'sasluser', :memcache_password => 'saslpass', :memcache_sasl_enabled => false, :memcache_username => 'sasluser', :memcache_password => 'saslpass',",,41,8
openstack%2Fpuppet-glance~910868,openstack/puppet-glance,master,I6a4c65e81b97235d0ce8a142245927c92ab6e48d,Refactor resource dependencies,MERGED,2024-03-04 00:49:17.000000000,2024-03-05 03:50:52.000000000,2024-03-05 03:50:52.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}, {'_account_id': 32029}]","[{'number': 1, 'created': '2024-03-04 00:49:17.000000000', 'files': ['manifests/api/db.pp', 'spec/classes/glance_policy_spec.rb', 'manifests/api.pp', 'manifests/api/authtoken.pp', 'manifests/deps.pp', 'manifests/policy.pp'], 'web_link': 'https://opendev.org/openstack/puppet-glance/commit/8b3054a13f6af070d627a019c9e1fd996fd1fd6a', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: I6a4c65e81b97235d0ce8a142245927c92ab6e48d\n'}]",1,910868,8b3054a13f6af070d627a019c9e1fd996fd1fd6a,12,4,1,9816,,,0,"Refactor resource dependencies

This refactors resource dependencies to improve the following points.

 - Avoid unnecessary dependencies across services. For example aodh
   service does not require cinder db.

 - Restart only api service when config files like paste.ini, which
   are used only be api service is changed.

Change-Id: I6a4c65e81b97235d0ce8a142245927c92ab6e48d
",git fetch https://review.opendev.org/openstack/puppet-glance refs/changes/68/910868/1 && git format-patch -1 --stdout FETCH_HEAD,"['manifests/api/db.pp', 'spec/classes/glance_policy_spec.rb', 'manifests/api.pp', 'manifests/api/authtoken.pp', 'manifests/deps.pp', 'manifests/policy.pp']",6,8b3054a13f6af070d627a019c9e1fd996fd1fd6a,deps-refactor, # policy config should occur in the config block also. Anchor['glance::config::begin'] -> Openstacklib::Policy[$policy_path] -> Anchor['glance::config::end'] ,,27,15
openstack%2Fskyline-console~910886,openstack/skyline-console,master,I13ce9af100ac8aa9a611a8d626b0819f37cb67aa,feat: add external network name for route list page,MERGED,2024-03-04 10:06:12.000000000,2024-03-05 02:48:13.000000000,2024-03-05 02:46:48.000000000,"[{'_account_id': 22348}, {'_account_id': 28706}, {'_account_id': 32029}]","[{'number': 1, 'created': '2024-03-04 10:06:12.000000000', 'files': ['src/resources/neutron/router.jsx', 'src/stores/neutron/router.js'], 'web_link': 'https://opendev.org/openstack/skyline-console/commit/287d787d0889ca514580c4fdafd45f4a1e50b0d7', 'message': 'feat: add external network name for route list page\n\nAdd the name of the external network for the route list page\n\nChange-Id: I13ce9af100ac8aa9a611a8d626b0819f37cb67aa\n'}]",0,910886,287d787d0889ca514580c4fdafd45f4a1e50b0d7,8,3,1,30434,,,0,"feat: add external network name for route list page

Add the name of the external network for the route list page

Change-Id: I13ce9af100ac8aa9a611a8d626b0819f37cb67aa
",git fetch https://review.opendev.org/openstack/skyline-console refs/changes/86/910886/1 && git format-patch -1 --stdout FETCH_HEAD,"['src/resources/neutron/router.jsx', 'src/stores/neutron/router.js']",2,287d787d0889ca514580c4fdafd45f4a1e50b0d7,router," get networkClient() { return client.neutron.networks; } async updateExternalNetworkForItems(items) { const externalNetworkIds = []; items.forEach((it) => { if (it.external_gateway_info?.network_id) { externalNetworkIds.push(it.external_gateway_info?.network_id); } }); if (externalNetworkIds.length) { const { networks = [] } = await this.networkClient.list({ 'router:external': 'true', }); items.forEach((it) => { if (it.external_gateway_info?.network_id) { const network = networks.find( (n) => n.id === it.external_gateway_info?.network_id ); it.external_gateway_info.network_name = network.name; } }); } } await this.updateExternalNetworkForItems(items);",,48,2
openstack%2Fcinder~911002,openstack/cinder,master,I08153b431924e9608ee2a9a95711258d5ad34f33,[Pure Storage] Add volume groups support,ABANDONED,2024-03-04 21:43:10.000000000,2024-03-05 02:41:45.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-04 21:43:10.000000000', 'files': ['cinder/volume/drivers/pure.py'], 'web_link': 'https://opendev.org/openstack/cinder/commit/ba39edadd40bf5eac6d0022fef020f7e7c01fa38', 'message': ""[Pure Storage] Add volume groups support\n\nAdd support for FlashArray Volume Groups through vendor-specific\nvolume type extra-specs.\n\nThis allows volumes to be created in a group that has it's own\ngroup-level QoS settings.\n\nThis allows each tenenat to have a default volume type, linking\nto a volume group with a group QoS, therefore effectively\nproviding storage QoS at a per tenant level, rather than at\na per volume level.\n\nSupport is also included to retyping to/from volume group-based\nvolume types, as well as support of asynchronous replication\nof volumes in volume groups.\n\nSynchronous replication for volume group-based volumes is not\nsupported.\n\nCinder manage and unmanage is also supported, allowing volumes\nto be managed into a volume group-based volume type.\n\nChange-Id: I08153b431924e9608ee2a9a95711258d5ad34f33\nDepends-On: I3deae1cc6bbe5ef5820224f72bb02565677e1ade\n""}]",0,911002,ba39edadd40bf5eac6d0022fef020f7e7c01fa38,13,1,1,13425,,,0,"[Pure Storage] Add volume groups support

Add support for FlashArray Volume Groups through vendor-specific
volume type extra-specs.

This allows volumes to be created in a group that has it's own
group-level QoS settings.

This allows each tenenat to have a default volume type, linking
to a volume group with a group QoS, therefore effectively
providing storage QoS at a per tenant level, rather than at
a per volume level.

Support is also included to retyping to/from volume group-based
volume types, as well as support of asynchronous replication
of volumes in volume groups.

Synchronous replication for volume group-based volumes is not
supported.

Cinder manage and unmanage is also supported, allowing volumes
to be managed into a volume group-based volume type.

Change-Id: I08153b431924e9608ee2a9a95711258d5ad34f33
Depends-On: I3deae1cc6bbe5ef5820224f72bb02565677e1ade
",git fetch https://review.opendev.org/openstack/cinder refs/changes/02/911002/1 && git format-patch -1 --stdout FETCH_HEAD,['cinder/volume/drivers/pure.py'],1,ba39edadd40bf5eac6d0022fef020f7e7c01fa38,add_vg,"MIN_IOPS = 100 MAX_IOPS = 100000000 MIN_BWS = 1048576 MAX_BWS = 549755813888 if qos['maxIOPS'] == '0' and qos['maxBWS'] == 0: array.patch_volumes(names=[vol_name], volume=flasharray.VolumePatch( qos=flasharray.Qos( iops_limit=MAX_IOPS, bandwidth_limit=MAX_BWS))) elif qos['maxIOPS'] == 0: array.patch_volumes(names=[vol_name], volume=flasharray.VolumePatch( qos=flasharray.Qos( iops_limit=MAX_IOPS, bandwidth_limit=qos['maxBWS']))) elif qos['maxBWS'] == 0: array.patch_volumes(names=[vol_name], volume=flasharray.VolumePatch( qos=flasharray.Qos( iops_limit=qos['maxIOPS'], bandwidth_limit=MAX_BWS))) def create_from_snap_in_vgroup(self, array, vol_name, snap_name, vgroup, vg_iop, vg_bw): if not (MIN_IOPS <= int(vg_iop) <= MAX_IOPS): msg = _('vg_maxIOPS QoS error. Must be more than ' '100 and less than 100000000') raise exception.InvalidQoSSpecs(message=msg) if not (MIN_BWS <= int(vg_bw) <= MAX_BWS): msg = _('vg_maxBWS QoS error. Must be between ' '1 and 524288') raise exception.InvalidQoSSpecs(message=msg) self._create_volume_group_if_not_exist(array, vgroup, int(vg_iop), int(vg_bw)) vg_volname = vgroup + ""/"" + vol_name if self._array.safemode: array.post_volumes(names=[vg_volname], with_default_protection=False, volume=flasharray.VolumePost( source=flasharray.Reference( name=snap_name))) else: array.post_volumes(names=[vg_volname], volume=flasharray.VolumePost( source=flasharray.Reference(name=snap_name))) return vg_volname @pure_driver_debug_trace def create_in_vgroup(self, array, vol_name, vol_size, vgroup, vg_iop, vg_bw): if not (MIN_IOPS <= int(vg_iop) <= MAX_IOPS): msg = _('vg_maxIOPS qos error. Must be more than ' '100 and less than 100000000') raise exception.InvalidQoSSpecs(message=msg) if not (MIN_BWS <= int(vg_bw) <= MAX_BWS): msg = _('vg_maxBWS qos error. Must be between ' '1 and 524288') raise exception.InvalidQoSSpecs(message=msg) self._create_volume_group_if_not_exist(array, vgroup, int(vg_iop), int(vg_bw)) vg_volname = vgroup + ""/"" + vol_name if self._array.safemode: array.post_volumes(names=[vg_volname], with_default_protection=False, volume=flasharray.VolumePost( provisioned=vol_size)) else: array.post_volumes(names=[vg_volname], volume=flasharray.VolumePost( provisioned=vol_size)) return vg_volname @pure_driver_debug_trace def create_with_qos(self, array, vol_name, vol_size, qos): LOG.debug('qos: %(qos)s', {'qos': qos}) if self._array.safemode: if qos['maxIOPS'] == 0 and qos['maxBWS'] == 0: array.post_volumes(names=[vol_name], with_default_protection=False, volume=flasharray.VolumePost( provisioned=vol_size)) elif qos['maxIOPS'] == 0: array.post_volumes(names=[vol_name], with_default_protection=False, volume=flasharray.VolumePost( provisioned=vol_size, qos=flasharray.Qos( bandwidth_limit=qos['maxBWS']))) elif qos['maxBWS'] == 0: array.post_volumes(names=[vol_name], with_default_protection=False, volume=flasharray.VolumePost( provisoned=vol_size, qos=flasharray.Qos( iops_limit=qos['maxIOPS']))) else: array.post_volumes(names=[vol_name], with_default_protection=False, volume=flasharray.VolumePost( provisioned=vol_size, qos=flasharray.Qos( iops_limit=qos['maxIOPS'], bandwidth_limit=qos['maxBWS']))) """"""Creates a volume. Note that if a vgroup is specified in the volume type extra_spec then we do not apply volume level qos as this is incompatable with volume group qos settings. We will force a volume group to have the maximum qos settings if not specified in the volume type extra_spec as this can cause retyping issues in the future if not defined. """""" vg_iops = self._get_volume_type_extra_spec(type_id, 'vg_maxIOPS', default_value=MAX_IOPS) vg_bws = self._get_volume_type_extra_spec(type_id, 'vg_maxBWS', default_value=MAX_BWS) vgroup = self._get_volume_type_extra_spec(type_id, 'vg_name') if vgroup: vg_volname = self.create_in_vgroup(current_array, vol_name, vol_size, vgroup, vg_iops, vg_bws) return self._setup_volume(current_array, volume, vg_volname) else: qos = self._get_qos_settings(volume_type) vg_iops = self._get_volume_type_extra_spec(type_id, 'vg_maxIOPS', default_value=MAX_IOPS) vg_bws = self._get_volume_type_extra_spec(type_id, 'vg_maxBWS', default_value=MAX_BWS) vgroup = self._get_volume_type_extra_spec(type_id, 'vg_name') if vgroup: vg_volname = self.create_from_snap_in_vgroup(current_array, vol_name, snap_name, vgroup, vg_iops, vg_bws) return self._setup_volume(current_array, volume, vg_volname) else: qos = self._get_qos_settings(volume_type) current_array.patch_volumes(names=[vol_name], volume=flasharray.VolumePost( qos=flasharray.Qos( iops_limit=MAX_IOPS, bandwidth_limit=MAX_BWS))) res.errors[0].message) # Now check to see if deleting this volume left an empty volume # group. If so, we delete / eradicate the volume group if ""/"" in vol_name: vgroup = vol_name.split(""/"")[0] self._delete_vgroup_if_empty(current_array, vgroup) @pure_driver_debug_trace def _delete_vgroup_if_empty(self, array, vgroup): """"""Delete volume group if empty"""""" vgroup_volumes = list(array.get_volume_groups( names=[vgroup]).items)[0].volume_count if vgroup_volumes == 0: # Delete the volume group array.patch_volume_groups( names=[vgroup], volume_group=flasharray.VolumeGroupPatch( destroyed=True)) if self.configuration.pure_eradicate_on_delete: # Eradciate the volume group res = array.delete_volume_groups(names=[vgroup]) if res.status_code == 400: with excutils.save_and_reraise_exception() as ctxt: ctxt.reraise = False LOG.warning(""Volume group deletion failed "" ""with message: %s"", res.errors[0].message) # If existing volume has QoS settings then clear these out vol_iops = getattr(volume_data.qos, ""iops_limit"", None) vol_bw = getattr(volume_data.qos, ""bandwidth_limit"", None) LOG.debug(""iops: %(iop)s bw: %(bw)s"", {""iop"": vol_iops, ""bw"": vol_bw}) if vol_bw or vol_iops: LOG.info(""Removing pre-existing QoS settings on managed volume."") current_array.patch_volumes( names=[new_vol_name], volume=flasharray.VolumePost( qos=flasharray.Qos(iops_limit=MAX_IOPS, bandwidth_limit=MAX_BWS))) This will not raise an exception if the object does not exist. We need to ensure that if we are renaming to a different container in the backend, eg a pod, volume group, or just the main array container, we have to rename first and then move the object. # TODO: add in code to support move before rename as required def _get_volume_type_extra_spec(self, type_id, spec_key, possible_values=None, default_value=None): """"""Get extra spec value. If the spec value is not present in the input possible_values, then default_value will be returned. If the type_id is None, then default_value is returned. The caller must not consider scope and the implementation adds/removes scope. the scope used here is 'flasharray' e.g. key 'flasharray:vg_name' and so the caller must pass vg_name as an input ignoring the scope. :param type_id: volume type id :param spec_key: extra spec key :param possible_values: permitted values for the extra spec if known :param default_value: default value for the extra spec incase of an invalid value or if the entry does not exist :return: extra spec value """""" if not type_id: return default_value spec_key = ('flasharray:%s') % spec_key spec_value = volume_types.get_volume_type_extra_specs(type_id, spec_key) if not spec_value: LOG.debug(""Returning default spec value: %s."", default_value) return default_value if possible_values is None: return spec_value if spec_value in possible_values: LOG.debug(""Returning spec value %s"", spec_value) return spec_value LOG.debug(""Invalid spec value: %s specified."", spec_value) # check set values are within limits if iops_qos != 0 and not (MIN_IOPS <= iops_qos <= MAX_IOPS): msg = _('maxIOPS qos error. must be more than ' if bw_qos != 0 and not (MIN_BWS <= bw_qos <= MAX_BWS): msg = _('maxBWS qos error. must be between ' vgroup_type = self._get_volume_type_extra_spec(volume.volume_type_id, 'vg_name') if repl_type in [REPLICATION_TYPE_SYNC, REPLICATION_TYPE_TRISYNC]: if vgroup_type: raise exception.InvalidVolumeType( reason=_(""Synchronously replicated volume group volumes "" ""are not supported"")) else: base_name = self._replication_pod_name + ""::"" + base_name source_vg = False target_vg = False current_array = self._get_current_array() # Now check if we are retyping to/from a type with volume groups if ""/"" in self._get_vol_name(volume): source_vg = self._get_vol_name(volume).split('/')[0] if self._get_volume_type_extra_spec(new_type['id'], 'vg_name'): target_vg = self._get_volume_type_extra_spec(new_type['id'], 'vg_name') if source_vg or target_vg: if target_vg: vg_iops = self._get_volume_type_extra_spec( new_type['id'], 'vg_maxIOPS', default_value=MAX_IOPS) vg_bws = self._get_volume_type_extra_spec( new_type['id'], 'vg_maxBWS', default_value=MAX_BWS) if not (MIN_IOPS <= int(vg_iops) <= MAX_IOPS): msg = _('vg_maxIOPS QoS error. Must be more than ' '100 and less than 100000000') raise exception.InvalidQoSSpecs(message=msg) if not (MIN_BWS <= int(vg_bws) <= MAX_BWS): msg = _('vg_maxBWS QoS error. Must be between ' '1 and 524288') raise exception.InvalidQoSSpecs(message=msg) self._create_volume_group_if_not_exist(current_array, target_vg, vg_iops, vg_bws) current_array.patch_volumes( names=[self._get_vol_name(volume)], volume=flasharray.VolumePatch( volume_group=flasharray.Reference( name=target_vg))) vol_name = self._get_vol_name(volume) if source_vg: target_vol_name = (target_vg + ""/"" + vol_name.split('/')[1]) else: target_vol_name = (target_vg + ""/"" + vol_name) model_update = { 'id': volume.id, 'provider_id': target_vol_name, 'metadata': {**volume.metadata, 'array_volume_name': target_vol_name, 'array_name': self._array.array_name} } # If we have empied a VG by retyping out of it then delete VG if source_vg: self._delete_vgroup_if_empty(current_array, source_vg) else: current_array.patch_volumes( names=[self._get_vol_name(volume)], volume=flasharray.VolumePatch( volume_group=flasharray.Reference( name=""""))) target_vol_name = self._get_vol_name(volume).split('/')[1] model_update = { 'id': volume.id, 'provider_id': target_vol_name, 'metadata': {**volume.metadata, 'array_volume_name': target_vol_name, 'array_name': self._array.array_name} } if source_vg: self._delete_vgroup_if_empty(current_array, source_vg) return True, model_update current_array.patch_volumes(names=[vol_name], volume=flasharray.VolumePatch( qos=flasharray.Qos( iops_limit=MAX_IOPS, bandwidth_limit=MAX_BWS))) def _create_volume_group_if_not_exist(self, source_array, vgname, vg_iops, vg_bws): res = source_array.post_volume_groups( names=[vgname], volume_group=flasharray.VolumeGroupPost( qos=flasharray.Qos( bandwidth_limit=vg_bws, iops_limit=vg_iops))) if res.status_code == 400: with excutils.save_and_reraise_exception() as ctxt: if ERR_MSG_ALREADY_EXISTS in res.errors[0].message: # Happens if the vg already exists ctxt.reraise = False LOG.warning(""Skipping creation of vg %s since it "" ""already exists. Resetting QoS"", vgname) res = source_array.patch_volume_groups( names=[vgname], volume_group=flasharray.VolumeGroupPatch( qos=flasharray.Qos( bandwidth_limit=vg_bws, iops_limit=vg_iops))) if res.status_code == 400: with excutils.save_and_reraise_exception() as ctxt: if ERR_MSG_NOT_EXIST in res.errors[0].message: ctxt.reraise = False LOG.warning(""Unable to change %(vgroup)s QoS, "" ""error message: %(error)s"", {""vgroup"": vgname, ""error"": res.errors[0].message}) return if list(source_array.get_volume_groups( names=[vgname]).items)[0].destroyed: ctxt.reraise = False LOG.warning(""Volume group %s is deleted but not"" "" eradicated - will recreate."", vgname) source_array.delete_volume_groups(names=[vgname]) self._create_volume_group_if_not_exist(source_array, vgname) @pure_driver_debug_trace"," LOG.debug('QoS: %(qos)s', {'qos': qos}) if qos['maxIOPS'] == '0' and qos['maxBWS'] == 0: array.set_volume(vol_name, iops_limit='', bandwidth_limit='') elif qos['maxIOPS'] == 0: array.set_volume(vol_name, iops_limit='', bandwidth_limit=qos['maxBWS']) elif qos['maxBWS'] == 0: array.set_volume(vol_name, iops_limit=qos['maxIOPS'], bandwidth_limit='') def create_with_qos(self, array, vol_name, vol_size, qos): LOG.debug('QoS: %(qos)s', {'qos': qos}) if qos['maxIOPS'] == 0 and qos['maxBWS'] == 0: array.create_volume(vol_name, vol_size, iops_limit='', bandwidth_limit='') elif qos['maxIOPS'] == 0: array.create_volume(vol_name, vol_size, iops_limit='', bandwidth_limit=qos['maxBWS']) elif qos['maxBWS'] == 0: array.create_volume(vol_name, vol_size, iops_limit=qos['maxIOPS'], bandwidth_limit='') """"""Creates a volume."""""" qos = self._get_qos_settings(volume_type) qos = self._get_qos_settings(volume_type) current_array.set_volume(vol_name, iops_limit='', bandwidth_limit='') err.text) This will not raise an exception if the object does not exist # Chack set vslues are within limits if iops_qos != 0 and not (100 <= iops_qos <= 100000000): msg = _('maxIOPS QoS error. Must be more than ' if bw_qos != 0 and not (1048576 <= bw_qos <= 549755813888): msg = _('maxBWS QoS error. Must be between ' if repl_type in [REPLICATION_TYPE_SYNC, REPLICATION_TYPE_TRISYNC]: base_name = self._replication_pod_name + ""::"" + base_name current_array = self._get_current_array() current_array.set_volume(vol_name, iops_limit='', bandwidth_limit='')",386,41
openstack%2Fironic~908342,openstack/ironic,master,Ibda7bdeec6de62c93fa8aa6d5874eea43b3a802d,docs: troubleshooting addition for sync period,MERGED,2024-02-07 20:09:13.000000000,2024-03-05 02:27:49.000000000,2024-03-05 02:25:25.000000000,"[{'_account_id': 4571}, {'_account_id': 10342}, {'_account_id': 11655}, {'_account_id': 22348}, {'_account_id': 24245}, {'_account_id': 32029}]","[{'number': 1, 'created': '2024-02-07 20:09:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/ed95b4037a0fc70297442be51a46a017737c9e37', 'message': 'docs: troubleshooting adiction for sync period\n\nChange-Id: Ibda7bdeec6de62c93fa8aa6d5874eea43b3a802d\n'}, {'number': 2, 'created': '2024-02-09 19:15:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/4d8892605d03a3b4467d6b3826f67311a789059a', 'message': 'docs: troubleshooting adiction for sync period\n\nChange-Id: Ibda7bdeec6de62c93fa8aa6d5874eea43b3a802d\n'}, {'number': 3, 'created': '2024-02-13 23:10:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/faa345a41276065fee12c642742c6808f61581c8', 'message': 'docs: troubleshooting adiction for sync period\n\nChange-Id: Ibda7bdeec6de62c93fa8aa6d5874eea43b3a802d\n'}, {'number': 4, 'created': '2024-02-13 23:13:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/2bf6d3ad7f1c6cf84feb360eee447c4565f0dbe2', 'message': 'docs: troubleshooting addition for sync period\n\nChange-Id: Ibda7bdeec6de62c93fa8aa6d5874eea43b3a802d\n'}, {'number': 5, 'created': '2024-02-29 17:23:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/e9cd7553c17cd96ff22364be409b641a68d82577', 'message': 'docs: troubleshooting addition for sync period\n\nChange-Id: Ibda7bdeec6de62c93fa8aa6d5874eea43b3a802d\n'}, {'number': 6, 'created': '2024-03-04 21:07:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/35017717e3778f4289748ae77df2a24399e134da', 'message': 'docs: troubleshooting addition for sync period\n\nChange-Id: Ibda7bdeec6de62c93fa8aa6d5874eea43b3a802d\n'}, {'number': 7, 'created': '2024-03-05 01:06:37.000000000', 'files': ['doc/source/admin/troubleshooting.rst'], 'web_link': 'https://opendev.org/openstack/ironic/commit/d89280676824b1f7f6629506209ff4b8e3f9cccf', 'message': 'docs: troubleshooting addition for sync period\n\nChange-Id: Ibda7bdeec6de62c93fa8aa6d5874eea43b3a802d\n'}]",11,908342,d89280676824b1f7f6629506209ff4b8e3f9cccf,25,6,7,11655,,,0,"docs: troubleshooting addition for sync period

Change-Id: Ibda7bdeec6de62c93fa8aa6d5874eea43b3a802d
",git fetch https://review.opendev.org/openstack/ironic refs/changes/42/908342/1 && git format-patch -1 --stdout FETCH_HEAD,['doc/source/admin/troubleshooting.rst'],1,ed95b4037a0fc70297442be51a46a017737c9e37,," I can't seem to introspect newly added nodes in a large cluster =============================================================== With larger clusters, the act of synchronizing DHCP for introspection and hardware discovery can take quite a bit of time because of the operational overhead. What happens is we spend so much time trying to trying to perform the update, that the process ends up continously running, which is not desirable and can lead to uneseirable effects like introspection failing to work. To remedy this, try setting ``[pxe_filter]sync_period`` to be less frequent, i.e. a larger value to enable conductors to have time between running syncs. .. note:: In the future, likley for the 2024.1 release, Ironic is anticipated to have this functionality also merged into Ironic directly as part of the merge of the ``ironic-inspector`` service into ``ironic`` itself. This merger will result in a slighly more performant implementation, which may necessitate re-evaluation and tuning of the ``[pxe_filter]sync_period`` parameter.",,21,0
openstack%2Fironic-inspector~905443,openstack/ironic-inspector,stable/zed,I939c80bb309b22e05ba7cc93686f12bbe0d71624,Handle LLDP parse Unicode error,MERGED,2024-01-12 09:28:55.000000000,2024-03-05 02:27:20.000000000,2024-03-05 02:25:24.000000000,"[{'_account_id': 10239}, {'_account_id': 22348}, {'_account_id': 24828}, {'_account_id': 32029}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-01-12 09:28:55.000000000', 'files': ['ironic_inspector/plugins/lldp_basic.py', 'releasenotes/notes/fix-lldp-decode-83f4ad3869b0c7a7.yaml'], 'web_link': 'https://opendev.org/openstack/ironic-inspector/commit/ea0d0c6e286b15d6eda70bdbdfc2a8c67d7e895d', 'message': 'Handle LLDP parse Unicode error\n\nCloses-Bug: #2044793\nChange-Id: I939c80bb309b22e05ba7cc93686f12bbe0d71624\n(cherry picked from commit db76af9c86bffb61f9b7a52a4080959fee1658fa)\n'}]",0,905443,ea0d0c6e286b15d6eda70bdbdfc2a8c67d7e895d,10,5,1,23851,,,0,"Handle LLDP parse Unicode error

Closes-Bug: #2044793
Change-Id: I939c80bb309b22e05ba7cc93686f12bbe0d71624
(cherry picked from commit db76af9c86bffb61f9b7a52a4080959fee1658fa)
",git fetch https://review.opendev.org/openstack/ironic-inspector refs/changes/43/905443/1 && git format-patch -1 --stdout FETCH_HEAD,"['ironic_inspector/plugins/lldp_basic.py', 'releasenotes/notes/fix-lldp-decode-83f4ad3869b0c7a7.yaml']",2,ea0d0c6e286b15d6eda70bdbdfc2a8c67d7e895d,handle-lldp-unicode-error-stable/zed,"--- fixes: - | In case the lldp raw data collected by the inspection process includes non utf-8 information, the parser fails breaking the inspection process. This patch works around that excluding the malformed data and adding an entry in the logs to provide information on the failed tlv. ",,19,1
openstack%2Fsunbeam-charms~910139,openstack/sunbeam-charms,main,I7d5538c74bb28e9c9a78235aaec76d23a09c4e40,Add docs for the tempest-k8s charm,MERGED,2024-02-26 05:14:45.000000000,2024-03-05 02:08:21.000000000,2024-03-05 02:00:24.000000000,"[{'_account_id': 10366}, {'_account_id': 22348}, {'_account_id': 27944}, {'_account_id': 32363}, {'_account_id': 34543}]","[{'number': 1, 'created': '2024-02-26 05:14:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/sunbeam-charms/commit/d12b6ead41643efa05a1543abe6bc81c36a2ee87', 'message': 'Add docs for the tempest-k8s charm\n\nChange-Id: I7d5538c74bb28e9c9a78235aaec76d23a09c4e40\n'}, {'number': 2, 'created': '2024-02-26 05:19:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/sunbeam-charms/commit/6e0e849150a0b40793a8e2dd7c0f338ff5a5c1d4', 'message': 'Add docs for the tempest-k8s charm\n\nChange-Id: I7d5538c74bb28e9c9a78235aaec76d23a09c4e40\n'}, {'number': 3, 'created': '2024-03-03 23:44:54.000000000', 'files': ['charms/tempest-k8s/CONTRIBUTING.md', 'charms/tempest-k8s/charmcraft.yaml', 'charms/tempest-k8s/README.md'], 'web_link': 'https://opendev.org/openstack/sunbeam-charms/commit/6818929c8aa20139105e7ff917fac312c8fbc93d', 'message': 'Add docs for the tempest-k8s charm\n\nChange-Id: I7d5538c74bb28e9c9a78235aaec76d23a09c4e40\n'}]",5,910139,6818929c8aa20139105e7ff917fac312c8fbc93d,16,5,3,34352,,,0,"Add docs for the tempest-k8s charm

Change-Id: I7d5538c74bb28e9c9a78235aaec76d23a09c4e40
",git fetch https://review.opendev.org/openstack/sunbeam-charms refs/changes/39/910139/1 && git format-patch -1 --stdout FETCH_HEAD,['charms/tempest-k8s/charmcraft.yaml'],1,d12b6ead41643efa05a1543abe6bc81c36a2ee87,docs, documentation: https://discourse.charmhub.io/t/tempest-k8s-docs-index/13258,,1,0
openstack%2Fcinder~893331,openstack/cinder,master,Ib0174c452a3d5c1700b38ff6743948c3844418fd,Follow up: HPE XP: support data deduplication and compression,NEW,2023-09-07 02:18:42.000000000,2024-03-05 01:58:13.000000000,,"[{'_account_id': 597}, {'_account_id': 22348}, {'_account_id': 22879}, {'_account_id': 31779}, {'_account_id': 32029}, {'_account_id': 35075}, {'_account_id': 36201}]","[{'number': 1, 'created': '2023-09-07 02:18:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/e82a7f94724d4da84c38f0e6585e472332a48387', 'message': 'Follow up: HPE XP: data deduplication and compression\n\nThis patch supports following feature:\n- Data deduplication and compression\non HPE-XP driver.\n\nHPE-XP driver is OEM driver of Hitachi driver,\nand the feature has already merged on Hitachi driver, as following patch:\n\nhttps://review.opendev.org/c/openstack/cinder/+/850831\n\nThis patch is a follow up for\nhttps://review.opendev.org/c/openstack/cinder/+/892608 ,\nto separate two features in 1 patch,\nbecause the patch implied two features in 1 patch, until patchset4.\nThe code in the above patch has implied deduplication and compression\nfeature, because this feature can be supported when supporting HA\nin the above patch.\n\nImplements: blueprint HPEXP-support-GAD-dedup\nChange-Id: Ib0174c452a3d5c1700b38ff6743948c3844418fd\n'}, {'number': 2, 'created': '2023-09-07 04:09:08.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/cfe7e09564ed83a38c56a5679459db1bfd29c74d', 'message': 'Follow up: HPE XP: support data deduplication and compression\n\nThis patch supports following feature:\n- Data deduplication and compression\non HPE-XP driver.\n\nHPE-XP driver is OEM driver of Hitachi driver,\nand the feature has already merged on Hitachi driver, as following patch:\n\nhttps://review.opendev.org/c/openstack/cinder/+/850831\n\nThis patch is a follow up for\nhttps://review.opendev.org/c/openstack/cinder/+/892608 ,\nto separate two features in 1 patch,\nbecause the patch implied two features in 1 patch, until patchset4.\nThe code in the above patch has implied deduplication and compression\nfeature, because this feature can be supported when supporting HA\nin the above patch.\n\nImplements: blueprint HPEXP-support-GAD-dedup\nChange-Id: Ib0174c452a3d5c1700b38ff6743948c3844418fd\n'}, {'number': 3, 'created': '2023-09-08 12:42:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/7caf3adfa78e733fab232b763127c28727b28b90', 'message': 'Follow up: HPE XP: support data deduplication and compression\n\nThis patch supports following feature:\n- Data deduplication and compression\non HPE-XP driver.\n\nHPE-XP driver is OEM driver of Hitachi driver,\nand the feature has already merged on Hitachi driver, as following patch:\n\nhttps://review.opendev.org/c/openstack/cinder/+/850831\n\nThis patch is a follow up for\nhttps://review.opendev.org/c/openstack/cinder/+/892608 ,\nto separate two features in 1 patch,\nbecause the patch implied two features in 1 patch, until patchset4.\nThe code in the above patch has implied deduplication and compression\nfeature, because this feature can be supported when supporting HA\nin the above patch.\n\nImplements: blueprint HPEXP-support-GAD-dedup\nChange-Id: Ib0174c452a3d5c1700b38ff6743948c3844418fd\n'}, {'number': 4, 'created': '2023-09-11 10:37:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/ce167611b00f68690e09ca78069ece5e53ce219a', 'message': 'Follow up: HPE XP: support data deduplication and compression\n\nThis patch supports following feature:\n- Data deduplication and compression\non HPE-XP driver.\n\nHPE-XP driver is OEM driver of Hitachi driver,\nand the feature has already merged on Hitachi driver, as following patch:\n\nhttps://review.opendev.org/c/openstack/cinder/+/850831\n\nThis patch is a follow up for\nhttps://review.opendev.org/c/openstack/cinder/+/892608 ,\nto separate two features in 1 patch,\nbecause the patch implied two features in 1 patch, until patchset4.\nThe code in the above patch has implied deduplication and compression\nfeature, because this feature can be supported when supporting HA\nin the above patch.\n\nImplements: blueprint HPEXP-support-GAD-dedup\nChange-Id: Ib0174c452a3d5c1700b38ff6743948c3844418fd\n'}, {'number': 5, 'created': '2023-11-29 06:06:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/8b2dc82510851f5017ae3ca277b759c871489e61', 'message': 'Follow up: HPE XP: support data deduplication and compression\n\nThis patch supports following feature:\n- Data deduplication and compression\non HPE-XP driver.\n\nHPE-XP driver is OEM driver of Hitachi driver,\nand the feature has already merged on Hitachi driver, as following patch:\n\nhttps://review.opendev.org/c/openstack/cinder/+/850831\n\nThis patch is a follow up for\nhttps://review.opendev.org/c/openstack/cinder/+/892608 ,\nto separate two features in 1 patch,\nbecause the patch implied two features in 1 patch, until patchset4.\nThe code in the above patch has implied deduplication and compression\nfeature, because this feature can be supported when supporting HA\nin the above patch.\n\nImplements: blueprint HPEXP-support-GAD-dedup\nChange-Id: Ib0174c452a3d5c1700b38ff6743948c3844418fd\n'}, {'number': 6, 'created': '2024-01-18 04:35:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/071a2698bef15be6118785a0070e081510a50dc3', 'message': 'Follow up: HPE XP: support data deduplication and compression\n\nThis patch supports following feature:\n- Data deduplication and compression\non HPE-XP driver.\n\nHPE-XP driver is OEM driver of Hitachi driver,\nand the feature has already merged on Hitachi driver, as following patch:\n\nhttps://review.opendev.org/c/openstack/cinder/+/850831\n\nThis patch is a follow up for\nhttps://review.opendev.org/c/openstack/cinder/+/892608 ,\nto separate two features in 1 patch,\nbecause the patch implied two features in 1 patch, until patchset4.\nThe code in the above patch has implied deduplication and compression\nfeature, because this feature can be supported when supporting HA\nin the above patch.\n\nImplements: blueprint HPEXP-support-GAD-dedup\nChange-Id: Ib0174c452a3d5c1700b38ff6743948c3844418fd\n'}, {'number': 7, 'created': '2024-02-07 01:33:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/3d7bd02c532cd71b189cd1b18680e69182fe4fdf', 'message': 'Follow up: HPE XP: support data deduplication and compression\n\nThis patch supports following feature:\n- Data deduplication and compression\non HPE-XP driver.\n\nHPE-XP driver is OEM driver of Hitachi driver,\nand the feature has already merged on Hitachi driver, as following patch:\n\nhttps://review.opendev.org/c/openstack/cinder/+/850831\n\nThis patch is a follow up for\nhttps://review.opendev.org/c/openstack/cinder/+/892608 ,\nto separate two features in 1 patch,\nbecause the patch implied two features in 1 patch, until patchset4.\nThe code in the above patch has implied deduplication and compression\nfeature, because this feature can be supported when supporting HA\nin the above patch.\n\nImplements: blueprint HPEXP-support-GAD-dedup\nChange-Id: Ib0174c452a3d5c1700b38ff6743948c3844418fd\n'}, {'number': 8, 'created': '2024-02-27 00:41:03.000000000', 'files': ['releasenotes/notes/hpe-xp-support-dedup-c35bca5d6100cb1c.yaml', 'cinder/tests/unit/volume/drivers/hpe/xp/test_hpe_xp_mirror_fc.py', 'cinder/tests/unit/volume/drivers/hpe/xp/test_hpe_xp_rest_iscsi.py', 'cinder/tests/unit/volume/drivers/hpe/xp/test_hpe_xp_mirror_iscsi.py', 'cinder/volume/drivers/hpe/xp/hpe_xp_utils.py', 'cinder/volume/drivers/hpe/xp/hpe_xp_iscsi.py', 'cinder/volume/drivers/hpe/xp/hpe_xp_fc.py', 'cinder/tests/unit/volume/drivers/hpe/xp/test_hpe_xp_rest_fc.py'], 'web_link': 'https://opendev.org/openstack/cinder/commit/bddeb610ba17c70e85b6347ca9430da461ac7c01', 'message': 'Follow up: HPE XP: support data deduplication and compression\n\nThis patch supports following feature:\n- Data deduplication and compression\non HPE-XP driver.\n\nHPE-XP driver is OEM driver of Hitachi driver,\nand the feature has already merged on Hitachi driver, as following patch:\n\nhttps://review.opendev.org/c/openstack/cinder/+/850831\n\nThis patch is a follow up for\nhttps://review.opendev.org/c/openstack/cinder/+/892608 ,\nto separate two features in 1 patch,\nbecause the patch implied two features in 1 patch, until patchset4.\nThe code in the above patch has implied deduplication and compression\nfeature, because this feature can be supported when supporting HA\nin the above patch.\n\nImplements: blueprint HPEXP-support-GAD-dedup\nChange-Id: Ib0174c452a3d5c1700b38ff6743948c3844418fd\n'}]",15,893331,bddeb610ba17c70e85b6347ca9430da461ac7c01,160,7,8,33473,,,0,"Follow up: HPE XP: support data deduplication and compression

This patch supports following feature:
- Data deduplication and compression
on HPE-XP driver.

HPE-XP driver is OEM driver of Hitachi driver,
and the feature has already merged on Hitachi driver, as following patch:

https://review.opendev.org/c/openstack/cinder/+/850831

This patch is a follow up for
https://review.opendev.org/c/openstack/cinder/+/892608 ,
to separate two features in 1 patch,
because the patch implied two features in 1 patch, until patchset4.
The code in the above patch has implied deduplication and compression
feature, because this feature can be supported when supporting HA
in the above patch.

Implements: blueprint HPEXP-support-GAD-dedup
Change-Id: Ib0174c452a3d5c1700b38ff6743948c3844418fd
",git fetch https://review.opendev.org/openstack/cinder refs/changes/31/893331/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/notes/hpe-xp-support-dedup-c35bca5d6100cb1c.yaml'],1,e82a7f94724d4da84c38f0e6585e472332a48387,bp/HPEXP-support-GAD-dedup,--- features: - | HPE XP driver supports following feature: * data deduplication and compression ,,5,0
openstack%2Fcinder~899113,openstack/cinder,master,I5dd0e51e618094ff442308a93466e36d55e4f267,Hitachi and OEM: masking REST API token on log,NEW,2023-10-26 07:50:21.000000000,2024-03-05 01:58:04.000000000,,"[{'_account_id': 597}, {'_account_id': 22348}, {'_account_id': 22879}, {'_account_id': 31779}, {'_account_id': 32029}, {'_account_id': 36201}]","[{'number': 1, 'created': '2023-10-26 07:50:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/0ebd1bcd0f7dffc1f8f1397d6c4bdeac13de0a98', 'message': 'Hitachi and OEM: masking REST API token on log\n\nThis patch masks the REST API token on log file for security reason.\n\nCloses-Bug: #2040966\nChange-Id: I5dd0e51e618094ff442308a93466e36d55e4f267\n'}, {'number': 2, 'created': '2023-11-29 06:16:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/8834c376d36dc413df06333d2e7b0ddb2549f4a9', 'message': 'Hitachi and OEM: masking REST API token on log\n\nThis patch masks the REST API token on log file for security reason.\n\nCloses-Bug: #2040966\nChange-Id: I5dd0e51e618094ff442308a93466e36d55e4f267\n'}, {'number': 3, 'created': '2024-01-18 04:58:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/cd68d5f47d93f81ed68b45ab4eafcff8ce4ff77f', 'message': 'Hitachi and OEM: masking REST API token on log\n\nThis patch masks the REST API token on log file for security reason.\n\nCloses-Bug: #2040966\nChange-Id: I5dd0e51e618094ff442308a93466e36d55e4f267\n'}, {'number': 4, 'created': '2024-02-02 05:20:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/59d1442a1245cdfe6cfcb25c052c3fa2c55a0148', 'message': 'Hitachi and OEM: masking REST API token on log\n\nThis patch masks the REST API token on log file for security reason.\n\nCloses-Bug: #2040966\nChange-Id: I5dd0e51e618094ff442308a93466e36d55e4f267\n'}, {'number': 5, 'created': '2024-02-07 02:10:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/3352bd66c60014c5bcfe083c7ffbc3b11555e21b', 'message': 'Hitachi and OEM: masking REST API token on log\n\nThis patch masks the REST API token on log file for security reason.\n\nCloses-Bug: #2040966\nChange-Id: I5dd0e51e618094ff442308a93466e36d55e4f267\n'}, {'number': 6, 'created': '2024-02-27 00:41:36.000000000', 'files': ['cinder/volume/drivers/hitachi/hbsd_rest_api.py', 'releasenotes/notes/hitachi-fix-output-token-c9eb15423e05c5b9.yaml'], 'web_link': 'https://opendev.org/openstack/cinder/commit/dc305fe36f5f588d779ee1ffe444cdb5881086ed', 'message': 'Hitachi and OEM: masking REST API token on log\n\nThis patch masks the REST API token on log file for security reason.\n\nCloses-Bug: #2040966\nChange-Id: I5dd0e51e618094ff442308a93466e36d55e4f267\n'}]",3,899113,dc305fe36f5f588d779ee1ffe444cdb5881086ed,99,6,6,33473,,,0,"Hitachi and OEM: masking REST API token on log

This patch masks the REST API token on log file for security reason.

Closes-Bug: #2040966
Change-Id: I5dd0e51e618094ff442308a93466e36d55e4f267
",git fetch https://review.opendev.org/openstack/cinder refs/changes/13/899113/1 && git format-patch -1 --stdout FETCH_HEAD,"['cinder/volume/drivers/hitachi/hbsd_rest_api.py', 'releasenotes/notes/hitachi-fix-output-token-c9eb15423e05c5b9.yaml']",2,0ebd1bcd0f7dffc1f8f1397d6c4bdeac13de0a98,bug/2040966,--- fixes: - | Hitachi driver `bug #2040966 <https://bugs.launchpad.net/cinder/+bug/2040966>`_: Mask a token for REST API session. - | NEC V driver `bug #2040966 <https://bugs.launchpad.net/cinder/+bug/2040966>`_: Mask a token for REST API session. - | HPE XP driver `bug #2040966 <https://bugs.launchpad.net/cinder/+bug/2040966>`_: Mask a token for REST API session. ,,21,2
openstack%2Ftacker~910720,openstack/tacker,master,I8c1543bb724b6f2c4f3f4f7edecdfef063d3d9a4,Fix broken gate jobs caused by oslo.db upgrades,MERGED,2024-03-01 10:58:01.000000000,2024-03-05 01:48:46.000000000,2024-03-05 01:47:34.000000000,"[{'_account_id': 8556}, {'_account_id': 17255}, {'_account_id': 22348}, {'_account_id': 25701}]","[{'number': 1, 'created': '2024-03-01 10:58:01.000000000', 'files': ['tacker/api/views/vnf_lcm.py', 'tacker/tests/unit/vnflcm/test_controller.py'], 'web_link': 'https://opendev.org/openstack/tacker/commit/b885f93d6459f56457b649724dd0e868ade353cd', 'message': ""Fix broken gate jobs caused by oslo.db upgrades\n\nThis patch fixes an issue where the filter attribute of vnflcm\nsubscription (v1 API) could not be retrieved because oslo.db version\nwas updated to 15.0.0 [1].\nThe reason of the issue was that obj's data type, which was obtained\nwhen oslo.db was 14.1.0 and 15.0.0, was different as below:\n\n* oslo.db==14.1.0: sqlalchemy.engine.row.LegacyRow\n* oslo.db==15.0.0: sqlalchemy.engine.row.Row\n\nThis patch changes the existence validation of the filter key for\n`vnf_lcm_subscription` in the `sqlalchemy.engine.row.Row` case.\n\n[1] https://review.opendev.org/c/openstack/requirements/+/909930\n[2] https://pydoc.dev/sqlalchemy/latest/sqlalchemy.engine.row.Row.html\n\nCloses-Bug: #2055431\nChange-Id: I8c1543bb724b6f2c4f3f4f7edecdfef063d3d9a4\n""}]",4,910720,b885f93d6459f56457b649724dd0e868ade353cd,11,4,1,31857,,,0,"Fix broken gate jobs caused by oslo.db upgrades

This patch fixes an issue where the filter attribute of vnflcm
subscription (v1 API) could not be retrieved because oslo.db version
was updated to 15.0.0 [1].
The reason of the issue was that obj's data type, which was obtained
when oslo.db was 14.1.0 and 15.0.0, was different as below:

* oslo.db==14.1.0: sqlalchemy.engine.row.LegacyRow
* oslo.db==15.0.0: sqlalchemy.engine.row.Row

This patch changes the existence validation of the filter key for
`vnf_lcm_subscription` in the `sqlalchemy.engine.row.Row` case.

[1] https://review.opendev.org/c/openstack/requirements/+/909930
[2] https://pydoc.dev/sqlalchemy/latest/sqlalchemy.engine.row.Row.html

Closes-Bug: #2055431
Change-Id: I8c1543bb724b6f2c4f3f4f7edecdfef063d3d9a4
",git fetch https://review.opendev.org/openstack/tacker refs/changes/20/910720/1 && git format-patch -1 --stdout FETCH_HEAD,"['tacker/api/views/vnf_lcm.py', 'tacker/tests/unit/vnflcm/test_controller.py']",2,b885f93d6459f56457b649724dd0e868ade353cd,bug/2055431," self, mock_get_service_plugins, mock_create): res_create = { 'id': uuidsentinel.subscription_id, 'callback_uri': body['callbackUri'] } mock_create.return_value = objects.LccnSubscriptionRequest( **res_create) self, mock_get_service_plugins, mock_create, res_create = { 'id': uuidsentinel.subscription_id, 'callback_uri': body['callbackUri'], ""authentication"": jsonutils.dumps(body[""authentication""]) } mock_create.return_value = objects.LccnSubscriptionRequest( **res_create)"," self, mock_get_service_plugins, mock_save): self, mock_create, mock_get_service_plugins,",30,4
openstack%2Foslo.messaging~910575,openstack/oslo.messaging,feature/nats-driver,I5207a233dcb173ba2b394e28e9e39692cf0fb6dc,Drop reference to dib-utils,ABANDONED,2024-02-29 08:01:47.000000000,2024-03-05 01:01:57.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-02-29 08:01:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/oslo.messaging/commit/657ee1634b78da9d4c833cfbb166734bc646a4fe', 'message': ""Drop reference to dib-utils\n\n... because the repository was retired as part of TripleO's retirement.\n\nChange-Id: I5207a233dcb173ba2b394e28e9e39692cf0fb6dc\n""}, {'number': 2, 'created': '2024-02-29 08:05:19.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/oslo.messaging/commit/cc237dbb2a51816add8b23a20e58a9051db12cd6', 'message': ""Drop reference to dib-utils\n\n... because the repository was retired as part of TripleO's retirement.\n\nChange-Id: I5207a233dcb173ba2b394e28e9e39692cf0fb6dc\n""}]",3,910575,cc237dbb2a51816add8b23a20e58a9051db12cd6,6,1,2,9816,,,0,"Drop reference to dib-utils

... because the repository was retired as part of TripleO's retirement.

Change-Id: I5207a233dcb173ba2b394e28e9e39692cf0fb6dc
",git fetch https://review.opendev.org/openstack/oslo.messaging refs/changes/75/910575/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,657ee1634b78da9d4c833cfbb166734bc646a4fe,dib-utils-removal,," # following are required when DEVSTACK_GATE_HEAT, which this # job turns on - openstack/dib-utils",0,3
openstack%2Felection~910688,openstack/election,master,Id1c7b66e94e672d42cfa27c7c53704ac36a25977,Update governance tag 0.16.0 to configuration,MERGED,2024-03-01 02:01:43.000000000,2024-03-05 00:45:12.000000000,2024-03-05 00:44:15.000000000,"[{'_account_id': 10342}, {'_account_id': 12898}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 02:01:43.000000000', 'files': ['configuration.yaml'], 'web_link': 'https://opendev.org/openstack/election/commit/710115af853395985d072c07d2f07ea450400d9a', 'message': 'Update governance tag 0.16.0 to configuration\n\nDepends-On: I3685ac5c0d959bb3732ce103af33a2deca8aa540\nChange-Id: Id1c7b66e94e672d42cfa27c7c53704ac36a25977\n'}]",0,910688,710115af853395985d072c07d2f07ea450400d9a,8,3,1,14482,,,0,"Update governance tag 0.16.0 to configuration

Depends-On: I3685ac5c0d959bb3732ce103af33a2deca8aa540
Change-Id: Id1c7b66e94e672d42cfa27c7c53704ac36a25977
",git fetch https://review.opendev.org/openstack/election refs/changes/88/910688/1 && git format-patch -1 --stdout FETCH_HEAD,['configuration.yaml'],1,710115af853395985d072c07d2f07ea450400d9a,2024.2-elections,tag: 0.16.0,tag: to-be-released,1,1
openstack%2Fopenstack-helm~910565,openstack/openstack-helm,master,Ifee524ad494a7f11f909816a49dd31cf62d22902,Set horizon ingress annotation proxy-body-size=300m by default,MERGED,2024-02-29 04:16:35.000000000,2024-03-05 00:20:46.000000000,2024-03-05 00:18:51.000000000,"[{'_account_id': 22348}, {'_account_id': 29974}, {'_account_id': 34520}]","[{'number': 1, 'created': '2024-02-29 04:16:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/0b49972393b19f92fdceaa69283e217e5fa62ea1', 'message': 'Set horizon ingress annotation proxy-body-size=300m by default\n\nChange-Id: Ifee524ad494a7f11f909816a49dd31cf62d22902\n'}, {'number': 2, 'created': '2024-02-29 18:31:06.000000000', 'files': ['horizon/Chart.yaml', 'releasenotes/notes/horizon.yaml', 'horizon/values.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/cedaaf75bedea91c32bd9d97699d5cbc6d5222b0', 'message': 'Set horizon ingress annotation proxy-body-size=300m by default\n\nChange-Id: Ifee524ad494a7f11f909816a49dd31cf62d22902\n'}]",2,910565,cedaaf75bedea91c32bd9d97699d5cbc6d5222b0,16,3,2,3009,,,0,"Set horizon ingress annotation proxy-body-size=300m by default

Change-Id: Ifee524ad494a7f11f909816a49dd31cf62d22902
",git fetch https://review.opendev.org/openstack/openstack-helm refs/changes/65/910565/1 && git format-patch -1 --stdout FETCH_HEAD,"['horizon/Chart.yaml', 'releasenotes/notes/horizon.yaml', 'horizon/values.yaml']",3,0b49972393b19f92fdceaa69283e217e5fa62ea1,, nginx.ingress.kubernetes.io/proxy-body-size: 300m,,3,1
openstack%2Fopenstack-helm~909571,openstack/openstack-helm,master,I106f50f620c2594b1f8ea7dc516d2e254c6af479,Use metadata_listen_port in nova config,MERGED,2024-02-26 06:54:03.000000000,2024-03-05 00:19:53.000000000,2024-03-05 00:18:45.000000000,"[{'_account_id': 3009}, {'_account_id': 22348}, {'_account_id': 29974}]","[{'number': 1, 'created': '2024-02-26 06:54:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/2039086c05aa42214a26846fb22121b92a1ce328', 'message': 'Update value to metadata_listen_port and use default endpoint\n\nmetadata_port value used in queens version and changed in rocky version to metadata_listen_port\n\nstory: 2011052\ntask: 49616\nChange-Id: I106f50f620c2594b1f8ea7dc516d2e254c6af479\n'}, {'number': 2, 'created': '2024-02-27 06:03:04.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/69f79a2d22868535faa089c4d5c0b420c0bc7da2', 'message': 'Update value to metadata_listen_port and use default endpoint\n\nmetadata_port value used in queens version and changed in rocky version to metadata_listen_port\n\nstory: 2011052\ntask: 49616\nChange-Id: I106f50f620c2594b1f8ea7dc516d2e254c6af479\n'}, {'number': 3, 'created': '2024-03-04 01:54:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/e48aa98ca370e7dc8595d35846919017157b57b3', 'message': 'Use metadata_listen_port in nova config\n\nmetadata_port value used in queens version and changed\nin rocky version to metadata_listen_port\n\nstory: 2011052\ntask: 49616\nChange-Id: I106f50f620c2594b1f8ea7dc516d2e254c6af479\n'}, {'number': 4, 'created': '2024-03-04 03:45:24.000000000', 'files': ['nova/templates/configmap-etc.yaml', 'neutron/Chart.yaml', 'neutron/values_overrides/tls.yaml', 'releasenotes/notes/neutron.yaml', 'releasenotes/notes/nova.yaml', 'nova/Chart.yaml', 'neutron/templates/configmap-etc.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/44e2b10447085ca0f30bb76d80ee92a89ed8db9f', 'message': 'Use metadata_listen_port in nova config\n\nmetadata_port value used in queens version and changed\nin rocky version to metadata_listen_port\n\nstory: 2011052\ntask: 49616\nChange-Id: I106f50f620c2594b1f8ea7dc516d2e254c6af479\n'}]",5,909571,44e2b10447085ca0f30bb76d80ee92a89ed8db9f,23,3,4,35674,,,0,"Use metadata_listen_port in nova config

metadata_port value used in queens version and changed
in rocky version to metadata_listen_port

story: 2011052
task: 49616
Change-Id: I106f50f620c2594b1f8ea7dc516d2e254c6af479
",git fetch https://review.opendev.org/openstack/openstack-helm refs/changes/71/909571/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/templates/configmap-etc.yaml', 'neutron/Chart.yaml', 'releasenotes/notes/neutron.yaml', 'releasenotes/notes/nova.yaml', 'nova/Chart.yaml', 'neutron/templates/configmap-etc.yaml']",6,2039086c05aa42214a26846fb22121b92a1ce328,,"{{- $_ := tuple ""compute_metadata"" ""default"" . | include ""helm-toolkit.endpoints.hostname_fqdn_endpoint_lookup"" | set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_ip"" -}}{{- $_ := tuple ""compute_metadata"" ""default"" . | include ""helm-toolkit.endpoints.hostname_fqdn_endpoint_lookup"" | set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_host"" -}}{{- $_ := set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_port"" 8775 -}}","{{- $_ := tuple ""compute_metadata"" ""public"" . | include ""helm-toolkit.endpoints.hostname_fqdn_endpoint_lookup"" | set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_ip"" -}}{{- $_ := tuple ""compute_metadata"" ""public"" . | include ""helm-toolkit.endpoints.hostname_fqdn_endpoint_lookup"" | set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_host"" -}}{{- $_ := set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_port"" 80 -}}",9,7
openstack%2Fswift~910995,openstack/swift,stable/2023.2,I8f6c247c21f16aa4717569cc69308f846c6a0245,CI: Remove centos-7 jobs,MERGED,2024-03-04 20:36:55.000000000,2024-03-04 23:33:29.000000000,2024-03-04 23:31:34.000000000,"[{'_account_id': 15343}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 20:36:55.000000000', 'files': ['tools/playbooks/common/install_dependencies.yaml', '.zuul.yaml', 'tools/test-setup.sh'], 'web_link': 'https://opendev.org/openstack/swift/commit/ce1e641e32a8ae77aa30f90c7ece27c7ada4ffd5', 'message': ""CI: Remove centos-7 jobs\n\nCentOS 7 will go EOL later this year, and infra wants to drop the nodes\nsoon-ish -- don't make them wait on our account.\n\nThe only major loss is py2 probe tests, but officially, yoga was the\nlast release we pledged to support py2.\n\nChange-Id: I8f6c247c21f16aa4717569cc69308f846c6a0245\n""}]",2,910995,ce1e641e32a8ae77aa30f90c7ece27c7ada4ffd5,10,2,1,15343,,,0,"CI: Remove centos-7 jobs

CentOS 7 will go EOL later this year, and infra wants to drop the nodes
soon-ish -- don't make them wait on our account.

The only major loss is py2 probe tests, but officially, yoga was the
last release we pledged to support py2.

Change-Id: I8f6c247c21f16aa4717569cc69308f846c6a0245
",git fetch https://review.opendev.org/openstack/swift refs/changes/95/910995/1 && git format-patch -1 --stdout FETCH_HEAD,"['tools/playbooks/common/install_dependencies.yaml', '.zuul.yaml', 'tools/test-setup.sh']",3,ce1e641e32a8ae77aa30f90c7ece27c7ada4ffd5,drop-centos-7,,"function is_rhel7 { [ -f /usr/bin/yum ] && \ cat /etc/*release | grep -q -e ""Red Hat"" -e ""CentOS"" -e ""CloudLinux"" && \ cat /etc/*release | grep -q 'release 7' }if is_rhel7; then # Install CentOS OpenStack repos so that we have access to some extra # packages. sudo yum install -y centos-release-openstack-rocky sudo yum install -y liberasurecode-devel fi ",5,84
openstack%2Fproject-config~910978,openstack/project-config,master,I06f8b0243d2083aacb44fe12c0c850991ce3ef63,CentOS 7 removal prep changes,MERGED,2024-03-04 18:18:01.000000000,2024-03-04 22:03:12.000000000,2024-03-04 21:49:40.000000000,"[{'_account_id': 5263}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 18:18:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/project-config/commit/57b2ed12ade9c2659a7f923851dfc3ef5b194e14', 'message': 'CentOS 7 removal prep changes\n\nThis drop min-ready for centos-7 to 0 and removes use of some centos 7\njobs from puppet-midnoet. We will clean up those removed jobs in a\nfollowup change to openstack-zuul-jobs.\n\nChange-Id: I06f8b0243d2083aacb44fe12c0c850991ce3ef63\n'}, {'number': 2, 'created': '2024-03-04 18:24:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/project-config/commit/363d82d5cd9eab791da13b7b67fa822c949be4d6', 'message': 'CentOS 7 removal prep changes\n\nThis drop min-ready for centos-7 to 0 and removes use of some centos 7\njobs from puppet-midnoet. We will clean up those removed jobs in a\nfollowup change to openstack-zuul-jobs.\n\nWe also remove x/collected-openstack-plugins from zuul. This repo uses\ncentos 7 nodesets that we want to clean up and it last merged a change\nin 2019. That change was written by the infra team as part of global\ncleanups. I think we can remove it from zuul for now and if interest\nrestarts it can be added and fixed up.\n\nChange-Id: I06f8b0243d2083aacb44fe12c0c850991ce3ef63\n'}, {'number': 3, 'created': '2024-03-04 18:26:05.000000000', 'files': ['nodepool/nl01.opendev.org.yaml', 'zuul.d/projects.yaml', 'zuul/main.yaml'], 'web_link': 'https://opendev.org/openstack/project-config/commit/56c5fefcf6394d6ebffd7407d990215a7973edc0', 'message': 'CentOS 7 removal prep changes\n\nThis drop min-ready for centos-7 to 0 and removes use of some centos 7\njobs from puppet-midnoet. We will clean up those removed jobs in a\nfollowup change to openstack-zuul-jobs.\n\nWe also remove x/collected-openstack-plugins from zuul. This repo uses\ncentos 7 nodesets that we want to clean up and it last merged a change\nin 2019. That change was written by the infra team as part of global\ncleanups. I think we can remove it from zuul for now and if interest\nrestarts it can be added and fixed up.\n\nChange-Id: I06f8b0243d2083aacb44fe12c0c850991ce3ef63\n'}]",0,910978,56c5fefcf6394d6ebffd7407d990215a7973edc0,12,2,3,4146,,,0,"CentOS 7 removal prep changes

This drop min-ready for centos-7 to 0 and removes use of some centos 7
jobs from puppet-midnoet. We will clean up those removed jobs in a
followup change to openstack-zuul-jobs.

We also remove x/collected-openstack-plugins from zuul. This repo uses
centos 7 nodesets that we want to clean up and it last merged a change
in 2019. That change was written by the infra team as part of global
cleanups. I think we can remove it from zuul for now and if interest
restarts it can be added and fixed up.

Change-Id: I06f8b0243d2083aacb44fe12c0c850991ce3ef63
",git fetch https://review.opendev.org/openstack/project-config refs/changes/78/910978/1 && git format-patch -1 --stdout FETCH_HEAD,"['nodepool/nl01.opendev.org.yaml', 'zuul.d/projects.yaml']",2,57b2ed12ade9c2659a7f923851dfc3ef5b194e14,drop-centos-7, - noop - noop, - legacy-puppet-midonet-puppet-unit-4.5-centos-7: irrelevant-files: - ^.*\.md$ - ^.*\.rst$ - ^doc/.*$ - ^etc/.*$ - ^metadata.json$ - ^releasenotes/.*$ - ^test-requirements.txt$ - legacy-puppet-midonet-puppet-unit-latest-centos-7: voting: false branches: ^master irrelevant-files: - ^.*\.md$ - ^.*\.rst$ - ^doc/.*$ - ^etc/.*$ - ^metadata.json$ - ^releasenotes/.*$ - ^test-requirements.txt$ - legacy-puppet-midonet-puppet-unit-4.5-centos-7: irrelevant-files: - ^.*\.md$ - ^.*\.rst$ - ^doc/.*$ - ^etc/.*$ - ^metadata.json$ - ^releasenotes/.*$ - ^test-requirements.txt$,3,30
openstack%2Fopenstack-helm-infra~910992,openstack/openstack-helm-infra,master,I31c501541b54d9253c334b56df975bddb13bbaeb,Workaround for debian-reef folder issue,MERGED,2024-03-04 19:34:09.000000000,2024-03-04 21:49:44.000000000,2024-03-04 21:48:42.000000000,"[{'_account_id': 3009}, {'_account_id': 17119}, {'_account_id': 22348}, {'_account_id': 29974}]","[{'number': 1, 'created': '2024-03-04 19:34:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm-infra/commit/dff7166f89950245c87a758d0dcc1645a17ae355', 'message': 'Workaround for debiona-reef folder issue\n\nThis PS changes ceph repo to debian-18.2.1 from\ndebian-reef due to some issues with debian-reef\nfolder at https://download.ceph.com/\n\nChange-Id: I31c501541b54d9253c334b56df975bddb13bbaeb\n'}, {'number': 2, 'created': '2024-03-04 19:35:38.000000000', 'files': ['tools/gate/deploy-k8s.sh', 'roles/deploy-env/tasks/prerequisites.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-helm-infra/commit/3a2399c99fd5c800f9cd48e06d4456140371a15e', 'message': 'Workaround for debian-reef folder issue\n\nThis PS changes ceph repo to debian-18.2.1 from\ndebian-reef due to some issues with debian-reef\nfolder at https://download.ceph.com/\n\nChange-Id: I31c501541b54d9253c334b56df975bddb13bbaeb\n'}]",0,910992,3a2399c99fd5c800f9cd48e06d4456140371a15e,11,4,2,34520,,,0,"Workaround for debian-reef folder issue

This PS changes ceph repo to debian-18.2.1 from
debian-reef due to some issues with debian-reef
folder at https://download.ceph.com/

Change-Id: I31c501541b54d9253c334b56df975bddb13bbaeb
",git fetch https://review.opendev.org/openstack/openstack-helm-infra refs/changes/92/910992/1 && git format-patch -1 --stdout FETCH_HEAD,"['tools/gate/deploy-k8s.sh', 'roles/deploy-env/tasks/prerequisites.yaml']",2,dff7166f89950245c87a758d0dcc1645a17ae355,," repo: deb https://download.ceph.com/debian-18.2.1/ ""{{ ansible_distribution_release }}"" main"," repo: deb https://download.ceph.com/debian-reef/ ""{{ ansible_distribution_release }}"" main",2,2
openstack%2Fcharm-nova-cloud-controller~909617,openstack/charm-nova-cloud-controller,master,I236d5f525e37c37f4d8efddee5beb6126f3a8742,Sync up tox.ini file from release-tools,NEW,2024-02-20 20:56:27.000000000,2024-03-04 21:30:54.000000000,,"[{'_account_id': 2424}, {'_account_id': 20648}, {'_account_id': 20870}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-20 20:56:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/dc5cb4ff71cd13b8015d237a4a14a09036bf4bc1', 'message': 'Sync up tox.ini file from release-tools\n\nThis new tox.ini file introduces the use of a new environment variable\nnamed TEST_CONSTRAINTS_FILE that gets used by the CI job.\n\nChange-Id: I236d5f525e37c37f4d8efddee5beb6126f3a8742\n'}, {'number': 2, 'created': '2024-02-20 21:23:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/ab20ff50693e395d787af567f8d95662bc97383c', 'message': 'Sync up tox.ini file from release-tools\n\nThis new tox.ini file introduces the use of a new environment variable\nnamed TEST_CONSTRAINTS_FILE that gets used by the CI job.\n\nChange-Id: I236d5f525e37c37f4d8efddee5beb6126f3a8742\n'}, {'number': 3, 'created': '2024-03-01 19:28:32.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/5d4cb7519b2dca18e2241dd2cc16c8f895764c93', 'message': 'Sync up tox.ini file from release-tools\n\nThis new tox.ini file introduces the use of a new environment variable\nnamed TEST_CONSTRAINTS_FILE that gets used by the CI job.\n\nChange-Id: I236d5f525e37c37f4d8efddee5beb6126f3a8742\n'}, {'number': 4, 'created': '2024-03-04 16:04:32.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/b71c86e680fa07e846566cace34dfb50cec0d425', 'message': 'Sync up tox.ini file from release-tools\n\nThis new tox.ini file introduces the use of a new environment variable\nnamed TEST_CONSTRAINTS_FILE that gets used by the CI job.\n\nChange-Id: I236d5f525e37c37f4d8efddee5beb6126f3a8742\n'}]",6,909617,b71c86e680fa07e846566cace34dfb50cec0d425,25,4,4,2424,,,0,"Sync up tox.ini file from release-tools

This new tox.ini file introduces the use of a new environment variable
named TEST_CONSTRAINTS_FILE that gets used by the CI job.

Change-Id: I236d5f525e37c37f4d8efddee5beb6126f3a8742
",git fetch https://review.opendev.org/openstack/charm-nova-cloud-controller refs/changes/17/909617/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,dc5cb4ff71cd13b8015d237a4a14a09036bf4bc1,update-tox,deps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} -r{toxinidir}/test-requirements-py38.txtdeps =[testenv:py38] basepython = python3.8 deps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} -r{toxinidir}/merged-requirements-py38.txt deps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} -r{toxinidir}/merged-requirements-py310.txtdeps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} -r{toxinidir}/merged-requirements-py310.txtdeps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} flake8==3.9.2 git+https://github.com/juju/charm-tools.gitdeps = -c {env:TEST_CONSTRAINTS_FILE:https://raw.githubusercontent.com/openstack-charmers/zaza-openstack-tests/master/constraints/constraints-2024.1.txt} -r{toxinidir}/merged-requirements-py310.txtbasepython = python3.8basepython = python3.8basepython = python3.8basepython = python3.8,deps = -r{toxinidir}/test-requirements.txtdeps = -r{toxinidir}/build-requirements.txtdeps = -r{toxinidir}/requirements.txt -r{toxinidir}/test-requirements.txtdeps = -r{toxinidir}/requirements.txt -r{toxinidir}/test-requirements.txtdeps = flake8==3.9.2 git+https://github.com/juju/charm-tools.gitdeps = -r{toxinidir}/requirements.txt -r{toxinidir}/test-requirements.txtbasepython = python3basepython = python3basepython = python3basepython = python3,27,14
openstack%2Fosc-lib~910610,openstack/osc-lib,stable/2023.2,Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512,Drop master-only job from zuul config,MERGED,2024-03-01 08:23:44.000000000,2024-03-04 21:16:03.000000000,2024-03-04 21:14:14.000000000,"[{'_account_id': 22348}, {'_account_id': 27900}]","[{'number': 1, 'created': '2024-03-01 08:23:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/osc-lib/commit/ba50d4cfec8d16178dddcf557f7b6e3dcfcefcaa', 'message': 'Fix branch selection in zuul config\n\nNegative lookahead is no longer working, be positive instead.\n\nChange-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512\n(cherry picked from commit 6032f8b0a7bd60ea81e7d3f89a2e97d4998d5f84)\n'}, {'number': 2, 'created': '2024-03-01 13:50:38.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/osc-lib/commit/923a847dea1d4577e75d4044a58596a0665941f1', 'message': 'Drop master-only job from zuul config\n\nThe tips job should only run on the master branch, drop it from the zuul\nconfig for stable branches.\n\nChange-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512\n'}]",1,910610,923a847dea1d4577e75d4044a58596a0665941f1,11,2,2,13252,,,0,"Drop master-only job from zuul config

The tips job should only run on the master branch, drop it from the zuul
config for stable branches.

Change-Id: Ic2ddb04bc1f1e81586fff54f1e7bee9ee3689512
",git fetch https://review.opendev.org/openstack/osc-lib refs/changes/10/910610/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,ba50d4cfec8d16178dddcf557f7b6e3dcfcefcaa,zuul-config-errors-stable/2023.2, branches: master, branches: ^(?!stable),1,1
openstack%2Fnova~904568,openstack/nova,master,If4cf09c1006a3f56d243b9c00712bb24d2a796d3,Add support for showing requested az in output,MERGED,2024-01-03 13:26:11.000000000,2024-03-04 21:10:14.000000000,2024-03-01 20:39:00.000000000,"[{'_account_id': 4690}, {'_account_id': 7166}, {'_account_id': 8864}, {'_account_id': 9708}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-01-03 13:26:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8bd37e4dd7d7baa5347953780bf3c29711e295a4', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds support for showing the availability zone\nrequested during instance create in server show and server\nlist --long output.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 2, 'created': '2024-01-07 14:12:53.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/5187b18658a9fb1c6b0cef8ff2b6368c4000467f', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds support for showing the availability zone\nrequested during instance create in server show and server\nlist --long output.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 3, 'created': '2024-01-07 15:54:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/54f316727301abbd781f33d3447c3e0070d3493e', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds support for showing the availability zone\nrequested during instance create in server show and server\nlist --long output.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 4, 'created': '2024-01-09 16:02:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a8fb798f859f6bf88758d6af853281925ebf51b3', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 5, 'created': '2024-02-02 12:32:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/5e3c5db15188ee48e08d7dc53c3d79b55fafc3d6', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 6, 'created': '2024-02-02 13:15:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/274352868bffce71d410b76a73804314a4f55a0b', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 7, 'created': '2024-02-12 12:01:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d9b7ccc66f6f1e985ca244ef6ba23e3ebacadd17', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 8, 'created': '2024-02-12 13:09:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/9717009be07e36ff2376eae1855c1a5ce9b46874', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 9, 'created': '2024-02-16 07:42:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/da3c07c7c04e74325b52ea8549ab3cf5310be5d5', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 10, 'created': '2024-02-16 08:47:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/1b2d1c4376663bba8536b8fce9a4b97004efd4d7', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 11, 'created': '2024-02-21 08:59:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/dc71bb5ffc4137d3303a8dc9a852c9ca68096326', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 12, 'created': '2024-02-21 15:29:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e67d7d6176a6e6b877a83d72ff2ac485e236b535', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 13, 'created': '2024-02-25 05:49:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/94eef72f1465d425149596bea1b1ebc3f02b4610', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 14, 'created': '2024-02-28 08:13:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/efc1c8408bf8cbd7597c18c09b498135b80b4b10', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 15, 'created': '2024-03-01 13:44:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/65dc0abd27497156e703b2e5d12e834c1df96c1f', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 16, 'created': '2024-03-01 15:24:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a5930b03104b4c57bec3544320c32004c7445bf4', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}, {'number': 17, 'created': '2024-03-01 16:09:21.000000000', 'files': ['api-ref/source/parameters.yaml', 'doc/api_samples/servers/v2.96/servers-list-resp.json', 'doc/api_samples/servers/v2.96/servers-details-resp.json', 'nova/api/openstack/compute/views/servers.py', 'nova/tests/functional/api_sample_tests/api_samples/servers/v2.96/server-get-resp.json.tpl', 'doc/api_samples/versions/versions-get-resp.json', 'nova/api/openstack/api_version_request.py', 'nova/tests/functional/api_sample_tests/api_samples/servers/v2.96/servers-list-resp.json.tpl', 'doc/api_samples/servers/v2.96/server-get-resp.json', 'nova/tests/functional/api_sample_tests/api_samples/servers/v2.96/server-details-resp.json.tpl', 'nova/objects/request_spec.py', 'nova/tests/unit/objects/test_objects.py', 'nova/tests/functional/api_sample_tests/api_samples/servers/v2.96/server-create-req.json.tpl', 'nova/tests/functional/api_sample_tests/test_servers.py', 'releasenotes/notes/microversion-2-96-ca56e1e5a4ee4e02.yaml', 'doc/api_samples/versions/v21-version-get-resp.json', 'nova/tests/functional/api_sample_tests/api_samples/servers/v2.96/server-list-resp.json.tpl', 'nova/api/openstack/compute/rest_api_version_history.rst', 'nova/tests/functional/api_sample_tests/api_samples/servers/v2.96/server-create-resp.json.tpl', 'nova/tests/functional/api_sample_tests/api_samples/servers/v2.96/servers-details-resp.json.tpl', 'api-ref/source/servers.inc'], 'web_link': 'https://opendev.org/openstack/nova/commit/c98c8d84eec6e65f1b67ae1ab8278d9c507a1a76', 'message': 'Add support for showing requested az in output\n\nAs of now, the server show and server list --long output\nshows the availability zone, that is, the AZ to which the\nhost of the instance belongs. There is no way to tell from\nthis information if the instance create request included an\nAZ or not.\n\nThis change adds a new api microversion to add support for\nincluding availability zone requested during instance create\nin server show and server list --long responses.\n\nChange-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3\n'}]",82,904568,c98c8d84eec6e65f1b67ae1ab8278d9c507a1a76,121,6,17,20733,,,0,"Add support for showing requested az in output

As of now, the server show and server list --long output
shows the availability zone, that is, the AZ to which the
host of the instance belongs. There is no way to tell from
this information if the instance create request included an
AZ or not.

This change adds a new api microversion to add support for
including availability zone requested during instance create
in server show and server list --long responses.

Change-Id: If4cf09c1006a3f56d243b9c00712bb24d2a796d3
",git fetch https://review.opendev.org/openstack/nova refs/changes/68/904568/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/objects/request_spec.py', 'nova/api/openstack/compute/views/servers.py', 'nova/api/openstack/compute/servers.py']",3,8bd37e4dd7d7baa5347953780bf3c29711e295a4,list-requested-az," req_spec = objects.RequestSpec.get_by_instance_uuid(context, instance.uuid) show_server_groups=show_server_groups, req_spec=req_spec)", show_server_groups=show_server_groups),36,5
openstack%2Fmagnum~908414,openstack/magnum,master,I81db0055ae82c64218498ae3e2a4fcc802f8d0e4,Removing Tiller support,MERGED,2024-02-08 12:22:02.000000000,2024-03-04 20:54:04.000000000,2024-03-04 20:52:16.000000000,"[{'_account_id': 8064}, {'_account_id': 14394}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-08 12:22:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/14f618a291be2bfc99bd083d8ccb4d79abe0a6c6', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 2, 'created': '2024-02-22 17:25:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/33f1a531cb0c5cc41d8c43241520ed9a742622f9', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 3, 'created': '2024-02-27 08:47:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/eb9aa2c84ca1de0db9895675517cddbcc4de0de2', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 4, 'created': '2024-02-27 09:42:51.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/246e15bb9d02319b0ad32f52bf696ebe698f62d8', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 5, 'created': '2024-02-27 09:43:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/3d5bad8105118c01bafb3ec1413a66235d17847e', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 6, 'created': '2024-02-27 09:56:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/a9c77c4476bb9a3ed9b06f690065d66eccfd1db0', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 7, 'created': '2024-02-27 13:56:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/d60fdd7338f5f38483274eb3ab136bfe7b0a193f', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 8, 'created': '2024-02-27 16:32:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/f225bea162c1e61a48a5e2851885cc85f3125247', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 9, 'created': '2024-02-27 16:35:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/671146502d8f4d23f0083636270016871d408cc4', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 10, 'created': '2024-02-28 07:00:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/7dcd4c59293f9c2443a6ac056a0f8cb0164e9c8f', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 11, 'created': '2024-02-28 09:07:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/62924eadb5cc6d2ef8f87d11e99b3c1c7ab8a6af', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}, {'number': 12, 'created': '2024-02-29 14:41:29.000000000', 'files': ['magnum/drivers/common/templates/kubernetes/fragments/enable-helm-tiller.sh', 'doc/source/user/index.rst', 'magnum/tests/unit/drivers/test_template_definition.py', 'magnum/drivers/heat/k8s_fedora_template_def.py', 'releasenotes/notes/drop-tiller-5b98862961003df8.yaml', 'doc/source/user/monitoring.rst', 'magnum/drivers/k8s_fedora_coreos_v1/templates/kubecluster.yaml', 'magnum/drivers/k8s_fedora_coreos_v1/templates/kubemaster.yaml', 'magnum/drivers/common/templates/kubernetes/fragments/install-helm-modules.sh', 'magnum/drivers/common/templates/kubernetes/fragments/write-heat-params-master.sh'], 'web_link': 'https://opendev.org/openstack/magnum/commit/e3aaa89376c2b405d74c91995888c6370b25dc51', 'message': 'Removing Tiller support\n\nRemoved Tiller support from Helm modules install kubernetes fragment.\n\nChange-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4\n'}]",2,908414,e3aaa89376c2b405d74c91995888c6370b25dc51,34,3,12,34076,,,0,"Removing Tiller support

Removed Tiller support from Helm modules install kubernetes fragment.

Change-Id: I81db0055ae82c64218498ae3e2a4fcc802f8d0e4
",git fetch https://review.opendev.org/openstack/magnum refs/changes/14/908414/1 && git format-patch -1 --stdout FETCH_HEAD,['magnum/drivers/common/templates/kubernetes/fragments/install-helm-modules.sh'],1,14f618a291be2bfc99bd083d8ccb4d79abe0a6c6,calico-helm,"if [ -z ""${HELM_CLIENT_URL}"" ] ; then HELM_CLIENT_URL=""https://get.helm.sh/helm-$HELM_CLIENT_TAG-linux-amd64.tar.gz"" fi i=0 until curl -o /srv/magnum/helm-client.tar.gz ""${HELM_CLIENT_URL}""; do i=$((i + 1)) [ $i -lt 5 ] || break; sleep 5 done if ! echo ""${HELM_CLIENT_SHA256} /srv/magnum/helm-client.tar.gz"" | sha256sum -c - ; then echo ""ERROR helm-client.tar.gz computed checksum did NOT match, exiting."" exit 1 fi source /etc/bashrc $ssh_cmd tar xzvf /srv/magnum/helm-client.tar.gz linux-amd64/helm -O > /srv/magnum/bin/helm $ssh_cmd chmod +x /srv/magnum/bin/helm helm_install_cmd=""helm upgrade --install magnum . --namespace kube-system --values values.yaml --render-subchart-notes"" helm_history_cmd=""helm history magnum --namespace kube-system"" if [[ ""${HELM_CLIENT_TAG}"" == v2.* ]]; then CERTS_DIR=""/etc/kubernetes/helm/certs"" export HELM_HOME=""/srv/magnum/kubernetes/helm/home"" export HELM_TLS_ENABLE=""true"" mkdir -p ""${HELM_HOME}"" ln -s ${CERTS_DIR}/helm.cert.pem ${HELM_HOME}/cert.pem ln -s ${CERTS_DIR}/helm.key.pem ${HELM_HOME}/key.pem ln -s ${CERTS_DIR}/ca.cert.pem ${HELM_HOME}/ca.pem # HACK - Force wait because of bug https://github.com/helm/helm/issues/5170 until helm init --client-only --wait; do sleep 5s helm_install_cmd=""helm upgrade --install --name magnum . --namespace kube-system --values values.yaml --render-subchart-notes"" helm_history_cmd=""helm history magnum"" fi HELM_CHART_DIR=""/srv/magnum/kubernetes/helm/magnum"" if [[ -d ""${HELM_CHART_DIR}"" ]]; then pushd ${HELM_CHART_DIR} cat << EOF > Chart.yaml sed -i '1i\dependencies:' requirements.yaml i=0 until ($helm_history_cmd | grep magnum | grep deployed) || (helm dep update && $helm_install_cmd); do i=$((i + 1)) [ $i -lt 60 ] || break; sleep 5 done popd","if [[ ""$(echo ${TILLER_ENABLED} | tr '[:upper:]' '[:lower:]')"" != ""true"" && ""${HELM_CLIENT_TAG}"" == v2.* ]]; then echo ""Use --labels tiller_enabled=True for helm_client_tag<v3.0.0 to allow for tiller dependent resources to be installed."" else if [ -z ""${HELM_CLIENT_URL}"" ] ; then HELM_CLIENT_URL=""https://get.helm.sh/helm-$HELM_CLIENT_TAG-linux-amd64.tar.gz"" fi i=0 until curl -o /srv/magnum/helm-client.tar.gz ""${HELM_CLIENT_URL}""; do i=$((i + 1)) [ $i -lt 5 ] || break; sleep 5 if ! echo ""${HELM_CLIENT_SHA256} /srv/magnum/helm-client.tar.gz"" | sha256sum -c - ; then echo ""ERROR helm-client.tar.gz computed checksum did NOT match, exiting."" exit 1 fi source /etc/bashrc $ssh_cmd tar xzvf /srv/magnum/helm-client.tar.gz linux-amd64/helm -O > /srv/magnum/bin/helm $ssh_cmd chmod +x /srv/magnum/bin/helm helm_install_cmd=""helm upgrade --install magnum . --namespace kube-system --values values.yaml --render-subchart-notes"" helm_history_cmd=""helm history magnum --namespace kube-system"" if [[ ""${HELM_CLIENT_TAG}"" == v2.* ]]; then CERTS_DIR=""/etc/kubernetes/helm/certs"" export HELM_HOME=""/srv/magnum/kubernetes/helm/home"" export HELM_TLS_ENABLE=""true"" export TILLER_NAMESPACE mkdir -p ""${HELM_HOME}"" ln -s ${CERTS_DIR}/helm.cert.pem ${HELM_HOME}/cert.pem ln -s ${CERTS_DIR}/helm.key.pem ${HELM_HOME}/key.pem ln -s ${CERTS_DIR}/ca.cert.pem ${HELM_HOME}/ca.pem # HACK - Force wait because of bug https://github.com/helm/helm/issues/5170 until helm init --client-only --wait; do sleep 5s done helm_install_cmd=""helm upgrade --install --name magnum . --namespace kube-system --values values.yaml --render-subchart-notes"" helm_history_cmd=""helm history magnum"" fi HELM_CHART_DIR=""/srv/magnum/kubernetes/helm/magnum"" if [[ -d ""${HELM_CHART_DIR}"" ]]; then pushd ${HELM_CHART_DIR} cat << EOF > Chart.yaml sed -i '1i\dependencies:' requirements.yaml i=0 until ($helm_history_cmd | grep magnum | grep deployed) || (helm dep update && $helm_install_cmd); do i=$((i + 1)) [ $i -lt 60 ] || break; sleep 5 done popd fi",48,53
openstack%2Fmagnum~910722,openstack/magnum,master,I597eed6f24f13f96f78f6596e16b6edcff989a90,SQLA 2.0 - Fix connection.execute,MERGED,2024-03-01 11:32:16.000000000,2024-03-04 20:53:11.000000000,2024-03-04 20:52:15.000000000,"[{'_account_id': 8064}, {'_account_id': 14394}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 11:32:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/43a2a512153f41cb89f2b838172428e8dc86c7b5', 'message': 'WIP: SQLA2: Fix connection.execute\n\nChange-Id: I597eed6f24f13f96f78f6596e16b6edcff989a90\n'}, {'number': 2, 'created': '2024-03-01 11:32:40.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/d92b608029195d36162415af0845a0d6a435cdf5', 'message': 'WIP: SQLA2: Fix connection.execute\n\nChange-Id: I597eed6f24f13f96f78f6596e16b6edcff989a90\n'}, {'number': 3, 'created': '2024-03-01 12:20:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/6cf2492ea5193b0ca02b6d934cfe4a19e2af3f2f', 'message': 'WIP: SQLA2: Fix connection.execute\n\nChange-Id: I597eed6f24f13f96f78f6596e16b6edcff989a90\n'}, {'number': 4, 'created': '2024-03-01 12:20:40.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/179fbd1c3fb1639ab789986e474a68e9c3b888a0', 'message': 'WIP: SQLA2: Fix connection.execute\n\nChange-Id: I597eed6f24f13f96f78f6596e16b6edcff989a90\n'}, {'number': 5, 'created': '2024-03-01 14:16:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/bbc904307dda5752a502ac6aea0047089e721867', 'message': 'SQLA 2.0 - Fix connection.execute\n\nexecute() in SQL Alchemy 2.x has different behaviour,\nthis patch adapts alembic scripts.\nSee [1].\n\n[1]: https://docs.sqlalchemy.org/en/20/changelog/migration_20.html#execute-method-more-strict-execution-options-are-more-prominent\n\nChange-Id: I597eed6f24f13f96f78f6596e16b6edcff989a90\n'}, {'number': 6, 'created': '2024-03-02 07:30:50.000000000', 'files': ['magnum/db/sqlalchemy/alembic/versions/c04e925e65c2_nodegroups_v2.py', 'magnum/db/sqlalchemy/alembic/versions/95096e2334ee_add_master_lb_enabled_to_cluster.py', 'magnum/db/sqlalchemy/alembic/versions/461d798132c7_change_cluster_to_support_nodegroups.py'], 'web_link': 'https://opendev.org/openstack/magnum/commit/38a0f41c940ec7b26d4771b11ef81d95d1f4ea7a', 'message': 'SQLA 2.0 - Fix connection.execute\n\nexecute() in SQL Alchemy 2.x has different behaviour,\nthis patch adapts alembic scripts.\nSee [1].\n\n[1]: https://docs.sqlalchemy.org/en/20/changelog/migration_20.html#execute-method-more-strict-execution-options-are-more-prominent\n\nChange-Id: I597eed6f24f13f96f78f6596e16b6edcff989a90\n'}]",17,910722,38a0f41c940ec7b26d4771b11ef81d95d1f4ea7a,18,3,6,22629,,,0,"SQLA 2.0 - Fix connection.execute

execute() in SQL Alchemy 2.x has different behaviour,
this patch adapts alembic scripts.
See [1].

[1]: https://docs.sqlalchemy.org/en/20/changelog/migration_20.html#execute-method-more-strict-execution-options-are-more-prominent

Change-Id: I597eed6f24f13f96f78f6596e16b6edcff989a90
",git fetch https://review.opendev.org/openstack/magnum refs/changes/22/910722/1 && git format-patch -1 --stdout FETCH_HEAD,['magnum/db/sqlalchemy/alembic/versions/461d798132c7_change_cluster_to_support_nodegroups.py'],1,43a2a512153f41cb89f2b838172428e8dc86c7b5,sqlalchemy-20, sa.text( ),,2,0
openstack%2Fmagnum~910512,openstack/magnum,master,I6e973935edf5e754ba054e724b6963b6d5fd795a,Remove use of autocommit,MERGED,2024-02-28 14:21:48.000000000,2024-03-04 20:37:00.000000000,2024-03-04 20:35:59.000000000,"[{'_account_id': 8064}, {'_account_id': 14394}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-28 14:21:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/e1b81dc8544e46bd9e59726d52ceb5ec6193d69c', 'message': 'WIP: Remove use of autocommit\n\nChange-Id: I6e973935edf5e754ba054e724b6963b6d5fd795a\n'}, {'number': 2, 'created': '2024-02-29 08:11:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/magnum/commit/c006aea31fb0b895c85beee4224b8d91df850a91', 'message': 'WIP: Remove use of autocommit\n\nChange-Id: I6e973935edf5e754ba054e724b6963b6d5fd795a\n'}, {'number': 3, 'created': '2024-02-29 11:54:31.000000000', 'files': ['magnum/db/sqlalchemy/api.py', 'magnum/db/sqlalchemy/models.py'], 'web_link': 'https://opendev.org/openstack/magnum/commit/d544698fae220549f68afa218dd252366fe90b27', 'message': 'Remove use of autocommit\n\nChange-Id: I6e973935edf5e754ba054e724b6963b6d5fd795a\n'}]",1,910512,d544698fae220549f68afa218dd252366fe90b27,14,3,3,22629,,,0,"Remove use of autocommit

Change-Id: I6e973935edf5e754ba054e724b6963b6d5fd795a
",git fetch https://review.opendev.org/openstack/magnum refs/changes/12/910512/1 && git format-patch -1 --stdout FETCH_HEAD,"['magnum/db/sqlalchemy/api.py', 'magnum/objects/cluster.py']",2,e1b81dc8544e46bd9e59726d52ceb5ec6193d69c,sqlalchemy-20," with session.begin(): updates = self.obj_get_changes() self.dbapi.update_cluster(self.uuid, updates)"," updates = self.obj_get_changes() self.dbapi.update_cluster(self.uuid, updates)",4,5
openstack%2Fswift~903266,openstack/swift,master,I01f9d2c58e265041c2adbac7dd2c5a5f90c58d25,wip: cross-compat test for non-mpu,NEW,2023-12-10 22:00:46.000000000,2024-03-04 20:14:52.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-12-10 22:00:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/3fec40237ace87d49bdb94814ed6c469a4ba811c', 'message': 'wip: cross-compat test for non-mpu\n\nChange-Id: I01f9d2c58e265041c2adbac7dd2c5a5f90c58d25\n'}, {'number': 2, 'created': '2024-02-05 15:46:07.000000000', 'files': ['test/s3api/test_obj.py'], 'web_link': 'https://opendev.org/openstack/swift/commit/47198cf36e888b877274c0f6126719da29d70da0', 'message': 'wip: cross-compat test for non-mpu\n\nChange-Id: I01f9d2c58e265041c2adbac7dd2c5a5f90c58d25\n'}]",4,903266,47198cf36e888b877274c0f6126719da29d70da0,8,1,2,1179,,,0,"wip: cross-compat test for non-mpu

Change-Id: I01f9d2c58e265041c2adbac7dd2c5a5f90c58d25
",git fetch https://review.opendev.org/openstack/swift refs/changes/66/903266/1 && git format-patch -1 --stdout FETCH_HEAD,['test/s3api/test_obj.py'],1,3fec40237ace87d49bdb94814ed6c469a4ba811c,extend-slo-attrs,"# Copyright (c) 2023 Nvidia # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License. from test.s3api import BaseS3TestCase from botocore.exceptions import ClientError class TestObject(BaseS3TestCase): def setUp(self): self.client = self.get_s3_client(1) self.bucket_name = self.create_name('test-mpu') resp = self.client.create_bucket(Bucket=self.bucket_name) self.assertEqual(200, resp['ResponseMetadata']['HTTPStatusCode']) def tearDown(self): self.clear_bucket(self.client, self.bucket_name) super(TestObject, self).tearDown() def _upload_object(self): key_name = self.create_name('key') body = key_name + 'test' * (2 ** 20) resp = self.client.put_object(Body=body, Bucket=self.bucket_name, Key=key_name) self.assertEqual(200, resp['ResponseMetadata']['HTTPStatusCode']) return key_name, resp['ETag'] def test_GET_object(self): key_name, etag = self._upload_object() resp = self.client.get_object(Bucket=self.bucket_name, Key=key_name) self.assertEqual(200, resp['ResponseMetadata']['HTTPStatusCode']) self.assertEqual(etag, resp['ETag']) headers = resp['ResponseMetadata']['HTTPHeaders'] self.assertEqual('binary/octet-stream', headers['content-type']) def test_HEAD_object(self): key_name, etag = self._upload_object() resp = self.client.head_object(Bucket=self.bucket_name, Key=key_name) self.assertEqual(200, resp['ResponseMetadata']['HTTPStatusCode']) self.assertEqual(etag, resp['ETag']) def test_GET_non_slo_object_part_num(self): key_name, etag = self._upload_object() resp = self.client.get_object(Bucket=self.bucket_name, Key=key_name, PartNumber=1) self.assertEqual(206, resp['ResponseMetadata']['HTTPStatusCode']) self.assertEqual(etag, resp['ETag']) def test_GET_non_slo_object_invalid_part_num(self): key_name, etag = self._upload_object() with self.assertRaises(ClientError) as caught: self.client.get_object(Bucket=self.bucket_name, Key=key_name, PartNumber=2) err_resp = caught.exception.response self.assertEqual(416, err_resp['ResponseMetadata']['HTTPStatusCode']) self.assertEqual('InvalidPartNumber', err_resp['Error']['Code']) headers = err_resp['ResponseMetadata']['HTTPHeaders'] self.assertEqual('application/xml', headers['content-type']) ",,73,0
openstack%2Fopenstack-ansible-ops~910972,openstack/openstack-ansible-ops,master,Iead05995797652f5cd3d76db4b4eb6267e25835b,Clean up zuul jobs,MERGED,2024-03-04 17:46:27.000000000,2024-03-04 20:12:45.000000000,2024-03-04 20:10:45.000000000,"[{'_account_id': 22348}, {'_account_id': 25023}, {'_account_id': 28619}]","[{'number': 1, 'created': '2024-03-04 17:46:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/b1df55186dd0b4bedaae5e94d2cc026d0b6ebcbe', 'message': 'Clean up zuul jobs\n\nRemove centos-7 jobs and migrate all others to focal/jammy.\n\nAs this is the ops repo some of these jobs might break, but thats\nOK as it is best effort here.\n\nChange-Id: Iead05995797652f5cd3d76db4b4eb6267e25835b\n'}, {'number': 2, 'created': '2024-03-04 17:50:11.000000000', 'files': ['zuul.d/project.yaml', 'zuul.d/jobs.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/9224f5df39682c6c9e8837e4bebf4e36352b84f7', 'message': 'Clean up zuul jobs\n\nRemove centos-7 jobs and migrate all others to focal/jammy.\n\nAs this is the ops repo some of these jobs might break, but thats\nOK as it is best effort here.\n\nChange-Id: Iead05995797652f5cd3d76db4b4eb6267e25835b\n'}]",1,910972,9224f5df39682c6c9e8837e4bebf4e36352b84f7,10,3,2,25023,,,0,"Clean up zuul jobs

Remove centos-7 jobs and migrate all others to focal/jammy.

As this is the ops repo some of these jobs might break, but thats
OK as it is best effort here.

Change-Id: Iead05995797652f5cd3d76db4b4eb6267e25835b
",git fetch https://review.opendev.org/openstack/openstack-ansible-ops refs/changes/72/910972/1 && git format-patch -1 --stdout FETCH_HEAD,"['zuul.d/project.yaml', 'zuul.d/jobs.yaml']",2,b1df55186dd0b4bedaae5e94d2cc026d0b6ebcbe,," name: ""openstack-ansible-ops:elk_metrics_7x-ubuntu-focal"" nodeset: ubuntu-focal name: ""openstack-ansible-ops:elk_metrics_7x-ubuntu-jammy"" parent: ""openstack-ansible-ops:elk_metrics_7x-ubuntu-focal"" name: ""openstack-ansible-ops:osquery-ubuntu-jammy"" nodeset: ubuntu-jammy name: ""openstack-ansible-ops:skydive-ubuntu-jammy"" nodeset: ubuntu-jammy","- job: name: ""openstack-ansible-ops:elk_metrics_6x-ubuntu-bionic"" description: ""Runs a gate test on the elk_metrics_6x project."" run: ""elk_metrics_6x/tests/test.yml"" post-run: ""elk_metrics_6x/tests/post-run.yml"" nodeset: ubuntu-bionic files: - ^elk_metrics_6x/.* - ^bootstrap-embedded-ansible/.* vars: osa_test_repo: ""openstack/openstack-ansible-ops"" test_clustered_elk: false - job: name: ""openstack-ansible-ops:elk_metrics_7x-ubuntu-bionic"" parent: base nodeset: ubuntu-bionic name: ""openstack-ansible-ops:elk_metrics_7x-ubuntu-focal"" parent: ""openstack-ansible-ops:elk_metrics_7x-ubuntu-bionic"" name: ""openstack-ansible-ops:elk_metrics_7x-ubuntu-jammy"" parent: ""openstack-ansible-ops:elk_metrics_7x-ubuntu-bionic"" nodeset: ubuntu-jammy - job: name: ""openstack-ansible-ops:elk_metrics_6x-centos-7"" parent: ""openstack-ansible-ops:elk_metrics_6x-ubuntu-bionic"" nodeset: centos-7 voting: false - job: name: ""openstack-ansible-ops:elk_metrics_6x-centos-7-clustered"" parent: ""openstack-ansible-ops:elk_metrics_6x-ubuntu-bionic"" nodeset: centos-7 voting: false vars: osa_test_repo: ""openstack/openstack-ansible-ops"" test_clustered_elk: true - job: name: ""openstack-ansible-ops:elk_metrics_6x-ubuntu-bionic-clustered"" parent: ""openstack-ansible-ops:elk_metrics_6x-ubuntu-bionic"" nodeset: ubuntu-bionic voting: false vars: osa_test_repo: ""openstack/openstack-ansible-ops"" test_clustered_elk: true - job: name: ""openstack-ansible-ops:osquery-ubuntu-bionic"" nodeset: ubuntu-bionic name: ""openstack-ansible-ops:osquery-ubuntu-bionic-clustered"" parent: ""openstack-ansible-ops:osquery-ubuntu-bionic"" nodeset: ubuntu-bionic vars: osa_test_repo: ""openstack/openstack-ansible-ops"" test_clustered_kolide: true - job: name: ""openstack-ansible-ops:skydive-ubuntu-bionic"" nodeset: ubuntu-bionic - job: name: ""openstack-ansible-ops:skydive-centos-7"" parent: ""openstack-ansible-ops:skydive-ubuntu-bionic"" nodeset: centos-7",8,80
openstack%2Fswift~902114,openstack/swift,master,Ifb6b2cad7e4db124d30991788efb07d3de29700d,sq: more slo part-number unittests,ABANDONED,2023-11-28 22:00:25.000000000,2024-03-04 20:04:45.000000000,,"[{'_account_id': 22348}, {'_account_id': 34892}]","[{'number': 1, 'created': '2023-11-28 22:00:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/176c88c12669d917b88c5c9ec6888b60e8d75a99', 'message': 'sq: more slo part-number unittests\n\nChange-Id: Ifb6b2cad7e4db124d30991788efb07d3de29700d\n'}, {'number': 2, 'created': '2023-11-28 22:06:19.000000000', 'files': ['swift/common/middleware/slo.py', 'test/unit/common/middleware/test_slo.py', 'test/functional/test_slo.py'], 'web_link': 'https://opendev.org/openstack/swift/commit/9f6b8aa1e27e3fde141fbfcff675ecf9f77abccd', 'message': 'sq: more slo part-number unittests\n\nChange-Id: Ifb6b2cad7e4db124d30991788efb07d3de29700d\n'}]",1,902114,9f6b8aa1e27e3fde141fbfcff675ecf9f77abccd,8,2,2,1179,,,0,"sq: more slo part-number unittests

Change-Id: Ifb6b2cad7e4db124d30991788efb07d3de29700d
",git fetch https://review.opendev.org/openstack/swift refs/changes/14/902114/1 && git format-patch -1 --stdout FETCH_HEAD,"['swift/common/middleware/slo.py', 'test/unit/common/middleware/test_slo.py', 'test/functional/test_slo.py']",3,176c88c12669d917b88c5c9ec6888b60e8d75a99,extend-slo-attrs-patch52," self.assertEqual(416, file_item2.conn.response.status, resp_body) self.assertEqual(b'The requested part number is not satisfiable',"," self.assertEqual(400, file_item2.conn.response.status, resp_body) self.assertEqual(b'Part number must be an integer between 1 and ' b'1000, inclusive',",215,105
openstack%2Fansible-role-uwsgi~910190,openstack/ansible-role-uwsgi,stable/2023.1,Iad0e73a12e61f98034fb5929923fdcc5ea4e1d50,Remove undefined bionic linters job,MERGED,2024-02-26 17:29:50.000000000,2024-03-04 20:03:55.000000000,2024-03-04 20:02:08.000000000,"[{'_account_id': 22348}, {'_account_id': 25023}, {'_account_id': 31542}]","[{'number': 1, 'created': '2024-02-26 17:29:50.000000000', 'files': ['zuul.d/project.yaml'], 'web_link': 'https://opendev.org/openstack/ansible-role-uwsgi/commit/7b3da8eead973a4972c7417d74f7d18e24709ba0', 'message': 'Remove undefined bionic linters job\n\nChange-Id: Iad0e73a12e61f98034fb5929923fdcc5ea4e1d50\n'}]",1,910190,7b3da8eead973a4972c7417d74f7d18e24709ba0,11,3,1,25023,,,0,"Remove undefined bionic linters job

Change-Id: Iad0e73a12e61f98034fb5929923fdcc5ea4e1d50
",git fetch https://review.opendev.org/openstack/ansible-role-uwsgi refs/changes/90/910190/1 && git format-patch -1 --stdout FETCH_HEAD,['zuul.d/project.yaml'],1,7b3da8eead973a4972c7417d74f7d18e24709ba0,osa/zuul-errors,, check: jobs: - openstack-ansible-linters-ubuntu-bionic: voting: false gate: jobs: - openstack-ansible-linters-ubuntu-bionic: voting: false,0,8
openstack%2Fkolla-ansible~902182,openstack/kolla-ansible,master,I10b28ede50451b149b1915e4675eb50c64fdf2e6,skyline: allow to merge skyline.yaml config with custom config,NEW,2023-11-29 19:38:42.000000000,2024-03-04 19:58:39.000000000,,"[{'_account_id': 14200}, {'_account_id': 22348}, {'_account_id': 32553}]","[{'number': 1, 'created': '2023-11-29 19:38:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kolla-ansible/commit/5aac34f74a341c536d262ed9a29662b4c734bf35', 'message': 'skyline: allow to merge skyline.yaml config with custom config\n\nChange-Id: I10b28ede50451b149b1915e4675eb50c64fdf2e6\n'}, {'number': 2, 'created': '2023-11-30 13:13:26.000000000', 'files': ['ansible/roles/skyline/tasks/config.yml'], 'web_link': 'https://opendev.org/openstack/kolla-ansible/commit/0ebd962da82d54d7af2b89e6c9162315e64d04c1', 'message': 'skyline: allow to merge skyline.yaml config with custom config\n\nChange-Id: I10b28ede50451b149b1915e4675eb50c64fdf2e6\n'}]",6,902182,0ebd962da82d54d7af2b89e6c9162315e64d04c1,12,3,2,35887,,,0,"skyline: allow to merge skyline.yaml config with custom config

Change-Id: I10b28ede50451b149b1915e4675eb50c64fdf2e6
",git fetch https://review.opendev.org/openstack/kolla-ansible refs/changes/82/902182/1 && git format-patch -1 --stdout FETCH_HEAD,['ansible/roles/skyline/tasks/config.yml'],1,5aac34f74a341c536d262ed9a29662b4c734bf35,," merge_yaml: sources: - ""{{ role_path }}/templates/skyline.yaml.j2"" - ""{{ node_custom_config }}/skyline.yaml"""," template: src: ""skyline.yaml.j2""",4,2
openstack%2Fswift~910829,openstack/swift,master,I8f6c247c21f16aa4717569cc69308f846c6a0245,CI: Remove centos-7 jobs,MERGED,2024-03-01 19:07:34.000000000,2024-03-04 19:16:08.000000000,2024-03-04 19:14:07.000000000,"[{'_account_id': 15343}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 19:07:34.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/817209b270c119ef0b4940c570556c85394caedf', 'message': ""CI: Remove centos-7 jobs\n\nCentOS 7 will go EOL later this year, and infra wants to drop the nodes\nsoon-ish -- don't make them wait on our account.\n\nThe only major loss is py2 probe tests, but officially, yoga was the\nlast release we pledged to support py2.\n\nChange-Id: I8f6c247c21f16aa4717569cc69308f846c6a0245\n""}, {'number': 2, 'created': '2024-03-01 19:55:15.000000000', 'files': ['tools/playbooks/common/install_dependencies.yaml', '.zuul.yaml', 'tools/test-setup.sh'], 'web_link': 'https://opendev.org/openstack/swift/commit/bd3b2256a925472606b9fd1096e9e726a8c11e84', 'message': ""CI: Remove centos-7 jobs\n\nCentOS 7 will go EOL later this year, and infra wants to drop the nodes\nsoon-ish -- don't make them wait on our account.\n\nThe only major loss is py2 probe tests, but officially, yoga was the\nlast release we pledged to support py2.\n\nChange-Id: I8f6c247c21f16aa4717569cc69308f846c6a0245\n""}]",3,910829,bd3b2256a925472606b9fd1096e9e726a8c11e84,13,2,2,15343,,,0,"CI: Remove centos-7 jobs

CentOS 7 will go EOL later this year, and infra wants to drop the nodes
soon-ish -- don't make them wait on our account.

The only major loss is py2 probe tests, but officially, yoga was the
last release we pledged to support py2.

Change-Id: I8f6c247c21f16aa4717569cc69308f846c6a0245
",git fetch https://review.opendev.org/openstack/swift refs/changes/29/910829/1 && git format-patch -1 --stdout FETCH_HEAD,"['tools/playbooks/common/install_dependencies.yaml', '.zuul.yaml', 'tools/test-setup.sh']",3,817209b270c119ef0b4940c570556c85394caedf,,,"function is_rhel7 { [ -f /usr/bin/yum ] && \ cat /etc/*release | grep -q -e ""Red Hat"" -e ""CentOS"" -e ""CloudLinux"" && \ cat /etc/*release | grep -q 'release 7' }if is_rhel7; then # Install CentOS OpenStack repos so that we have access to some extra # packages. sudo yum install -y centos-release-openstack-rocky sudo yum install -y liberasurecode-devel fi ",4,85
openstack%2Frequirements~910734,openstack/requirements,master,I248bc1c2ffef3c9aa752039ef045a3ac492c9e0d,update constraint for python-cinderclient to new release 9.5.0,MERGED,2024-03-01 13:59:04.000000000,2024-03-04 19:08:42.000000000,2024-03-04 19:07:48.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 13:59:04.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/b60494080edc9680c39170aabd4a35b863a002b4', 'message': 'update constraint for python-cinderclient to new release 9.5.0\n\nmeta: version: 9.5.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: Iac4c725c2f8c3128870d5af8242cb467b15a4576\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nChange-Id: I248bc1c2ffef3c9aa752039ef045a3ac492c9e0d\n'}]",2,910734,b60494080edc9680c39170aabd4a35b863a002b4,11,2,1,11131,,,0,"update constraint for python-cinderclient to new release 9.5.0

meta: version: 9.5.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: yes
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: Iac4c725c2f8c3128870d5af8242cb467b15a4576
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
Change-Id: I248bc1c2ffef3c9aa752039ef045a3ac492c9e0d
",git fetch https://review.opendev.org/openstack/requirements refs/changes/34/910734/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,b60494080edc9680c39170aabd4a35b863a002b4,new-release,python-cinderclient===9.5.0,python-cinderclient===9.4.0,1,1
openstack%2Fnova~909098,openstack/nova,stable/zed,I6821819450bc96e4304125ea3b76a0e462e6e33f,libvirt: stop enabling hyperv feature reenlightenment,MERGED,2024-02-16 14:37:24.000000000,2024-03-04 18:42:11.000000000,2024-03-04 18:40:06.000000000,"[{'_account_id': 1004}, {'_account_id': 4393}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-16 14:37:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a897972c233095c5d27ce3c2e61f0a428c8d795d', 'message': ""libvirt: stop enabling hyperv feature reenlightenment\n\nThe 'reenlightenment' hyperv enlightenment will cause\ninstances live-migration to fail (KVM currently doesn’t\nfully support reenlightenment notifications, see\nwww.qemu.org/docs/master/system/i386/hyperv.html),\nso don't enable it now.\n\nChange-Id: I6821819450bc96e4304125ea3b76a0e462e6e33f\nCloses-Bug: #2046549\nRelated-Bug: #2009280\n(cherry picked from commit e618e78edc6293d248a5fa2eb63b3fa636250fca)\n""}, {'number': 2, 'created': '2024-02-20 11:52:02.000000000', 'files': ['nova/virt/libvirt/driver.py', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/201bfa5bd21e3436b5882880530d5937b7dca61c', 'message': ""libvirt: stop enabling hyperv feature reenlightenment\n\nThe 'reenlightenment' hyperv enlightenment will cause\ninstances live-migration to fail (KVM currently doesn’t\nfully support reenlightenment notifications, see\nwww.qemu.org/docs/master/system/i386/hyperv.html),\nso don't enable it now.\n\nChange-Id: I6821819450bc96e4304125ea3b76a0e462e6e33f\nCloses-Bug: #2046549\nRelated-Bug: #2009280\n(cherry picked from commit e618e78edc6293d248a5fa2eb63b3fa636250fca)\n(cherry picked from commit 436e525a970bb991e147a0b4c3ce389a815252c2)\n(cherry picked from commit 47271bb705de445ca5e17ba5e3d503cade2a0959)\n""}]",12,909098,201bfa5bd21e3436b5882880530d5937b7dca61c,39,4,2,29525,,,0,"libvirt: stop enabling hyperv feature reenlightenment

The 'reenlightenment' hyperv enlightenment will cause
instances live-migration to fail (KVM currently doesn’t
fully support reenlightenment notifications, see
www.qemu.org/docs/master/system/i386/hyperv.html),
so don't enable it now.

Change-Id: I6821819450bc96e4304125ea3b76a0e462e6e33f
Closes-Bug: #2046549
Related-Bug: #2009280
(cherry picked from commit e618e78edc6293d248a5fa2eb63b3fa636250fca)
(cherry picked from commit 436e525a970bb991e147a0b4c3ce389a815252c2)
(cherry picked from commit 47271bb705de445ca5e17ba5e3d503cade2a0959)
",git fetch https://review.opendev.org/openstack/nova refs/changes/98/909098/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'nova/tests/unit/virt/libvirt/test_driver.py']",2,a897972c233095c5d27ce3c2e61f0a428c8d795d,," # NOTE(jie) reenlightenment will cause instances live-migration # failure, so don't enable it now. See bug 2046549. self.assertFalse(hv.reenlightenment)", self.assertTrue(hv.reenlightenment),3,2
openstack%2Frequirements~910731,openstack/requirements,master,Idd1ccee476c86cbcd2bc1ae4ceb197ed266d4eda,update constraint for python-barbicanclient to new release 5.7.0,MERGED,2024-03-01 13:52:50.000000000,2024-03-04 18:41:22.000000000,2024-03-04 18:40:24.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 13:52:50.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/624809bceb3b175b57e76cfef256a1c05a1de91e', 'message': 'update constraint for python-barbicanclient to new release 5.7.0\n\nmeta: version: 5.7.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: no\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: I1459d88936420173a85eba1a722c922212b9948a\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nChange-Id: Idd1ccee476c86cbcd2bc1ae4ceb197ed266d4eda\n'}]",4,910731,624809bceb3b175b57e76cfef256a1c05a1de91e,14,2,1,11131,,,0,"update constraint for python-barbicanclient to new release 5.7.0

meta: version: 5.7.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: no
meta: first: yes
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: I1459d88936420173a85eba1a722c922212b9948a
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
Change-Id: Idd1ccee476c86cbcd2bc1ae4ceb197ed266d4eda
",git fetch https://review.opendev.org/openstack/requirements refs/changes/31/910731/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,624809bceb3b175b57e76cfef256a1c05a1de91e,new-release,python-barbicanclient===5.7.0,python-barbicanclient===5.6.1,1,1
openstack%2Fpython-openstackclient~910910,openstack/python-openstackclient,stable/2023.2,I3eeca1a0296137eef777770bff4993a56e2fcc5c,Check the default role list before adding a new one,MERGED,2024-03-04 14:36:38.000000000,2024-03-04 18:41:17.000000000,2024-03-04 18:40:18.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}, {'_account_id': 27900}]","[{'number': 1, 'created': '2024-03-04 14:36:38.000000000', 'files': ['openstackclient/tests/functional/identity/v3/test_role.py'], 'web_link': 'https://opendev.org/openstack/python-openstackclient/commit/347133ade62279ec190bc99a935f8b51836b9f64', 'message': 'Check the default role list before adding a new one\n\nThe default role list now adds ""manager"" by default. This new\ndefault role was added in Keystone 24.0.0.0rc1, that includes\n[1].\n\n[1]https://review.opendev.org/c/openstack/keystone/+/822601\n\nStory: #2010923\nTask: #48787\n\nChange-Id: I3eeca1a0296137eef777770bff4993a56e2fcc5c\n(cherry picked from commit 335bfdc38fabbdfac359936cc35ff089662705fe)\n'}]",2,910910,347133ade62279ec190bc99a935f8b51836b9f64,8,3,1,27900,,,0,"Check the default role list before adding a new one

The default role list now adds ""manager"" by default. This new
default role was added in Keystone 24.0.0.0rc1, that includes
[1].

[1]https://review.opendev.org/c/openstack/keystone/+/822601

Story: #2010923
Task: #48787

Change-Id: I3eeca1a0296137eef777770bff4993a56e2fcc5c
(cherry picked from commit 335bfdc38fabbdfac359936cc35ff089662705fe)
",git fetch https://review.opendev.org/openstack/python-openstackclient refs/changes/10/910910/1 && git format-patch -1 --stdout FETCH_HEAD,['openstackclient/tests/functional/identity/v3/test_role.py'],1,347133ade62279ec190bc99a935f8b51836b9f64,story/2010923-stable/2023.2," raw_output = self.openstack('implied role list') default_roles = self.parse_listing(raw_output) self.assert_table_structure( default_roles, self.IMPLIED_ROLE_LIST_HEADERS ) current_roles = self.parse_listing(raw_output) self.assert_table_structure( current_roles, self.IMPLIED_ROLE_LIST_HEADERS ) self.assertEqual(len(default_roles) + 1, len(current_roles))"," items = self.parse_listing(raw_output) self.assert_table_structure(items, self.IMPLIED_ROLE_LIST_HEADERS) self.assertEqual(3, len(items))",11,3
openstack%2Fnova~909541,openstack/nova,stable/zed,I2ff4fdecd9dc69de283f0e52e07df1aeaf0a9048,libvirt: Stop unconditionally enabling evmcs,MERGED,2024-02-20 11:51:12.000000000,2024-03-04 18:41:13.000000000,2024-03-04 18:39:54.000000000,"[{'_account_id': 4393}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-20 11:51:12.000000000', 'files': ['nova/virt/libvirt/driver.py', 'releasenotes/notes/libvirt-enlightenments-stop-unconditionally-enabling-evmcs-993a825641c4b9f3.yaml', 'nova/tests/unit/virt/libvirt/test_driver.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/3ef339a383e7e23085a582260badb347d96d8935', 'message': 'libvirt: Stop unconditionally enabling evmcs\n\nIn I008841988547573878c4e06e82f0fa55084e51b5 we started enabling a\nbunch of libvirt enlightenments for Windows unconditionally. Turns\nout, the `evmcs` enlightenment only works on Intel hosts, and we broke\nthe ability to run Windows guests on AMD machines. Until we become\nsmarter about conditionally enabling evmcs (with something like traits\nfor host CPU features), just stop enabling it at all.\n\nChange-Id: I2ff4fdecd9dc69de283f0e52e07df1aeaf0a9048\nCloses-bug: 2009280\n(cherry picked from commit 86a35e97d286cbb6e23f8cc7bec5a05f022da0cb)\n(cherry picked from commit 0b7a59ad2812c3501332155211b18f224cd55bca)\n(cherry picked from commit 2bffc53ce8fb5239cb9cbd59f3bbd51577da0c4a)\n'}]",2,909541,3ef339a383e7e23085a582260badb347d96d8935,15,3,1,1004,,,0,"libvirt: Stop unconditionally enabling evmcs

In I008841988547573878c4e06e82f0fa55084e51b5 we started enabling a
bunch of libvirt enlightenments for Windows unconditionally. Turns
out, the `evmcs` enlightenment only works on Intel hosts, and we broke
the ability to run Windows guests on AMD machines. Until we become
smarter about conditionally enabling evmcs (with something like traits
for host CPU features), just stop enabling it at all.

Change-Id: I2ff4fdecd9dc69de283f0e52e07df1aeaf0a9048
Closes-bug: 2009280
(cherry picked from commit 86a35e97d286cbb6e23f8cc7bec5a05f022da0cb)
(cherry picked from commit 0b7a59ad2812c3501332155211b18f224cd55bca)
(cherry picked from commit 2bffc53ce8fb5239cb9cbd59f3bbd51577da0c4a)
",git fetch https://review.opendev.org/openstack/nova refs/changes/41/909541/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/virt/libvirt/driver.py', 'releasenotes/notes/libvirt-enlightenments-stop-unconditionally-enabling-evmcs-993a825641c4b9f3.yaml', 'nova/tests/unit/virt/libvirt/test_driver.py']",3,3ef339a383e7e23085a582260badb347d96d8935,," # NOTE(artom) evmcs only works on Intel hosts, so we can't enable it # unconditionally. Until we become smarter about it, just don't enable # it at all. See bug 2009280. self.assertFalse(hv.evmcs)", self.assertTrue(hv.evmcs),12,2
openstack%2Fopenstack-ansible-os_neutron~909525,openstack/openstack-ansible-os_neutron,master,Iceab27aa1fdacc8b13f7ef6974b6a9076b8b7cd9,Run neutron OVN agents as neutron user,MERGED,2024-02-20 12:34:57.000000000,2024-03-04 18:21:49.000000000,2024-03-04 18:20:38.000000000,"[{'_account_id': 22348}, {'_account_id': 25023}, {'_account_id': 31542}]","[{'number': 1, 'created': '2024-02-20 12:34:57.000000000', 'files': ['releasenotes/notes/ovsdb_manager_connection-5ea44a5fd9aa789b.yaml', 'templates/neutron_ovn_metadata_agent.ini.j2', 'vars/redhat.yml', 'vars/debian.yml', 'defaults/main.yml', 'vars/main.yml'], 'web_link': 'https://opendev.org/openstack/openstack-ansible-os_neutron/commit/601c66666f0c710fcde632c9b13ad0f4c888bccc', 'message': 'Run neutron OVN agents as neutron user\n\nAs of today we run some agents, like neutron-ovn-metadata agent as\nroot user, since it needs access to ovsdb socket, which has 750 permissions\nby default.\n\nWith that, for OVN we already use connection via host:port to the same\novsdb manager, which allows to run it as an arbitrary user.\n\nIn order to align connection methods and to run services with lower\nprivileges\nwe introduce couple of new variables that allow to create valid connection\nstrings for both OpenFlow listeners and regular connection to the manager.\n\nChange-Id: Iceab27aa1fdacc8b13f7ef6974b6a9076b8b7cd9\n'}]",1,909525,601c66666f0c710fcde632c9b13ad0f4c888bccc,10,3,1,28619,,,0,"Run neutron OVN agents as neutron user

As of today we run some agents, like neutron-ovn-metadata agent as
root user, since it needs access to ovsdb socket, which has 750 permissions
by default.

With that, for OVN we already use connection via host:port to the same
ovsdb manager, which allows to run it as an arbitrary user.

In order to align connection methods and to run services with lower
privileges
we introduce couple of new variables that allow to create valid connection
strings for both OpenFlow listeners and regular connection to the manager.

Change-Id: Iceab27aa1fdacc8b13f7ef6974b6a9076b8b7cd9
",git fetch https://review.opendev.org/openstack/openstack-ansible-os_neutron refs/changes/25/909525/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/ovsdb_manager_connection-5ea44a5fd9aa789b.yaml', 'templates/neutron_ovn_metadata_agent.ini.j2', 'vars/redhat.yml', 'vars/debian.yml', 'defaults/main.yml', 'vars/main.yml']",6,601c66666f0c710fcde632c9b13ad0f4c888bccc,,, systemd_user_name: root systemd_group_name: root,23,8
openstack%2Fpython-manilaclient~859432,openstack/python-manilaclient,master,I05413e9e8b846d725d8fe021daf5d320857aac2f,[OSC] Fix output format for osc share subnet create,MERGED,2022-09-27 12:44:41.000000000,2024-03-04 18:20:40.000000000,2024-03-04 18:19:29.000000000,"[{'_account_id': 6413}, {'_account_id': 16643}, {'_account_id': 22348}, {'_account_id': 29632}, {'_account_id': 32238}, {'_account_id': 32594}]","[{'number': 1, 'created': '2022-09-27 12:44:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/fac1b3e724cd9167475c81d7d08090782238d816', 'message': '[OSC] Formats the output of Openstack share network subnet create check\n\nThis patch fixes the format output when creating share network subnet\nwith check flag.\nCloses-bug: #1989818\n\nChange-Id: I05413e9e8b846d725d8fe021daf5d320857aac2f\n'}, {'number': 2, 'created': '2022-09-29 08:18:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/2d358c50fef27f878716c7cad3168e729cdb0b10', 'message': '[OSC] Formats the output of Openstack share network subnet create check\n\nThis patch fixes the format output when creating share network subnet\nwith check flag.\nCloses-bug: #1989818\n\nChange-Id: I05413e9e8b846d725d8fe021daf5d320857aac2f\n'}, {'number': 3, 'created': '2022-10-05 11:31:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/7020f6ff59e36bf5d349c060b56ae5e14e5ffdc5', 'message': '[OSC] Formats the output of Openstack share network subnet create check\n\nThis patch fixes the format output when creating share network subnet\nwith check flag.\nCloses-bug: #1989818\n\nChange-Id: I05413e9e8b846d725d8fe021daf5d320857aac2f\n'}, {'number': 4, 'created': '2023-03-11 10:45:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/9659f2afbfb126ce081a46eb400b7bb430355c55', 'message': '[OSC] Fix output format for osc share subnet create\n\nThe format of the osc share network subnet create command\noutput has been updated to return a list of hosts instead\nof a dictionary, as we do for other commands in the client.\nWith this change, we are enhancing the consistency of the\nclient and the readability of the output.\n\nCloses-bug: #1989818\n\nChange-Id: I05413e9e8b846d725d8fe021daf5d320857aac2f\n'}, {'number': 5, 'created': '2023-03-11 11:06:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/9c63a5c7a17f5d0d58e8103008c01a42666a37e4', 'message': '[OSC] Fix output format for osc share subnet create\n\nThe format of the osc share network subnet create command\noutput has been updated to return a list of hosts instead\nof a dictionary, as we do for other commands in the client.\nWith this change, we are enhancing the consistency of the\nclient and the readability of the output.\n\nCloses-bug: #1989818\n\nChange-Id: I05413e9e8b846d725d8fe021daf5d320857aac2f\n'}, {'number': 6, 'created': '2023-03-22 12:16:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/ad13ddd741eb5540b69b2a1cafabfc0cc21371e1', 'message': '[OSC] Fix output format for osc share subnet create\n\nThe format of the osc share network subnet create command\noutput has been updated to return a list of hosts instead\nof a dictionary, as we do for other commands in the client.\nWith this change, we are enhancing the consistency of the\nclient and the readability of the output.\n\nCloses-bug: #1989818\n\nChange-Id: I05413e9e8b846d725d8fe021daf5d320857aac2f\n'}, {'number': 7, 'created': '2023-03-26 16:03:51.000000000', 'files': ['manilaclient/tests/functional/osc/test_share_network_subnets.py', 'manilaclient/osc/v2/share_network_subnets.py', 'releasenotes/notes/bug-1989818-fix-share-network-output-format-93d997f0f4a33fab.yaml'], 'web_link': 'https://opendev.org/openstack/python-manilaclient/commit/799278e644ce3b9578f85ecae546772e4a928cec', 'message': '[OSC] Fix output format for osc share subnet create\n\nThe format of the osc share network subnet create command\noutput has been updated to return a list of hosts instead\nof a dictionary, as we do for other commands in the client.\nWith this change, we are enhancing the consistency of the\nclient and the readability of the output.\n\nCloses-bug: #1989818\n\nChange-Id: I05413e9e8b846d725d8fe021daf5d320857aac2f\n'}]",28,859432,799278e644ce3b9578f85ecae546772e4a928cec,42,6,7,35328,,,0,"[OSC] Fix output format for osc share subnet create

The format of the osc share network subnet create command
output has been updated to return a list of hosts instead
of a dictionary, as we do for other commands in the client.
With this change, we are enhancing the consistency of the
client and the readability of the output.

Closes-bug: #1989818

Change-Id: I05413e9e8b846d725d8fe021daf5d320857aac2f
",git fetch https://review.opendev.org/openstack/python-manilaclient refs/changes/32/859432/1 && git format-patch -1 --stdout FETCH_HEAD,['manilaclient/osc/v2/share_network_subnets.py'],1,fac1b3e724cd9167475c81d7d08090782238d816,bug/1989818,"from manilaclient.common import cliutils if subnet_data: if parsed_args.formater == 'table': for k,v in subnet_data.items(): if isinstance(v, dict): capabilities_list = [v] dict_values = cliutils.convert_dict_list_to_string( capabilities_list ) subnet_data[k] = dict_values",,10,0
openstack%2Fswift~819199,openstack/swift,master,Idde58fb9d986aa30fc94eda16e968aa895500174,Updating python testing as per Yoga testing runtime,ABANDONED,2021-11-24 23:43:23.000000000,2024-03-04 17:47:04.000000000,,"[{'_account_id': 8556}, {'_account_id': 22348}]","[{'number': 1, 'created': '2021-11-24 23:43:23.000000000', 'files': ['.zuul.yaml', 'setup.cfg', 'tox.ini'], 'web_link': 'https://opendev.org/openstack/swift/commit/5910ded95d37be5d38c1a94354755107c39d8baa', 'message': 'Updating python testing as per Yoga testing runtime\n\nYoga testing runtime has been updated with py38 and py39\nas voting and removed the py36 testing. Unit tests update are\nhandled by the job template change in openstack-zuul-job\n\n- https://review.opendev.org/c/openstack/openstack-zuul-jobs/+/818609\n\nthis commit makes other required changes in fucntional jobs and\nupdate the metadata in setup.cfg file.\n\n[1] https://governance.openstack.org/tc/reference/runtimes/yoga.html\n\nChange-Id: Idde58fb9d986aa30fc94eda16e968aa895500174\n'}]",2,819199,5910ded95d37be5d38c1a94354755107c39d8baa,6,2,1,8556,,,0,"Updating python testing as per Yoga testing runtime

Yoga testing runtime has been updated with py38 and py39
as voting and removed the py36 testing. Unit tests update are
handled by the job template change in openstack-zuul-job

- https://review.opendev.org/c/openstack/openstack-zuul-jobs/+/818609

this commit makes other required changes in fucntional jobs and
update the metadata in setup.cfg file.

[1] https://governance.openstack.org/tc/reference/runtimes/yoga.html

Change-Id: Idde58fb9d986aa30fc94eda16e968aa895500174
",git fetch https://review.opendev.org/openstack/swift refs/changes/99/819199/1 && git format-patch -1 --stdout FETCH_HEAD,"['.zuul.yaml', 'setup.cfg', 'tox.ini']",3,5910ded95d37be5d38c1a94354755107c39d8baa,yoga-python-testing,"envlist = py39,py27,pep8","envlist = py37,py27,pep8",14,63
openstack%2Fpuppet-openstack-integration~910862,openstack/puppet-openstack-integration,master,I9d66d6d094b9a07afc0a52196b56972b723bb7f0,Updated from Puppet OpenStack modules constraints,MERGED,2024-03-03 02:59:26.000000000,2024-03-04 16:43:01.000000000,2024-03-04 16:43:01.000000000,"[{'_account_id': 9816}, {'_account_id': 14985}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-03 02:59:26.000000000', 'files': ['Puppetfile'], 'web_link': 'https://opendev.org/openstack/puppet-openstack-integration/commit/f11a76f14731358dfcb48cabc5f2da14d94296f1', 'message': 'Updated from Puppet OpenStack modules constraints\n\nChange-Id: I9d66d6d094b9a07afc0a52196b56972b723bb7f0\n'}]",0,910862,f11a76f14731358dfcb48cabc5f2da14d94296f1,7,3,1,11131,,,0,"Updated from Puppet OpenStack modules constraints

Change-Id: I9d66d6d094b9a07afc0a52196b56972b723bb7f0
",git fetch https://review.opendev.org/openstack/puppet-openstack-integration refs/changes/62/910862/1 && git format-patch -1 --stdout FETCH_HEAD,['Puppetfile'],1,f11a76f14731358dfcb48cabc5f2da14d94296f1,openstack/puppet/constraints, :ref => 'v12.0.3', :ref => 'v12.0.2',1,1
openstack%2Fpuppet-cinder~910867,openstack/puppet-cinder,master,I3953eea75f00c44363870c318f960b7299c65e7c,Refactor resource dependencies,MERGED,2024-03-04 00:44:03.000000000,2024-03-04 16:30:43.000000000,2024-03-04 16:30:43.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 00:44:03.000000000', 'files': ['spec/classes/cinder_policy_spec.rb', 'manifests/api.pp', 'manifests/db.pp', 'manifests/deps.pp', 'manifests/coordination.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp'], 'web_link': 'https://opendev.org/openstack/puppet-cinder/commit/a5fb242e23e261c59c66c23ece81685658f8ce0f', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: I3953eea75f00c44363870c318f960b7299c65e7c\n'}]",0,910867,a5fb242e23e261c59c66c23ece81685658f8ce0f,9,3,1,9816,,,0,"Refactor resource dependencies

This refactors resource dependencies to improve the following points.

 - Avoid unnecessary dependencies across services. For example aodh
   service does not require cinder db.

 - Restart only api service when config files like paste.ini, which
   are used only be api service is changed.

Change-Id: I3953eea75f00c44363870c318f960b7299c65e7c
",git fetch https://review.opendev.org/openstack/puppet-cinder refs/changes/67/910867/1 && git format-patch -1 --stdout FETCH_HEAD,"['spec/classes/cinder_policy_spec.rb', 'manifests/api.pp', 'manifests/db.pp', 'manifests/deps.pp', 'manifests/coordination.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp']",7,a5fb242e23e261c59c66c23ece81685658f8ce0f,deps-refactor, # policy config should occur in the config block also. Anchor['cinder::config::begin'] -> Openstacklib::Policy[$policy_path] -> Anchor['cinder::config::end'] ,,26,20
openstack%2Fpuppet-manila~910869,openstack/puppet-manila,master,I33f0123caa057169be0e7eee6c17d1d4d387f87f,Refactor resource dependencies,MERGED,2024-03-04 00:53:24.000000000,2024-03-04 16:27:19.000000000,2024-03-04 16:27:19.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 00:53:24.000000000', 'files': ['manifests/api.pp', 'manifests/db.pp', 'manifests/deps.pp', 'manifests/coordination.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp'], 'web_link': 'https://opendev.org/openstack/puppet-manila/commit/6dc78a00e3f12537d959dcbc17d8bbafb904e9f7', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: I33f0123caa057169be0e7eee6c17d1d4d387f87f\n'}]",0,910869,6dc78a00e3f12537d959dcbc17d8bbafb904e9f7,7,3,1,9816,,,0,"Refactor resource dependencies

This refactors resource dependencies to improve the following points.

 - Avoid unnecessary dependencies across services. For example aodh
   service does not require cinder db.

 - Restart only api service when config files like paste.ini, which
   are used only be api service is changed.

Change-Id: I33f0123caa057169be0e7eee6c17d1d4d387f87f
",git fetch https://review.opendev.org/openstack/puppet-manila refs/changes/69/910869/1 && git format-patch -1 --stdout FETCH_HEAD,"['manifests/api.pp', 'manifests/db.pp', 'manifests/deps.pp', 'manifests/coordination.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp']",6,6dc78a00e3f12537d959dcbc17d8bbafb904e9f7,deps-refactor, # policy config should occur in the config block also. Anchor['manila::config::begin'] -> Openstacklib::Policy[$policy_path] -> Anchor['manila::config::end'] ,,29,20
openstack%2Fpuppet-keystone~910652,openstack/puppet-keystone,master,Ic4f43215ea90c6b71fe4225e2dfa6a6a3abf6869,Refactor resource dependencies,MERGED,2024-02-29 17:36:15.000000000,2024-03-04 16:27:14.000000000,2024-03-04 16:27:14.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-02-29 17:36:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/puppet-keystone/commit/8b0ea24a08ca2b70a969f0f2d6140a1defd5d317', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart keystone on change in uwsgi only when a standalone service\n   is used. uwsgi config is not used when keystone is run by apache.\n\nChange-Id: Ic4f43215ea90c6b71fe4225e2dfa6a6a3abf6869\n'}, {'number': 2, 'created': '2024-03-01 01:29:24.000000000', 'files': ['spec/classes/keystone_policy_spec.rb', 'manifests/db.pp', 'manifests/init.pp', 'manifests/cache.pp', 'manifests/deps.pp', 'manifests/policy.pp'], 'web_link': 'https://opendev.org/openstack/puppet-keystone/commit/9fb48f7526397cb038a01e76c7a99a33b5885478', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart keystone on change in uwsgi only when a standalone service\n   is used. uwsgi config is not used when keystone is run by apache.\n\nChange-Id: Ic4f43215ea90c6b71fe4225e2dfa6a6a3abf6869\n'}]",1,910652,9fb48f7526397cb038a01e76c7a99a33b5885478,14,4,2,9816,,,0,"Refactor resource dependencies

This refactors resource dependencies to improve the following points.

 - Avoid unnecessary dependencies across services. For example aodh
   service does not require cinder db.

 - Restart keystone on change in uwsgi only when a standalone service
   is used. uwsgi config is not used when keystone is run by apache.

Change-Id: Ic4f43215ea90c6b71fe4225e2dfa6a6a3abf6869
",git fetch https://review.opendev.org/openstack/puppet-keystone refs/changes/52/910652/1 && git format-patch -1 --stdout FETCH_HEAD,"['spec/classes/keystone_policy_spec.rb', 'manifests/db.pp', 'manifests/init.pp', 'manifests/cache.pp', 'manifests/deps.pp', 'manifests/policy.pp']",6,8b0ea24a08ca2b70a969f0f2d6140a1defd5d317,deps-refactor," # policy config should occur in the config block also. Anchor['keystone::config::begin'] -> Openstacklib::Policy[$policy_path], -> Anchor['keystone::config::end'] "," tag => 'keystone',",14,17
openstack%2Fpuppet-octavia~910870,openstack/puppet-octavia,master,Ibb4ec743e772716153eefe07ac36b888c0fb2b84,Refactor resource dependencies,MERGED,2024-03-04 01:06:48.000000000,2024-03-04 16:14:37.000000000,2024-03-04 16:14:37.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 01:06:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/puppet-octavia/commit/c23ad97125ff7b8bf2990015143f5e48c4340e73', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: Ibb4ec743e772716153eefe07ac36b888c0fb2b84\n'}, {'number': 2, 'created': '2024-03-04 03:14:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/puppet-octavia/commit/13cea69b3cc26151dbd775d2fb386ef49c4df4c3', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: Ibb4ec743e772716153eefe07ac36b888c0fb2b84\n'}, {'number': 3, 'created': '2024-03-04 07:33:59.000000000', 'files': ['manifests/api.pp', 'manifests/db.pp', 'manifests/deps.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp'], 'web_link': 'https://opendev.org/openstack/puppet-octavia/commit/9f4d1d61327bf87963edf3c637c65e1920fa9421', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: Ibb4ec743e772716153eefe07ac36b888c0fb2b84\n'}]",0,910870,9f4d1d61327bf87963edf3c637c65e1920fa9421,11,3,3,9816,,,0,"Refactor resource dependencies

This refactors resource dependencies to improve the following points.

 - Avoid unnecessary dependencies across services. For example aodh
   service does not require cinder db.

 - Restart only api service when config files like paste.ini, which
   are used only be api service is changed.

Change-Id: Ibb4ec743e772716153eefe07ac36b888c0fb2b84
",git fetch https://review.opendev.org/openstack/puppet-octavia refs/changes/70/910870/1 && git format-patch -1 --stdout FETCH_HEAD,"['manifests/api.pp', 'manifests/db.pp', 'manifests/deps.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp']",5,c23ad97125ff7b8bf2990015143f5e48c4340e73,deps-refactor, # policy config should occur in the config block also. Anchor['octavia::config::begin'] -> Openstacklib::Policy[$policy_path] -> Anchor['octavia::config::end'] ,,21,11
openstack%2Fcharm-nova-cloud-controller~909027,openstack/charm-nova-cloud-controller,stable/ussuri,Ic9e4657453d8f53d1ecbee23475c7b11549ebc14,Ensure mgmt network hostname and fqdn in known_hosts,MERGED,2024-02-14 17:09:28.000000000,2024-03-04 16:06:35.000000000,2024-03-04 16:06:35.000000000,"[{'_account_id': 1131}, {'_account_id': 19298}, {'_account_id': 20648}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-14 17:09:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/b566200228bb8874ced7621b5d407482ea24fbc3', 'message': 'Ensure mgmt network hostname and fqdn in known_hosts\n\nThe cloud-compute relation uses the private-address setting to\nreflect the hostname/address to be used for vm migrations. This\ncan be the default management network or an alternate one. When\nthis charm populates ssh known_hosts entries for compute hosts\nit needs to ensure hostname, address and fqdn for the mgmt network\nis included so that Nova resize operations can work if they use\nthe hostname from the db (which will always be from the mgmt\nnetwork).\n\nChange-Id: Ic9e4657453d8f53d1ecbee23475c7b11549ebc14\nCloses-Bug: #1969971\n(cherry picked from commit 05b081bf5ffa24045a1fef3b18d2e28fec52d604)\n(cherry picked from commit b6809e75e181a49c2209aa2c1be9e4d11442cbb3)\n(cherry picked from commit 10e52b80ab3eed3b5dcac09c6403b1cc56968b6a)\n(cherry picked from commit a66777798425f613ad38ba75fe3bae28c67e821d)\n(cherry picked from commit e47264e0585b485f4f065bca7fae18522175bfd0)\n(cherry picked from commit c6653fdd94ad259fb8267dd80bf478be548db1f9)\n(cherry picked from commit 06f8d634970cef0acda660ef2310b737f4625e7d)\n(cherry picked from commit a6c460caa0736ca2e8fe839f75fbe31769894897)\n'}, {'number': 2, 'created': '2024-02-23 15:37:32.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/dadbc0a191e30ddc8348e2bee0a1e9e2af074a2e', 'message': 'Ensure mgmt network hostname and fqdn in known_hosts\n\nThe cloud-compute relation uses the private-address setting to\nreflect the hostname/address to be used for vm migrations. This\ncan be the default management network or an alternate one. When\nthis charm populates ssh known_hosts entries for compute hosts\nit needs to ensure hostname, address and fqdn for the mgmt network\nis included so that Nova resize operations can work if they use\nthe hostname from the db (which will always be from the mgmt\nnetwork).\n\nChange-Id: Ic9e4657453d8f53d1ecbee23475c7b11549ebc14\nCloses-Bug: #1969971\n'}, {'number': 3, 'created': '2024-03-04 11:49:23.000000000', 'files': ['unit_tests/test_nova_cc_hooks.py', 'hooks/nova_cc_utils.py', 'hooks/nova_cc_hooks.py'], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/f2e57d0681c9ea34da2518834a6d5a198996ce6b', 'message': 'Ensure mgmt network hostname and fqdn in known_hosts\n\nThe cloud-compute relation uses the private-address setting to\nreflect the hostname/address to be used for vm migrations. This\ncan be the default management network or an alternate one. When\nthis charm populates ssh known_hosts entries for compute hosts\nit needs to ensure hostname, address and fqdn for the mgmt network\nis included so that Nova resize operations can work if they use\nthe hostname from the db (which will always be from the mgmt\nnetwork).\n\nChange-Id: Ic9e4657453d8f53d1ecbee23475c7b11549ebc14\nCloses-Bug: #1969971\n'}]",5,909027,f2e57d0681c9ea34da2518834a6d5a198996ce6b,23,4,3,6737,,,0,"Ensure mgmt network hostname and fqdn in known_hosts

The cloud-compute relation uses the private-address setting to
reflect the hostname/address to be used for vm migrations. This
can be the default management network or an alternate one. When
this charm populates ssh known_hosts entries for compute hosts
it needs to ensure hostname, address and fqdn for the mgmt network
is included so that Nova resize operations can work if they use
the hostname from the db (which will always be from the mgmt
network).

Change-Id: Ic9e4657453d8f53d1ecbee23475c7b11549ebc14
Closes-Bug: #1969971
",git fetch https://review.opendev.org/openstack/charm-nova-cloud-controller refs/changes/27/909027/1 && git format-patch -1 --stdout FETCH_HEAD,"['unit_tests/test_nova_cc_hooks.py', 'hooks/nova_cc_utils.py', 'hooks/nova_cc_hooks.py']",3,b566200228bb8874ced7621b5d407482ea24fbc3,bug/1969971-ussuri," resolved_hosts = [] resolved_hosts = ncc_utils.resolve_hosts_for(private_address, hostname) # Ensure management address and fqdn always in known_hosts (see LP # 1969971) ingress_address = hookenv.ingress_address(rid=rid, unit=unit) if ingress_address: if ingress_address not in resolved_hosts: resolved_hosts.append(ingress_address) ingress_host = ncc_utils.resolve_hosts_for(ingress_address, None) if ingress_host: for host in ingress_host: if host not in resolved_hosts: resolved_hosts.append(host) # sort mainly for unit tests resolved_hosts = sorted(resolved_hosts) if not resolved_hosts:"," resolved_hosts = None resolved_hosts = ncc_utils.resolve_hosts_for(private_address, hostname) if resolved_hosts is None:",45,10
openstack%2Fansible-role-python_venv_build~910477,openstack/ansible-role-python_venv_build,master,I0c14510eb625d74a654a6398387ab74c4355a4e8,Workaround ansible unsafe text templating bug,MERGED,2024-02-28 08:53:11.000000000,2024-03-04 16:04:37.000000000,2024-03-04 16:03:33.000000000,"[{'_account_id': 22348}, {'_account_id': 28619}, {'_account_id': 31542}]","[{'number': 1, 'created': '2024-02-28 08:53:11.000000000', 'files': ['tasks/python_venv_wheel_build.yml', 'tasks/python_venv_install.yml'], 'web_link': 'https://opendev.org/openstack/ansible-role-python_venv_build/commit/d80a61f81089338e5dc9a2cfd98ee3d322014c3a', 'message': ""Workaround ansible unsafe text templating bug\n\nSee https://github.com/ansible/ansible/issues/82598\n\nSetting the 'use' parameter to something other than 'auto'\nshould cause a different code path to be use in the package\naction plugin which could avoid the templating unsafe text\ninside the plugin.\n\nChange-Id: I0c14510eb625d74a654a6398387ab74c4355a4e8\n""}]",2,910477,d80a61f81089338e5dc9a2cfd98ee3d322014c3a,12,3,1,25023,,,0,"Workaround ansible unsafe text templating bug

See https://github.com/ansible/ansible/issues/82598

Setting the 'use' parameter to something other than 'auto'
should cause a different code path to be use in the package
action plugin which could avoid the templating unsafe text
inside the plugin.

Change-Id: I0c14510eb625d74a654a6398387ab74c4355a4e8
",git fetch https://review.opendev.org/openstack/ansible-role-python_venv_build refs/changes/77/910477/1 && git format-patch -1 --stdout FETCH_HEAD,"['tasks/python_venv_wheel_build.yml', 'tasks/python_venv_install.yml']",2,d80a61f81089338e5dc9a2cfd98ee3d322014c3a,,"# NOTE(jrosser) remove the use: parameter when https://github.com/ansible/ansible/issues/82598 is fixed use: ""{{ ansible_facts['pkg_mgr'] }}""",,4,0
openstack%2Fpbr~910961,openstack/pbr,master,I9c4b4f854188fe885ac1030619ada5feaf3e2536,Add more train-eol overrides for python2 tempest-full,ABANDONED,2024-03-04 15:56:30.000000000,2024-03-04 16:01:46.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-04 15:56:30.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/pbr/commit/a20fe5f4fabd1cf237f4a4bc441da741c2299675', 'message': 'Add more train-eol overrides for python2 tempest-full\n\nThe train EOL has largely completed so we need to add more train-eol\ncheckout overrides to the tempest-full job.\n\nThis job is primarily used to ensure PBR maintains compatibility with\npython2 projects. Now that swift is the main thing with python2\ncompatibility we might consider replacing this job with a swift install\nand functional test instead.\n\nChange-Id: I9c4b4f854188fe885ac1030619ada5feaf3e2536\n'}]",2,910961,a20fe5f4fabd1cf237f4a4bc441da741c2299675,3,1,1,4146,,,0,"Add more train-eol overrides for python2 tempest-full

The train EOL has largely completed so we need to add more train-eol
checkout overrides to the tempest-full job.

This job is primarily used to ensure PBR maintains compatibility with
python2 projects. Now that swift is the main thing with python2
compatibility we might consider replacing this job with a swift install
and functional test instead.

Change-Id: I9c4b4f854188fe885ac1030619ada5feaf3e2536
",git fetch https://review.opendev.org/openstack/pbr refs/changes/61/910961/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,a20fe5f4fabd1cf237f4a4bc441da741c2299675,more-train-overrides, # train. At this point the branch is largely gone in favor of # the eol tag. required-projects: - name: opendev.org/openstack/cinder override-checkout: train-eol - name: opendev.org/openstack/devstack override-checkout: train-eol - name: opendev.org/openstack/glance override-checkout: train-eol - name: opendev.org/openstack/keystone - name: opendev.org/openstack/placement override-checkout: train-eol - name: opendev.org/openstack/requirements override-checkout: train-eol - name: opendev.org/openstack/swift, # train. required-projects: - name: opendev.org/openstack/placement - name: opendev.org/openstack/glance,14,3
openstack%2Fpuppet-heat~910686,openstack/puppet-heat,master,I582474abb94fc14c477ae352318b46b58882fb35,cache: Support options for SASL mechanism in memcached,MERGED,2024-03-01 01:50:35.000000000,2024-03-04 15:32:47.000000000,2024-03-04 15:31:45.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 01:50:35.000000000', 'files': ['spec/classes/heat_cache_spec.rb', 'releasenotes/notes/cache-memcache-sasl-fe1b7183e96ec070.yaml', 'manifests/cache.pp'], 'web_link': 'https://opendev.org/openstack/puppet-heat/commit/88a97f1646f737a91f5ad186c9907c511c7e65b2', 'message': 'cache: Support options for SASL mechanism in memcached\n\nDepends-on: https://review.opendev.org/910122\nChange-Id: I582474abb94fc14c477ae352318b46b58882fb35\n'}]",1,910686,88a97f1646f737a91f5ad186c9907c511c7e65b2,12,3,1,9816,,,0,"cache: Support options for SASL mechanism in memcached

Depends-on: https://review.opendev.org/910122
Change-Id: I582474abb94fc14c477ae352318b46b58882fb35
",git fetch https://review.opendev.org/openstack/puppet-heat refs/changes/86/910686/1 && git format-patch -1 --stdout FETCH_HEAD,"['spec/classes/heat_cache_spec.rb', 'releasenotes/notes/cache-memcache-sasl-fe1b7183e96ec070.yaml', 'manifests/cache.pp']",3,88a97f1646f737a91f5ad186c9907c511c7e65b2,memcache-sasl,"# [*memcache_sasl_enabled*] # (Optional) Whether SASL is enabled in memcached # Defaults to $facts['os_service_default'] # # [*memcache_username*] # (Optional) The user name for the memcached with SASL enabled # Defaults to $facts['os_service_default'] # # [*memcache_password*] # (Optional) The password for the memcached with SASL enabled # Defaults to $facts['os_service_default']# [*manage_backend_package*] # (Optional) Whether to install the backend package for the cache. # Defaults to true # $memcache_sasl_enabled = $facts['os_service_default'], $memcache_username = $facts['os_service_default'], $memcache_password = $facts['os_service_default'], Boolean $manage_backend_package = true, memcache_sasl_enabled => $memcache_sasl_enabled, memcache_username => $memcache_username, memcache_password => $memcache_password, manage_backend_package => $manage_backend_package,","# [*manage_backend_package*] # (Optional) Whether to install the backend package for the cache. # Defaults to true $manage_backend_package = true, manage_backend_package => $manage_backend_package,",37,5
openstack%2Frequirements~910881,openstack/requirements,master,Id2b4746b783b30251204f318c75f7ee5e620b284,update constraint for reno to new release 4.1.0,MERGED,2024-03-04 07:43:20.000000000,2024-03-04 15:27:51.000000000,2024-03-04 15:26:55.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 07:43:20.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/fd3aba6f12edaabc8400cb962652e528cd14bc42', 'message': 'update constraint for reno to new release 4.1.0\n\nmeta: version: 4.1.0\nmeta: diff-start: -\nmeta: series: independent\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: no\nmeta: release:Author: Dr. Jens Harbott <harbott@osism.tech>\nmeta: release:Commit: Dr. Jens Harbott <harbott@osism.tech>\nmeta: release:Change-Id: I8c6cf16bea926da5c76739523e1001ef8e848730\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Workflow+1: Dr. Jens Harbott <frickler@offenerstapel.de>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nChange-Id: Id2b4746b783b30251204f318c75f7ee5e620b284\n'}]",1,910881,fd3aba6f12edaabc8400cb962652e528cd14bc42,11,2,1,11131,,,0,"update constraint for reno to new release 4.1.0

meta: version: 4.1.0
meta: diff-start: -
meta: series: independent
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: no
meta: release:Author: Dr. Jens Harbott <harbott@osism.tech>
meta: release:Commit: Dr. Jens Harbott <harbott@osism.tech>
meta: release:Change-Id: I8c6cf16bea926da5c76739523e1001ef8e848730
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Workflow+1: Dr. Jens Harbott <frickler@offenerstapel.de>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
Change-Id: Id2b4746b783b30251204f318c75f7ee5e620b284
",git fetch https://review.opendev.org/openstack/requirements refs/changes/81/910881/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,fd3aba6f12edaabc8400cb962652e528cd14bc42,new-release,reno===4.1.0,reno===4.0.0,1,1
openstack%2Fcloudkitty~910336,openstack/cloudkitty,master,Ifcad28239b6907b8ca396d348cbfa54185355f68,Replace usage of LegacyEngineFacade,MERGED,2024-02-27 12:41:15.000000000,2024-03-04 15:03:44.000000000,2024-03-04 15:02:42.000000000,"[{'_account_id': 15197}, {'_account_id': 22348}, {'_account_id': 25277}, {'_account_id': 28356}]","[{'number': 1, 'created': '2024-02-27 12:41:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/6cf4286c5c4824a08e0e3bd4f942bf8e46715a72', 'message': 'WIP SQLAlchemy 2.0 support\n\nWIP notes:\nget_session replaced, unit tests pending\nget_engine replaces, unit tests pending\n\nChange-Id: Ifcad28239b6907b8ca396d348cbfa54185355f68\n'}, {'number': 2, 'created': '2024-02-27 12:43:36.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/48d1c52f5f03de9d193d13dc6324f85d1036e31b', 'message': 'WIP SQLAlchemy 2.0 support\n\nWIP notes:\nget_session replaced, unit tests pending\nget_engine replaces, unit tests pending\n\nChange-Id: Ifcad28239b6907b8ca396d348cbfa54185355f68\n'}, {'number': 3, 'created': '2024-02-27 13:55:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/82b5c5ce92de046a73d023ae34ff16ba39f5ce82', 'message': 'WIP SQLAlchemy 2.0 support\n\nWIP notes:\nget_session replaced, unit tests pending\nget_engine replaces, unit tests pending\n\nChange-Id: Ifcad28239b6907b8ca396d348cbfa54185355f68\n'}, {'number': 4, 'created': '2024-02-27 14:26:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/5a94bb46705d093a9f1d27fc32246fe18257e2ac', 'message': 'WIP SQLAlchemy 2.0 support\n\nWIP notes:\nget_session replaced, unit tests pending\nget_engine replaces, unit tests pending\n\nChange-Id: Ifcad28239b6907b8ca396d348cbfa54185355f68\n'}, {'number': 5, 'created': '2024-02-27 14:57:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/cf3d43d5848f842b699b12ce74308bcc7a55e6a2', 'message': 'WIP SQLAlchemy 2.0 support\n\nWIP notes:\nNeed to look again at these unit tests, are the mock changes sufficient?\n\nChange-Id: Ifcad28239b6907b8ca396d348cbfa54185355f68\n'}, {'number': 6, 'created': '2024-02-28 11:34:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/c614ddf62101447d19bd080379c7dcb46d4b05a1', 'message': '[WIP] Replace usage of LegacyEngineFacade\n\nWIP notes:\nNeed to look again at these unit tests, are the mock changes sufficient?\n\nChange-Id: Ifcad28239b6907b8ca396d348cbfa54185355f68\n'}, {'number': 7, 'created': '2024-02-28 14:27:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/97731c0a6f75e81a85b1215ad6ee21082d4f976c', 'message': 'Replace usage of LegacyEngineFacade\n\nSwitch to using oslo_db.sqlalchemy.enginefacade instead, as this is\nrequired for SQLAlchemy 2.x support.\n\nChange-Id: Ifcad28239b6907b8ca396d348cbfa54185355f68\n'}, {'number': 8, 'created': '2024-02-28 14:59:42.000000000', 'files': ['cloudkitty/rating/hash/db/sqlalchemy/alembic/models/f8c799db4aa0_fix_unnamed_constraints.py', 'cloudkitty/rating/hash/db/sqlalchemy/api.py', 'cloudkitty/rating/hash/db/sqlalchemy/models.py', 'cloudkitty/rating/pyscripts/db/sqlalchemy/api.py', 'cloudkitty/rating/pyscripts/db/sqlalchemy/models.py', 'cloudkitty/storage/v1/sqlalchemy/__init__.py', 'cloudkitty/tests/gabbi/fixtures.py', 'cloudkitty/storage_state/__init__.py', 'cloudkitty/common/db/alembic/env.py', 'cloudkitty/storage/v1/hybrid/__init__.py', 'cloudkitty/db/__init__.py', 'cloudkitty/tests/__init__.py', 'cloudkitty/tests/test_storage_state.py', 'cloudkitty/db/sqlalchemy/api.py'], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/f2c103535e554c84fbc6f14aefee45ba84f23ca8', 'message': 'Replace usage of LegacyEngineFacade\n\nSwitch to using oslo_db.sqlalchemy.enginefacade instead, as this is\nrequired for SQLAlchemy 2.x support.\n\nChange-Id: Ifcad28239b6907b8ca396d348cbfa54185355f68\n'}]",77,910336,f2c103535e554c84fbc6f14aefee45ba84f23ca8,28,4,8,35263,,,0,"Replace usage of LegacyEngineFacade

Switch to using oslo_db.sqlalchemy.enginefacade instead, as this is
required for SQLAlchemy 2.x support.

Change-Id: Ifcad28239b6907b8ca396d348cbfa54185355f68
",git fetch https://review.opendev.org/openstack/cloudkitty refs/changes/36/910336/1 && git format-patch -1 --stdout FETCH_HEAD,"['cloudkitty/rating/hash/db/sqlalchemy/alembic/models/f8c799db4aa0_fix_unnamed_constraints.py', 'cloudkitty/rating/hash/db/sqlalchemy/api.py', 'cloudkitty/rating/hash/db/sqlalchemy/models.py', 'cloudkitty/rating/pyscripts/db/sqlalchemy/api.py', 'cloudkitty/rating/pyscripts/db/sqlalchemy/models.py', 'cloudkitty/storage/v1/sqlalchemy/__init__.py', 'cloudkitty/tests/gabbi/fixtures.py', 'cloudkitty/storage_state/__init__.py', 'cloudkitty/common/db/alembic/env.py', 'cloudkitty/storage/v1/hybrid/__init__.py', 'requirements.txt', 'cloudkitty/db/__init__.py', 'cloudkitty/db/sqlalchemy/api.py', 'tox.ini', 'upper.txt']",15,6cf4286c5c4824a08e0e3bd4f942bf8e46715a72,sqlalchemy-20,voluptuous===0.14.2 chardet===5.2.0 enum-compat===0.0.3 rsa===4.9 restructuredtext-lint===1.4.0 netmiko===4.1.2 sshtunnel===0.4.0 PasteDeploy===3.1.0 typing===3.7.4.3 python-saharaclient===4.2.0 Routes===2.5.1 rtslib-fb===2.1.76 oslo.limit===2.4.0 tzdata===2024.1 smmap===5.0.1 confget===5.1.2 XStatic-Angular-Bootstrap===2.5.0.0 WebOb===1.8.7 sphinxcontrib-actdiag===3.0.0 pecan===1.5.1 os-api-ref===3.0.0 python-ldap===3.4.4 oslo.concurrency===5.3.0 websocket-client===1.7.0 osprofiler===4.1.0 os-resource-classes===1.1.0 tabulate===0.9.0 python-ironic-inspector-client===5.0.0 lxml===5.1.0 vintage===0.4.1 rst2txt===1.1.0 setproctitle===1.3.3 pytest===8.0.1 python-slugify===8.0.4 cursive===0.2.3 oslo.service===3.4.0 django-appconf===1.0.6 ntc_templates===4.3.0 sphinxcontrib-nwdiag===2.0.0 rbd-iscsi-client===0.1.8 requests-aws===0.1.8 alabaster===0.7.13;python_version=='3.8' alabaster===0.7.16;python_version>='3.9' pbr===6.0.0 munch===4.0.0 waiting===1.4.1 attrs===23.2.0 microversion-parse===1.0.1 jwcrypto===1.5.4 Pint===0.21.1;python_version=='3.8' Pint===0.23;python_version>='3.9' oslo.i18n===6.3.0 jsonpath-rw-ext===1.2.2 python-mistralclient===5.1.0 oslo.context===5.4.0 python-senlinclient===3.1.0 rcssmin===1.1.1 pycadf===3.1.1 grpcio===1.60.1 pysendfile===2.0.1 sniffio===1.3.0 fixtures===4.1.0 neutron-lib===3.10.0 XStatic-FileSaver===1.3.2.0 oslo.metrics===0.8.0 storage-interfaces===1.0.5 persist-queue===0.8.1 pystache===0.6.5 XStatic-Font-Awesome===4.7.0.0 nose===1.3.7 nosehtmloutput===0.0.7 waitress===3.0.0 os-refresh-config===13.2.0 pysnmp===4.4.12 Mako===1.3.2 pyScss===1.4.0 sphinxcontrib-htmlhelp===2.0.1;python_version=='3.8' sphinxcontrib-htmlhelp===2.0.5;python_version>='3.9' XStatic-jQuery===3.5.1.1 ddt===1.7.1 XStatic-Graphlib===2.1.7.0 pyserial===3.5 moto===5.0.1 infi.dtypes.wwn===0.1.1 python-freezerclient===5.2.0 python-vitrageclient===4.8.0 py-pure-client===1.47.0 nosexcover===1.0.11 krest===1.3.6 psycopg2===2.9.9 networkx===3.1;python_version=='3.8' networkx===3.2.1;python_version>='3.9' XStatic-Angular===1.8.2.2 pyngus===2.3.1 zuul-sphinx===0.7.0 Tempita===0.5.2 ply===3.11 google-api-core===2.17.1 requests-toolbelt===1.0.0 simplejson===3.19.2 types-paramiko===3.4.0.20240205 immutables===0.20 python-swiftclient===4.4.0 pyOpenSSL===24.0.0 monasca-common===3.8.0 zeroconf===0.131.0 scipy===1.10.1;python_version=='3.8' scipy===1.12.0;python_version>='3.9' opentelemetry-exporter-otlp===1.22.0 python-gnupg===0.5.2 mypy-extensions===1.0.0 rsd-lib===1.2.0 XStatic-Jasmine===2.4.1.2 googleapis-common-protos===1.62.0 python-glanceclient===4.4.0 prometheus_client===0.20.0 jaraco.classes===3.3.1 pyinotify===0.9.6 debtcollector===3.0.0 requests-unixsocket===0.3.0 responses===0.25.0 croniter===2.0.1 horizon===23.4.0 octavia-lib===3.4.0 python-watcherclient===4.2.0 MarkupSafe===2.1.5 types-python-dateutil===2.8.19.20240106 pypowervm===1.1.27 ruamel.yaml.clib===0.2.8 doc8===1.1.1 pymongo===4.6.1 python-cloudkittyclient===4.8.0 soupsieve===2.5 sqlparse===0.4.4 oslotest===4.5.0 jsonpointer===2.4 defusedxml===0.7.1 opentelemetry-sdk===1.22.0 netaddr===0.10.1 pyghmi===1.5.67 sphinxcontrib-blockdiag===3.0.0 thrift===0.16.0 gnocchiclient===7.0.8 backoff===2.2.1 wcwidth===0.2.13 sphinxcontrib.datatemplates===0.11.0 jsonpath-rw===1.4.0 prettytable===3.9.0 vine===5.1.0 taskflow===5.5.0 traceback2===1.4.0 arrow===1.3.0 semantic-version===2.10.0 async-timeout===4.0.3;python_version=='3.10' async-timeout===4.0.3;python_version=='3.8' async-timeout===4.0.3;python_version=='3.9' virtualbmc===3.1.0 SQLAlchemy>=2.0.0 pyroute2===0.7.12 google-auth===2.28.0 pyasn1-lextudio===1.1.2 kazoo===2.10.0 pyspnego===0.10.2 XStatic-roboto-fontface===0.5.0.0 pyudev===0.24.1 eventlet===0.35.1 openstack-doc-tools===3.3.1 oslo.messaging===14.6.0 jira===3.6.0 extras===1.0.0 PyJWT===2.8.0 typing_extensions===4.9.0 XStatic-lodash===4.16.4.2 zVMCloudConnector===1.6.3 paramiko===3.4.0 ifaddr===0.2.0 reno===4.0.0 ncclient===0.6.15 imagesize===1.4.1 pydot===2.0.0 urllib3===1.26.18 graphviz===0.20.1 PyKMIP===0.10.0 python-observabilityclient===0.1.1 whereto===0.4.0 pywbem===1.6.2 python-subunit===1.4.4 tornado===6.4 pycparser===2.21 mock===5.1.0 PyYAML===6.0.1 beautifulsoup4===4.12.3 ovs===3.1.2 cryptography===42.0.4 httpcore===1.0.3 URLObject===2.4.3 nocasedict===2.0.1 psycopg2-binary===2.9.9 openstack-release-test===5.0.0 pylxd===2.3.2 pycryptodomex===3.20.0 requests-mock===1.11.0 os-apply-config===13.2.0 oslosphinx===4.18.0 gunicorn===21.2.0 storpool===7.3.0 textfsm===1.1.2 python-3parclient===4.2.13 unittest2===1.1.0 django-compressor===4.4 libvirt-python===10.0.0 python-zunclient===5.0.0 tzlocal===5.2 sphinxcontrib-jsmath===1.0.1 python-novaclient===18.4.0 pact===1.12.0 bcrypt===4.1.2 exceptiongroup===1.2.0;python_version=='3.10' exceptiongroup===1.2.0;python_version=='3.8' exceptiongroup===1.2.0;python_version=='3.9' os-client-config===2.1.0 XStatic-Angular-Gettext===2.4.1.0 Deprecated===1.2.14 h11===0.14.0 Pygments===2.17.2 XStatic-Hogan===2.0.0.3 XStatic-objectpath===1.2.1.0 python-manilaclient===4.7.0 sphinxcontrib-serializinghtml===1.1.5;python_version=='3.8' sphinxcontrib-serializinghtml===1.1.10;python_version>='3.9' requests===2.31.0 snowballstemmer===2.2.0 Jinja2===3.1.3 XStatic-Bootstrap-SCSS===3.4.1.0 pyzabbix===1.3.1 ptyprocess===0.7.0 threadloop===1.0.2 amqp===5.2.0 ruamel.yaml===0.18.6 websockify===0.11.0 gssapi===1.8.3 XStatic-JQuery.quicksearch===2.0.3.2 mpmath===1.3.0 python-binary-memcached===0.31.2 django-debreach===2.1.0 sphinx-feature-classification===1.1.0 django-pymemcache===1.0.0 XStatic-JQuery-Migrate===3.3.2.1 pytest-html===4.1.1 appdirs===1.4.4 google-auth-httplib2===0.2.0 pkgutil_resolve_name===1.3.10;python_version=='3.8' daiquiri===3.2.5.1 influxdb===5.3.1 funcparserlib===1.0.1 passlib===1.7.4 dib-utils===0.0.11 cliff===4.6.0 os-brick===6.7.0 ansible-runner===2.3.5 scp===0.14.5 python-zaqarclient===2.6.0 lockfile===0.12.2 ldappool===3.0.0 termcolor===2.4.0 joblib===1.3.2 google-api-python-client===2.118.0 castellan===4.3.0 oslo.versionedobjects===3.3.0 enmerkar===0.7.1 webcolors===1.13 aodhclient===3.4.0 autobahn===23.1.2;python_version=='3.8' autobahn===23.6.2;python_version>='3.9' SQLAlchemy-Utils===0.41.1 retryz===0.1.9 pluggy===1.4.0 coverage===7.4.1 freezegun===1.4.0 toml===0.10.2 pycdlib===1.14.0 pyperclip===1.8.2 cassandra-driver===3.29.0 XStatic-Angular-Schema-Form===0.8.13.0 opentelemetry-exporter-otlp-proto-http===1.22.0 gabbi===2.4.0 nwdiag===3.0.0 XStatic-bootswatch===3.3.7.0 pytest-xdist===3.5.0 XStatic-JS-Yaml===3.8.1.0 XStatic-term.js===0.0.7.0 oslo.log===5.5.0 nodeenv===1.8.0 gossip===2.4.0 suds-community===1.1.2 importlib-metadata===6.2.1;python_version=='3.8' importlib-metadata===6.2.1;python_version=='3.9' importlib-metadata===6.11.0;python_version>='3.10' oslo.middleware===6.1.0 XStatic-mdi===1.6.50.2 django-pyscss===2.0.3 uritemplate===4.1.1 docutils===0.20.1 threadpoolctl===3.3.0 os-ken===2.8.1 ujson===5.9.0 selenium===3.141.0 mistral-lib===2.10.0 dogtag-pki===11.2.1 XStatic-Angular-UUID===0.0.4.0 purestorage===1.19.0 sphinxcontrib-seqdiag===3.0.0 os-win===5.9.0 capacity===1.3.14 retrying===1.3.4 XStatic-Dagre===0.6.4.1 platformdirs===4.2.0 pydotplus===2.0.2 boto3===1.34.44 jeepney===0.8.0 stestr===4.1.0 pillow===9.5.0 infoblox-client===0.6.0 pysmi-lextudio===1.1.13 oslo.serialization===5.3.0 warlock===2.0.1 exabgp===4.2.21 sphinxcontrib-httpdomain===1.8.1 metalsmith===2.1.1 s3transfer===0.10.0 text-unidecode===1.3 sphinxcontrib-svg2pdfconverter===1.2.2 murano-pkg-check===0.3.0 oslo.vmware===4.4.0 XStatic-moment===2.8.4.3 autopage===0.5.2 sqlalchemy-migrate===0.13.0 gitdb===4.0.11 python-monascaclient===2.8.0 ldap3===2.9.1 opentelemetry-api===1.22.0 requests-ntlm===1.2.0 automaton===3.2.0 os-service-types===1.7.0 keyring===24.3.0 elementpath===4.2.1 jsonschema-specifications===2023.12.1 testscenarios===0.5.0 sphinxcontrib-pecanwsme===0.11.0 sadisplay===0.4.9 infinisdk===240.1.2 packaging===23.2 opentelemetry-exporter-otlp-proto-grpc===1.22.0 XStatic-Dagre-D3===0.4.17.0 nose-exclude===0.5.0 psutil===5.9.8 txaio===23.1.1 elasticsearch===2.4.1 django-nose===1.4.7 asgiref===3.7.2 XStatic-JQuery.TableSorter===2.14.5.2 pifpaf===3.1.5 pysmi===0.3.4 blockdiag===3.0.0 testtools===2.7.1 infi.dtypes.iqn===0.4.0 XStatic-tv4===1.2.7.0 XStatic-JSEncrypt===2.3.1.1 python-cinderclient===9.4.0 keystonemiddleware===10.6.0 django-formtools===2.5.1 XStatic-Spin===1.2.5.3 tap-as-a-service===12.0.0 os-traits===3.0.0 typepy===1.3.2 SecretStorage===3.3.3 opentracing===2.4.0 XStatic-Rickshaw===1.5.1.0 iso8601===2.1.0 tooz===5.0.0 linecache2===1.0.0 oauth2client===4.1.3 idna===3.6 yamlloader===1.3.2 protobuf===4.25.3 sushy===5.0.0 python-neutronclient===11.1.0 pika===1.3.2 oslo.cache===3.6.0 WebTest===3.0.0 openstack.nose-plugin===0.11 os-collect-config===13.2.0 edgegrid-python===1.3.1 python-qpid-proton===0.39.0 python-octaviaclient===3.6.0 pysaml2===7.3.1;python_version=='3.8' pysaml2===7.4.2;python_version>='3.9' requests-oauthlib===1.3.1 oslo.reports===3.3.0 pysnmp-lextudio===5.0.33 bitmath===1.3.3.1 ceilometermiddleware===3.3.1 pyasn1-modules-lextudio===0.2.9 testrepository===0.0.20 sympy===1.12 Logbook===1.7.0.post0 PyNaCl===1.5.0 osc-lib===3.0.1 python-consul===1.1.0 more-itertools===10.2.0 seqdiag===3.0.0 numpy===1.24.4;python_version=='3.8' numpy===1.26.4;python_version>='3.9' msgpack===1.0.7 Sphinx===7.1.2;python_version=='3.8' Sphinx===7.2.6;python_version>='3.9' oslo.config===9.4.0 openstackdocstheme===3.2.0 osc-placement===4.2.0 rpds-py===0.18.0 zake===0.2.2 python-rsdclient===1.0.2 flux===1.3.5 python-solumclient===3.8.0 pysnmpcrypto===0.0.4 krb5===0.5.1 PyMySQL===1.1.0 uhashring===2.3 kubernetes===29.0.0 httplib2===0.22.0 betamax===0.9.0 construct===2.10.70 pytest-metadata===3.1.1 pyparsing===3.1.1 geomet===0.2.1.post1 opentelemetry-exporter-otlp-proto-common===1.22.0 distlib===0.3.8 XStatic-Moment-Timezone===0.5.22.0 dogpile.cache===1.3.1 python-barbicanclient===5.6.1 salt===3006.6 opentelemetry-semantic-conventions===0.43b0 api-object-schema===2.0.0 blinker===1.7.0 WSME===0.12.1 tomli===2.0.1;python_version=='3.10' tomli===2.0.1;python_version=='3.8' tomli===2.0.1;python_version=='3.9' proboscis===1.2.6.0 backports.zoneinfo===0.2.1;python_version=='3.8' oslo.upgradecheck===2.3.0 stevedore===5.2.0 pywinrm===0.4.3 botocore===1.34.44 xmltodict===0.13.0 pyasn1===0.5.1 oslo.rootwrap===7.2.0 Django===4.2.10 pexpect===4.9.0 contextvars===2.4 cmd2===2.4.3 python-json-logger===2.0.7 redis===5.0.1 jmespath===1.0.1 click===8.1.7 XStatic-smart-table===1.4.13.2 kuryr-lib===3.0.0 scrypt===0.8.20 jsonpatch===1.33 python-daemon===3.0.1 os-testr===3.0.0 cotyledon===1.7.3 xattr===1.1.0 systemd-python===235 python-memcached===1.62 openstacksdk===3.0.0 infi.dtypes.nqn===0.1.0 looseversion===1.3.0 six===1.16.0 dulwich===0.21.7 dfs-sdk===1.2.27 sentinels===1.0.0 kombu===5.3.5 distro===1.9.0 zstd===1.5.5.1 yaql===2.0.1 requestsexceptions===1.4.0 testresources===2.0.1 falcon===3.1.3 tomlkit===0.12.3 etcd3gw===2.3.0 Flask-RESTful===0.3.10 GitPython===3.1.42 python-ironicclient===5.4.0 XStatic===1.0.3 XStatic-Angular-FileUpload===12.2.13.0 python-openstackclient===6.5.0 pyzmq===25.1.2 nocaselist===2.0.0 oslo.db===14.1.0 simplegeneric===0.8.1 python-pcre===0.7 yappi===1.6.0 mbstrdecoder===1.1.3 pymemcache===4.0.0 wrapt===1.16.0 oslo.privsep===3.3.0 sphinxcontrib-apidoc===0.5.0 oslo.policy===4.3.0 python-muranoclient===2.7.0 hvac===2.1.0 pyeclib===1.6.1 wsgi-intercept===1.13.0 ndg-httpsclient===0.5.1 repoze.lru===0.7 rfc3986===2.0.0 tenacity===8.2.3 python-designateclient===6.0.0 future===0.18.3 pytest-cov===4.1.0 reactivex===4.0.4 Paste===3.7.1 pytest-django===4.8.0 jaeger-client===4.8.0 XStatic-Json2yaml===0.1.1.0 boto===2.49.0 os-vif===3.4.0 hyperlink===21.0.0 mitba===1.1.1 python-masakariclient===8.3.0 Werkzeug===3.0.1 pyasn1-modules===0.3.0 APScheduler===3.10.4 xmlschema===2.5.1 python-troveclient===8.3.0 cachez===0.1.2 XStatic-Bootstrap-Datepicker===1.4.0.0 CouchDB===1.2 netifaces===0.11.0 cachetools===5.3.2 ws4py===0.5.1 sphinxcontrib-qthelp===1.0.3;python_version=='3.8' sphinxcontrib-qthelp===1.0.7;python_version>='3.9' keystoneauth1===5.6.0 statsd===4.0.1 python-keystoneclient===5.3.0 ceilometer===21.0.0 diskimage-builder===3.32.0 heat-translator===3.0.0 python-magnumclient===4.3.0 docker===7.0.0 storops===1.2.11 anyio===4.2.0 XStatic-Angular-lrdragndrop===1.0.2.6 ovsdbapp===2.6.0 aniso8601===9.0.1 rjsmin===1.2.1 icalendar===5.0.11 decorator===5.1.1 DateTimeRange===2.2.0 cffi===1.16.0 python-cyborgclient===2.3.0 futurist===3.0.0 jsonschema===4.19.2 sphinxcontrib-devhelp===1.0.2;python_version=='3.8' sphinxcontrib-devhelp===1.0.6;python_version>='3.9' python-blazarclient===4.0.0 alembic===1.9.4 execnet===2.0.2 glance-store===4.7.0 sphinxcontrib-programoutput===0.17 storpool.spopenstack===3.2.0 sphinx-testing===1.0.1 dnspython===2.5.0 oauthlib===3.2.2 Babel===2.14.0 logutils===0.3.5 zipp===3.17.0 greenlet===3.0.3 XStatic-Angular-Vis===4.16.0.0 iniconfig===2.0.0 referencing===0.33.0 confluent-kafka===2.3.0 xvfbwrapper===0.2.9 influxdb-client===1.40.0 tosca-parser===2.10.0 charset-normalizer===3.3.2 Flask===3.0.2 httpx===0.26.0 sqlalchemy-filters===0.13.0 marathon===0.13.0 sphinxcontrib-runcmd===0.2.0 confspirator===0.3.0 fasteners===0.19 sortedcontainers===2.4.0 python-linstor===1.21.0 filelock===3.13.1 python-tackerclient===2.0.0 python-heatclient===3.4.0 kafka-python===2.0.2 oslo.utils===7.1.0 gitdb2===4.0.2 requests-kerberos===0.14.0 itsdangerous===2.1.2 XStatic-jquery-ui===1.13.0.1 monasca-statsd===2.7.0 python-dateutil===2.8.2 virtualenv===20.25.0 colorama===0.4.6 confetti===2.5.3 ironic-lib===6.0.0 pytz===2024.1 opentelemetry-proto===1.22.0 XStatic-D3===3.5.17.0 actdiag===3.0.0 sysv-ipc===1.1.0 sphinxcontrib-applehelp===1.0.4;python_version=='3.8' sphinxcontrib-applehelp===1.0.8;python_version>='3.9' scikit-learn===1.3.2;python_version=='3.8' scikit-learn===1.4.0;python_version>='3.9' ,,1189,628
openstack%2Fkayobe~909913,openstack/kayobe,master,I5d85e751b490ab1e39e417ff8797ca8f8688590b,Skip buggy release of docker PyPI package,MERGED,2024-02-22 16:51:20.000000000,2024-03-04 14:57:01.000000000,2024-03-04 14:55:04.000000000,"[{'_account_id': 14200}, {'_account_id': 14826}, {'_account_id': 15197}, {'_account_id': 22348}, {'_account_id': 22629}, {'_account_id': 28048}, {'_account_id': 36216}]","[{'number': 1, 'created': '2024-02-22 16:51:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kayobe/commit/784f3405fb6760b5bab297d9d63444f009a2d7d9', 'message': 'Skip buggy release of docker PyPI package\n\nThe tag regex is buggy and fails if the docker registry contains a port\nnumbers [1].\n\n[1] https://github.com/docker/docker-py/issues/3195\n\nChange-Id: I5d85e751b490ab1e39e417ff8797ca8f8688590b\nCloses-Bug: #2054715\n'}, {'number': 2, 'created': '2024-02-28 10:27:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kayobe/commit/a6081ec46bff340b579651c1e6c9d2178c1b3ac8', 'message': 'Skip buggy release of docker PyPI package\n\nThe tag regex is buggy and fails if the docker registry contains a port\nnumbers [1].\n\n[1] https://github.com/docker/docker-py/issues/3195\n\nChange-Id: I5d85e751b490ab1e39e417ff8797ca8f8688590b\nDepends-On: https://review.opendev.org/c/openstack/kayobe/+/909911\nCloses-Bug: #2054715\n'}, {'number': 3, 'created': '2024-02-28 10:28:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kayobe/commit/756ba6eb0315696e8374229efc112c70db7f8dbe', 'message': 'Skip buggy release of docker PyPI package\n\nThe tag regex is buggy and fails if the docker registry contains a port\nnumbers [1].\n\n[1] https://github.com/docker/docker-py/issues/3195\n\nChange-Id: I5d85e751b490ab1e39e417ff8797ca8f8688590b\nCloses-Bug: #2054715\n'}, {'number': 4, 'created': '2024-03-01 10:51:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kayobe/commit/3fd97575641f64426d4f9aa7f4960da7e42c6656', 'message': 'Skip buggy release of docker PyPI package\n\nThe tag regex is buggy and fails if the docker registry contains a port\nnumbers [1].\n\n[1] https://github.com/docker/docker-py/issues/3195\n\nChange-Id: I5d85e751b490ab1e39e417ff8797ca8f8688590b\nCloses-Bug: #2054715\n'}, {'number': 5, 'created': '2024-03-01 13:28:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kayobe/commit/94b8224aac9980de2aa0c4982b8eb7e658364300', 'message': 'Skip buggy release of docker PyPI package\n\nThe tag regex is buggy and fails if the docker registry contains a port\nnumbers [1].\n\n[1] https://github.com/docker/docker-py/issues/3195\n\nChange-Id: I5d85e751b490ab1e39e417ff8797ca8f8688590b\nCloses-Bug: #2054715\n'}, {'number': 6, 'created': '2024-03-01 17:58:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kayobe/commit/adc3452b9b876219f762a4567b81a5161bcfe014', 'message': 'Skip buggy release of docker PyPI package\n\nThe tag regex is buggy and fails if the docker registry contains a port\nnumber[1].\n\n[1] https://github.com/docker/docker-py/issues/3195\n\nChange-Id: I5d85e751b490ab1e39e417ff8797ca8f8688590b\nCloses-Bug: #2054715\n'}, {'number': 7, 'created': '2024-03-01 19:09:58.000000000', 'files': ['ansible/roles/kolla/tasks/install.yml', 'zuul.d/jobs.yaml', 'releasenotes/notes/fix-issue-building-images-when-docker-registry-contains-port-356dbaeeb8dd1e29.yaml'], 'web_link': 'https://opendev.org/openstack/kayobe/commit/9c1951478f06a9244b5bdc5fbd356b3872543d24', 'message': 'Skip buggy release of docker PyPI package\n\nThe tag regex is buggy and fails if the docker registry contains a port\nnumber[1].\n\n[1] https://github.com/docker/docker-py/issues/3195\n\nChange-Id: I5d85e751b490ab1e39e417ff8797ca8f8688590b\nCloses-Bug: #2054715\n'}]",6,909913,9c1951478f06a9244b5bdc5fbd356b3872543d24,29,7,7,28048,,,0,"Skip buggy release of docker PyPI package

The tag regex is buggy and fails if the docker registry contains a port
number[1].

[1] https://github.com/docker/docker-py/issues/3195

Change-Id: I5d85e751b490ab1e39e417ff8797ca8f8688590b
Closes-Bug: #2054715
",git fetch https://review.opendev.org/openstack/kayobe refs/changes/13/909913/1 && git format-patch -1 --stdout FETCH_HEAD,"['ansible/roles/kolla/tasks/install.yml', 'zuul.d/jobs.yaml', 'releasenotes/notes/fix-issue-building-images-when-docker-registry-contains-port-356dbaeeb8dd1e29.yaml']",3,784f3405fb6760b5bab297d9d63444f009a2d7d9,,--- fixes: - | Fixes issue building container images when docker registry contained a port. See `LP#2054715 <https://bugs.launchpad.net/kayobe/+bug/2054715>` for more details. ,,8,2
openstack%2Frequirements~910744,openstack/requirements,master,I6b656795cf4ec0692c90755a598b419eac3d6311,update constraint for python-muranoclient to new release 2.8.0,MERGED,2024-03-01 14:08:36.000000000,2024-03-04 14:40:47.000000000,2024-03-04 14:39:52.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 14:08:36.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/6ab063fd2a31673e0875c92aef805373d3fe96d5', 'message': 'update constraint for python-muranoclient to new release 2.8.0\n\nmeta: version: 2.8.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: I51489c0a4693f04bf565164efe9c1087c82265d7\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nChange-Id: I6b656795cf4ec0692c90755a598b419eac3d6311\n'}]",1,910744,6ab063fd2a31673e0875c92aef805373d3fe96d5,9,2,1,11131,,,0,"update constraint for python-muranoclient to new release 2.8.0

meta: version: 2.8.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: yes
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: I51489c0a4693f04bf565164efe9c1087c82265d7
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
Change-Id: I6b656795cf4ec0692c90755a598b419eac3d6311
",git fetch https://review.opendev.org/openstack/requirements refs/changes/44/910744/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,6ab063fd2a31673e0875c92aef805373d3fe96d5,new-release,python-muranoclient===2.8.0,python-muranoclient===2.7.0,1,1
openstack%2Fkuryr-kubernetes~892331,openstack/kuryr-kubernetes,master,I2799170cd37424bc902168bbc02c82eff50724ff,DNM: Test gate with GLOBAL_VENV=true,ABANDONED,2023-08-22 13:39:05.000000000,2024-03-04 14:36:20.000000000,,"[{'_account_id': 11600}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-08-22 13:39:05.000000000', 'files': ['devstack/lib/kuryr_kubernetes'], 'web_link': 'https://opendev.org/openstack/kuryr-kubernetes/commit/2dc9206102892cc2eec77a408076fe5fe92e79a3', 'message': 'DNM: Test gate with GLOBAL_VENV=true\n\nThis patch tests to ensure gate jobs of kuryr-kubernetes are not\nbroken by devstack change [1] which change to uses venv.\n\n[1] https://review.opendev.org/c/openstack/devstack/+/558930\n\nChange-Id: I2799170cd37424bc902168bbc02c82eff50724ff\n'}]",4,892331,2dc9206102892cc2eec77a408076fe5fe92e79a3,7,2,1,31857,,,0,"DNM: Test gate with GLOBAL_VENV=true

This patch tests to ensure gate jobs of kuryr-kubernetes are not
broken by devstack change [1] which change to uses venv.

[1] https://review.opendev.org/c/openstack/devstack/+/558930

Change-Id: I2799170cd37424bc902168bbc02c82eff50724ff
",git fetch https://review.opendev.org/openstack/kuryr-kubernetes refs/changes/31/892331/1 && git format-patch -1 --stdout FETCH_HEAD,['devstack/lib/kuryr_kubernetes'],1,2dc9206102892cc2eec77a408076fe5fe92e79a3,gate-test,# dummy change,,1,0
openstack%2Fironic~910529,openstack/ironic,master,I5fcedfc89ac18025c178e8a5f6750802005d1507,"Don't import sushy conditionally, it's a requirement",MERGED,2024-02-28 15:56:40.000000000,2024-03-04 14:34:42.000000000,2024-03-04 14:33:23.000000000,"[{'_account_id': 11655}, {'_account_id': 22348}, {'_account_id': 23851}]","[{'number': 1, 'created': '2024-02-28 15:56:40.000000000', 'files': ['ironic/tests/unit/drivers/modules/drac/test_raid.py', 'ironic/tests/unit/drivers/modules/drac/test_inspect.py', 'ironic/tests/unit/drivers/modules/test_image_utils.py', 'ironic/tests/unit/drivers/modules/drac/test_boot.py', 'ironic/tests/unit/drivers/modules/redfish/test_power.py', 'ironic/tests/unit/drivers/modules/redfish/test_utils.py', 'ironic/drivers/modules/drac/boot.py', 'ironic/drivers/modules/redfish/raid.py', 'ironic/tests/unit/drivers/modules/redfish/test_inspect.py', 'ironic/tests/unit/drivers/modules/redfish/test_raid.py', 'ironic/drivers/modules/drac/inspect.py', 'ironic/drivers/modules/redfish/management.py', 'ironic/drivers/modules/drac/utils.py', 'ironic/drivers/modules/redfish/boot.py', 'ironic/drivers/modules/redfish/power.py', 'ironic/tests/unit/drivers/modules/redfish/test_vendor.py', 'ironic/tests/unit/drivers/modules/redfish/test_firmware.py', 'ironic/tests/unit/drivers/modules/test_inspect_utils.py', 'ironic/tests/unit/drivers/modules/redfish/test_management.py', 'ironic/drivers/modules/redfish/firmware.py', 'ironic/tests/unit/drivers/modules/redfish/test_bios.py', 'ironic/drivers/modules/redfish/bios.py', 'ironic/drivers/modules/redfish/utils.py', 'ironic/tests/unit/drivers/modules/drac/test_utils.py', 'ironic/drivers/modules/drac/management.py', 'ironic/drivers/modules/redfish/vendor.py', 'ironic/tests/unit/drivers/modules/drac/test_management.py', 'ironic/drivers/modules/drac/raid.py', 'ironic/tests/unit/drivers/modules/redfish/test_boot.py', 'ironic/drivers/modules/redfish/inspect.py'], 'web_link': 'https://opendev.org/openstack/ironic/commit/803d08cb88fc887b91572bc2d5517be7f1f790d2', 'message': ""Don't import sushy conditionally, it's a requirement\n\nChange-Id: I5fcedfc89ac18025c178e8a5f6750802005d1507\n""}]",3,910529,803d08cb88fc887b91572bc2d5517be7f1f790d2,21,3,1,10239,,,0,"Don't import sushy conditionally, it's a requirement

Change-Id: I5fcedfc89ac18025c178e8a5f6750802005d1507
",git fetch https://review.opendev.org/openstack/ironic refs/changes/29/910529/1 && git format-patch -1 --stdout FETCH_HEAD,"['ironic/tests/unit/drivers/modules/drac/test_raid.py', 'ironic/tests/unit/drivers/modules/drac/test_inspect.py', 'ironic/tests/unit/drivers/modules/test_image_utils.py', 'ironic/tests/unit/drivers/modules/drac/test_boot.py', 'ironic/tests/unit/drivers/modules/redfish/test_power.py', 'ironic/tests/unit/drivers/modules/redfish/test_utils.py', 'ironic/drivers/modules/drac/boot.py', 'ironic/drivers/modules/redfish/raid.py', 'ironic/tests/unit/drivers/modules/redfish/test_inspect.py', 'ironic/tests/unit/drivers/modules/redfish/test_raid.py', 'ironic/drivers/modules/drac/inspect.py', 'ironic/drivers/modules/redfish/management.py', 'ironic/drivers/modules/drac/utils.py', 'ironic/drivers/modules/redfish/boot.py', 'ironic/drivers/modules/redfish/power.py', 'ironic/tests/unit/drivers/modules/redfish/test_vendor.py', 'ironic/tests/unit/drivers/modules/redfish/test_firmware.py', 'ironic/tests/unit/drivers/modules/test_inspect_utils.py', 'ironic/tests/unit/drivers/modules/redfish/test_management.py', 'ironic/drivers/modules/redfish/firmware.py', 'ironic/tests/unit/drivers/modules/redfish/test_bios.py', 'ironic/drivers/modules/redfish/bios.py', 'ironic/drivers/modules/redfish/utils.py', 'ironic/tests/unit/drivers/modules/drac/test_utils.py', 'ironic/drivers/modules/drac/management.py', 'ironic/drivers/modules/redfish/vendor.py', 'ironic/tests/unit/drivers/modules/drac/test_management.py', 'ironic/drivers/modules/drac/raid.py', 'ironic/tests/unit/drivers/modules/redfish/test_boot.py', 'ironic/drivers/modules/redfish/inspect.py']",30,803d08cb88fc887b91572bc2d5517be7f1f790d2,always-sushy,"import sushyCPU_ARCH_MAP = { sushy.PROCESSOR_ARCH_x86: 'x86_64', sushy.PROCESSOR_ARCH_IA_64: 'ia64', sushy.PROCESSOR_ARCH_ARM: 'arm', sushy.PROCESSOR_ARCH_MIPS: 'mips', sushy.PROCESSOR_ARCH_OEM: 'oem' } PROCESSOR_INSTRUCTION_SET_MAP = { sushy.InstructionSet.ARM_A32: 'arm', sushy.InstructionSet.ARM_A64: 'aarch64', sushy.InstructionSet.IA_64: 'ia64', sushy.InstructionSet.MIPS32: 'mips', sushy.InstructionSet.MIPS64: 'mips64', sushy.InstructionSet.OEM: None, sushy.InstructionSet.X86: 'i686', sushy.InstructionSet.X86_64: 'x86_64' } BOOT_MODE_MAP = { sushy.BOOT_SOURCE_MODE_UEFI: boot_modes.UEFI, sushy.BOOT_SOURCE_MODE_BIOS: boot_modes.LEGACY_BIOS }","from oslo_utils import importutilssushy = importutils.try_import('sushy') if sushy: CPU_ARCH_MAP = { sushy.PROCESSOR_ARCH_x86: 'x86_64', sushy.PROCESSOR_ARCH_IA_64: 'ia64', sushy.PROCESSOR_ARCH_ARM: 'arm', sushy.PROCESSOR_ARCH_MIPS: 'mips', sushy.PROCESSOR_ARCH_OEM: 'oem' } PROCESSOR_INSTRUCTION_SET_MAP = { sushy.InstructionSet.ARM_A32: 'arm', sushy.InstructionSet.ARM_A64: 'aarch64', sushy.InstructionSet.IA_64: 'ia64', sushy.InstructionSet.MIPS32: 'mips', sushy.InstructionSet.MIPS64: 'mips64', sushy.InstructionSet.OEM: None, sushy.InstructionSet.X86: 'i686', sushy.InstructionSet.X86_64: 'x86_64' } BOOT_MODE_MAP = { sushy.BOOT_SOURCE_MODE_UEFI: boot_modes.UEFI, sushy.BOOT_SOURCE_MODE_BIOS: boot_modes.LEGACY_BIOS } def __init__(self): """"""Initialize the Redfish inspection interface. :raises: DriverLoadError if the driver can't be loaded due to missing dependencies """""" super(RedfishInspect, self).__init__() if not sushy: raise exception.DriverLoadError( driver='redfish', reason=_('Unable to import the sushy library')) ",112,275
openstack%2Fmanila-tempest-plugin~910909,openstack/manila-tempest-plugin,master,I4d274869e5e9e7800be44bccf7a2641b4a5febe7,Replace period to underscore,ABANDONED,2024-03-04 14:20:39.000000000,2024-03-04 14:34:31.000000000,,"[{'_account_id': 10459}, {'_account_id': 22348}, {'_account_id': 30025}]","[{'number': 1, 'created': '2024-03-04 14:20:39.000000000', 'files': ['manila_tempest_tests/tests/api/admin/test_share_types.py', 'manila_tempest_tests/tests/api/test_share_types_negative.py'], 'web_link': 'https://opendev.org/openstack/manila-tempest-plugin/commit/b2bc4dcabf00f2e2bea18a4ae73761650da1f605', 'message': 'Replace period to underscore\n\nAs the ddt is replacing . for _\nAs a follow up to Iaf39f4a83e383fb9db7f519136b9169352ff84af\n\nChange-Id: I4d274869e5e9e7800be44bccf7a2641b4a5febe7\n(cherry picked from commit 8125ca48c33e987cb7ddf726a33390f01a30ccc6)\n'}]",1,910909,b2bc4dcabf00f2e2bea18a4ae73761650da1f605,4,3,1,32704,,,0,"Replace period to underscore

As the ddt is replacing . for _
As a follow up to Iaf39f4a83e383fb9db7f519136b9169352ff84af

Change-Id: I4d274869e5e9e7800be44bccf7a2641b4a5febe7
(cherry picked from commit 8125ca48c33e987cb7ddf726a33390f01a30ccc6)
",git fetch https://review.opendev.org/openstack/manila-tempest-plugin refs/changes/09/910909/1 && git format-patch -1 --stdout FETCH_HEAD,"['manila_tempest_tests/tests/api/admin/test_share_types.py', 'manila_tempest_tests/tests/api/test_share_types_negative.py']",2,b2bc4dcabf00f2e2bea18a4ae73761650da1f605,underscores-master," ('2_50', '2.50', '', None, None), ('2_50_bad_public', '2.50', None, None, 'not_bool'), ('2_50_description', '2.50', None, generate_long_description(256),"," ('2.50', '2.50', '', None, None), ('2.50_bad_public', '2.50', None, None, 'not_bool'), ('2.50_description', '2.50', None, generate_long_description(256),",8,8
openstack%2Frequirements~910743,openstack/requirements,master,I82e69dcd96deb38c29dc380c346b5cc9ccee2117,update constraint for python-blazarclient to new release 4.0.1,MERGED,2024-03-01 14:03:49.000000000,2024-03-04 14:27:06.000000000,2024-03-04 14:26:10.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 14:03:49.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/044bdc4a7484c0df4a2efe1495d6cf73bf3c23f0', 'message': 'update constraint for python-blazarclient to new release 4.0.1\n\nmeta: version: 4.0.1\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: no\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: I46a865b1e17c3fbbda2999124eb081460e715204\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+1: Pierre Riteau <pierre@stackhpc.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nChange-Id: I82e69dcd96deb38c29dc380c346b5cc9ccee2117\n'}]",1,910743,044bdc4a7484c0df4a2efe1495d6cf73bf3c23f0,9,2,1,11131,,,0,"update constraint for python-blazarclient to new release 4.0.1

meta: version: 4.0.1
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: no
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: I46a865b1e17c3fbbda2999124eb081460e715204
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+1: Pierre Riteau <pierre@stackhpc.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
Change-Id: I82e69dcd96deb38c29dc380c346b5cc9ccee2117
",git fetch https://review.opendev.org/openstack/requirements refs/changes/43/910743/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,044bdc4a7484c0df4a2efe1495d6cf73bf3c23f0,new-release,python-blazarclient===4.0.1,python-blazarclient===4.0.0,1,1
openstack%2Frequirements~910733,openstack/requirements,master,I3325ffc336e8fd1217eeb9c5396142b9f6632818,update constraint for python-glanceclient to new release 4.5.0,MERGED,2024-03-01 13:57:01.000000000,2024-03-04 14:25:55.000000000,2024-03-04 14:24:54.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 13:57:01.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/34d636d954d5f15622cfbf4b066d81111ac2582d', 'message': 'update constraint for python-glanceclient to new release 4.5.0\n\nmeta: version: 4.5.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: Ib339146196633dbc8b126eb58045122ac1b909b5\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nChange-Id: I3325ffc336e8fd1217eeb9c5396142b9f6632818\n'}]",1,910733,34d636d954d5f15622cfbf4b066d81111ac2582d,9,2,1,11131,,,0,"update constraint for python-glanceclient to new release 4.5.0

meta: version: 4.5.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: yes
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: Ib339146196633dbc8b126eb58045122ac1b909b5
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
Change-Id: I3325ffc336e8fd1217eeb9c5396142b9f6632818
",git fetch https://review.opendev.org/openstack/requirements refs/changes/33/910733/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,34d636d954d5f15622cfbf4b066d81111ac2582d,new-release,python-glanceclient===4.5.0,python-glanceclient===4.4.0,1,1
openstack%2Frequirements~910732,openstack/requirements,master,Ia826c98ae4080b80d8a1560f3fdaacbee2762658,update constraint for osc-placement to new release 4.3.0,MERGED,2024-03-01 13:54:45.000000000,2024-03-04 14:25:01.000000000,2024-03-04 14:23:19.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 13:54:45.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/c6cf07871844edcf6e8dbd87a7b5ca15045fa968', 'message': 'update constraint for osc-placement to new release 4.3.0\n\nmeta: version: 4.3.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: If6ef01ad20916e1e8e70ff7088e1d526401d48b4\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nChange-Id: Ia826c98ae4080b80d8a1560f3fdaacbee2762658\n'}]",1,910732,c6cf07871844edcf6e8dbd87a7b5ca15045fa968,9,2,1,11131,,,0,"update constraint for osc-placement to new release 4.3.0

meta: version: 4.3.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: yes
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: If6ef01ad20916e1e8e70ff7088e1d526401d48b4
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
Change-Id: Ia826c98ae4080b80d8a1560f3fdaacbee2762658
",git fetch https://review.opendev.org/openstack/requirements refs/changes/32/910732/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,c6cf07871844edcf6e8dbd87a7b5ca15045fa968,new-release,osc-placement===4.3.0,osc-placement===4.2.0,1,1
openstack%2Fneutron~910222,openstack/neutron,master,Ia2f70363963dca9f035eff8d1ff0c399dc8b9239,[OVN] Make mandatory the router name in the LRP.external_ids,MERGED,2024-02-26 11:52:48.000000000,2024-03-04 14:24:41.000000000,2024-03-04 14:23:07.000000000,"[{'_account_id': 1131}, {'_account_id': 4694}, {'_account_id': 9845}, {'_account_id': 11975}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-26 11:52:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/d1056de52bca19e30936c22f391974c8690d560f', 'message': '[OVN] Make mandatory the router name in the LRP.external_ids\n\nThe router name will be always defined in the ""Logical_Router_Port""\nexternal_ids field.\n\nRelated-Bug: #2052821\n\nChange-Id: Ia2f70363963dca9f035eff8d1ff0c399dc8b9239\n'}, {'number': 2, 'created': '2024-02-26 16:37:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/c70b02b5486e443ed0408bc0a0eaa371b8c955b2', 'message': '[OVN] Make mandatory the router name in the LRP.external_ids\n\nThe router name will be always defined in the ""Logical_Router_Port""\nexternal_ids field.\n\nRelated-Bug: #2052821\n\nChange-Id: Ia2f70363963dca9f035eff8d1ff0c399dc8b9239\n'}, {'number': 3, 'created': '2024-02-27 11:13:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/ac5cdce91578febce05df7dc4d48bc22538434ea', 'message': '[OVN] Make mandatory the router name in the LRP.external_ids\n\nThe router name will be always defined in the ""Logical_Router_Port""\nexternal_ids field.\n\nRelated-Bug: #2052821\n\nChange-Id: Ia2f70363963dca9f035eff8d1ff0c399dc8b9239\n'}, {'number': 4, 'created': '2024-02-28 12:12:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/95a16421c2143eb8220be7c0d3c9b270b07bafc6', 'message': '[OVN] Make mandatory the router name in the LRP.external_ids\n\nThe router name will be always defined in the ""Logical_Router_Port""\nexternal_ids field.\n\nRelated-Bug: #2052821\n\nChange-Id: Ia2f70363963dca9f035eff8d1ff0c399dc8b9239\n'}, {'number': 5, 'created': '2024-02-28 17:13:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/226898a607783119521e67bd70102478f5cc271c', 'message': '[OVN] Make mandatory the router name in the LRP.external_ids\n\nThe router name will be always defined in the ""Logical_Router_Port""\nexternal_ids field.\n\nRelated-Bug: #2052821\nChange-Id: Ia2f70363963dca9f035eff8d1ff0c399dc8b9239\n'}, {'number': 6, 'created': '2024-02-29 07:59:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/dec0ae4e3d8dc3e9c94d92f16e4103b78f915f9d', 'message': '[OVN] Make mandatory the router name in the LRP.external_ids\n\nThe router name will be always defined in the ""Logical_Router_Port""\nexternal_ids field.\n\nRelated-Bug: #2052821\nChange-Id: Ia2f70363963dca9f035eff8d1ff0c399dc8b9239\n'}, {'number': 7, 'created': '2024-03-04 08:10:48.000000000', 'files': ['neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'neutron/services/ovn_l3/service_providers/ovn.py', 'neutron/tests/unit/fake_resources.py', 'neutron/tests/unit/services/ovn_l3/test_plugin.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/b5aecfeff89d4bd5441c91f8ba2b665d9d12cfca', 'message': '[OVN] Make mandatory the router name in the LRP.external_ids\n\nThe router name will be always defined in the ""Logical_Router_Port""\nexternal_ids field.\n\nRelated-Bug: #2052821\nChange-Id: Ia2f70363963dca9f035eff8d1ff0c399dc8b9239\n'}]",9,910222,b5aecfeff89d4bd5441c91f8ba2b665d9d12cfca,44,5,7,16688,,,0,"[OVN] Make mandatory the router name in the LRP.external_ids

The router name will be always defined in the ""Logical_Router_Port""
external_ids field.

Related-Bug: #2052821
Change-Id: Ia2f70363963dca9f035eff8d1ff0c399dc8b9239
",git fetch https://review.opendev.org/openstack/neutron refs/changes/22/910222/1 && git format-patch -1 --stdout FETCH_HEAD,"['neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'neutron/services/ovn_l3/service_providers/ovn.py']",2,d1056de52bca19e30936c22f391974c8690d560f,bug/2052821,," router_id=router.id,",18,25
openstack%2Fglance~910460,openstack/glance,master,I8cc1420e8b16ce0bc74314fd7b8aabf6e133abd8,Prepare for castellan 4.4.0,MERGED,2024-02-28 02:31:37.000000000,2024-03-04 14:24:39.000000000,2024-03-04 14:23:16.000000000,"[{'_account_id': 5314}, {'_account_id': 9303}, {'_account_id': 16339}, {'_account_id': 22348}, {'_account_id': 31245}]","[{'number': 1, 'created': '2024-02-28 02:31:37.000000000', 'files': ['glance/tests/unit/v2/test_images_resource.py'], 'web_link': 'https://opendev.org/openstack/glance/commit/1e683483e72dfc25da81d9b376cf6963f87b0af7', 'message': 'Prepare for castellan 4.4.0\n\nIn castellan 4.4.0, we fixed the wrong exception MockKeyManager.get\nraised in case the requested key does not exist. This change interferes\nwith the way one unit test case ensure a key is gone.\n\nThis replaces the asserted exception by generic Exception so that we\ncan unblock u-c bump now. We can later replace it by the specific and\ncorrect exception (ManagedObjectNotFoundError) once castellan 4.4.0 is\npulled to u-c.\n\n[1] 2cc410f56e7275d982bca95aa65cd11e22fc7c3c\n\nChange-Id: I8cc1420e8b16ce0bc74314fd7b8aabf6e133abd8\n'}]",2,910460,1e683483e72dfc25da81d9b376cf6963f87b0af7,11,5,1,9816,,,0,"Prepare for castellan 4.4.0

In castellan 4.4.0, we fixed the wrong exception MockKeyManager.get
raised in case the requested key does not exist. This change interferes
with the way one unit test case ensure a key is gone.

This replaces the asserted exception by generic Exception so that we
can unblock u-c bump now. We can later replace it by the specific and
correct exception (ManagedObjectNotFoundError) once castellan 4.4.0 is
pulled to u-c.

[1] 2cc410f56e7275d982bca95aa65cd11e22fc7c3c

Change-Id: I8cc1420e8b16ce0bc74314fd7b8aabf6e133abd8
",git fetch https://review.opendev.org/openstack/glance refs/changes/60/910460/1 && git format-patch -1 --stdout FETCH_HEAD,['glance/tests/unit/v2/test_images_resource.py'],1,1e683483e72dfc25da81d9b376cf6963f87b0af7,castellan-caracal-bump," # TODO(tkajinam): Replace Exception by ManagedObjectNotFoundError once # castellan in u-c is bumped to 4.4.0 self.assertRaises(Exception, # noqa"," self.assertRaises(KeyError,",3,1
openstack%2Frequirements~910747,openstack/requirements,master,I08a69810ab5541240921163dc8b1d0c3d5948d45,update constraint for python-mistralclient to new release 5.2.0,MERGED,2024-03-01 14:27:17.000000000,2024-03-04 14:24:18.000000000,2024-03-04 14:23:12.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 14:27:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/requirements/commit/6d6ebb74c7089b1cc912f50fd38ba239a62f3aa9', 'message': 'update constraint for python-mistralclient to new release 5.2.0\n\nmeta: version: 5.2.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: I45ccfe93e22bf320868f8dcb13dfb21800bbc14d\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nChange-Id: I08a69810ab5541240921163dc8b1d0c3d5948d45\n'}, {'number': 2, 'created': '2024-03-04 08:50:51.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/caeed15e6eeae93a368d8a36bcbd31a8642f8680', 'message': 'update constraint for python-mistralclient to new release 5.2.0\n\nmeta: version: 5.2.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: I45ccfe93e22bf320868f8dcb13dfb21800bbc14d\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nChange-Id: I08a69810ab5541240921163dc8b1d0c3d5948d45\n'}]",1,910747,caeed15e6eeae93a368d8a36bcbd31a8642f8680,10,2,2,11131,,,0,"update constraint for python-mistralclient to new release 5.2.0

meta: version: 5.2.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: yes
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: I45ccfe93e22bf320868f8dcb13dfb21800bbc14d
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
Change-Id: I08a69810ab5541240921163dc8b1d0c3d5948d45
",git fetch https://review.opendev.org/openstack/requirements refs/changes/47/910747/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,6d6ebb74c7089b1cc912f50fd38ba239a62f3aa9,new-release,python-mistralclient===5.2.0,python-mistralclient===5.1.0,1,1
openstack%2Fopenstack-ansible-ops~906363,openstack/openstack-ansible-ops,master,I3a7ee79c10c39cb805ed2134b21055d63786663d,Add hook playbook install and test magnum capi driver,MERGED,2024-01-23 12:14:26.000000000,2024-03-04 14:04:08.000000000,2024-03-04 14:03:13.000000000,"[{'_account_id': 22348}, {'_account_id': 28619}, {'_account_id': 31542}]","[{'number': 1, 'created': '2024-01-23 12:14:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/918432ab7a0aaaa47311c9f3da8e385f65f1d2d4', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 2, 'created': '2024-01-23 16:22:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/32e25bd18d1e6d98c245e0e8db061c59dfbd6982', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 3, 'created': '2024-01-23 22:58:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/398c77b08e15ecc983d55b94414c26396d313df3', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 4, 'created': '2024-01-25 09:52:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/b22c39635d04aed5a26a16debe70b6364461b5b4', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 5, 'created': '2024-01-25 09:54:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/c89eec30ff357c9219c03e9de26a7fd2dc2de8da', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 6, 'created': '2024-01-25 13:04:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/b342cbd7824fe0ac4473ba0e222c4f0ef7541aaa', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 7, 'created': '2024-01-25 16:12:08.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/b3d2382e7bae76fc52073fa528dde004c060e5f7', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 8, 'created': '2024-01-30 13:14:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/1aeb3317a698f7c4c2b7ae3d10269a25dec3bf70', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 9, 'created': '2024-02-07 13:10:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/0020d0702b43e1e078d4a347760ff1782e47ce25', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 10, 'created': '2024-02-07 13:10:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/40a8ed2bc1d6184b31ae9dce3a76055bd66c7fc1', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 11, 'created': '2024-02-07 16:41:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/b3348a26e8cbc26ad777155708d4255a76ea2aba', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 12, 'created': '2024-02-12 11:42:08.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/6a6d7bec4a27b355a92cc884c68679cd3a26a391', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 13, 'created': '2024-02-12 21:38:31.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/0eff74768d2ca2ad806a5f9e9f721562822efeb7', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 14, 'created': '2024-02-23 22:23:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/461c0555033e6a40afb2c85fcdd41244f0ac3615', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}, {'number': 15, 'created': '2024-02-27 16:36:35.000000000', 'files': ['mcapi_vexxhost/playbooks/files/openstack_deploy/user_variables_hooks.yml', 'mcapi_vexxhost/playbooks/functional_test.yml', 'mcapi_vexxhost/playbooks/files/openstack_deploy/user_variables_tempest.yml', 'mcapi_vexxhost/playbooks/install_and_test.yml'], 'web_link': 'https://opendev.org/openstack/openstack-ansible-ops/commit/e03fc5a279a967215611aae1d8f6ff20aba81d03', 'message': 'Add hook playbook install and test magnum capi driver\n\nChange-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d\n'}]",2,906363,e03fc5a279a967215611aae1d8f6ff20aba81d03,35,3,15,25023,,,0,"Add hook playbook install and test magnum capi driver

Change-Id: I3a7ee79c10c39cb805ed2134b21055d63786663d
",git fetch https://review.opendev.org/openstack/openstack-ansible-ops refs/changes/63/906363/1 && git format-patch -1 --stdout FETCH_HEAD,"['mcapi_vexxhost/playbooks/files/openstack_deploy/user_variables_hooks.yml', 'mcapi_vexxhost/playbooks/install_and_test.yml']",2,918432ab7a0aaaa47311c9f3da8e385f65f1d2d4,capi,- name: Import insallation playbook import_playbook: osa_ops.mcapi_vexxhost.k8s_install - name: Import test playbook import_playbook: osa_ops.mcapi_vexxhost.functional_test ,,6,0
openstack%2Fcloudkitty~900420,openstack/cloudkitty,master,I2b3ed4d3b45fe0108a0ead2a4fc1979db4919e2a,[WIP] Remove use of autocommit,ABANDONED,2023-11-08 14:42:15.000000000,2024-03-04 14:00:53.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-11-08 14:42:15.000000000', 'files': ['cloudkitty/db/__init__.py'], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/5a1e4347f4220484e519d21c2497b065e565109a', 'message': '[WIP] Remove use of autocommit\n\nChange-Id: I2b3ed4d3b45fe0108a0ead2a4fc1979db4919e2a\n'}]",1,900420,5a1e4347f4220484e519d21c2497b065e565109a,4,1,1,15197,,,0,"[WIP] Remove use of autocommit

Change-Id: I2b3ed4d3b45fe0108a0ead2a4fc1979db4919e2a
",git fetch https://review.opendev.org/openstack/cloudkitty refs/changes/20/900420/1 && git format-patch -1 --stdout FETCH_HEAD,['cloudkitty/db/__init__.py'],1,5a1e4347f4220484e519d21c2497b065e565109a,sqlalchemy-20," _FACADE = session.EngineFacade.from_config(cfg.CONF, sqlite_fk=True)"," _FACADE = session.EngineFacade.from_config(cfg.CONF, sqlite_fk=True, autocommit=True)",1,2
openstack%2Fovn-bgp-agent~910620,openstack/ovn-bgp-agent,stable/2023.2,If0bca4a39a857364582804b64140f9a36bfc422a,Fix OVN LB Delete events for NB driver,MERGED,2024-03-04 12:17:27.000000000,2024-03-04 13:59:41.000000000,2024-03-04 13:58:46.000000000,"[{'_account_id': 6773}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-04 12:17:27.000000000', 'files': ['ovn_bgp_agent/drivers/openstack/utils/driver_utils.py', 'ovn_bgp_agent/drivers/openstack/watchers/base_watcher.py', 'ovn_bgp_agent/tests/unit/drivers/openstack/watchers/test_base_watcher.py', 'ovn_bgp_agent/tests/unit/drivers/openstack/watchers/test_nb_bgp_watcher.py', 'ovn_bgp_agent/drivers/openstack/watchers/nb_bgp_watcher.py'], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/b390a77fc52bc90c626b7b821c6da9ed7372fc2c', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB, taking as main source the vips\nfield provided in events to detect if added/removed entries.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n(cherry picked from commit e6201b35bc0d83597e527cb3c3a4d5b800d85044)\n'}]",0,910620,b390a77fc52bc90c626b7b821c6da9ed7372fc2c,7,2,1,23567,,,0,"Fix OVN LB Delete events for NB driver

When deleting an OVN LB with an attached FIP, the FIP is not
withdrawn from the BGP interface where it was exposed.

This patch corrects the behavior in accordance with the events
received from the OVN NB DB, taking as main source the vips
field provided in events to detect if added/removed entries.

Closes-Bug: #2049535
Change-Id: If0bca4a39a857364582804b64140f9a36bfc422a
(cherry picked from commit e6201b35bc0d83597e527cb3c3a4d5b800d85044)
",git fetch https://review.opendev.org/openstack/ovn-bgp-agent refs/changes/20/910620/1 && git format-patch -1 --stdout FETCH_HEAD,"['ovn_bgp_agent/drivers/openstack/utils/driver_utils.py', 'ovn_bgp_agent/drivers/openstack/watchers/base_watcher.py', 'ovn_bgp_agent/tests/unit/drivers/openstack/watchers/test_base_watcher.py', 'ovn_bgp_agent/tests/unit/drivers/openstack/watchers/test_nb_bgp_watcher.py', 'ovn_bgp_agent/drivers/openstack/watchers/nb_bgp_watcher.py']",5,b390a77fc52bc90c626b7b821c6da9ed7372fc2c,deleteEventsLB-stable/2023.2," # Expose if there is a modification in the VIPS, first new item ( # that could happend with and non existing vips on old event or # empty one) or additional items because a bigger row.vips is # including old.vips if hasattr(old, 'vips'): if ((not old.vips and row.vips) or (old.vips != row.vips and set(old.vips.keys()).issubset(set(row.vips.keys())))): except AttributeError: # vips field grows diff = self._get_diff_ip_from_vips(row, old) for ip in diff: with _SYNC_STATE_LOCK.read_lock(): if self._is_vip(row, ip): self.agent.expose_ovn_lb_vip(row) elif self._is_fip(row, ip): self.agent.expose_ovn_lb_fip(row) # router set ext-gw # NOTE(froyo): Not needed to check/call to expose_ovn_lb_fip, since up # to this point this LB could not have been associated with a FIP # since the subnet did not have access to the public network if hasattr(old, 'external_ids'): with _SYNC_STATE_LOCK.read_lock(): if self._get_router(old) != self._get_router(row): self.agent.expose_ovn_lb_vip(row) if hasattr(old, 'external_ids'): # Whatever the change removing any field from vips should be manage if hasattr(old, 'vips'): if ((old.vips != row.vips and set(row.vips.keys()).issubset( set(old.vips.keys())))): return True except AttributeError: # DELETE event need drop all if event == self.ROW_DELETE: diff = self._get_ip_from_vips(row) for ip in diff: with _SYNC_STATE_LOCK.read_lock(): if self._is_vip(row, ip): self.agent.withdraw_ovn_lb_vip(row) elif self._is_fip(row, ip): self.agent.withdraw_ovn_lb_fip(row) return # UPDATE event # vips field decrease diff = self._get_diff_ip_from_vips(old, row) for ip in diff: with _SYNC_STATE_LOCK.read_lock(): if self._is_vip(old, ip): self.agent.withdraw_ovn_lb_vip(old) elif self._is_fip(old, ip): # router unset ext-gw if hasattr(old, 'external_ids'): with _SYNC_STATE_LOCK.read_lock(): if self._get_router(old) != self._get_router(row): self.agent.withdraw_ovn_lb_vip(old)"," # Only expose if there is a modification in the VIPS # And only expose if it is the first item on VIPs if hasattr(old, 'vips'): if not old.vips and row.vips: # Also check if there is a vip_fip addition to expose the FIP vip_fip = self._get_vip_fip(row) if not vip_fip: return False old_vip_fip = self._get_vip_fip(old) if vip_fip != old_vip_fip: return True except (IndexError, AttributeError): vip_fip = self._get_vip_fip(row) old_vip_fip = self._get_vip_fip(old) with _SYNC_STATE_LOCK.read_lock(): if hasattr(old, 'external_ids') and vip_fip != old_vip_fip: self.agent.expose_ovn_lb_fip(row) else: self.agent.expose_ovn_lb_vip(row) old_external_ids = False if hasattr(old, 'external_ids'): old_external_ids = True # Also check if the vip_fip is removed to withdraw the FIP vip_fip = self._get_vip_fip(row) old_vip_fip = self._get_vip_fip(old) if old_vip_fip and old_vip_fip != vip_fip: return True # Withdraw IP if VIPs is removed if hasattr(old, 'vips'): if old.vips and not row.vips: if old_external_ids: old_lb_router = self._get_router(old) return (old_lb_router in self.agent.ovn_local_cr_lrps.keys()) else: return (lb_router in self.agent.ovn_local_cr_lrps.keys()) except (IndexError, AttributeError): vip_fip = self._get_vip_fip(row) old_vip_fip = self._get_vip_fip(old) with _SYNC_STATE_LOCK.read_lock(): if event == self.ROW_DELETE: self.agent.withdraw_ovn_lb_vip(row) if vip_fip: self.agent.withdraw_ovn_lb_fip(row) else: if not vip_fip and vip_fip != old_vip_fip: if hasattr(old, 'vips'): self.agent.withdraw_ovn_lb_vip(row)",245,120
openstack%2Fpython-aodhclient~910863,openstack/python-aodhclient,master,I54ae0a973b79f1cd1c54ee560ead03ccd9fee75b,DNM: Test CI,ABANDONED,2024-03-03 13:34:31.000000000,2024-03-04 13:49:56.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-03 13:34:31.000000000', 'files': ['aodhclient/__init__.py'], 'web_link': 'https://opendev.org/openstack/python-aodhclient/commit/17498805835369e8602e54ca0f412ef3a7eb2392', 'message': 'DNM: Test CI\n\nChange-Id: I54ae0a973b79f1cd1c54ee560ead03ccd9fee75b\n'}]",0,910863,17498805835369e8602e54ca0f412ef3a7eb2392,3,1,1,13252,,,0,"DNM: Test CI

Change-Id: I54ae0a973b79f1cd1c54ee560ead03ccd9fee75b
",git fetch https://review.opendev.org/openstack/python-aodhclient refs/changes/63/910863/1 && git format-patch -1 --stdout FETCH_HEAD,['aodhclient/__init__.py'],1,17498805835369e8602e54ca0f412ef3a7eb2392,citest,# TEST,,1,0
openstack%2Fcloudkitty~900411,openstack/cloudkitty,master,I845a22599c03ee0bc62b96703139117c680274a0,[DNM] Add job to test with SQLAlchemy master (2.x),ABANDONED,2023-11-08 13:23:09.000000000,2024-03-04 13:33:11.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2023-11-08 13:23:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/0101f40a76a3114856741b98a2d5773027ae9066', 'message': 'Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I845a22599c03ee0bc62b96703139117c680274a0\n'}, {'number': 2, 'created': '2023-11-08 13:46:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/3fa5f71027bd1901393a66d5ca0730b4c8b0f616', 'message': 'Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I845a22599c03ee0bc62b96703139117c680274a0\n'}, {'number': 3, 'created': '2024-02-02 15:00:36.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/bb73c9e9dd72dc609010b70dd74dfb4992d6f357', 'message': '[DNM] Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I845a22599c03ee0bc62b96703139117c680274a0\n'}, {'number': 4, 'created': '2024-02-27 12:43:36.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/cloudkitty/commit/f2955aefdd2f11e0d431bcb571e0fc598d0b1a4a', 'message': '[DNM] Add job to test with SQLAlchemy master (2.x)\n\nChange-Id: I845a22599c03ee0bc62b96703139117c680274a0\n'}]",3,900411,f2955aefdd2f11e0d431bcb571e0fc598d0b1a4a,8,1,4,15197,,,0,"[DNM] Add job to test with SQLAlchemy master (2.x)

Change-Id: I845a22599c03ee0bc62b96703139117c680274a0
",git fetch https://review.opendev.org/openstack/cloudkitty refs/changes/11/900411/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,0101f40a76a3114856741b98a2d5773027ae9066,sqlalchemy20,"- job: name: cloudkitty-tox-py310-with-sqlalchemy-2x parent: openstack-tox-py310 description: | Run unit tests with main branch of SQLAlchemy, alembic and oslo.db. Takes advantage of the base tox job's install-siblings feature. # The job only tests the latest and shouldn't be run on the stable branches branches: ^(?!stable) required-projects: - name: github.com/sqlalchemy/sqlalchemy override-checkout: main - name: github.com/sqlalchemy/alembic override-checkout: main - name: openstack/oslo.db - cloudkitty-tox-py310-with-sqlalchemy-2x",,16,0
openstack%2Freleases~905984,openstack/releases,master,I5ebeb6fcdadab5d022e777d10a8fe5dcaab5273a,DNM: test validation fails for release after yoga-eom,ABANDONED,2024-01-17 18:14:43.000000000,2024-03-04 13:03:41.000000000,,"[{'_account_id': 308}, {'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-01-17 18:14:43.000000000', 'files': ['deliverables/yoga/release-test.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/63ec64f0b0658e809f066e1fb883e5049a8a8a0a', 'message': 'DNM: test validation fails for release after yoga-eom\n\nChange-Id: I5ebeb6fcdadab5d022e777d10a8fe5dcaab5273a\n'}]",0,905984,63ec64f0b0658e809f066e1fb883e5049a8a8a0a,4,3,1,17685,,,0,"DNM: test validation fails for release after yoga-eom

Change-Id: I5ebeb6fcdadab5d022e777d10a8fe5dcaab5273a
",git fetch https://review.opendev.org/openstack/releases refs/changes/84/905984/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/yoga/release-test.yaml'],1,63ec64f0b0658e809f066e1fb883e5049a8a8a0a,relmgt-unmaintained-state, - version: 3.8.1 projects: - repo: openstack/release-test hash: 8ee038e23f22784bf162894ce8c5d56431506307,,4,0
openstack%2Fironic~910669,openstack/ironic,stable/2023.2,I3295c92fd7b7871ad351b94f4c6cf0f554279db0,ci: pin CI to dnsmasq 2.85,MERGED,2024-02-29 22:58:45.000000000,2024-03-04 12:12:18.000000000,2024-03-04 12:09:44.000000000,"[{'_account_id': 10239}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-29 22:58:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ironic/commit/b32378e1cfd4531759b253b58a9dc424ebb713a1', 'message': 'ci: pin CI to dnsmasq 2.85\n\nA temporary path forward to increase CI stability, by pinning\nto what appears to be a ""good working version"" of upstream dnsmasq\nwhich does not crash fon us.\n\nChange-Id: I3295c92fd7b7871ad351b94f4c6cf0f554279db0\n(cherry picked from commit f893c740d7303e9d321e04f32e3b623237815ff2)\n'}, {'number': 2, 'created': '2024-03-01 17:52:45.000000000', 'files': ['devstack/lib/ironic', 'zuul.d/project.yaml'], 'web_link': 'https://opendev.org/openstack/ironic/commit/92ae4448bef6c639b92d8b298cbba3e1a4e75a88', 'message': 'ci: pin CI to dnsmasq 2.85\n\nA temporary path forward to increase CI stability, by pinning\nto what appears to be a ""good working version"" of upstream dnsmasq\nwhich does not crash fon us.\n\nAlso removes metal3-integration as that does not test stable branches.\nChange-Id: I3295c92fd7b7871ad351b94f4c6cf0f554279db0\n(cherry picked from commit f893c740d7303e9d321e04f32e3b623237815ff2)\n'}]",1,910669,92ae4448bef6c639b92d8b298cbba3e1a4e75a88,14,2,2,11655,,,0,"ci: pin CI to dnsmasq 2.85

A temporary path forward to increase CI stability, by pinning
to what appears to be a ""good working version"" of upstream dnsmasq
which does not crash fon us.

Also removes metal3-integration as that does not test stable branches.
Change-Id: I3295c92fd7b7871ad351b94f4c6cf0f554279db0
(cherry picked from commit f893c740d7303e9d321e04f32e3b623237815ff2)
",git fetch https://review.opendev.org/openstack/ironic refs/changes/69/910669/1 && git format-patch -1 --stdout FETCH_HEAD,['devstack/lib/ironic'],1,b32378e1cfd4531759b253b58a9dc424ebb713a1,, # NOTE(TheJulia): The intent here is to use dnsmasq version # which does not crash on segfaults or sigabort when configuration # is updated. See https://bugs.launchpad.net/ironic/+bug/2026757 sudo dpkg -r dnsmasq-base git clone http://thekelleys.org.uk/git/dnsmasq.git -b v2.85 --depth 1 pushd dnsmasq sed -i 's|^PREFIX.*|PREFIX = /usr|' Makefile sudo make install popd," # NOTE(TheJulia): The intent here is to downgrade dnsmasq to the version # shipped with Ubuntu focal, so we can have stable CI. # https://bugs.launchpad.net/ubuntu/+source/dnsmasq/+bug/2026757 wget http://archive.ubuntu.com/ubuntu/pool/main/d/dnsmasq/dnsmasq-base_2.80-1.1ubuntu1.7_amd64.deb wget http://archive.ubuntu.com/ubuntu/pool/main/libi/libidn/libidn11_1.33-2.2ubuntu2_amd64.deb wget http://archive.ubuntu.com/ubuntu/pool/main/n/nettle/libhogweed5_3.5.1+really3.5.1-2ubuntu0.2_amd64.deb wget http://archive.ubuntu.com/ubuntu/pool/main/n/nettle/libnettle7_3.5.1+really3.5.1-2ubuntu0.2_amd64.deb sudo dpkg -i dnsmasq-base_2.80-1.1ubuntu1.7_amd64.deb libidn11_1.33-2.2ubuntu2_amd64.deb libhogweed5_3.5.1+really3.5.1-2ubuntu0.2_amd64.deb libnettle7_3.5.1+really3.5.1-2ubuntu0.2_amd64.deb || true rm *.deb",9,9
openstack%2Fovn-bgp-agent~905783,openstack/ovn-bgp-agent,master,If0bca4a39a857364582804b64140f9a36bfc422a,Fix OVN LB Delete events for NB driver,MERGED,2024-01-16 19:13:18.000000000,2024-03-04 12:11:57.000000000,2024-03-04 12:11:03.000000000,"[{'_account_id': 6773}, {'_account_id': 16688}, {'_account_id': 22348}, {'_account_id': 23567}]","[{'number': 1, 'created': '2024-01-16 19:13:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/d8fe2dc17a8cc8c0ceb5fc98b21090da447e631e', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n'}, {'number': 2, 'created': '2024-01-17 11:35:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/afed665a84c181600baaeea6c4396db842ab98cd', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n'}, {'number': 3, 'created': '2024-01-17 11:55:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/9d70114d9470a964bca2bfeceadcb126749573ca', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n'}, {'number': 4, 'created': '2024-01-18 17:15:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/b455c0c2264ee3481e939aee4d7c7703aa500666', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB, taking as main source the vips\nfield provided in events to detect if added/removed entries.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n'}, {'number': 5, 'created': '2024-02-02 12:03:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/ea88052b16077375bbd20965803da4a945ff1e7e', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB, taking as main source the vips\nfield provided in events to detect if added/removed entries.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n'}, {'number': 6, 'created': '2024-02-26 15:33:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/25d9eb03ca6879fdcda23a56b2d307c9d33290a6', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB, taking as main source the vips\nfield provided in events to detect if added/removed entries.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n'}, {'number': 7, 'created': '2024-02-28 13:17:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/54ff023f666170f11b801eac165ecf20741d2c44', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB, taking as main source the vips\nfield provided in events to detect if added/removed entries.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n'}, {'number': 8, 'created': '2024-03-01 08:42:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/f0017fc6fc8da331266a907d8c1a340871c0ee55', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB, taking as main source the vips\nfield provided in events to detect if added/removed entries.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n'}, {'number': 9, 'created': '2024-03-01 09:43:46.000000000', 'files': ['ovn_bgp_agent/drivers/openstack/utils/driver_utils.py', 'ovn_bgp_agent/drivers/openstack/watchers/base_watcher.py', 'ovn_bgp_agent/tests/unit/drivers/openstack/watchers/test_base_watcher.py', 'ovn_bgp_agent/tests/unit/drivers/openstack/watchers/test_nb_bgp_watcher.py', 'ovn_bgp_agent/drivers/openstack/watchers/nb_bgp_watcher.py'], 'web_link': 'https://opendev.org/openstack/ovn-bgp-agent/commit/e6201b35bc0d83597e527cb3c3a4d5b800d85044', 'message': 'Fix OVN LB Delete events for NB driver\n\nWhen deleting an OVN LB with an attached FIP, the FIP is not\nwithdrawn from the BGP interface where it was exposed.\n\nThis patch corrects the behavior in accordance with the events\nreceived from the OVN NB DB, taking as main source the vips\nfield provided in events to detect if added/removed entries.\n\nCloses-Bug: #2049535\nChange-Id: If0bca4a39a857364582804b64140f9a36bfc422a\n'}]",52,905783,e6201b35bc0d83597e527cb3c3a4d5b800d85044,42,4,9,34451,,,0,"Fix OVN LB Delete events for NB driver

When deleting an OVN LB with an attached FIP, the FIP is not
withdrawn from the BGP interface where it was exposed.

This patch corrects the behavior in accordance with the events
received from the OVN NB DB, taking as main source the vips
field provided in events to detect if added/removed entries.

Closes-Bug: #2049535
Change-Id: If0bca4a39a857364582804b64140f9a36bfc422a
",git fetch https://review.opendev.org/openstack/ovn-bgp-agent refs/changes/83/905783/1 && git format-patch -1 --stdout FETCH_HEAD,"['ovn_bgp_agent/drivers/openstack/watchers/base_watcher.py', 'ovn_bgp_agent/tests/unit/drivers/openstack/watchers/test_base_watcher.py', 'ovn_bgp_agent/tests/unit/drivers/openstack/watchers/test_nb_bgp_watcher.py', 'ovn_bgp_agent/drivers/openstack/watchers/nb_bgp_watcher.py']",4,d8fe2dc17a8cc8c0ceb5fc98b21090da447e631e,deleteEventsLB," if hasattr(old, 'external_ids'): # Whatever the change if the vips field differs, we manage it if old.vips != row.vips: if old_vip_fip and not vip_fip: if not vip_fip and old_vip_fip: if old.vips and not row.vips: self.agent.withdraw_ovn_lb_vip(old)"," old_external_ids = False if hasattr(old, 'external_ids'): old_external_ids = True # Also check if the vip_fip is removed to withdraw the FIP vip_fip = self._get_vip_fip(row) old_vip_fip = self._get_vip_fip(old) if old_vip_fip and old_vip_fip != vip_fip: # Withdraw IP if VIPs is removed if hasattr(old, 'vips'): if old.vips and not row.vips: if old_external_ids: old_lb_router = self._get_router(old) return (old_lb_router in self.agent.ovn_local_cr_lrps.keys()) else: return (lb_router in self.agent.ovn_local_cr_lrps.keys()) if vip_fip: if not vip_fip and vip_fip != old_vip_fip: if hasattr(old, 'vips'): self.agent.withdraw_ovn_lb_vip(row)",42,36
openstack%2Fpuppet-oslo~910629,openstack/puppet-oslo,master,I0386f2cc97346242549713e9663c48ca2b9444ac,cache: Support new redis options,MERGED,2024-02-29 14:47:11.000000000,2024-03-04 11:46:16.000000000,2024-03-04 11:45:18.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-29 14:47:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/puppet-oslo/commit/000996d18565188f51b8d38318fa2a8811222fa1', 'message': 'cache: Support new redis options\n\nThe oslo.cache 3.7.0 release introduced some options for redis backend\nand redis sentinel backend. This introduces for these parameters.\n\nChange-Id: I0386f2cc97346242549713e9663c48ca2b9444ac\n'}, {'number': 2, 'created': '2024-02-29 16:56:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/puppet-oslo/commit/3b932d44fddb03561575b6f6f4b0b076a720c1ed', 'message': 'cache: Support new redis options\n\nThe oslo.cache 3.7.0 release introduced some options for redis backend\nand redis sentinel backend. This introduces for these parameters.\n\nChange-Id: I0386f2cc97346242549713e9663c48ca2b9444ac\n'}, {'number': 3, 'created': '2024-03-01 01:15:38.000000000', 'files': ['spec/defines/oslo_cache_spec.rb', 'manifests/cache.pp', 'releasenotes/notes/cache-redis-opts-48e5d9aed33f3318.yaml'], 'web_link': 'https://opendev.org/openstack/puppet-oslo/commit/e21a6c603c6c2525cc0bfc386b2fd6cdc4011016', 'message': 'cache: Support new redis options\n\nThe oslo.cache 3.7.0 release introduced some options for redis backend\nand redis sentinel backend. This introduces for these parameters.\n\nChange-Id: I0386f2cc97346242549713e9663c48ca2b9444ac\n'}]",0,910629,e21a6c603c6c2525cc0bfc386b2fd6cdc4011016,12,3,3,9816,,,0,"cache: Support new redis options

The oslo.cache 3.7.0 release introduced some options for redis backend
and redis sentinel backend. This introduces for these parameters.

Change-Id: I0386f2cc97346242549713e9663c48ca2b9444ac
",git fetch https://review.opendev.org/openstack/puppet-oslo refs/changes/29/910629/1 && git format-patch -1 --stdout FETCH_HEAD,"['spec/defines/oslo_cache_spec.rb', 'manifests/cache.pp', 'releasenotes/notes/cache-redis-opts-48e5d9aed33f3318.yaml']",3,000996d18565188f51b8d38318fa2a8811222fa1,,--- features: - | The ``oslo::cache`` defined resource type now supports the following new options for Redis backend and Redis Sentinel backend. - ``redis_server`` - ``redis_username`` - ``redis_password`` - ``redis_sentinels`` - ``redis_socket_timeout`` - ``redis_sentinel_service_name`` ,,113,4
openstack%2Fpuppet-heat~910650,openstack/puppet-heat,master,Iadb8552abf55228729bf5d31795b1e4bbb8b9929,Refactor resource dependencies,MERGED,2024-02-29 17:29:35.000000000,2024-03-04 11:38:40.000000000,2024-03-04 11:38:40.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-02-29 17:29:35.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/puppet-heat/commit/4947449ff87934f574ac89a26df49ed477a2c81b', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: Iadb8552abf55228729bf5d31795b1e4bbb8b9929\n'}, {'number': 2, 'created': '2024-02-29 17:31:47.000000000', 'files': ['manifests/api.pp', 'manifests/db.pp', 'spec/classes/heat_policy_spec.rb', 'manifests/cache.pp', 'manifests/deps.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp', 'manifests/api_cfn.pp'], 'web_link': 'https://opendev.org/openstack/puppet-heat/commit/d9840e99d0d51f4c95954b2fe3d0d9de9c0bab13', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: Iadb8552abf55228729bf5d31795b1e4bbb8b9929\n'}]",0,910650,d9840e99d0d51f4c95954b2fe3d0d9de9c0bab13,9,4,2,9816,,,0,"Refactor resource dependencies

This refactors resource dependencies to improve the following points.

 - Avoid unnecessary dependencies across services. For example aodh
   service does not require cinder db.

 - Restart only api service when config files like paste.ini, which
   are used only be api service is changed.

Change-Id: Iadb8552abf55228729bf5d31795b1e4bbb8b9929
",git fetch https://review.opendev.org/openstack/puppet-heat refs/changes/50/910650/1 && git format-patch -1 --stdout FETCH_HEAD,"['manifests/api.pp', 'manifests/db.pp', 'spec/classes/heat_policy_spec.rb', 'manifests/cache.pp', 'manifests/deps.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp', 'manifests/api_cfn.pp']",8,4947449ff87934f574ac89a26df49ed477a2c81b,deps-refactor," # On any paste-api.ini config change, we must restart Heat API. Heat_api_paste_ini<||> ~> Service['heat-api-cfn'] # On any uwsgi config change, we must restart Heat API. Heat_api_cfn_uwsgi_config<||> ~> Service['heat-api-cfn'] # On any paste-api.ini config change, we must restart Heat API. Heat_api_paste_ini<||> ~> Service[$service_name] ",,35,22
openstack%2Fpuppet-gnocchi~910693,openstack/puppet-gnocchi,master,Ib89091baaf9aba0809c2e9405389545168b755ec,Refactor resource dependencies,MERGED,2024-03-01 03:20:47.000000000,2024-03-04 11:31:24.000000000,2024-03-04 11:31:24.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-03-01 03:20:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/puppet-gnocchi/commit/97f4b2bd3cf0b20a9d58d7f65f4b584262f9783a', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: Ib89091baaf9aba0809c2e9405389545168b755ec\n'}, {'number': 2, 'created': '2024-03-01 03:23:29.000000000', 'files': ['spec/classes/gnocchi_policy_spec.rb', 'manifests/api.pp', 'manifests/db.pp', 'manifests/init.pp', 'manifests/deps.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp'], 'web_link': 'https://opendev.org/openstack/puppet-gnocchi/commit/3bf5d9ed3c8adb5417eb96fbd793655fff49b6fd', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: Ib89091baaf9aba0809c2e9405389545168b755ec\n'}]",0,910693,3bf5d9ed3c8adb5417eb96fbd793655fff49b6fd,9,4,2,9816,,,0,"Refactor resource dependencies

This refactors resource dependencies to improve the following points.

 - Avoid unnecessary dependencies across services. For example aodh
   service does not require cinder db.

 - Restart only api service when config files like paste.ini, which
   are used only be api service is changed.

Change-Id: Ib89091baaf9aba0809c2e9405389545168b755ec
",git fetch https://review.opendev.org/openstack/puppet-gnocchi refs/changes/93/910693/1 && git format-patch -1 --stdout FETCH_HEAD,"['spec/classes/gnocchi_policy_spec.rb', 'manifests/api.pp', 'manifests/db.pp', 'manifests/init.pp', 'manifests/deps.pp', 'manifests/policy.pp']",6,97f4b2bd3cf0b20a9d58d7f65f4b584262f9783a,deps-refactor, # policy config should occur in the config block also. Anchor['gnocchi::config::begin'] -> Openstacklib::Policy[$policy_path] -> Anchor['gnocchi::config::end'] ," tag => 'gnocchi',",24,20
openstack%2Fcharm-nova-cloud-controller~910663,openstack/charm-nova-cloud-controller,stable/ussuri,I18ed0c391b2d868ed39467b21539230842ca7873,Fix Ussuri gate,MERGED,2024-02-29 20:43:48.000000000,2024-03-04 11:28:07.000000000,2024-03-04 11:28:07.000000000,"[{'_account_id': 6737}, {'_account_id': 19298}, {'_account_id': 20648}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-29 20:43:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/f2d2204a2d9cfe7f9ccd87b5ee0719ca7d988be4', 'message': 'Fix Ussuri gate\n\nInclude libffi-dev binary package, which is required to\nbuild wheel for python-cffi.\n\nChange-Id: I18ed0c391b2d868ed39467b21539230842ca7873\n'}, {'number': 2, 'created': '2024-02-29 20:54:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/e470e4113759ac2955486773f76e012af3eab308', 'message': 'Fix Ussuri gate\n\nInclude binary packages required to build wheel for\nvarious libraries, like cffi and lxml.\n\nChange-Id: I18ed0c391b2d868ed39467b21539230842ca7873\n'}, {'number': 3, 'created': '2024-02-29 21:25:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/a39f5c6da455eb3d10ed873ca988b77ac719f209', 'message': 'Fix Ussuri gate\n\nInclude binary packages required to build wheel for\nvarious libraries, like cffi and lxml.\n\nAlso had to set an upper-limit for jsonschema.\n\nChange-Id: I18ed0c391b2d868ed39467b21539230842ca7873\n'}, {'number': 4, 'created': '2024-02-29 21:50:08.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/13210cfdea06e6cf7e54f3f066de8f95bf53263c', 'message': 'Fix Ussuri gate\n\nInclude binary packages required to build wheel for\nvarious libraries, like cffi and lxml.\n\nAlso had to set an upper-limit for jsonschema.\n\nChange-Id: I18ed0c391b2d868ed39467b21539230842ca7873\n'}, {'number': 5, 'created': '2024-02-29 22:07:52.000000000', 'files': ['bindep.txt', 'test-requirements.txt'], 'web_link': 'https://opendev.org/openstack/charm-nova-cloud-controller/commit/b9a387b84acd350107bff24d42a1eb365b6c68ab', 'message': 'Fix Ussuri gate\n\nInclude binary packages required to build wheel for\nvarious libraries, like cffi and lxml.\n\nAlso had to set an upper-limit for jsonschema.\n\nChange-Id: I18ed0c391b2d868ed39467b21539230842ca7873\n'}]",2,910663,b9a387b84acd350107bff24d42a1eb365b6c68ab,17,4,5,1131,,,0,"Fix Ussuri gate

Include binary packages required to build wheel for
various libraries, like cffi and lxml.

Also had to set an upper-limit for jsonschema.

Change-Id: I18ed0c391b2d868ed39467b21539230842ca7873
",git fetch https://review.opendev.org/openstack/charm-nova-cloud-controller refs/changes/63/910663/1 && git format-patch -1 --stdout FETCH_HEAD,['bindep.txt'],1,f2d2204a2d9cfe7f9ccd87b5ee0719ca7d988be4,fix-gate,libffi-dev [platform:dpkg],,1,1
openstack%2Fmetalsmith~910636,openstack/metalsmith,master,I6d630eaa8057799c160deba1a27d5561baf10bc7,[DNM] TEST CI,ABANDONED,2024-02-29 15:22:17.000000000,2024-03-04 11:01:00.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-02-29 15:22:17.000000000', 'files': ['metalsmith/__init__.py'], 'web_link': 'https://opendev.org/openstack/metalsmith/commit/988a768fc010576c13a275023b280e0521e386b2', 'message': '[DNM] TEST CI\n\nChange-Id: I6d630eaa8057799c160deba1a27d5561baf10bc7\n'}]",1,910636,988a768fc010576c13a275023b280e0521e386b2,3,1,1,23851,,,0,"[DNM] TEST CI

Change-Id: I6d630eaa8057799c160deba1a27d5561baf10bc7
",git fetch https://review.opendev.org/openstack/metalsmith refs/changes/36/910636/1 && git format-patch -1 --stdout FETCH_HEAD,['metalsmith/__init__.py'],1,988a768fc010576c13a275023b280e0521e386b2,test-ci,### THIS IS A TEST ### ,,2,0
openstack%2Freleases~910844,openstack/releases,master,I099619a4a46be2b3553e202bbb0b4c856f2c7170,Release ironic-prometheus-exporter 4.3.0 for Caracal,MERGED,2024-03-01 20:04:57.000000000,2024-03-04 10:49:19.000000000,2024-03-04 10:49:19.000000000,"[{'_account_id': 13252}, {'_account_id': 15519}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 23851}]","[{'number': 1, 'created': '2024-03-01 20:04:57.000000000', 'files': ['deliverables/caracal/ironic-prometheus-exporter.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/fa47eee0715b92d2708173bc84c10bbdec11ebf4', 'message': 'Release ironic-prometheus-exporter 4.3.0 for Caracal\n\nThis could be a patch release, making it a feature release so we\nhave room for backports if needed.\n\nChange-Id: I099619a4a46be2b3553e202bbb0b4c856f2c7170\n'}]",1,910844,fa47eee0715b92d2708173bc84c10bbdec11ebf4,8,5,1,10342,,,0,"Release ironic-prometheus-exporter 4.3.0 for Caracal

This could be a patch release, making it a feature release so we
have room for backports if needed.

Change-Id: I099619a4a46be2b3553e202bbb0b4c856f2c7170
",git fetch https://review.opendev.org/openstack/releases refs/changes/44/910844/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/caracal/ironic-prometheus-exporter.yaml'],1,fa47eee0715b92d2708173bc84c10bbdec11ebf4,,releases: - version: 4.3.0 projects: - repo: openstack/ironic-prometheus-exporter hash: 4cb6f5da49db76040b16c0e3199559fe01219e34,,5,0
openstack%2Freleases~910845,openstack/releases,master,Ic6e27195de5b1712c2945990b752d1af17adf022,Release ironic-python-agent-builder 5.3.0 for caracal,MERGED,2024-03-01 20:08:25.000000000,2024-03-04 10:49:17.000000000,2024-03-04 10:49:17.000000000,"[{'_account_id': 13252}, {'_account_id': 15519}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 23851}]","[{'number': 1, 'created': '2024-03-01 20:08:25.000000000', 'files': ['deliverables/caracal/ironic-python-agent-builder.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/4bdbf0c4c6c4000720ace990a5db518a6ad6887f', 'message': 'Release ironic-python-agent-builder 5.3.0 for caracal\n\nThis could be a patch release, but making it a feature release to give\nroom for backports.\n\nChange-Id: Ic6e27195de5b1712c2945990b752d1af17adf022\n'}]",2,910845,4bdbf0c4c6c4000720ace990a5db518a6ad6887f,8,5,1,10342,,,0,"Release ironic-python-agent-builder 5.3.0 for caracal

This could be a patch release, but making it a feature release to give
room for backports.

Change-Id: Ic6e27195de5b1712c2945990b752d1af17adf022
",git fetch https://review.opendev.org/openstack/releases refs/changes/45/910845/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/caracal/ironic-python-agent-builder.yaml'],1,4bdbf0c4c6c4000720ace990a5db518a6ad6887f,,releases: - version: 5.3.0 projects: - repo: openstack/ironic-python-agent-builder hash: 1d2877e8724bfd9930365a7197bf63ec7bd515d5,,5,0
openstack%2Fneutron~909943,openstack/neutron,master,Icc84b54be07d39059723d6c233c03aa130102423,Fix iptables mapping of 'ipip' protocol,MERGED,2024-02-22 23:37:45.000000000,2024-03-04 10:46:16.000000000,2024-03-04 10:44:58.000000000,"[{'_account_id': 8313}, {'_account_id': 9656}, {'_account_id': 9845}, {'_account_id': 11975}, {'_account_id': 16688}, {'_account_id': 22348}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-02-22 23:37:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/b62cd1e1aff2daef2e4d9cddbf305428ea96d644', 'message': ""Test iptables mapping of 'ipip' protocol\n\nThe neutron API accepts 'ipip' as a security group protocol,\nwhich maps to IPPROTO_IPIP (4) in in.h.\n\niptables-save uses 'ipencap' when 'ipip' is given as a\nprotocol argument, so enforces an incorrect rule.\n\nAdd tests for IP protocol '4' and '94' so make sure the\nIptablesFirewallDriver class in neutron treats them\ncorrectly.\n\nAdditionally, add a disabled test for 'ipip' to make sure\nthe IptablesFirewallDriver class correctly maps it to\n'ipencap'. This will have to be enabled once we bump\nneutron-lib.\n\nChange-Id: Icc84b54be07d39059723d6c233c03aa130102423\nPartial-bug: #2054324\n""}, {'number': 2, 'created': '2024-02-23 00:03:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/4461f395dd5a26349cf9b3d2e5226b0167031c7a', 'message': ""Fix iptables mapping of 'ipip' protocol\n\nThe neutron API accepts 'ipip' as a security group protocol,\nwhich maps to IPPROTO_IPIP (4) in in.h.\n\niptables-save uses 'ipencap' when 'ipip' is given as a\nprotocol argument, so enforces an incorrect rule.\n\nMap 'ipip' to use the string 'ipencap' so the\nIptablesFirewallDriver class in neutron works correctly.\nOnce neutron-lib is bumped this can be removed.\n\nAdd tests for IP protocol 'ipip', '4' and '94' to make\nsure the IptablesFirewallDriver class in neutron treats\nthem correctly.\n\nChange-Id: Icc84b54be07d39059723d6c233c03aa130102423\nPartial-bug: #2054324\n""}, {'number': 3, 'created': '2024-02-27 20:14:26.000000000', 'files': ['neutron/agent/linux/iptables_firewall.py', 'neutron/tests/unit/agent/linux/test_iptables_firewall.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/793dfb04d087c96470dc4913eb4f17aeff777534', 'message': ""Fix iptables mapping of 'ipip' protocol\n\nMap 'ipip' to use the string 'ipencap' so the\nIptablesFirewallDriver class in neutron works correctly.\nOnce neutron-lib is bumped this can be removed.\n\nAdd tests for IP protocol 'ipip', '4' and '94' to make\nsure the IptablesFirewallDriver class in neutron treats\nthem correctly.\n\nLong description below.\n\nThis is one of those confusing edge cases and I think\nLinux is conspiring against us. Let me explain.\n\n1) neutron-lib does correctly define the protocol name 'ipip' as 4.\n\n2) The linux kernel uses the same in in.h:\n\n IPPROTO_IPIP = 4\n IPPROTO_BEETPH = 94 (?)\n\n3) iptables maps 'ipip' to 94 and 'ipencap' to 4.\n\n # for num in {0..255}; do iptables -A INPUT -p $num; done\n # iptables-save | grep -E 'ipip|ipencap'\n -A INPUT -p ipencap\n -A INPUT -p ipip\n\n4) /etc/protocols does the same as iptables:\n\n grep -E 'ipencap|ipip' /etc/protocols\n ipencap 4 IP-ENCAP # IP encapsulated in IP (officially ``IP'')\n ipip 94 IPIP # IP-within-IP Encapsulation Protocol\n\n5) getprotoby{name|number} does what /etc/protocols does:\n\n $ getprotobyname ipip\n struct protoent: (0x7fbbbcca9c60)\n   p_name ipip\n   p_aliases IPIP\n   p_proto 94\n\n $ getprotobynumber 4\n struct protoent: (0x7fc51ad86be0)\n   p_name ipencap\n   p_aliases IP-ENCAP\n   p_proto 4\n\nNeutron actually builds a mapping based on the getprotoby*\ncalls, so in the iptables case it winds-up doing the wrong\nthing.\n\nPartial-bug: #2054324\nChange-Id: Icc84b54be07d39059723d6c233c03aa130102423\n""}]",5,909943,793dfb04d087c96470dc4913eb4f17aeff777534,26,7,3,1131,,,0,"Fix iptables mapping of 'ipip' protocol

Map 'ipip' to use the string 'ipencap' so the
IptablesFirewallDriver class in neutron works correctly.
Once neutron-lib is bumped this can be removed.

Add tests for IP protocol 'ipip', '4' and '94' to make
sure the IptablesFirewallDriver class in neutron treats
them correctly.

Long description below.

This is one of those confusing edge cases and I think
Linux is conspiring against us. Let me explain.

1) neutron-lib does correctly define the protocol name 'ipip' as 4.

2) The linux kernel uses the same in in.h:

 IPPROTO_IPIP = 4
 IPPROTO_BEETPH = 94 (?)

3) iptables maps 'ipip' to 94 and 'ipencap' to 4.

 # for num in {0..255}; do iptables -A INPUT -p $num; done
 # iptables-save | grep -E 'ipip|ipencap'
 -A INPUT -p ipencap
 -A INPUT -p ipip

4) /etc/protocols does the same as iptables:

 grep -E 'ipencap|ipip' /etc/protocols
 ipencap 4 IP-ENCAP # IP encapsulated in IP (officially ``IP'')
 ipip 94 IPIP # IP-within-IP Encapsulation Protocol

5) getprotoby{name|number} does what /etc/protocols does:

 $ getprotobyname ipip
 struct protoent: (0x7fbbbcca9c60)
   p_name ipip
   p_aliases IPIP
   p_proto 94

 $ getprotobynumber 4
 struct protoent: (0x7fc51ad86be0)
   p_name ipencap
   p_aliases IP-ENCAP
   p_proto 4

Neutron actually builds a mapping based on the getprotoby*
calls, so in the iptables case it winds-up doing the wrong
thing.

Partial-bug: #2054324
Change-Id: Icc84b54be07d39059723d6c233c03aa130102423
",git fetch https://review.opendev.org/openstack/neutron refs/changes/43/909943/1 && git format-patch -1 --stdout FETCH_HEAD,['neutron/tests/unit/agent/linux/test_iptables_firewall.py'],1,b62cd1e1aff2daef2e4d9cddbf305428ea96d644,bug/2054324," # TODO(haleyb): enable this test once neutron-lib with fix is available def _test_filter_ipv4_ingress_protocol_ipip(self): # 'ipip' via the API uses 'ipencap' to match what iptables-save # uses, which is IP-ENCAP/'4' from /etc/protocols (see bug #2054324) rule = {'ethertype': 'IPv4', 'direction': 'ingress', 'protocol': 'ipip'} ingress = mock.call.add_rule('ifake_dev', '-p ipencap -j RETURN', top=False, comment=None) egress = None self._test_prepare_port_filter(rule, ingress, egress) def test_filter_ipv4_ingress_protocol_ipip_by_num(self): # '4' via the API uses 'ipencap' to match what iptables-save # uses, which is IP-ENCAP/'4' from /etc/protocols (see bug #2054324) rule = {'ethertype': 'IPv4', 'direction': 'ingress', 'protocol': '4'} ingress = mock.call.add_rule('ifake_dev', '-p ipencap -j RETURN', top=False, comment=None) egress = None self._test_prepare_port_filter(rule, ingress, egress) def test_filter_ipv4_ingress_protocol_ipencap_by_num(self): # '94' via the API uses 'ipip' to match what iptables-save # uses, which is IPIP/'94' from /etc/protocols (see bug #2054324) rule = {'ethertype': 'IPv4', 'direction': 'ingress', 'protocol': '94'} ingress = mock.call.add_rule('ifake_dev', '-p ipip -j RETURN', top=False, comment=None) egress = None self._test_prepare_port_filter(rule, ingress, egress) ",,37,0
openstack%2Fneutron~910716,openstack/neutron,stable/zed,Ied8f7a5b6c0e9c295e8e040546c53bd98206ef12,[stable-only][OVN] Set VETH interface MAC address before up,MERGED,2024-03-01 10:29:41.000000000,2024-03-04 10:43:35.000000000,2024-03-04 10:42:11.000000000,"[{'_account_id': 1131}, {'_account_id': 8313}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 10:29:41.000000000', 'files': ['neutron/agent/ovn/metadata/agent.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/d253552ad26f4920ea9f1f53e5435f291f391790', 'message': '[stable-only][OVN] Set VETH interface MAC address before up\n\nSet the VETH interface MAC address of the metadata namespace before\nsetting this interface as up.\n\nThis change was introduced in [1] and should be backported to stable\nversions.\n\n[1]https://review.opendev.org/c/openstack/neutron/+/894026/12/neutron/agent/ovn/metadata/agent.py#710\n\nCloses-Bug: #2055561\nChange-Id: Ied8f7a5b6c0e9c295e8e040546c53bd98206ef12\n(cherry picked from commit ac63999b6621ca409eff53a9f113efd3fd28c966)\n'}]",1,910716,d253552ad26f4920ea9f1f53e5435f291f391790,9,3,1,16688,,,0,"[stable-only][OVN] Set VETH interface MAC address before up

Set the VETH interface MAC address of the metadata namespace before
setting this interface as up.

This change was introduced in [1] and should be backported to stable
versions.

[1]https://review.opendev.org/c/openstack/neutron/+/894026/12/neutron/agent/ovn/metadata/agent.py#710

Closes-Bug: #2055561
Change-Id: Ied8f7a5b6c0e9c295e8e040546c53bd98206ef12
(cherry picked from commit ac63999b6621ca409eff53a9f113efd3fd28c966)
",git fetch https://review.opendev.org/openstack/neutron refs/changes/16/910716/1 && git format-patch -1 --stdout FETCH_HEAD,['neutron/agent/ovn/metadata/agent.py'],1,d253552ad26f4920ea9f1f53e5435f291f391790,bug/2055561, # Configure the MAC address. ip2.link.set_address(metadata_port_info.mac) , # Configure the MAC address. ip2.link.set_address(metadata_port_info.mac) ,3,3
openstack%2Fneutron~910715,openstack/neutron,stable/2023.1,Ied8f7a5b6c0e9c295e8e040546c53bd98206ef12,[stable-only][OVN] Set VETH interface MAC address before up,MERGED,2024-03-01 10:29:31.000000000,2024-03-04 10:43:16.000000000,2024-03-04 10:42:08.000000000,"[{'_account_id': 1131}, {'_account_id': 8313}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 10:29:31.000000000', 'files': ['neutron/agent/ovn/metadata/agent.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/0673a9bb232ad2e5db45a5ed4b4ad81275e475d6', 'message': '[stable-only][OVN] Set VETH interface MAC address before up\n\nSet the VETH interface MAC address of the metadata namespace before\nsetting this interface as up.\n\nThis change was introduced in [1] and should be backported to stable\nversions.\n\n[1]https://review.opendev.org/c/openstack/neutron/+/894026/12/neutron/agent/ovn/metadata/agent.py#710\n\nCloses-Bug: #2055561\nChange-Id: Ied8f7a5b6c0e9c295e8e040546c53bd98206ef12\n(cherry picked from commit ac63999b6621ca409eff53a9f113efd3fd28c966)\n'}]",2,910715,0673a9bb232ad2e5db45a5ed4b4ad81275e475d6,12,3,1,16688,,,0,"[stable-only][OVN] Set VETH interface MAC address before up

Set the VETH interface MAC address of the metadata namespace before
setting this interface as up.

This change was introduced in [1] and should be backported to stable
versions.

[1]https://review.opendev.org/c/openstack/neutron/+/894026/12/neutron/agent/ovn/metadata/agent.py#710

Closes-Bug: #2055561
Change-Id: Ied8f7a5b6c0e9c295e8e040546c53bd98206ef12
(cherry picked from commit ac63999b6621ca409eff53a9f113efd3fd28c966)
",git fetch https://review.opendev.org/openstack/neutron refs/changes/15/910715/1 && git format-patch -1 --stdout FETCH_HEAD,['neutron/agent/ovn/metadata/agent.py'],1,0673a9bb232ad2e5db45a5ed4b4ad81275e475d6,bug/2055561, # Configure the MAC address. ip2.link.set_address(metadata_port_info.mac) , # Configure the MAC address. ip2.link.set_address(metadata_port_info.mac) ,3,3
openstack%2Fneutron~910714,openstack/neutron,stable/2023.2,Ied8f7a5b6c0e9c295e8e040546c53bd98206ef12,[stable-only][OVN] Set VETH interface MAC address before up,MERGED,2024-03-01 10:29:09.000000000,2024-03-04 10:40:43.000000000,2024-03-04 10:39:10.000000000,"[{'_account_id': 1131}, {'_account_id': 8313}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 10:29:09.000000000', 'files': ['neutron/agent/ovn/metadata/agent.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/ac63999b6621ca409eff53a9f113efd3fd28c966', 'message': '[stable-only][OVN] Set VETH interface MAC address before up\n\nSet the VETH interface MAC address of the metadata namespace before\nsetting this interface as up.\n\nThis change was introduced in [1] and should be backported to stable\nversions.\n\n[1]https://review.opendev.org/c/openstack/neutron/+/894026/12/neutron/agent/ovn/metadata/agent.py#710\n\nCloses-Bug: #2055561\nChange-Id: Ied8f7a5b6c0e9c295e8e040546c53bd98206ef12\n'}]",2,910714,ac63999b6621ca409eff53a9f113efd3fd28c966,12,3,1,16688,,,0,"[stable-only][OVN] Set VETH interface MAC address before up

Set the VETH interface MAC address of the metadata namespace before
setting this interface as up.

This change was introduced in [1] and should be backported to stable
versions.

[1]https://review.opendev.org/c/openstack/neutron/+/894026/12/neutron/agent/ovn/metadata/agent.py#710

Closes-Bug: #2055561
Change-Id: Ied8f7a5b6c0e9c295e8e040546c53bd98206ef12
",git fetch https://review.opendev.org/openstack/neutron refs/changes/14/910714/1 && git format-patch -1 --stdout FETCH_HEAD,['neutron/agent/ovn/metadata/agent.py'],1,ac63999b6621ca409eff53a9f113efd3fd28c966,bug/2055561, # Configure the MAC address. ip2.link.set_address(metadata_port_info.mac) , # Configure the MAC address. ip2.link.set_address(metadata_port_info.mac) ,3,3
openstack%2Frequirements~910738,openstack/requirements,master,I695642885cda83b44d079701b56f1805213ba972,update constraint for python-novaclient to new release 18.5.0,MERGED,2024-03-01 14:00:34.000000000,2024-03-04 10:40:04.000000000,2024-03-04 10:39:05.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 14:00:34.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/26fb38f4dd402f93f8d6ee7bba7f638d0c96e6d2', 'message': 'update constraint for python-novaclient to new release 18.5.0\n\nmeta: version: 18.5.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: Ieb6103875b0e9ad3e6f0004d61da1b982e832bba\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nChange-Id: I695642885cda83b44d079701b56f1805213ba972\n'}]",0,910738,26fb38f4dd402f93f8d6ee7bba7f638d0c96e6d2,7,2,1,11131,,,0,"update constraint for python-novaclient to new release 18.5.0

meta: version: 18.5.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: yes
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: Ieb6103875b0e9ad3e6f0004d61da1b982e832bba
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
Change-Id: I695642885cda83b44d079701b56f1805213ba972
",git fetch https://review.opendev.org/openstack/requirements refs/changes/38/910738/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,26fb38f4dd402f93f8d6ee7bba7f638d0c96e6d2,new-release,python-novaclient===18.5.0,python-novaclient===18.4.0,1,1
openstack%2Fkolla-ansible~909556,openstack/kolla-ansible,stable/2023.2,Idf035bacbf5c2195d813ec4702362897f2ff907d,Fix gnocchi-metricd when TLS and Swift enabled,MERGED,2024-02-21 18:09:23.000000000,2024-03-04 10:33:30.000000000,2024-03-04 10:32:04.000000000,"[{'_account_id': 22348}, {'_account_id': 22629}, {'_account_id': 23084}, {'_account_id': 32553}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-02-21 18:09:23.000000000', 'files': ['ansible/roles/gnocchi/templates/gnocchi.conf.j2'], 'web_link': 'https://opendev.org/openstack/kolla-ansible/commit/fc84fa51a52d59650157c7c5e9e4564b2f79f6e9', 'message': 'Fix gnocchi-metricd when TLS and Swift enabled\n\nCloses-Bug: #2051731\nChange-Id: Idf035bacbf5c2195d813ec4702362897f2ff907d\nSigned-off-by: Maksim Malchuk <maksim.malchuk@gmail.com>\n(cherry picked from commit c0f84c068d3013be18b5f6302b31e14d6d471b2b)\n'}]",0,909556,fc84fa51a52d59650157c7c5e9e4564b2f79f6e9,11,5,1,14200,,,0,"Fix gnocchi-metricd when TLS and Swift enabled

Closes-Bug: #2051731
Change-Id: Idf035bacbf5c2195d813ec4702362897f2ff907d
Signed-off-by: Maksim Malchuk <maksim.malchuk@gmail.com>
(cherry picked from commit c0f84c068d3013be18b5f6302b31e14d6d471b2b)
",git fetch https://review.opendev.org/openstack/kolla-ansible refs/changes/56/909556/1 && git format-patch -1 --stdout FETCH_HEAD,['ansible/roles/gnocchi/templates/gnocchi.conf.j2'],1,fc84fa51a52d59650157c7c5e9e4564b2f79f6e9,fix-gnocchi-metricd-stable/2023.2,{% if gnocchi_backend_storage == 'swift' %} swift_cacert = {{ openstack_cacert }} {% endif %}swift_cacert = {{ openstack_cacert }},,4,0
openstack%2Fkolla-ansible~909558,openstack/kolla-ansible,stable/zed,Idf035bacbf5c2195d813ec4702362897f2ff907d,Fix gnocchi-metricd when TLS and Swift enabled,MERGED,2024-02-21 18:10:20.000000000,2024-03-04 10:33:19.000000000,2024-03-04 10:32:07.000000000,"[{'_account_id': 22348}, {'_account_id': 22629}, {'_account_id': 23084}, {'_account_id': 32553}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-02-21 18:10:20.000000000', 'files': ['ansible/roles/gnocchi/templates/gnocchi.conf.j2'], 'web_link': 'https://opendev.org/openstack/kolla-ansible/commit/7fb7d4c6cfb6825f47b2108221835276389b3273', 'message': 'Fix gnocchi-metricd when TLS and Swift enabled\n\nCloses-Bug: #2051731\nChange-Id: Idf035bacbf5c2195d813ec4702362897f2ff907d\nSigned-off-by: Maksim Malchuk <maksim.malchuk@gmail.com>\n(cherry picked from commit c0f84c068d3013be18b5f6302b31e14d6d471b2b)\n'}]",0,909558,7fb7d4c6cfb6825f47b2108221835276389b3273,11,5,1,14200,,,0,"Fix gnocchi-metricd when TLS and Swift enabled

Closes-Bug: #2051731
Change-Id: Idf035bacbf5c2195d813ec4702362897f2ff907d
Signed-off-by: Maksim Malchuk <maksim.malchuk@gmail.com>
(cherry picked from commit c0f84c068d3013be18b5f6302b31e14d6d471b2b)
",git fetch https://review.opendev.org/openstack/kolla-ansible refs/changes/58/909558/1 && git format-patch -1 --stdout FETCH_HEAD,['ansible/roles/gnocchi/templates/gnocchi.conf.j2'],1,7fb7d4c6cfb6825f47b2108221835276389b3273,fix-gnocchi-metricd-stable/zed,{% if gnocchi_backend_storage == 'swift' %} swift_cacert = {{ openstack_cacert }} {% endif %}swift_cacert = {{ openstack_cacert }},,4,0
openstack%2Fkolla-ansible~909557,openstack/kolla-ansible,stable/2023.1,Idf035bacbf5c2195d813ec4702362897f2ff907d,Fix gnocchi-metricd when TLS and Swift enabled,MERGED,2024-02-21 18:09:54.000000000,2024-03-04 10:33:12.000000000,2024-03-04 10:32:09.000000000,"[{'_account_id': 22348}, {'_account_id': 22629}, {'_account_id': 23084}, {'_account_id': 32553}, {'_account_id': 36201}]","[{'number': 1, 'created': '2024-02-21 18:09:54.000000000', 'files': ['ansible/roles/gnocchi/templates/gnocchi.conf.j2'], 'web_link': 'https://opendev.org/openstack/kolla-ansible/commit/1a15012d4e9d20894cd862ce226df5020726e5b7', 'message': 'Fix gnocchi-metricd when TLS and Swift enabled\n\nCloses-Bug: #2051731\nChange-Id: Idf035bacbf5c2195d813ec4702362897f2ff907d\nSigned-off-by: Maksim Malchuk <maksim.malchuk@gmail.com>\n(cherry picked from commit c0f84c068d3013be18b5f6302b31e14d6d471b2b)\n'}]",0,909557,1a15012d4e9d20894cd862ce226df5020726e5b7,10,5,1,14200,,,0,"Fix gnocchi-metricd when TLS and Swift enabled

Closes-Bug: #2051731
Change-Id: Idf035bacbf5c2195d813ec4702362897f2ff907d
Signed-off-by: Maksim Malchuk <maksim.malchuk@gmail.com>
(cherry picked from commit c0f84c068d3013be18b5f6302b31e14d6d471b2b)
",git fetch https://review.opendev.org/openstack/kolla-ansible refs/changes/57/909557/1 && git format-patch -1 --stdout FETCH_HEAD,['ansible/roles/gnocchi/templates/gnocchi.conf.j2'],1,1a15012d4e9d20894cd862ce226df5020726e5b7,fix-gnocchi-metricd-stable/2023.1,{% if gnocchi_backend_storage == 'swift' %} swift_cacert = {{ openstack_cacert }} {% endif %}swift_cacert = {{ openstack_cacert }},,4,0
openstack%2Frequirements~910736,openstack/requirements,master,I91d3c552cf7cd6bc4d6f01f5add6526978a90846,update constraint for aodhclient to new release 3.5.0,MERGED,2024-03-01 13:59:40.000000000,2024-03-04 10:23:09.000000000,2024-03-04 10:22:09.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 13:59:40.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/e2f8b9ae5417d3525d53df29ae27eff802dbd847', 'message': 'update constraint for aodhclient to new release 3.5.0\n\nmeta: version: 3.5.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: no\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: I8442cfcc323497d860732644ea87e41eb93b42c2\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nChange-Id: I91d3c552cf7cd6bc4d6f01f5add6526978a90846\n'}]",0,910736,e2f8b9ae5417d3525d53df29ae27eff802dbd847,7,2,1,11131,,,0,"update constraint for aodhclient to new release 3.5.0

meta: version: 3.5.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: no
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: I8442cfcc323497d860732644ea87e41eb93b42c2
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
Change-Id: I91d3c552cf7cd6bc4d6f01f5add6526978a90846
",git fetch https://review.opendev.org/openstack/requirements refs/changes/36/910736/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,e2f8b9ae5417d3525d53df29ae27eff802dbd847,new-release,aodhclient===3.5.0,aodhclient===3.4.0,1,1
openstack%2Frequirements~910740,openstack/requirements,master,I3468a486d23f026d3f19edadbf0253330192380c,update constraint for python-watcherclient to new release 4.3.0,MERGED,2024-03-01 14:02:20.000000000,2024-03-04 10:13:08.000000000,2024-03-04 10:12:08.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 14:02:20.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/6f03e682bd135d0feb7173df1445b1c2b2e7077d', 'message': 'update constraint for python-watcherclient to new release 4.3.0\n\nmeta: version: 4.3.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: If79990048de4033df8d49c533d40e74ff06f12bd\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nChange-Id: I3468a486d23f026d3f19edadbf0253330192380c\n'}]",0,910740,6f03e682bd135d0feb7173df1445b1c2b2e7077d,7,2,1,11131,,,0,"update constraint for python-watcherclient to new release 4.3.0

meta: version: 4.3.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: yes
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: If79990048de4033df8d49c533d40e74ff06f12bd
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
Change-Id: I3468a486d23f026d3f19edadbf0253330192380c
",git fetch https://review.opendev.org/openstack/requirements refs/changes/40/910740/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,6f03e682bd135d0feb7173df1445b1c2b2e7077d,new-release,python-watcherclient===4.3.0,python-watcherclient===4.2.0,1,1
openstack%2Freleases~910846,openstack/releases,master,I4c2074a06cceebed9474a972a2b2204fd8ec8627,Release ironic-ui 6.3.0,MERGED,2024-03-01 20:10:50.000000000,2024-03-04 10:07:20.000000000,2024-03-04 10:07:20.000000000,"[{'_account_id': 13252}, {'_account_id': 15519}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 23851}]","[{'number': 1, 'created': '2024-03-01 20:10:50.000000000', 'files': ['deliverables/caracal/ironic-ui.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/a1d2e0a894182eb18ac4d3d65fba5c1496040098', 'message': 'Release ironic-ui 6.3.0\n\nIronic UI 6.3.0 release for Caracal.\n\nChange-Id: I4c2074a06cceebed9474a972a2b2204fd8ec8627\n'}]",1,910846,a1d2e0a894182eb18ac4d3d65fba5c1496040098,8,5,1,10342,,,0,"Release ironic-ui 6.3.0

Ironic UI 6.3.0 release for Caracal.

Change-Id: I4c2074a06cceebed9474a972a2b2204fd8ec8627
",git fetch https://review.opendev.org/openstack/releases refs/changes/46/910846/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/caracal/ironic-ui.yaml'],1,a1d2e0a894182eb18ac4d3d65fba5c1496040098,,releases: - version: 6.3.0 projects: - repo: openstack/ironic-ui hash: 6723871d4fa0723cd7ac0a4105b5c77f92c43059,,5,0
openstack%2Fskyline-console~910873,openstack/skyline-console,master,Iece38c32c681fd07e69d42f3f3f9901fee2bdf8f,fix: fix set security group when create instance,MERGED,2024-03-04 06:45:21.000000000,2024-03-04 09:57:10.000000000,2024-03-04 09:56:11.000000000,"[{'_account_id': 22348}, {'_account_id': 28706}]","[{'number': 1, 'created': '2024-03-04 06:45:21.000000000', 'files': ['src/pages/compute/containers/Instance/actions/StepCreate/NetworkStep/index.jsx'], 'web_link': 'https://opendev.org/openstack/skyline-console/commit/ade5757898aafc94e9df011aa40005e7dfc0c67f', 'message': 'fix: fix set security group when create instance\n\nHide security group selector when select any network or port which the port_security_enabled is false\n\nChange-Id: Iece38c32c681fd07e69d42f3f3f9901fee2bdf8f\n'}]",0,910873,ade5757898aafc94e9df011aa40005e7dfc0c67f,7,2,1,30434,,,0,"fix: fix set security group when create instance

Hide security group selector when select any network or port which the port_security_enabled is false

Change-Id: Iece38c32c681fd07e69d42f3f3f9901fee2bdf8f
",git fetch https://review.opendev.org/openstack/skyline-console refs/changes/73/910873/1 && git format-patch -1 --stdout FETCH_HEAD,['src/pages/compute/containers/Instance/actions/StepCreate/NetworkStep/index.jsx'],1,ade5757898aafc94e9df011aa40005e7dfc0c67f,instance," this.state.networkSelectRows = this.props.context?.networkSelectRows || []; this.state.portSelectRows = this.props.context?.portSelectRows || []; this.setState({ portSelectRows: selectedRows, }); get showSecurityGroups() { const { networkSelectRows = [], portSelectRows = [] } = this.state; if (!networkSelectRows.length && !portSelectRows.length) { return false; } if ( networkSelectRows.length && networkSelectRows.some((it) => !it.port_security_enabled) ) { return false; } if ( portSelectRows.length && portSelectRows.some((it) => !it.port_security_enabled) ) { return false; } return true; } hidden: !this.showSecurityGroups, required: this.showSecurityGroups,"," const showSecurityGroups = networkSelectRows.length && networkSelectRows.every((it) => it.port_security_enabled); hidden: !showSecurityGroups, required: showSecurityGroups,",27,5
openstack%2Freleases~910847,openstack/releases,master,I9e5b1bc3da799cc8dbf4cf488d0dc47a6c19b724,Release networking-generic-switch 7.3.0 for Caracal,MERGED,2024-03-01 20:16:42.000000000,2024-03-04 09:52:22.000000000,2024-03-04 09:52:22.000000000,"[{'_account_id': 13252}, {'_account_id': 15519}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 23851}]","[{'number': 1, 'created': '2024-03-01 20:16:42.000000000', 'files': ['deliverables/caracal/networking-generic-switch.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/02463570a7cab638ab1e74c82af9797f4d4031b2', 'message': 'Release networking-generic-switch 7.3.0 for Caracal\n\nChange-Id: I9e5b1bc3da799cc8dbf4cf488d0dc47a6c19b724\n'}]",1,910847,02463570a7cab638ab1e74c82af9797f4d4031b2,8,5,1,10342,,,0,"Release networking-generic-switch 7.3.0 for Caracal

Change-Id: I9e5b1bc3da799cc8dbf4cf488d0dc47a6c19b724
",git fetch https://review.opendev.org/openstack/releases refs/changes/47/910847/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/caracal/networking-generic-switch.yaml'],1,02463570a7cab638ab1e74c82af9797f4d4031b2,,releases: - version: 7.3.0 projects: - repo: openstack/networking-generic-switch hash: f749649db9b4a0829bc0e3f5d6b316a9fd3a19a3,,5,0
openstack%2Fkolla-ansible~909784,openstack/kolla-ansible,unmaintained/yoga,Idf035bacbf5c2195d813ec4702362897f2ff907d,Fix gnocchi-metricd when TLS and Swift enabled,MERGED,2024-02-21 18:14:32.000000000,2024-03-04 09:47:57.000000000,2024-03-04 09:46:57.000000000,"[{'_account_id': 22348}, {'_account_id': 22629}, {'_account_id': 23084}, {'_account_id': 32553}]","[{'number': 1, 'created': '2024-02-21 18:14:32.000000000', 'files': ['ansible/roles/gnocchi/templates/gnocchi.conf.j2'], 'web_link': 'https://opendev.org/openstack/kolla-ansible/commit/645273510751f8e437de54b17188a84914620a14', 'message': 'Fix gnocchi-metricd when TLS and Swift enabled\n\nCloses-Bug: #2051731\nChange-Id: Idf035bacbf5c2195d813ec4702362897f2ff907d\nSigned-off-by: Maksim Malchuk <maksim.malchuk@gmail.com>\n(cherry picked from commit c0f84c068d3013be18b5f6302b31e14d6d471b2b)\n'}]",1,909784,645273510751f8e437de54b17188a84914620a14,13,4,1,14200,,,0,"Fix gnocchi-metricd when TLS and Swift enabled

Closes-Bug: #2051731
Change-Id: Idf035bacbf5c2195d813ec4702362897f2ff907d
Signed-off-by: Maksim Malchuk <maksim.malchuk@gmail.com>
(cherry picked from commit c0f84c068d3013be18b5f6302b31e14d6d471b2b)
",git fetch https://review.opendev.org/openstack/kolla-ansible refs/changes/84/909784/1 && git format-patch -1 --stdout FETCH_HEAD,['ansible/roles/gnocchi/templates/gnocchi.conf.j2'],1,645273510751f8e437de54b17188a84914620a14,fix-gnocchi-metricd-unmaintained/yoga,{% if gnocchi_backend_storage == 'swift' %} swift_cacert = {{ openstack_cacert }} {% endif %}swift_cacert = {{ openstack_cacert }},,4,0
openstack%2Frequirements~910741,openstack/requirements,master,I05f94065b0d0ddbc5211a338c160d9b93c9dd9ed,update constraint for python-keystoneclient to new release 5.4.0,MERGED,2024-03-01 14:03:02.000000000,2024-03-04 09:37:18.000000000,2024-03-04 09:35:36.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 14:03:02.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/34f4b4f12c58b5ed3f486b19680c00cfecc2a18f', 'message': 'update constraint for python-keystoneclient to new release 5.4.0\n\nmeta: version: 5.4.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: no\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: I322bf5f98620bc9918b80b8f8e03023e3b8905af\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nChange-Id: I05f94065b0d0ddbc5211a338c160d9b93c9dd9ed\n'}]",0,910741,34f4b4f12c58b5ed3f486b19680c00cfecc2a18f,7,2,1,11131,,,0,"update constraint for python-keystoneclient to new release 5.4.0

meta: version: 5.4.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: no
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: I322bf5f98620bc9918b80b8f8e03023e3b8905af
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
Change-Id: I05f94065b0d0ddbc5211a338c160d9b93c9dd9ed
",git fetch https://review.opendev.org/openstack/requirements refs/changes/41/910741/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,34f4b4f12c58b5ed3f486b19680c00cfecc2a18f,new-release,python-keystoneclient===5.4.0,python-keystoneclient===5.3.0,1,1
openstack%2Frequirements~910749,openstack/requirements,master,Iec136d09030046050336c08af5349b8c16756d42,update constraint for python-vitrageclient to new release 5.0.0,MERGED,2024-03-01 14:35:24.000000000,2024-03-04 09:36:31.000000000,2024-03-04 09:35:33.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 14:35:24.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/f0591b669e57e8313a72a74527a3af95eaf97aff', 'message': 'update constraint for python-vitrageclient to new release 5.0.0\n\nmeta: version: 5.0.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: yes\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: I63246d2403a82aab8742304b4af3a096f4756109\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nChange-Id: Iec136d09030046050336c08af5349b8c16756d42\n'}]",0,910749,f0591b669e57e8313a72a74527a3af95eaf97aff,7,2,1,11131,,,0,"update constraint for python-vitrageclient to new release 5.0.0

meta: version: 5.0.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: yes
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: I63246d2403a82aab8742304b4af3a096f4756109
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
Change-Id: Iec136d09030046050336c08af5349b8c16756d42
",git fetch https://review.opendev.org/openstack/requirements refs/changes/49/910749/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,f0591b669e57e8313a72a74527a3af95eaf97aff,new-release,python-vitrageclient===5.0.0,python-vitrageclient===4.8.0,1,1
openstack%2Fcastellan~910884,openstack/castellan,master,Id6ba2f3dff279371a13e319773b4579c82338774,Add release note about new consumer interfaces,MERGED,2024-03-04 09:04:16.000000000,2024-03-04 09:27:51.000000000,2024-03-04 09:26:47.000000000,"[{'_account_id': 22348}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-03-04 09:04:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/castellan/commit/26ada2ecf5ccd09e08d632edbd003e8418387472', 'message': 'Add release note about new consumer interfaces\n\nSince bc6d87b96912212ab797ad7634b2a45e37ea5fc6 was merged, any\nimplementations inheriting the base KeyManager class should implement\nthe two new consumer interfaces. This documents that upgrade impact\nso that the note appears in release note.\n\nChange-Id: Id6ba2f3dff279371a13e319773b4579c82338774\n'}, {'number': 2, 'created': '2024-03-04 09:04:38.000000000', 'files': ['releasenotes/notes/secret-consumers-e047d1c6f1a20e47.yaml'], 'web_link': 'https://opendev.org/openstack/castellan/commit/d578cbcce94fd1d7023feb15918c639b7c087d5f', 'message': 'Add release note about new consumer interfaces\n\nSince bc6d87b96912212ab797ad7634b2a45e37ea5fc6 was merged, any\nimplementations inheriting the base KeyManager class should implement\nthe two new consumer interfaces. This documents that upgrade impact\nso that the note appears in release note.\n\nChange-Id: Id6ba2f3dff279371a13e319773b4579c82338774\n'}]",0,910884,d578cbcce94fd1d7023feb15918c639b7c087d5f,8,2,2,9816,,,0,"Add release note about new consumer interfaces

Since bc6d87b96912212ab797ad7634b2a45e37ea5fc6 was merged, any
implementations inheriting the base KeyManager class should implement
the two new consumer interfaces. This documents that upgrade impact
so that the note appears in release note.

Change-Id: Id6ba2f3dff279371a13e319773b4579c82338774
",git fetch https://review.opendev.org/openstack/castellan refs/changes/84/910884/1 && git format-patch -1 --stdout FETCH_HEAD,['releasenotes/notes/secret-consumers-e047d1c6f1a20e47.yaml'],1,26ada2ecf5ccd09e08d632edbd003e8418387472,,"--- upgrade: - | The KeyManager class now has two new abstractmethods, ``add_consumer`` and ``remove_consumer``. Any implementations inheriting the base KeyManager class should override these two interfaces. ",,6,0
openstack%2Fproject-config~910100,openstack/project-config,master,I275f61c603b576748594838c2d525aa2f83d5664,Retire OpenStack-Chef: remove project from infra,MERGED,2024-02-24 21:04:51.000000000,2024-03-04 08:07:00.000000000,2024-03-04 07:53:30.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-24 21:04:51.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/project-config/commit/b6a7ce6b41667d4991d7899792bb36ebd5d6d76d', 'message': 'Retire OpenStack-Chef: remove project from infra\n\nOpenStack-Chef project has been retired\n- https://review.opendev.org/c/openstack/governance/+/905279\n\nthis commit removes it from infra.\n\nChange-Id: I275f61c603b576748594838c2d525aa2f83d5664\n'}, {'number': 2, 'created': '2024-02-26 20:05:12.000000000', 'files': ['gerritbot/channels.yaml', 'gerrit/projects.yaml', 'zuul.d/projects.yaml', 'zuul/main.yaml', 'gerrit/acls/openstack/openstack-chef.config'], 'web_link': 'https://opendev.org/openstack/project-config/commit/0d64da343623a314ebfcc6292e7d08885874485c', 'message': 'Retire OpenStack-Chef: remove project from infra\n\nOpenStack-Chef project has been retired\n- https://review.opendev.org/c/openstack/governance/+/905279\n\nthis commit removes it from infra.\n\nChange-Id: I275f61c603b576748594838c2d525aa2f83d5664\n'}]",1,910100,0d64da343623a314ebfcc6292e7d08885874485c,11,2,2,8556,,,0,"Retire OpenStack-Chef: remove project from infra

OpenStack-Chef project has been retired
- https://review.opendev.org/c/openstack/governance/+/905279

this commit removes it from infra.

Change-Id: I275f61c603b576748594838c2d525aa2f83d5664
",git fetch https://review.opendev.org/openstack/project-config refs/changes/00/910100/1 && git format-patch -1 --stdout FETCH_HEAD,"['gerritbot/channels.yaml', 'zuul.d/projects.yaml', 'zuul/main.yaml', 'gerrit/acls/openstack/openstack-chef.config']",4,b6a7ce6b41667d4991d7899792bb36ebd5d6d76d,retire-openstack-chef,,"[access] inheritFrom = openstack/meta-config [access ""refs/heads/*""] abandon = group openstack-chef-core create = group openstack-chef-release label-Code-Review = -2..+2 group openstack-chef-core label-Verified = -1..+1 group chef-ci label-Workflow = -1..+1 group openstack-chef-core [access ""refs/tags/*""] createSignedTag = group openstack-chef-release [receive] requireChangeId = true requireContributorAgreement = true [submit] mergeContent = true ",0,173
openstack%2Fpython-openstackclient~909870,openstack/python-openstackclient,master,I0f695a54235dfe3575b19817dfcf364cc82d1fd9,Add CLI support for adding multiple tags,NEW,2024-02-22 14:27:11.000000000,2024-03-04 07:54:20.000000000,,"[{'_account_id': 8122}, {'_account_id': 9303}, {'_account_id': 15334}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-22 14:27:11.000000000', 'files': ['openstackclient/tests/unit/image/v2/test_metadef_namespaces.py', 'doc/source/cli/data/glance.csv', 'openstackclient/image/v2/metadef_namespaces.py', 'setup.cfg'], 'web_link': 'https://opendev.org/openstack/python-openstackclient/commit/76fbd93a79a83bda21c04656ae565911e13ddf09', 'message': 'Add CLI support for adding multiple tags\n\nThis patch adds support for adding multiple metadef tags at once\nto the metadef namespaces.\n\nChange-Id: I0f695a54235dfe3575b19817dfcf364cc82d1fd9\n'}]",1,909870,76fbd93a79a83bda21c04656ae565911e13ddf09,5,4,1,33765,,,0,"Add CLI support for adding multiple tags

This patch adds support for adding multiple metadef tags at once
to the metadef namespaces.

Change-Id: I0f695a54235dfe3575b19817dfcf364cc82d1fd9
",git fetch https://review.opendev.org/openstack/python-openstackclient refs/changes/70/909870/1 && git format-patch -1 --stdout FETCH_HEAD,"['openstackclient/tests/unit/image/v2/test_metadef_namespaces.py', 'doc/source/cli/data/glance.csv', 'openstackclient/image/v2/metadef_namespaces.py', 'setup.cfg']",4,76fbd93a79a83bda21c04656ae565911e13ddf09,glance-gaps, image_metadef_namespace_set_multiple = openstackclient.image.v2.metadef_namespaces:SetMultiple,,139,1
openstack%2Freleases~910163,openstack/releases,master,I617f0db562c27da761b90cc24c3685f93c12a287,Release final python-brick-cinderclient-ext for 2024.1 Caracal,MERGED,2024-02-26 09:45:42.000000000,2024-03-04 07:33:37.000000000,2024-03-01 13:40:52.000000000,"[{'_account_id': 9236}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 27615}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-02-26 09:45:42.000000000', 'files': ['deliverables/caracal/python-brick-cinderclient-ext.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/2aa498182320f2dec1337a00bb4aa4ccc63c37f3', 'message': 'Release final python-brick-cinderclient-ext for 2024.1 Caracal\n\nThis is a release for python-brick-cinderclient-ext to get any merged but\nunreleased changes out prior to the client lib freeze for\n2024.1 Caracal going into effect.\n\nIf the team is ready to proceed, please leave a +1 to acknowledge this\nrelease and we will process right away. If the team is working on any\nfinal merges, leave a -1 with some detail on the status and update the\npatch with the new commit hash to use when ready.\n\nPatches with no response will be merged after Thursday, February 29th.\n\nChange-Id: I617f0db562c27da761b90cc24c3685f93c12a287\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}]",2,910163,2aa498182320f2dec1337a00bb4aa4ccc63c37f3,8,5,1,17685,,,0,"Release final python-brick-cinderclient-ext for 2024.1 Caracal

This is a release for python-brick-cinderclient-ext to get any merged but
unreleased changes out prior to the client lib freeze for
2024.1 Caracal going into effect.

If the team is ready to proceed, please leave a +1 to acknowledge this
release and we will process right away. If the team is working on any
final merges, leave a -1 with some detail on the status and update the
patch with the new commit hash to use when ready.

Patches with no response will be merged after Thursday, February 29th.

Change-Id: I617f0db562c27da761b90cc24c3685f93c12a287
Signed-off-by: Elod Illes <elod.illes@est.tech>
",git fetch https://review.opendev.org/openstack/releases refs/changes/63/910163/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/caracal/python-brick-cinderclient-ext.yaml'],1,2aa498182320f2dec1337a00bb4aa4ccc63c37f3,caracal-milestone-3,releases: - version: 2.3.0 projects: - repo: openstack/python-brick-cinderclient-ext hash: 4f46f144fc19a59aec85b57e0e18ccfb719bd09e,,5,0
openstack%2Freleases~910824,openstack/releases,master,I8c6cf16bea926da5c76739523e1001ef8e848730,Release reno 4.1.0,MERGED,2024-03-01 17:29:01.000000000,2024-03-04 07:32:08.000000000,2024-03-04 07:32:08.000000000,"[{'_account_id': 308}, {'_account_id': 13252}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-03-01 17:29:01.000000000', 'files': ['deliverables/_independent/reno.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/95e8ac7893a8c3d3783a950d140c8e6a2c7963c9', 'message': 'Release reno 4.1.0\n\nChange-Id: I8c6cf16bea926da5c76739523e1001ef8e848730\n'}]",4,910824,95e8ac7893a8c3d3783a950d140c8e6a2c7963c9,12,5,1,13252,,,0,"Release reno 4.1.0

Change-Id: I8c6cf16bea926da5c76739523e1001ef8e848730
",git fetch https://review.opendev.org/openstack/releases refs/changes/24/910824/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/_independent/reno.yaml'],1,95e8ac7893a8c3d3783a950d140c8e6a2c7963c9,release-reno, - version: 4.1.0 projects: - repo: openstack/reno hash: 47651ec90664943f7f346cfea8de2e43e9b3c779,,4,0
openstack%2Freleases~910164,openstack/releases,master,Iac4c725c2f8c3128870d5af8242cb467b15a4576,Release final python-cinderclient for 2024.1 Caracal,MERGED,2024-02-26 09:48:09.000000000,2024-03-04 07:27:49.000000000,2024-03-01 13:41:04.000000000,"[{'_account_id': 9236}, {'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 27615}, {'_account_id': 28522}]","[{'number': 1, 'created': '2024-02-26 09:48:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/releases/commit/4ba3d5f74062bef3c4a704d4c133d8d2dd2df5bc', 'message': 'Release final python-cinderclient for 2024.1 Caracal\n\nThis is a release for python-cinderclient to get any merged but\nunreleased changes out prior to the client lib freeze for\n2024.1 Caracal going into effect.\n\nIf the team is ready to proceed, please leave a +1 to acknowledge this\nrelease and we will process right away. If the team is working on any\nfinal merges, leave a -1 with some detail on the status and update the\npatch with the new commit hash to use when ready.\n\nPatches with no response will be merged after Thursday, February 29th.\n\nChange-Id: Iac4c725c2f8c3128870d5af8242cb467b15a4576\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}, {'number': 2, 'created': '2024-03-01 12:19:39.000000000', 'files': ['deliverables/caracal/python-cinderclient.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/b72e1ee80027bcd3d2b5699081358c27a43212f3', 'message': 'Release final python-cinderclient for 2024.1 Caracal\n\nThis is a release for python-cinderclient to get any merged but\nunreleased changes out prior to the client lib freeze for\n2024.1 Caracal going into effect.\n\nIf the team is ready to proceed, please leave a +1 to acknowledge this\nrelease and we will process right away. If the team is working on any\nfinal merges, leave a -1 with some detail on the status and update the\npatch with the new commit hash to use when ready.\n\nPatches with no response will be merged after Thursday, February 29th.\n\nChange-Id: Iac4c725c2f8c3128870d5af8242cb467b15a4576\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}]",2,910164,b72e1ee80027bcd3d2b5699081358c27a43212f3,10,5,2,17685,,,0,"Release final python-cinderclient for 2024.1 Caracal

This is a release for python-cinderclient to get any merged but
unreleased changes out prior to the client lib freeze for
2024.1 Caracal going into effect.

If the team is ready to proceed, please leave a +1 to acknowledge this
release and we will process right away. If the team is working on any
final merges, leave a -1 with some detail on the status and update the
patch with the new commit hash to use when ready.

Patches with no response will be merged after Thursday, February 29th.

Change-Id: Iac4c725c2f8c3128870d5af8242cb467b15a4576
Signed-off-by: Elod Illes <elod.illes@est.tech>
",git fetch https://review.opendev.org/openstack/releases refs/changes/64/910164/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/caracal/python-cinderclient.yaml'],1,4ba3d5f74062bef3c4a704d4c133d8d2dd2df5bc,caracal-milestone-3,releases: - version: 9.5.0 projects: - repo: openstack/python-cinderclient hash: 97202986114fe5e6245b6cf8de1ada23c777251f,,5,0
openstack%2Fhorizon~899752,openstack/horizon,master,I37cc02102285b1e83ec1343b710a57fb5ac4ba15,fix: ignore errors when flavors are deleted,MERGED,2023-10-31 20:37:57.000000000,2024-03-04 07:21:32.000000000,2024-03-04 07:20:21.000000000,"[{'_account_id': 6914}, {'_account_id': 8648}, {'_account_id': 22348}]","[{'number': 1, 'created': '2023-10-31 20:37:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/horizon/commit/a0cdd5ed70af611cca46d4610f9e0b98c5de7405', 'message': 'fix: ignore errors when flavors are deleted\n\nThe code used to list flavors when in the admin\nor project side was not consistent and raised\nalerts if viewing in the admin side but not in the\nproject side.\n\nThis patch moves their behaviour to be consistent\nand refactors the code to use the same code-base.\n\nCloses-Bug: #2042362\nChange-Id: I37cc02102285b1e83ec1343b710a57fb5ac4ba15\n'}, {'number': 2, 'created': '2023-11-01 14:27:45.000000000', 'files': ['openstack_dashboard/dashboards/admin/instances/tests.py', 'openstack_dashboard/dashboards/project/instances/tests.py', 'openstack_dashboard/dashboards/admin/instances/views.py', 'openstack_dashboard/dashboards/project/instances/views.py'], 'web_link': 'https://opendev.org/openstack/horizon/commit/aa21f4baa38fc70549b1c7341361519de6362d9b', 'message': 'fix: ignore errors when flavors are deleted\n\nThe code used to list flavors when in the admin\nor project side was not consistent and raised\nalerts if viewing in the admin side but not in the\nproject side.\n\nThis patch moves their behaviour to be consistent\nand refactors the code to use the same code-base.\n\nCloses-Bug: #2042362\nChange-Id: I37cc02102285b1e83ec1343b710a57fb5ac4ba15\n'}]",5,899752,aa21f4baa38fc70549b1c7341361519de6362d9b,22,3,2,1004,,,0,"fix: ignore errors when flavors are deleted

The code used to list flavors when in the admin
or project side was not consistent and raised
alerts if viewing in the admin side but not in the
project side.

This patch moves their behaviour to be consistent
and refactors the code to use the same code-base.

Closes-Bug: #2042362
Change-Id: I37cc02102285b1e83ec1343b710a57fb5ac4ba15
",git fetch https://review.opendev.org/openstack/horizon refs/changes/52/899752/1 && git format-patch -1 --stdout FETCH_HEAD,"['openstack_dashboard/dashboards/admin/instances/views.py', 'openstack_dashboard/dashboards/project/instances/views.py']",2,a0cdd5ed70af611cca46d4610f9e0b98c5de7405,fix-deleted-images," instance.full_flavor = instance_utils.resolve_flavor(self.request, instance, flavor_dict)"," flavor_id = instance.flavor[""id""] if flavor_id in flavor_dict: instance.full_flavor = flavor_dict[flavor_id] else: # If the flavor_id is not in flavor_dict, # put info in the log file. LOG.info('Unable to retrieve flavor ""%s"" for instance ""%s"".', flavor_id, instance.id)",8,20
openstack%2Fopenstack-helm~910851,openstack/openstack-helm,master,Ib766296015878481bcd93b7ca036cb3da66b04ed,DEBUG: Update value to metadata_listen_port and use default endpoint,ABANDONED,2024-03-01 21:40:12.000000000,2024-03-04 05:02:43.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-01 21:40:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/ff57767b1263f1fb89a6db58145a26e1a29fa65b', 'message': 'DEBUG: Update value to metadata_listen_port and use default endpoint\n\nmetadata_port value used in queens version and changed in rocky version to metadata_listen_port\n\nChange-Id: Ib766296015878481bcd93b7ca036cb3da66b04ed\n'}, {'number': 2, 'created': '2024-03-01 21:40:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/ca7d40073cf4763aa2cecc01d0bfc48ce34f416c', 'message': 'DEBUG: Update value to metadata_listen_port and use default endpoint\n\nmetadata_port value used in queens version and changed in rocky version to metadata_listen_port\n\nChange-Id: Ib766296015878481bcd93b7ca036cb3da66b04ed\n'}, {'number': 3, 'created': '2024-03-01 21:42:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/5631b51d3717ce5566fc66dae3668570bc4b154b', 'message': 'DEBUG: Update value to metadata_listen_port and use default endpoint\n\nmetadata_port value used in queens version and changed in rocky version to metadata_listen_port\n\nChange-Id: Ib766296015878481bcd93b7ca036cb3da66b04ed\n'}, {'number': 4, 'created': '2024-03-01 23:11:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/a3bc385707fdf6e82f22f10898a517792911da53', 'message': 'DEBUG: Update value to metadata_listen_port and use default endpoint\n\nmetadata_port value used in queens version and changed in rocky version to metadata_listen_port\n\nChange-Id: Ib766296015878481bcd93b7ca036cb3da66b04ed\n'}, {'number': 5, 'created': '2024-03-03 06:32:12.000000000', 'files': ['tools/gate/playbooks/inject-keys.yaml', 'nova/templates/configmap-etc.yaml', 'zuul.d/base.yaml', 'zuul.d/project.yaml', 'neutron/Chart.yaml', 'neutron/values_overrides/tls.yaml', 'releasenotes/notes/neutron.yaml', 'releasenotes/notes/nova.yaml', 'tools/debug_sleep.sh', 'nova/Chart.yaml', 'neutron/templates/configmap-etc.yaml'], 'web_link': 'https://opendev.org/openstack/openstack-helm/commit/1178807a230174a0e657e3168ee5d09c5c165f70', 'message': 'DEBUG: Update value to metadata_listen_port and use default endpoint\n\nmetadata_port value used in queens version and changed in rocky version to metadata_listen_port\n\nChange-Id: Ib766296015878481bcd93b7ca036cb3da66b04ed\n'}]",1,910851,1178807a230174a0e657e3168ee5d09c5c165f70,10,1,5,3009,,,0,"DEBUG: Update value to metadata_listen_port and use default endpoint

metadata_port value used in queens version and changed in rocky version to metadata_listen_port

Change-Id: Ib766296015878481bcd93b7ca036cb3da66b04ed
",git fetch https://review.opendev.org/openstack/openstack-helm refs/changes/51/910851/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/templates/configmap-etc.yaml', 'releasenotes/notes/nova.yaml', 'nova/Chart.yaml', 'neutron/templates/configmap-etc.yaml']",4,ff57767b1263f1fb89a6db58145a26e1a29fa65b,,"{{- $_ := tuple ""compute_metadata"" ""internal"" . | include ""helm-toolkit.endpoints.hostname_fqdn_endpoint_lookup"" | set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_host"" -}}{{- $_ := tuple ""compute_metadata"" ""internal"" ""metadata"" . | include ""helm-toolkit.endpoints.endpoint_port_lookup"" | set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_port"" }}","{{/* nova_metadata_ip can go away when Newton is no longer supported, otherwise just set it along with nova_metadata_host. */}} {{- if empty $envAll.Values.conf.metadata_agent.DEFAULT.nova_metadata_ip -}} {{- $_ := tuple ""compute_metadata"" ""public"" . | include ""helm-toolkit.endpoints.hostname_fqdn_endpoint_lookup"" | set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_ip"" -}} {{- end -}}{{- $_ := tuple ""compute_metadata"" ""public"" . | include ""helm-toolkit.endpoints.hostname_fqdn_endpoint_lookup"" | set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_host"" -}}{{- $_ := set $envAll.Values.conf.metadata_agent.DEFAULT ""nova_metadata_port"" 80 -}}",7,12
openstack%2Fneutron~910866,openstack/neutron,unmaintained/yoga,I0b012c3034a3e6f359da036c0637f3f3bf078e4d,'DNM: check upper-constraints redirect',ABANDONED,2024-03-04 00:10:43.000000000,2024-03-04 04:43:29.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-04 00:10:43.000000000', 'files': ['requirements.txt'], 'web_link': 'https://opendev.org/openstack/neutron/commit/d150b75304f8ef7c73414e108280e3dc76dcd4fc', 'message': ""'DNM: check upper-constraints redirect'\n\nChange-Id: I0b012c3034a3e6f359da036c0637f3f3bf078e4d\n""}]",0,910866,d150b75304f8ef7c73414e108280e3dc76dcd4fc,4,1,1,8064,,,0,"'DNM: check upper-constraints redirect'

Change-Id: I0b012c3034a3e6f359da036c0637f3f3bf078e4d
",git fetch https://review.opendev.org/openstack/neutron refs/changes/66/910866/1 && git format-patch -1 --stdout FETCH_HEAD,['requirements.txt'],1,d150b75304f8ef7c73414e108280e3dc76dcd4fc,,,,1,0
openstack%2Fskyline-console~910871,openstack/skyline-console,master,Ibee94fd5895c0dfd295a3b735aac46f428cbb5b9,fix: fix catalog region display,MERGED,2024-03-04 02:09:10.000000000,2024-03-04 03:57:57.000000000,2024-03-04 03:56:41.000000000,"[{'_account_id': 22348}, {'_account_id': 28706}]","[{'number': 1, 'created': '2024-03-04 02:09:10.000000000', 'files': ['src/stores/keystone/catalog.js', 'src/pages/configuration/containers/SystemInfo/Catalog.jsx'], 'web_link': 'https://opendev.org/openstack/skyline-console/commit/b42958e43db76d75dc713d27917856b5a4a48228', 'message': ""fix: fix catalog region display\n\nfix the region display when the catalog's endpoints is empty\n\nChange-Id: Ibee94fd5895c0dfd295a3b735aac46f428cbb5b9\n""}]",0,910871,b42958e43db76d75dc713d27917856b5a4a48228,7,2,1,30434,,,0,"fix: fix catalog region display

fix the region display when the catalog's endpoints is empty

Change-Id: Ibee94fd5895c0dfd295a3b735aac46f428cbb5b9
",git fetch https://review.opendev.org/openstack/skyline-console refs/changes/71/910871/1 && git format-patch -1 --stdout FETCH_HEAD,"['src/stores/keystone/catalog.js', 'src/pages/configuration/containers/SystemInfo/Catalog.jsx']",2,b42958e43db76d75dc713d27917856b5a4a48228,bucket," render: (value) => value || '-',",,2,1
openstack%2Fpuppet-ceilometer~910694,openstack/puppet-ceilometer,master,I428d52219c72cf48fdc3eb034d44092137608245,Refactor resource dependencies,MERGED,2024-03-01 03:23:48.000000000,2024-03-03 23:29:23.000000000,2024-03-03 23:29:23.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 03:23:48.000000000', 'files': ['manifests/cache.pp', 'manifests/deps.pp', 'manifests/coordination.pp'], 'web_link': 'https://opendev.org/openstack/puppet-ceilometer/commit/100c40e24e9105bbd4184e14a74001614db6dee2', 'message': 'Refactor resource dependencies\n\n... to avoid unnecessary cross-service dependencies.\n\nChange-Id: I428d52219c72cf48fdc3eb034d44092137608245\n'}]",0,910694,100c40e24e9105bbd4184e14a74001614db6dee2,8,3,1,9816,,,0,"Refactor resource dependencies

... to avoid unnecessary cross-service dependencies.

Change-Id: I428d52219c72cf48fdc3eb034d44092137608245
",git fetch https://review.opendev.org/openstack/puppet-ceilometer refs/changes/94/910694/1 && git format-patch -1 --stdout FETCH_HEAD,"['manifests/cache.pp', 'manifests/deps.pp', 'manifests/coordination.pp']",3,100c40e24e9105bbd4184e14a74001614db6dee2,deps-refactor, # all coordination settings should be applied and all packages should be # installed before service startup Oslo::Coordination['ceilometer_config'] -> Anchor['ceilometer::service::begin'],,8,8
openstack%2Fpuppet-designate~910695,openstack/puppet-designate,master,If2cbbc392bd54d906c7a4f51f1c7cfca69463aaf,Refactor resource dependencies,MERGED,2024-03-01 03:39:21.000000000,2024-03-03 23:12:32.000000000,2024-03-03 23:12:32.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 03:39:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/puppet-designate/commit/cbba1030f10c1d00b3c73b3bcc06de61217faa20', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: If2cbbc392bd54d906c7a4f51f1c7cfca69463aaf\n'}, {'number': 2, 'created': '2024-03-01 04:12:12.000000000', 'files': ['manifests/api.pp', 'manifests/db.pp', 'manifests/deps.pp', 'manifests/coordination.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp'], 'web_link': 'https://opendev.org/openstack/puppet-designate/commit/da507fc631f09bfb1c8c8ae8983c98f98ee240e9', 'message': 'Refactor resource dependencies\n\nThis refactors resource dependencies to improve the following points.\n\n - Avoid unnecessary dependencies across services. For example aodh\n   service does not require cinder db.\n\n - Restart only api service when config files like paste.ini, which\n   are used only be api service is changed.\n\nChange-Id: If2cbbc392bd54d906c7a4f51f1c7cfca69463aaf\n'}]",0,910695,da507fc631f09bfb1c8c8ae8983c98f98ee240e9,9,3,2,9816,,,0,"Refactor resource dependencies

This refactors resource dependencies to improve the following points.

 - Avoid unnecessary dependencies across services. For example aodh
   service does not require cinder db.

 - Restart only api service when config files like paste.ini, which
   are used only be api service is changed.

Change-Id: If2cbbc392bd54d906c7a4f51f1c7cfca69463aaf
",git fetch https://review.opendev.org/openstack/puppet-designate refs/changes/95/910695/1 && git format-patch -1 --stdout FETCH_HEAD,"['manifests/api.pp', 'manifests/db.pp', 'manifests/deps.pp', 'manifests/coordination.pp', 'manifests/keystone/authtoken.pp', 'manifests/policy.pp']",6,cbba1030f10c1d00b3c73b3bcc06de61217faa20,deps-refactor, # policy config should occur in the config block also. Anchor['aodh::config::begin'] -> Openstacklib::Policy[$policy_path] -> Anchor['aodh::config::end'] ,,24,12
openstack%2Fpuppet-ceilometer~910683,openstack/puppet-ceilometer,master,I5affe66258440edbd52c487374a31fca92370093,cache: Support options for SASL mechanism in memcached,MERGED,2024-03-01 01:32:28.000000000,2024-03-03 22:59:02.000000000,2024-03-03 22:58:09.000000000,"[{'_account_id': 14985}, {'_account_id': 16137}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 01:32:28.000000000', 'files': ['releasenotes/notes/cache-memcache-sasl-ec13babfbf57aac4.yaml', 'spec/classes/ceilometer_cache_spec.rb', 'manifests/cache.pp'], 'web_link': 'https://opendev.org/openstack/puppet-ceilometer/commit/66b692a0aefa8183a624d5b2694f682c24dffee7', 'message': 'cache: Support options for SASL mechanism in memcached\n\nDepends-on: https://review.opendev.org/910122\nChange-Id: I5affe66258440edbd52c487374a31fca92370093\n'}]",0,910683,66b692a0aefa8183a624d5b2694f682c24dffee7,8,3,1,9816,,,0,"cache: Support options for SASL mechanism in memcached

Depends-on: https://review.opendev.org/910122
Change-Id: I5affe66258440edbd52c487374a31fca92370093
",git fetch https://review.opendev.org/openstack/puppet-ceilometer refs/changes/83/910683/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/cache-memcache-sasl-ec13babfbf57aac4.yaml', 'spec/classes/ceilometer_cache_spec.rb', 'manifests/cache.pp']",3,66b692a0aefa8183a624d5b2694f682c24dffee7,memcache-sasl,"# [*memcache_sasl_enabled*] # (Optional) Whether SASL is enabled in memcached # Defaults to $facts['os_service_default'] # # [*memcache_username*] # (Optional) The user name for the memcached with SASL enabled # Defaults to $facts['os_service_default'] # # [*memcache_password*] # (Optional) The password for the memcached with SASL enabled # Defaults to $facts['os_service_default']# [*manage_backend_package*] # (Optional) Whether to install the backend package for the cache. # Defaults to true # $memcache_sasl_enabled = $facts['os_service_default'], $memcache_username = $facts['os_service_default'], $memcache_password = $facts['os_service_default'], Boolean $manage_backend_package = true, memcache_sasl_enabled => $memcache_sasl_enabled, memcache_username => $memcache_username, memcache_password => $memcache_password, manage_backend_package => $manage_backend_package,","# [*manage_backend_package*] # (Optional) Whether to install the backend package for the cache. # Defaults to true $manage_backend_package = true, manage_backend_package => $manage_backend_package,",37,5
openstack%2Fnova~910333,openstack/nova,master,I1ee8f7f7d0cbcfb3a8cd61b5fec201b4ba4bf671,add multinode ironic shard job,MERGED,2024-02-27 11:05:55.000000000,2024-03-03 02:16:49.000000000,2024-03-03 02:06:48.000000000,"[{'_account_id': 782}, {'_account_id': 4690}, {'_account_id': 7166}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-27 11:05:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/939b4a1c88a36a64d9e75855e0f56fa251c378b5', 'message': '[DNM] poc nova-ironic shard job\n\nThis is just an experiment of defining a minimal job to deploy\nnova with ironic based on\nhttps://docs.openstack.org/ironic/latest/contributor/devstack-guide.html#ironic-with-nova\n\nJayF is working on another job in ironic so this may not be requried\nim just experimenting in parallel\n\nTODO: make this multnode.\n\nDepends-On: https://review.opendev.org/c/openstack/ironic/+/894460\nChange-Id: I1ee8f7f7d0cbcfb3a8cd61b5fec201b4ba4bf671\n'}, {'number': 2, 'created': '2024-02-27 11:10:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a79ea6b8e19fe7e86ba0bb2d0b1efe56eefae0e9', 'message': '[DNM] poc nova-ironic shard job\n\nThis is just an experiment of defining a minimal job to deploy\nnova with ironic based on\nhttps://docs.openstack.org/ironic/latest/contributor/devstack-guide.html#ironic-with-nova\n\nJayF is working on another job in ironic so this may not be requried\nim just experimenting in parallel\n\nTODO: make this multnode.\n\nDepends-On: https://review.opendev.org/c/openstack/ironic/+/894460\nChange-Id: I1ee8f7f7d0cbcfb3a8cd61b5fec201b4ba4bf671\n'}, {'number': 3, 'created': '2024-02-27 14:36:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ac90d4866faea7e1d3aef6e7bbfad116a601cc79', 'message': '[DNM] poc nova-ironic shard job\n\nThis is just an experiment of defining a minimal job to deploy\nnova with ironic based on\nhttps://docs.openstack.org/ironic/latest/contributor/devstack-guide.html#ironic-with-nova\n\nJayF is working on another job in ironic so this may not be requried\nim just experimenting in parallel\n\nTODO: make this multnode.\n\nDepends-On: https://review.opendev.org/c/openstack/ironic/+/894460\nChange-Id: I1ee8f7f7d0cbcfb3a8cd61b5fec201b4ba4bf671\n'}, {'number': 4, 'created': '2024-02-27 14:37:51.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/94224b73d44f985fcef6d1de982d6c749a541c11', 'message': '[DNM] poc nova-ironic shard job\n\nThis is just an experiment of defining a minimal job to deploy\nnova with ironic based on\nhttps://docs.openstack.org/ironic/latest/contributor/devstack-guide.html#ironic-with-nova\n\nJayF is working on another job in ironic so this may not be requried\nim just experimenting in parallel\n\nTODO: make this multnode.\n\nDepends-On: https://review.opendev.org/c/openstack/ironic/+/894460\nChange-Id: I1ee8f7f7d0cbcfb3a8cd61b5fec201b4ba4bf671\n'}, {'number': 5, 'created': '2024-02-27 21:36:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/2fa5cb6530a06d2d4fa882832c6b5fb27d096fbd', 'message': 'add multinode ironic shard job\n\nThis change adds the\nironic-tempest-ipa-wholedisk-direct-tinyipa-multinode-shard\nto the periodic-weekly and experimental pipelines replacing\nthe existing ironic-tempest-ipa-wholedisk-direct-tinyipa-multinode\njob in the experimental line.\n\n&policies-irrelevant-files is moved to the job defintions to\nmake workign on jobs simpler when commeting out jobs during devleopemt\nyes this is unrelated but it make our lives simpler.\n\nDepends-On: https://review.opendev.org/c/openstack/ironic/+/894460\nDepends-On: https://review.opendev.org/c/openstack/nova/+/903917\nChange-Id: I1ee8f7f7d0cbcfb3a8cd61b5fec201b4ba4bf671\n'}, {'number': 6, 'created': '2024-03-01 00:20:40.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/nova/commit/3b25b1e94c512a1c8d921c5a578b45e85aff2496', 'message': 'add multinode ironic shard job\n\nThis change adds the\nironic-tempest-ipa-wholedisk-direct-tinyipa-multinode-shard\nto the periodic-weekly and experimental pipelines replacing\nthe existing ironic-tempest-ipa-wholedisk-direct-tinyipa-multinode\njob in the experimental line.\n\n&policies-irrelevant-files is moved to the job defintions to\nmake workign on jobs simpler when commeting out jobs during devleopemt\nyes this is unrelated but it make our lives simpler.\n\nChange-Id: I1ee8f7f7d0cbcfb3a8cd61b5fec201b4ba4bf671\n'}]",15,910333,3b25b1e94c512a1c8d921c5a578b45e85aff2496,48,5,6,11604,,,0,"add multinode ironic shard job

This change adds the
ironic-tempest-ipa-wholedisk-direct-tinyipa-multinode-shard
to the periodic-weekly and experimental pipelines replacing
the existing ironic-tempest-ipa-wholedisk-direct-tinyipa-multinode
job in the experimental line.

&policies-irrelevant-files is moved to the job defintions to
make workign on jobs simpler when commeting out jobs during devleopemt
yes this is unrelated but it make our lives simpler.

Change-Id: I1ee8f7f7d0cbcfb3a8cd61b5fec201b4ba4bf671
",git fetch https://review.opendev.org/openstack/nova refs/changes/33/910333/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,939b4a1c88a36a64d9e75855e0f56fa251c378b5,ironic-shards," name: nova-ironic-shards # parent: tempest-multinode-full-py3 parent: tempest-full-py3 description: | Test ironic with shard support enabled. irrelevant-files: *nova-base-irrelevant-files vars: tox_envlist: all tempest_test_regex: (^tempest\..*compute\..*(reboot|rebuild).*) devstack_localrc: <<: *uec_image_vars # neutron config Q_AGENT: openvswitch Q_ML2_TENANT_NETWORK_TYPE: vlan Q_ML2_PLUGIN_MECHANISM_DRIVERS: openvswitch Q_USE_SECGROUP: False # Swift temp URL's are required for the direct deploy interface SWIFT_TEMPURL_KEY: password SWIFT_ENABLE_TEMPURLS: True # Set glance's default limit to be baremetal image friendly GLANCE_LIMIT_IMAGE_SIZE_TOTAL: 5000 # Support via emulated BMC exists for the following hardware types, and # VMs to back them will be created by default unless IRONIC_IS_HARDWARE is # True. # - ipmi (VirtualBMC) # - redfish (sushy-tools) # # If you wish to change the default driver for nodes created by devstack, # you can do so by setting IRONIC_DEPLOY_DRIVER to the name of the driver # you wish used by default, and ensuring that driver (along with others) is # enabled. IRONIC_DEPLOY_DRIVER: ipmi IRONIC_BAREMETAL_BASIC_OPS: True DEFAULT_INSTANCE_TYPE: baremetal IRONIC_VM_COUNT: 3 # The parameters below represent the minimum possible values to create # functional nodes. IRONIC_VM_SPECS_RAM: 2048 IRONIC_VM_SPECS_DISK: 10 # Size of the ephemeral partition in GB. Use 0 for no ephemeral partition. IRONIC_VM_EPHEMERAL_DISK: 0 # You can also change the default deploy interface used. IRONIC_DEFAULT_DEPLOY_INTERFACE: direct # To build your own IPA ramdisk from source, set this to True IRONIC_BUILD_DEPLOY_RAMDISK: False IRONIC_RAMDISK_TYPE: tinyipa IRONIC_AUTOMATED_CLEAN_ENABLED: False VIRT_DRIVER: ironic IRONIC_SHARDS: 1 IRONIC_SHARD_1_NAME: ""main-node"" # Note: we can simplify this as most of the enabled services are # enabeld by the parent job devstack_services: # Disable nova novnc service, ironic does not support it anyway. n-novnc: false n-api: True n-api-meta: True n-cond: True n-cpu: True n-sch: True placement-api: True # Disable Horizon horizon: false # Disable OVN services br-ex-tcpdump: false br-int-flows: false ovn-controller: false ovn-northd: false q-ovn-metadata-agent: false # Neutron services q-agt: true q-dhcp: true q-l3: true q-meta: true q-svc: true # disable Cinder services for ironic job c-api: false c-bak: false c-sch: false c-vol: false # enable swift for the direct deploy interface s-proxy: true s-object: true s-container: true s-account: true devstack_plugins: ironic: https://opendev.org/openstack/ironic - job: # - integrated-gate-compute # - openstack-cover-jobs # - openstack-python3-jobs # - openstack-python3-jobs-arm64 # - periodic-stable-jobs # - publish-openstack-docs-pti # - release-notes-jobs-python3 # # We define our own irrelevant-files so we don't run the job # # on things like nova docs-only changes. # - ironic-tempest-ipa-wholedisk-bios-agent_ipmitool-tinyipa: # voting: false # irrelevant-files: *nova-base-irrelevant-files # vars: # devstack_localrc: # <<: *uec_image_vars # - nova-ceph-multistore: # irrelevant-files: *nova-base-irrelevant-files # - neutron-linuxbridge-tempest: # irrelevant-files: # # NOTE(mriedem): This job has its own irrelevant-files section # # so that we only run it on changes to networking and libvirt/vif # # code; we don't need to run this on all changes. # - ^(?!nova/network/.*)(?!nova/virt/libvirt/vif.py).*$ # vars: # devstack_localrc: # <<: *uec_image_vars # - nova-live-migration # - nova-live-migration-ceph # - nova-lvm # - nova-multi-cell # - nova-next # - nova-ovs-hybrid-plug # - nova-tox-validate-backport: # voting: false # - nova-tox-py310-with-sqlalchemy-2x # - nova-tox-functional-py38 # - nova-tox-functional-py39 # - nova-tox-functional-py310 - nova-ironic-shards # - tempest-integrated-compute: # # NOTE(gmann): Policies changes do not need to run all the # # integration test jobs. Running only tempest and grenade # # common jobs will be enough along with nova functional # # and unit tests. # irrelevant-files: *policies-irrelevant-files # vars: # devstack_localrc: # <<: *uec_image_vars # - tempest-integrated-compute-enforce-scope-new-defaults: # irrelevant-files: *policies-irrelevant-files # - tempest-integrated-compute-rbac-old-defaults: # irrelevant-files: *policies-irrelevant-files # - grenade-skip-level-always: # irrelevant-files: *policies-irrelevant-files # vars: # devstack_localrc: # <<: *uec_image_vars # - nova-grenade-multinode: # irrelevant-files: *policies-irrelevant-files # - tempest-ipv6-only: # irrelevant-files: *nova-base-irrelevant-files # vars: # devstack_localrc: # <<: *uec_image_vars # - openstacksdk-functional-devstack: # irrelevant-files: *nova-base-irrelevant-files # vars: # devstack_localrc: # <<: *uec_image_vars # - cyborg-tempest: # irrelevant-files: *nova-base-irrelevant-files # voting: false # vars: # devstack_localrc: # <<: *uec_image_vars # - barbican-tempest-plugin-simple-crypto: # irrelevant-files: *nova-base-irrelevant-files # voting: false # vars: # devstack_localrc: # <<: *uec_image_vars irrelevant-files: &policies-irrelevant-files - ^api-.*$ - ^(test-|)requirements.txt$ - ^.*\.rst$ - ^.git.*$ - ^doc/.*$ - ^nova/hacking/.*$ - ^nova/locale/.*$ - ^nova/tests/.*$ - ^nova/test.py$ - ^releasenotes/.*$ - ^setup.cfg$ - ^tools/.*$ - ^tox.ini$", - integrated-gate-compute - openstack-cover-jobs - openstack-python3-jobs - openstack-python3-jobs-arm64 - periodic-stable-jobs - publish-openstack-docs-pti - release-notes-jobs-python3 # We define our own irrelevant-files so we don't run the job # on things like nova docs-only changes. - ironic-tempest-ipa-wholedisk-bios-agent_ipmitool-tinyipa: voting: false irrelevant-files: *nova-base-irrelevant-files vars: devstack_localrc: <<: *uec_image_vars - nova-ceph-multistore: irrelevant-files: *nova-base-irrelevant-files - neutron-linuxbridge-tempest: irrelevant-files: # NOTE(mriedem): This job has its own irrelevant-files section # so that we only run it on changes to networking and libvirt/vif # code; we don't need to run this on all changes. - ^(?!nova/network/.*)(?!nova/virt/libvirt/vif.py).*$ vars: devstack_localrc: <<: *uec_image_vars - nova-live-migration - nova-live-migration-ceph - nova-lvm - nova-multi-cell - nova-next - nova-ovs-hybrid-plug - nova-tox-validate-backport: voting: false - nova-tox-py310-with-sqlalchemy-2x - nova-tox-functional-py38 - nova-tox-functional-py39 - nova-tox-functional-py310 - tempest-integrated-compute: # NOTE(gmann): Policies changes do not need to run all the # integration test jobs. Running only tempest and grenade # common jobs will be enough along with nova functional # and unit tests. irrelevant-files: &policies-irrelevant-files - ^api-.*$ - ^(test-|)requirements.txt$ - ^.*\.rst$ - ^.git.*$ - ^doc/.*$ - ^nova/hacking/.*$ - ^nova/locale/.*$ - ^nova/tests/.*$ - ^nova/test.py$ - ^releasenotes/.*$ - ^setup.cfg$ - ^tools/.*$ - ^tox.ini$ vars: devstack_localrc: <<: *uec_image_vars - tempest-integrated-compute-enforce-scope-new-defaults: irrelevant-files: *policies-irrelevant-files - tempest-integrated-compute-rbac-old-defaults: irrelevant-files: *policies-irrelevant-files - grenade-skip-level-always: irrelevant-files: *policies-irrelevant-files vars: devstack_localrc: <<: *uec_image_vars - nova-grenade-multinode: irrelevant-files: *policies-irrelevant-files - tempest-ipv6-only: irrelevant-files: *nova-base-irrelevant-files vars: devstack_localrc: <<: *uec_image_vars - openstacksdk-functional-devstack: irrelevant-files: *nova-base-irrelevant-files vars: devstack_localrc: <<: *uec_image_vars - cyborg-tempest: irrelevant-files: *nova-base-irrelevant-files voting: false vars: devstack_localrc: <<: *uec_image_vars - barbican-tempest-plugin-simple-crypto: irrelevant-files: *nova-base-irrelevant-files voting: false vars: devstack_localrc: <<: *uec_image_vars irrelevant-files: *policies-irrelevant-files,184,94
openstack%2Fcinder~910570,openstack/cinder,master,I3daf6840ea1884765c36a280d94ff41e157fd689,DNM: Test volume upload in old location API,NEW,2024-02-29 07:28:42.000000000,2024-03-02 16:57:19.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-02-29 07:28:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/8d93125dbfb5918ca648ee6f65814ac3b546733c', 'message': 'DNM: Test volume upload in old location API\n\nDepends-On: https://review.opendev.org/c/openstack/devstack/+/909841\nChange-Id: I3daf6840ea1884765c36a280d94ff41e157fd689\n'}, {'number': 2, 'created': '2024-02-29 07:40:32.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/cinder/commit/7f1a810c364606df4bc90efcb6220e2b48c389a7', 'message': 'DNM: Test volume upload in old location API\n\nDepends-On: https://review.opendev.org/c/openstack/devstack/+/909841\nChange-Id: I3daf6840ea1884765c36a280d94ff41e157fd689\n'}]",0,910570,7f1a810c364606df4bc90efcb6220e2b48c389a7,30,1,2,27615,,,0,"DNM: Test volume upload in old location API

Depends-On: https://review.opendev.org/c/openstack/devstack/+/909841
Change-Id: I3daf6840ea1884765c36a280d94ff41e157fd689
",git fetch https://review.opendev.org/openstack/cinder refs/changes/70/910570/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,8d93125dbfb5918ca648ee6f65814ac3b546733c,, # - cinder-code-coverage: # voting: false # - cinder-sqlalchemy-2x # - cinder-mypy # - cinder-tox-bandit-baseline: # voting: false # - openstack-tox-functional-py39: # irrelevant-files: &functional-irrelevant-files # - ^.*\.rst$ # - ^cinder/locale/.*$ # - ^cinder/tests/hacking/.*$ # - ^cinder/tests/unit.*$ # - ^doc/.*$ # - ^releasenotes/.*$ # - openstack-tox-functional-py310: # irrelevant-files: *functional-irrelevant-files # - cinder-rally-task: # voting: false # irrelevant-files: *functional-irrelevant-files # - openstack-tox-pylint: # voting: false # timeout: 5400 # irrelevant-files: # - ^.*\.rst$ # - ^api-ref/.*$ # - ^cinder/locale/.*$ # - ^cinder/tests/hacking/.*$ # - ^cinder/tests/unit.*$ # - ^doc/.*$ # - ^releasenotes/.*$ # - cinder-plugin-ceph-tempest: # irrelevant-files: &gate-irrelevant-files # - ^(test-|)requirements.txt$ # - ^.*\.rst$ # - ^api-ref/.*$ # - ^cinder/cmd/status\.py$ # - ^cinder/locale/.*$ # - ^cinder/tests/functional.*$ # - ^cinder/tests/hacking/.*$ # - ^cinder/tests/unit.*$ # - ^doc/.*$ # - ^releasenotes/.*$ # - ^setup.cfg$ # - ^tools/.*$ # - ^tox.ini$ # - cinder-plugin-ceph-tempest-mn-aa: # voting: false # irrelevant-files: *gate-irrelevant-files # - cinder-tempest-plugin-lvm-lio-barbican: # # NOTE: we use this as a canary job to make sure at least # # one expensive tempest job is run on changes excluded by # # the gate-irrelevant-files defined above # irrelevant-files: # - ^.*\.rst$ # - ^api-ref/.*$ # - ^cinder/cmd/status\.py$ # - ^cinder/locale/.*$ # - ^cinder/tests/functional.*$ # - ^cinder/tests/hacking/.*$ # - ^cinder/tests/unit.*$ # - ^doc/.*$ # - ^releasenotes/.*$ # - ^tools/.*$ # - cinder-tempest-plugin-lvm-lio-barbican-fips: # voting: false # irrelevant-files: *gate-irrelevant-files # - cinder-grenade-mn-sub-volbak: # irrelevant-files: *gate-irrelevant-files # - cinder-tempest-lvm-multibackend: # voting: false # irrelevant-files: *gate-irrelevant-files - cinder-for-glance-optimized: # - devstack-plugin-nfs-tempest-full: # irrelevant-files: *gate-irrelevant-files # - devstack-plugin-nfs-tempest-full-fips: # voting: false # irrelevant-files: *gate-irrelevant-files # - tempest-slow-py3: # irrelevant-files: *gate-irrelevant-files # - tempest-integrated-storage: # irrelevant-files: *gate-irrelevant-files # - grenade: # irrelevant-files: *gate-irrelevant-files # - grenade-skip-level: # irrelevant-files: *gate-irrelevant-files # - tempest-ipv6-only: # irrelevant-files: *gate-irrelevant-files # - openstacksdk-functional-devstack: # irrelevant-files: *gate-irrelevant-files UPLOAD_VOLUME_OPTIMIZED_ENABLED: True UPLOAD_VOLUME_INTERNAL_TENANT: True tempest_test_regex: '(cinder_tempest_plugin|tempest.api.volume.test_volumes_actions)', - cinder-code-coverage: voting: false - cinder-sqlalchemy-2x - cinder-mypy - cinder-tox-bandit-baseline: voting: false - openstack-tox-functional-py39: irrelevant-files: &functional-irrelevant-files - ^.*\.rst$ - ^cinder/locale/.*$ - ^cinder/tests/hacking/.*$ - ^cinder/tests/unit.*$ - ^doc/.*$ - ^releasenotes/.*$ - openstack-tox-functional-py310: irrelevant-files: *functional-irrelevant-files - cinder-rally-task: voting: false irrelevant-files: *functional-irrelevant-files - openstack-tox-pylint: voting: false timeout: 5400 irrelevant-files: - ^.*\.rst$ - ^api-ref/.*$ - ^cinder/locale/.*$ - ^cinder/tests/hacking/.*$ - ^cinder/tests/unit.*$ - ^doc/.*$ - ^releasenotes/.*$ - cinder-plugin-ceph-tempest: irrelevant-files: &gate-irrelevant-files - ^(test-|)requirements.txt$ - ^.*\.rst$ - ^api-ref/.*$ - ^cinder/cmd/status\.py$ - ^cinder/locale/.*$ - ^cinder/tests/functional.*$ - ^cinder/tests/hacking/.*$ - ^cinder/tests/unit.*$ - ^doc/.*$ - ^releasenotes/.*$ - ^setup.cfg$ - ^tools/.*$ - ^tox.ini$ - cinder-plugin-ceph-tempest-mn-aa: voting: false irrelevant-files: *gate-irrelevant-files - cinder-tempest-plugin-lvm-lio-barbican: # NOTE: we use this as a canary job to make sure at least # one expensive tempest job is run on changes excluded by # the gate-irrelevant-files defined above irrelevant-files: - ^.*\.rst$ - ^api-ref/.*$ - ^cinder/cmd/status\.py$ - ^cinder/locale/.*$ - ^cinder/tests/functional.*$ - ^cinder/tests/hacking/.*$ - ^cinder/tests/unit.*$ - ^doc/.*$ - ^releasenotes/.*$ - ^tools/.*$ - cinder-tempest-plugin-lvm-lio-barbican-fips: voting: false irrelevant-files: *gate-irrelevant-files - cinder-grenade-mn-sub-volbak: irrelevant-files: *gate-irrelevant-files - cinder-tempest-lvm-multibackend: voting: false irrelevant-files: *gate-irrelevant-files - cinder-for-glance-optimized: voting: false - devstack-plugin-nfs-tempest-full: irrelevant-files: *gate-irrelevant-files - devstack-plugin-nfs-tempest-full-fips: voting: false irrelevant-files: *gate-irrelevant-files - tempest-slow-py3: irrelevant-files: *gate-irrelevant-files - tempest-integrated-storage: irrelevant-files: *gate-irrelevant-files - grenade: irrelevant-files: *gate-irrelevant-files - grenade-skip-level: irrelevant-files: *gate-irrelevant-files - tempest-ipv6-only: irrelevant-files: *gate-irrelevant-files - openstacksdk-functional-devstack: irrelevant-files: *gate-irrelevant-files,91,89
openstack%2Fpython-watcherclient~894879,openstack/python-watcherclient,stable/2023.2,Ic862dadbb0ca77b0a88b0a2bfc5903354a21e780,Update TOX_CONSTRAINTS_FILE for stable/2023.2,MERGED,2023-09-13 09:44:04.000000000,2024-03-02 08:38:00.000000000,2024-03-02 08:36:23.000000000,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28748}]","[{'number': 1, 'created': '2023-09-13 09:44:04.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/python-watcherclient/commit/a17ac99292d644beb02817c0767c124656203747', 'message': 'Update TOX_CONSTRAINTS_FILE for stable/2023.2\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as stable/2023.2 branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: Ic862dadbb0ca77b0a88b0a2bfc5903354a21e780\n'}]",1,894879,a17ac99292d644beb02817c0767c124656203747,8,3,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for stable/2023.2

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as stable/2023.2 branch, tests will
continue to use the upper-constraints list on master.

Change-Id: Ic862dadbb0ca77b0a88b0a2bfc5903354a21e780
",git fetch https://review.opendev.org/openstack/python-watcherclient refs/changes/79/894879/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,a17ac99292d644beb02817c0767c124656203747,create-2023.2, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2023.2} -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/2023.2}, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master} -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master},2,2
openstack%2Fcyborg~904658,openstack/cyborg,master,Ic2fd571c7dd6493d40395b710a8434963b7c20b4,Update python classifier in setup.cfg,MERGED,2024-01-04 07:55:26.000000000,2024-03-02 08:37:58.000000000,2024-03-02 08:36:59.000000000,"[{'_account_id': 22348}, {'_account_id': 26285}, {'_account_id': 26458}, {'_account_id': 28748}, {'_account_id': 31412}]","[{'number': 1, 'created': '2024-01-04 07:55:26.000000000', 'files': ['setup.cfg'], 'web_link': 'https://opendev.org/openstack/cyborg/commit/fad90f977b35cb328ac1245a922222756ea2fe00', 'message': 'Update python classifier in setup.cfg\n\nAs per the current release tested runtime, we test\npython version from 3.8 to 3.11 so updating the\nsame in python classifier in setup.cfg\n\nChange-Id: Ic2fd571c7dd6493d40395b710a8434963b7c20b4\n'}]",0,904658,fad90f977b35cb328ac1245a922222756ea2fe00,8,5,1,8556,,,0,"Update python classifier in setup.cfg

As per the current release tested runtime, we test
python version from 3.8 to 3.11 so updating the
same in python classifier in setup.cfg

Change-Id: Ic2fd571c7dd6493d40395b710a8434963b7c20b4
",git fetch https://review.opendev.org/openstack/cyborg refs/changes/58/904658/1 && git format-patch -1 --stdout FETCH_HEAD,['setup.cfg'],1,fad90f977b35cb328ac1245a922222756ea2fe00,py3.11, Programming Language :: Python :: 3.10 Programming Language :: Python :: 3.11,,2,0
openstack%2Fmanila-ui~840326,openstack/manila-ui,master,I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452,Create share network panel workflows,MERGED,2022-05-03 15:35:21.000000000,2024-03-02 08:37:40.000000000,2024-03-01 19:05:28.000000000,"[{'_account_id': 6413}, {'_account_id': 16643}, {'_account_id': 22348}, {'_account_id': 29632}, {'_account_id': 31213}, {'_account_id': 33728}]","[{'number': 1, 'created': '2022-05-03 15:35:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/6b939e193af4f288f91ca6a7fb8250888d8ce013', 'message': 'Create Share Network panel workflows\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 2, 'created': '2022-05-03 21:33:51.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/ad19351e7d0302eda1c7f0251d1b9568d7dfaa01', 'message': 'Create Share Network panel workflows\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\nSigned-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>\n'}, {'number': 3, 'created': '2022-05-12 11:13:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/4d9e0561fc07c1d739050be394d4560e418646bd', 'message': 'Create Share Network panel workflows\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 4, 'created': '2023-03-01 18:28:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/d0abd89c460c319e624e67f3727d7859bdc3337f', 'message': 'Create Share Network panel workflows\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 5, 'created': '2023-03-02 14:21:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/cd3b8b9c4dd746525943e39b10546599a88d4f1b', 'message': 'Create Share Network panel workflows\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 6, 'created': '2024-01-08 00:47:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/c597eae89efc7614be711a925a1df16234a87f0b', 'message': 'Implements: bp share-network-subnets\n\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By:  melakualehegn <melakualehegn34@gmail.com>\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 7, 'created': '2024-01-08 00:53:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/eab919891e61ebcbc08bf846808e75a80eb01293', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\n\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By:  melakualehegn <melakualehegn34@gmail.com>\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 8, 'created': '2024-01-15 17:45:58.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/74463a9b6807724d3678ff8476f65bb6d497783b', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\n\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By:  melakualehegn <melakualehegn34@gmail.com>\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 9, 'created': '2024-01-23 00:51:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/a9d43a2f3171b6670dc72eb59f73ba18daa4ef48', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\n\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By:  melakualehegn <melakualehegn34@gmail.com>\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 10, 'created': '2024-01-29 22:29:23.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/1eee74c5b68062b82772acae0ad89338b4da6241', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\n\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By:  melakualehegn <melakualehegn34@gmail.com>\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 11, 'created': '2024-02-06 20:42:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/19aa3ede94d822722a9961f8225b8af860bfac18', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\n\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By:  melakualehegn <melakualehegn34@gmail.com>\n\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\n'}, {'number': 12, 'created': '2024-02-07 03:30:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/91b1e2b9d477d1c1f52c55aa4d5e639d2d82f90f', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By: melakualehegn <melakualehegn34@gmail.com>\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\nSigned-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>\n'}, {'number': 13, 'created': '2024-02-14 13:06:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/123037c3b99898bb42fc99104470ca3b187ee39c', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By: melakualehegn <melakualehegn34@gmail.com>\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\nSigned-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>\n'}, {'number': 14, 'created': '2024-02-14 14:40:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/b239ce086631eb1d9318c4bcce63f0073e40b3fc', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By: melakualehegn <melakualehegn34@gmail.com>\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\nSigned-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>\n'}, {'number': 15, 'created': '2024-02-20 20:23:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/ba1b921068486b7b103f7538b3a8e88c15f7bab6', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By: melakualehegn <melakualehegn34@gmail.com>\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\nSigned-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>\n'}, {'number': 16, 'created': '2024-02-21 22:51:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/12bfbe845928234594dd22e51e568d37bd44a15e', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By: melakualehegn <melakualehegn34@gmail.com>\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\nSigned-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>\n'}, {'number': 17, 'created': '2024-02-22 08:58:00.000000000', 'files': ['manila_ui/dashboards/admin/share_networks/views.py', '.gitignore', 'manila_ui/dashboards/project/share_networks/views.py', 'manila_ui/tests/dashboards/project/test_data.py', 'manila_ui/dashboards/admin/share_networks/tables.py', 'manila_ui/tests/dashboards/admin/share_networks/tests.py', 'manila_ui/api/network.py', 'manila_ui/dashboards/admin/share_networks/templates/share_networks/_detail.html', 'releasenotes/notes/bp-share-network-subnets-82ad8c601caf177b.yaml', 'manila_ui/dashboards/project/share_networks/forms.py', 'manila_ui/api/manila.py', 'manila_ui/dashboards/project/share_networks/templates/share_networks/_detail.html', 'manila_ui/dashboards/project/share_networks/workflows.py', 'manila_ui/tests/api/test_manila.py', 'manila_ui/tests/dashboards/project/share_networks/tests.py', 'manila_ui/dashboards/project/share_networks/tables.py'], 'web_link': 'https://opendev.org/openstack/manila-ui/commit/d1428c5fc562c6032c2a2ee810df8e07d09766f4', 'message': 'Create share network panel workflows\n\nImplements: bp share-network-subnets\nCo-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>\nCo-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>\nCo-Authored-By: melakualehegn <melakualehegn34@gmail.com>\nChange-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452\nSigned-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>\n'}]",200,840326,d1428c5fc562c6032c2a2ee810df8e07d09766f4,54,6,17,34525,,,0,"Create share network panel workflows

Implements: bp share-network-subnets
Co-Authored-By: Cameron Kolodjski <cdkolod@gmail.com>
Co-Authored-By: Shkoh Hamasoor <shkoh.hamasoor@ndsu.edu>
Co-Authored-By: melakualehegn <melakualehegn34@gmail.com>
Change-Id: I4c539b151cbbf69e4a2a3580906b2a8bd5f3a452
Signed-off-by: Goutham Pacha Ravi <gouthampravi@gmail.com>
",git fetch https://review.opendev.org/openstack/manila-ui refs/changes/26/840326/1 && git format-patch -1 --stdout FETCH_HEAD,"['manila_ui/dashboards/project/share_networks/views.py', 'manila_ui/api/manila.py', 'manila_ui/dashboards/project/share_networks/templates/share_networks/_detail.html', 'manila_ui/dashboards/project/share_networks/workflows.py', 'manila_ui/dashboards/project/share_networks/tables.py', 'manila_ui/dashboards/project/share_networks/templates/share_networks/detail.html']",6,6b939e193af4f288f91ca6a7fb8250888d8ce013,bp/share-network-subnets,"{% load i18n sizeformat parse_date %} <h3>{% trans ""Share Network Overview"" %}</h3> <div class=""detail""> <hr class=""header_rule""> <dl class=""dl-horizontal""> <dt>{% trans ""Name"" %}</dt> <dd>{{ share_network.name }}</dd> {% if share_network.description %} <dt>{% trans ""Description"" %}</dt> <dd>{{ share_network.description }}</dd> {% endif %} {% if share_network.created_at %} <dt>{% trans ""Created At"" %}</dt> <dd>{{ share_network.created_at }}</dd> {% endif %} {% if share_network.updated_at %} <dt>{% trans ""Updated At"" %}</dt> <dd>{{ share_network.updated_at }}</dd> {% endif %} </dl> <div class=""detail""> <h4>{% trans ""Network Details"" %}</h4> <hr class=""header_rule""> <dl class=""dl-horizontal""> <dt>{% trans ""Share Network ID"" %}</dt> <dd>{{ share_network.id }}</dd> <dt>{% trans ""Project ID"" %}</dt> <dd>{{ share_network.project_id }}</dd> <dt>{% trans ""Subnets"" %}</dt> <dd>{{ share_network.share_network_subnets }}</dd> </dl> </div> {% if share_network.share_servers %} <div class=""detail""> <h4>{% trans ""Share Servers"" %}</h4> <hr class=""header_rule""> <dl class=""dl-horizontal""> {% for server in share_network.share_servers %} <ul> {% url 'horizon:admin:share_servers:share_server_detail' server.id as server_url %} <li><a href=""{{ server_url }}"">{{ server.id }}</a></li> </ul> {% endfor %} </dl> </div> {% endif %} {% if share_network.sec_services %} <div class=""detail""> <h4>{% trans ""Security Services"" %}</h4> <hr class=""header_rule""> {% for sec_service in share_network.sec_services %} {% url 'horizon:project:security_services:security_service_detail' sec_service.id as sec_service_url%} <dl class=""dl-horizontal""> <dt>{% trans ""Id"" %}</dt> <dd><a href=""{{ sec_service_url }}"">{{ sec_service.id }}</a></dd> <dt>{% trans ""Name"" %}</dt> <dd><a href=""{{ sec_service_url }}"">{{ sec_service.name }}</a></dd> <dt>{% trans ""Type"" %}</dt> <dd>{{ sec_service.type }}</dd> </dl> <br /> {% endfor %} </div> {% endif %} ","{% extends 'base.html' %} {% load i18n %} {% block title %}{% trans ""Share Network Details"" %}{% endblock %} {% block main %} <div class=""row""> <div class=""col-sm-12""> {{ tab_group.render }} </div>{% endblock %}",254,24
openstack%2Fpython-watcherclient~894878,openstack/python-watcherclient,stable/2023.2,I30cd7a7c2ed8b0cd0a4ee3b477736accd21cb9d0,Update .gitreview for stable/2023.2,MERGED,2023-09-13 09:44:02.000000000,2024-03-02 08:37:17.000000000,2024-03-02 08:36:22.000000000,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28748}]","[{'number': 1, 'created': '2023-09-13 09:44:02.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-watcherclient/commit/eebcd03c77c7a3462b0771ef50bdf3fd6ea793a0', 'message': 'Update .gitreview for stable/2023.2\n\nChange-Id: I30cd7a7c2ed8b0cd0a4ee3b477736accd21cb9d0\n'}]",1,894878,eebcd03c77c7a3462b0771ef50bdf3fd6ea793a0,8,3,1,22816,,,0,"Update .gitreview for stable/2023.2

Change-Id: I30cd7a7c2ed8b0cd0a4ee3b477736accd21cb9d0
",git fetch https://review.opendev.org/openstack/python-watcherclient refs/changes/78/894878/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,eebcd03c77c7a3462b0771ef50bdf3fd6ea793a0,create-2023.2,defaultbranch=stable/2023.2,,1,0
openstack%2Fpython-watcherclient~904994,openstack/python-watcherclient,master,Ife61e9de574bc0fd78bd733a33e41ac6cb48d12d,Remove untested lower-constraints.txt,MERGED,2024-01-08 14:45:29.000000000,2024-03-02 08:36:01.000000000,2024-03-02 08:33:27.000000000,"[{'_account_id': 22348}, {'_account_id': 28748}]","[{'number': 1, 'created': '2024-01-08 14:45:29.000000000', 'files': ['lower-constraints.txt'], 'web_link': 'https://opendev.org/openstack/python-watcherclient/commit/63d305ca25cbd34b80c05107f47b128406335739', 'message': 'Remove untested lower-constraints.txt\n\nThe lower constraints job was already removed[1] and the file content\nis no longer tested.\n\n[1] 52a3fd062d0ab754130152e9c73aac86ace02673\n\nChange-Id: Ife61e9de574bc0fd78bd733a33e41ac6cb48d12d\n'}]",0,904994,63d305ca25cbd34b80c05107f47b128406335739,7,2,1,9816,,,0,"Remove untested lower-constraints.txt

The lower constraints job was already removed[1] and the file content
is no longer tested.

[1] 52a3fd062d0ab754130152e9c73aac86ace02673

Change-Id: Ife61e9de574bc0fd78bd733a33e41ac6cb48d12d
",git fetch https://review.opendev.org/openstack/python-watcherclient refs/changes/94/904994/1 && git format-patch -1 --stdout FETCH_HEAD,['lower-constraints.txt'],1,63d305ca25cbd34b80c05107f47b128406335739,,,alabaster==0.7.10 appdirs==1.4.3 asn1crypto==0.23.0 certifi==2018.1.18 cffi==1.14.0 chardet==3.0.4 cliff==2.11.0 cmd2==0.8.2 coverage==4.0 cryptography==2.7 debtcollector==1.19.0 decorator==4.2.1 deprecation==2.0 docutils==0.11 dogpile.cache==0.6.5 dulwich==0.15.0 extras==1.0.0 fasteners==0.7.0 fixtures==3.0.0 flake8==2.5.5 hacking==0.12.0 idna==2.6 imagesize==0.7.1 iso8601==0.1.12 Jinja2==2.10 jmespath==0.9.3 jsonpatch==1.21 jsonpointer==2.0 jsonschema==2.6.0 keystoneauth1==3.4.0 linecache2==1.0.0 MarkupSafe==1.0 mccabe==0.2.1 monotonic==1.4 msgpack-python==0.4.0 munch==2.2.0 netaddr==0.7.19 netifaces==0.10.6 openstacksdk==0.12.0 os-client-config==1.29.0 os-service-types==1.2.0 os-testr==1.0.0 osc-lib==1.10.0 oslo.concurrency==3.25.0 oslo.config==5.2.0 oslo.context==2.19.2 oslo.i18n==3.20.0 oslo.log==3.36.0 oslo.serialization==2.18.0 oslo.utils==3.36.0 oslotest==3.2.0 packaging==17.1 paramiko==2.0.0 pbr==3.1.1 pep8==1.5.7 pyasn1==0.1.8 pycparser==2.18 pyflakes==0.8.1 Pygments==2.2.0 pyinotify==0.9.6 pyparsing==2.2.0 pyperclip==1.6.0 python-dateutil==2.5.3 python-mimeparse==1.6.0 python-subunit==1.0.0 pytz==2018.3 PyYAML==3.13 requests==2.18.4 requestsexceptions==1.4.0 rfc3986==0.3.1 simplejson==3.13.2 six==1.11.0 snowballstemmer==1.2.1 stestr==2.0.0 stevedore==1.28.0 tempest==17.1.0 testscenarios==0.4 testtools==2.2.0 traceback2==1.4.0 unittest2==1.1.0 urllib3==1.22 wrapt==1.10.11 ,0,82
openstack%2Fpython-watcherclient~858297,openstack/python-watcherclient,stable/zed,I4a4e652d6d7fabe5ce7b6fc5b0b6391957a7cbc5,Update TOX_CONSTRAINTS_FILE for stable/zed,MERGED,2022-09-19 11:20:19.000000000,2024-03-02 08:35:04.000000000,2024-03-02 08:33:25.000000000,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28748}]","[{'number': 1, 'created': '2022-09-19 11:20:19.000000000', 'files': ['tox.ini'], 'web_link': 'https://opendev.org/openstack/python-watcherclient/commit/e7b9945933ba7062d9a18afda3de174904ccdecf', 'message': 'Update TOX_CONSTRAINTS_FILE for stable/zed\n\nUpdate the URL to the upper-constraints file to point to the redirect\nrule on releases.openstack.org so that anyone working on this branch\nwill switch to the correct upper-constraints list automatically when\nthe requirements repository branches.\n\nUntil the requirements repository has as stable/zed branch, tests will\ncontinue to use the upper-constraints list on master.\n\nChange-Id: I4a4e652d6d7fabe5ce7b6fc5b0b6391957a7cbc5\n'}]",1,858297,e7b9945933ba7062d9a18afda3de174904ccdecf,8,3,1,22816,,,0,"Update TOX_CONSTRAINTS_FILE for stable/zed

Update the URL to the upper-constraints file to point to the redirect
rule on releases.openstack.org so that anyone working on this branch
will switch to the correct upper-constraints list automatically when
the requirements repository branches.

Until the requirements repository has as stable/zed branch, tests will
continue to use the upper-constraints list on master.

Change-Id: I4a4e652d6d7fabe5ce7b6fc5b0b6391957a7cbc5
",git fetch https://review.opendev.org/openstack/python-watcherclient refs/changes/97/858297/1 && git format-patch -1 --stdout FETCH_HEAD,['tox.ini'],1,e7b9945933ba7062d9a18afda3de174904ccdecf,create-zed, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/zed} -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/zed}, -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master} -c{env:TOX_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master},2,2
openstack%2Fpython-watcherclient~905172,openstack/python-watcherclient,master,I3a938c4d27f987f4fa1a60d41baf9da74b32a78f,Update python classifier in setup.cfg,MERGED,2024-01-10 03:22:09.000000000,2024-03-02 08:34:32.000000000,2024-03-02 08:33:26.000000000,"[{'_account_id': 22348}, {'_account_id': 28748}, {'_account_id': 29313}]","[{'number': 1, 'created': '2024-01-10 03:22:09.000000000', 'files': ['setup.cfg'], 'web_link': 'https://opendev.org/openstack/python-watcherclient/commit/9aace80a9b4b2ff310fead95cc6ef83637b1be37', 'message': 'Update python classifier in setup.cfg\n\nAs per the current release tested runtime, we test\npython version from 3.8 to 3.11 so updating the\nsame in python classifier in setup.cfg\n\nChange-Id: I3a938c4d27f987f4fa1a60d41baf9da74b32a78f\n'}]",0,905172,9aace80a9b4b2ff310fead95cc6ef83637b1be37,8,3,1,8556,,,0,"Update python classifier in setup.cfg

As per the current release tested runtime, we test
python version from 3.8 to 3.11 so updating the
same in python classifier in setup.cfg

Change-Id: I3a938c4d27f987f4fa1a60d41baf9da74b32a78f
",git fetch https://review.opendev.org/openstack/python-watcherclient refs/changes/72/905172/1 && git format-patch -1 --stdout FETCH_HEAD,['setup.cfg'],1,9aace80a9b4b2ff310fead95cc6ef83637b1be37,py3.11, Programming Language :: Python :: 3.10 Programming Language :: Python :: 3.11,,2,0
openstack%2Fpython-watcherclient~858296,openstack/python-watcherclient,stable/zed,I6b03383455ec1b2d83323056e55bc6dedfa2d162,Update .gitreview for stable/zed,MERGED,2022-09-19 11:20:16.000000000,2024-03-02 08:34:22.000000000,2024-03-02 08:33:24.000000000,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28748}]","[{'number': 1, 'created': '2022-09-19 11:20:16.000000000', 'files': ['.gitreview'], 'web_link': 'https://opendev.org/openstack/python-watcherclient/commit/a08c0fde6ff3843d00c390d9aeb2bae508c96739', 'message': 'Update .gitreview for stable/zed\n\nChange-Id: I6b03383455ec1b2d83323056e55bc6dedfa2d162\n'}]",1,858296,a08c0fde6ff3843d00c390d9aeb2bae508c96739,8,3,1,22816,,,0,"Update .gitreview for stable/zed

Change-Id: I6b03383455ec1b2d83323056e55bc6dedfa2d162
",git fetch https://review.opendev.org/openstack/python-watcherclient refs/changes/96/858296/1 && git format-patch -1 --stdout FETCH_HEAD,['.gitreview'],1,a08c0fde6ff3843d00c390d9aeb2bae508c96739,create-zed,defaultbranch=stable/zed,,1,0
openstack%2Fsenlin~910492,openstack/senlin,master,Ic04051fdc597b2f915f76e4c4c47f392354ddfe1,Remove executable permissions from files that don't need it,MERGED,2024-03-02 00:18:12.000000000,2024-03-02 08:11:03.000000000,2024-03-02 08:09:57.000000000,"[{'_account_id': 8246}, {'_account_id': 22348}, {'_account_id': 22623}]","[{'number': 1, 'created': '2024-03-02 00:18:12.000000000', 'files': ['senlin/objects/action.py', 'senlin/policies/lb_policy.py', 'senlin/policies/deletion_policy.py', 'examples/policies/deletion_policy_lifecycle_hook.yaml', 'senlin/common/config.py', 'senlin/api/openstack/v1/clusters.py', 'senlin/engine/actions/base.py', 'senlin/tests/unit/engine/actions/test_delete.py', 'senlin/common/consts.py', 'senlin/db/sqlalchemy/api.py', 'senlin/engine/service.py', 'senlin/engine/actions/cluster_action.py', 'senlin/tests/unit/engine/notifications/__init__.py', 'senlin/tests/unit/engine/notifications/test_message.py', 'senlin/tests/unit/conductor/service/test_clusters.py', 'senlin/tests/unit/engine/actions/test_action_base.py', 'doc/specs/lifecycle-hook.rst', 'senlin/engine/actions/node_action.py', 'doc/specs/fail-fast-on-locked_resource.rst', 'senlin/db/api.py', 'senlin/tests/unit/engine/actions/test_scale_in.py', 'senlin/objects/requests/clusters.py', 'senlin/tests/unit/db/test_action_api.py', 'senlin/health_manager/service.py', 'senlin/api/openstack/v1/version.py', 'senlin/conductor/service.py', 'senlin/tests/unit/engine/actions/test_cluster_action.py', 'senlin/engine/notifications/message.py', 'senlin/tests/unit/objects/requests/test_clusters.py'], 'web_link': 'https://opendev.org/openstack/senlin/commit/6b15b9768991b62af1019f6c7b01384c5958bc3a', 'message': ""Remove executable permissions from files that don't need it\n\nMany python files have their executable permissions flag set but they shouldn't Removed executable flag from files that did not need it\n\nCloses-Bug: #2055736\nChange-Id: Ic04051fdc597b2f915f76e4c4c47f392354ddfe1\n""}]",1,910492,6b15b9768991b62af1019f6c7b01384c5958bc3a,8,3,1,36823,,,0,"Remove executable permissions from files that don't need it

Many python files have their executable permissions flag set but they shouldn't Removed executable flag from files that did not need it

Closes-Bug: #2055736
Change-Id: Ic04051fdc597b2f915f76e4c4c47f392354ddfe1
",git fetch https://review.opendev.org/openstack/senlin refs/changes/92/910492/1 && git format-patch -1 --stdout FETCH_HEAD,"['senlin/objects/action.py', 'senlin/policies/lb_policy.py', 'senlin/policies/deletion_policy.py', 'examples/policies/deletion_policy_lifecycle_hook.yaml', 'senlin/common/config.py', 'senlin/api/openstack/v1/clusters.py', 'senlin/engine/actions/base.py', 'senlin/tests/unit/engine/actions/test_delete.py', 'senlin/common/consts.py', 'senlin/db/sqlalchemy/api.py', 'senlin/engine/service.py', 'senlin/engine/actions/cluster_action.py', 'senlin/tests/unit/engine/notifications/__init__.py', 'senlin/tests/unit/engine/notifications/test_message.py', 'senlin/tests/unit/conductor/service/test_clusters.py', 'senlin/tests/unit/engine/actions/test_action_base.py', 'doc/specs/lifecycle-hook.rst', 'senlin/engine/actions/node_action.py', 'doc/specs/fail-fast-on-locked_resource.rst', 'senlin/db/api.py', 'senlin/tests/unit/engine/actions/test_scale_in.py', 'senlin/objects/requests/clusters.py', 'senlin/tests/unit/db/test_action_api.py', 'senlin/health_manager/service.py', 'senlin/api/openstack/v1/version.py', 'senlin/conductor/service.py', 'senlin/tests/unit/engine/actions/test_cluster_action.py', 'senlin/engine/notifications/message.py', 'senlin/tests/unit/objects/requests/test_clusters.py']",29,6b15b9768991b62af1019f6c7b01384c5958bc3a,bug/2055736,,,0,0
openstack%2Freleases~910214,openstack/releases,master,If79990048de4033df8d49c533d40e74ff06f12bd,Release final python-watcherclient for 2024.1 Caracal,MERGED,2024-02-26 11:04:06.000000000,2024-03-02 08:08:25.000000000,2024-03-01 13:40:40.000000000,"[{'_account_id': 17685}, {'_account_id': 22348}, {'_account_id': 28522}, {'_account_id': 28748}]","[{'number': 1, 'created': '2024-02-26 11:04:06.000000000', 'files': ['deliverables/caracal/python-watcherclient.yaml'], 'web_link': 'https://opendev.org/openstack/releases/commit/c94f67c0fc6b3890bbc8c1aa71463f205abf538a', 'message': 'Release final python-watcherclient for 2024.1 Caracal\n\nThis is a release for python-watcherclient to get any merged but\nunreleased changes out prior to the client lib freeze for\n2024.1 Caracal going into effect.\n\nIf the team is ready to proceed, please leave a +1 to acknowledge this\nrelease and we will process right away. If the team is working on any\nfinal merges, leave a -1 with some detail on the status and update the\npatch with the new commit hash to use when ready.\n\nPatches with no response will be merged after Thursday, February 29th.\n\nChange-Id: If79990048de4033df8d49c533d40e74ff06f12bd\nSigned-off-by: Elod Illes <elod.illes@est.tech>\n'}]",1,910214,c94f67c0fc6b3890bbc8c1aa71463f205abf538a,8,4,1,17685,,,0,"Release final python-watcherclient for 2024.1 Caracal

This is a release for python-watcherclient to get any merged but
unreleased changes out prior to the client lib freeze for
2024.1 Caracal going into effect.

If the team is ready to proceed, please leave a +1 to acknowledge this
release and we will process right away. If the team is working on any
final merges, leave a -1 with some detail on the status and update the
patch with the new commit hash to use when ready.

Patches with no response will be merged after Thursday, February 29th.

Change-Id: If79990048de4033df8d49c533d40e74ff06f12bd
Signed-off-by: Elod Illes <elod.illes@est.tech>
",git fetch https://review.opendev.org/openstack/releases refs/changes/14/910214/1 && git format-patch -1 --stdout FETCH_HEAD,['deliverables/caracal/python-watcherclient.yaml'],1,c94f67c0fc6b3890bbc8c1aa71463f205abf538a,caracal-milestone-3,releases: - version: 4.3.0 projects: - repo: openstack/python-watcherclient hash: 33bcb8b04fc895c710feebd4f4d6ed0319968678,,5,0
openstack%2Fcinder~910559,openstack/cinder,master,I8688152d448be12307c7e1f30539a3bef861cbb7,Dell EMC: PowerMax - Configurable SRDF snapshots,ABANDONED,2024-02-29 01:12:26.000000000,2024-03-02 07:26:29.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-02-29 01:12:26.000000000', 'files': ['cinder/volume/drivers/dell_emc/powermax/iscsi.py', 'cinder/volume/drivers/dell_emc/powermax/common.py', 'cinder/volume/drivers/dell_emc/powermax/utils.py', 'cinder/tests/unit/volume/drivers/dell_emc/powermax/test_powermax_replication.py', 'cinder/volume/drivers/dell_emc/powermax/fc.py', 'releasenotes/notes/bp-powermax-protected-snap-82eb6731553356d9.yaml', 'cinder/tests/unit/volume/drivers/dell_emc/powermax/powermax_data.py'], 'web_link': 'https://opendev.org/openstack/cinder/commit/c229d1189442a1ede544cb96b25564c42ba4f1b0', 'message': ""Dell EMC: PowerMax - Configurable SRDF snapshots\n\nAdd volume type extra spec boolean property\n'powermax:disable_protected_snap'. Enabled when set to: `'<is> True'`,\n`'True'`, `'true'`, or `True`, otherwise the property is disabled by\ndefault.\n\nWhen set to True, snapshot won't be replicated and won't match the\nsource volume type, it will be a regular device no matter what.\n\nIf the property is not enabled in the volume type extra_specs, then\nthere is no change from the current behavior.\n\nImplements blueprint powermax-protected-snap-config\n\nChange-Id: I8688152d448be12307c7e1f30539a3bef861cbb7\n""}]",0,910559,c229d1189442a1ede544cb96b25564c42ba4f1b0,20,1,1,36396,,,0,"Dell EMC: PowerMax - Configurable SRDF snapshots

Add volume type extra spec boolean property
'powermax:disable_protected_snap'. Enabled when set to: `'<is> True'`,
`'True'`, `'true'`, or `True`, otherwise the property is disabled by
default.

When set to True, snapshot won't be replicated and won't match the
source volume type, it will be a regular device no matter what.

If the property is not enabled in the volume type extra_specs, then
there is no change from the current behavior.

Implements blueprint powermax-protected-snap-config

Change-Id: I8688152d448be12307c7e1f30539a3bef861cbb7
",git fetch https://review.opendev.org/openstack/cinder refs/changes/59/910559/1 && git format-patch -1 --stdout FETCH_HEAD,"['cinder/volume/drivers/dell_emc/powermax/iscsi.py', 'cinder/volume/drivers/dell_emc/powermax/common.py', 'cinder/volume/drivers/dell_emc/powermax/utils.py', 'cinder/tests/unit/volume/drivers/dell_emc/powermax/test_powermax_replication.py', 'cinder/volume/drivers/dell_emc/powermax/fc.py', 'releasenotes/notes/bp-powermax-protected-snap-82eb6731553356d9.yaml', 'cinder/tests/unit/volume/drivers/dell_emc/powermax/powermax_data.py']",7,c229d1189442a1ede544cb96b25564c42ba4f1b0,, rep_extra_specs[utils.DISABLE_PROTECTED_SNAP] = False,,88,16
openstack%2Fcinder~869991,openstack/cinder,master,I09ec5c30a7adb9380e65801bdec3ed0489359181,Hitachi: Volume Replication for VSP Driver,NEW,2023-01-12 12:37:19.000000000,2024-03-02 06:23:12.000000000,,"[{'_account_id': 597}, {'_account_id': 22348}, {'_account_id': 22879}, {'_account_id': 28403}]","[{'number': 1, 'created': '2023-01-12 12:37:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/163b47a37e08661e18ec789db0875b7e6baf753b', 'message': ""Hitachi: Volume Replication for VSP Driver\n\nThis patch is to add Volume Replication for the Hitachi VSP driver.\nWhen using the feature, it requires following software licenses in\n'Hitachi Remote Replication':\n    - Universal Replicator\n    - True Copy\n\nImplements: blueprint hitachi-vsp-add-volume-replication\nChange-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181\n""}, {'number': 2, 'created': '2023-01-13 09:29:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/558986bea043221419099162597a2c3ba6cdb9ad', 'message': ""Hitachi: Volume Replication for VSP Driver\n\nThis patch is to add Volume Replication for the Hitachi VSP driver.\nWhen using the feature, it requires following software licenses in\n'Hitachi Remote Replication':\n    - Universal Replicator\n    - True Copy\n\nImplements: blueprint hitachi-vsp-add-volume-replication\nChange-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181\n""}, {'number': 3, 'created': '2023-01-17 08:08:18.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/54523305fe3aa70c4f7506ccabfd00d6cf5edacc', 'message': ""Hitachi: Volume Replication for VSP Driver\n\nThis patch is to add Volume Replication for the Hitachi VSP driver.\nWhen using the feature, it requires following software licenses in\n'Hitachi Remote Replication':\n    - Universal Replicator\n    - True Copy\n\nImplements: blueprint hitachi-vsp-add-volume-replication\nChange-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181\n""}, {'number': 4, 'created': '2023-02-06 11:30:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/bff0614c533cd16e4275fb76a27e6b0d085026ce', 'message': ""Hitachi: Volume Replication for VSP Driver\n\nThis patch is to add Volume Replication for the Hitachi VSP driver.\nWhen using the feature, it requires following software licenses in\n'Hitachi Remote Replication':\n    - Universal Replicator\n    - True Copy\n\nImplements: blueprint hitachi-vsp-add-volume-replication\nChange-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181\n""}, {'number': 5, 'created': '2024-01-24 05:09:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/f99d4fe329cf37f9cf6914e8b455dc588888c8a8', 'message': ""Hitachi: Volume Replication for VSP Driver\n\nThis patch is to add Volume Replication for the Hitachi VSP driver.\nWhen using the feature, it requires following software licenses in\n'Hitachi Remote Replication':\n    - Universal Replicator\n    - True Copy\n\nImplements: blueprint hitachi-vsp-add-volume-replication\nChange-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181\n""}, {'number': 6, 'created': '2024-02-02 07:11:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/cc269291808340f913941e2bbb57c6ed3b38aa76', 'message': ""Hitachi: Volume Replication for VSP Driver\n\nThis patch is to add Volume Replication for the Hitachi VSP driver.\nWhen using the feature, it requires following software licenses in\n'Hitachi Remote Replication':\n    - Universal Replicator\n    - True Copy\n\nImplements: blueprint hitachi-vsp-add-volume-replication\nChange-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181\n""}, {'number': 7, 'created': '2024-02-07 02:20:32.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/976e3b20c97ea3a933b1be8fdf42d92c72c3fe85', 'message': ""Hitachi: Volume Replication for VSP Driver\n\nThis patch is to add Volume Replication for the Hitachi VSP driver.\nWhen using the feature, it requires following software licenses in\n'Hitachi Remote Replication':\n    - Universal Replicator\n    - True Copy\n\nImplements: blueprint hitachi-vsp-add-volume-replication\nChange-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181\n""}, {'number': 8, 'created': '2024-02-07 04:19:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/1057bc47dc0435a3a96a758ee7bfbe1f863881d1', 'message': ""Hitachi: Volume Replication for VSP Driver\n\nThis patch is to add Volume Replication for the Hitachi VSP driver.\nWhen using the feature, it requires following software licenses in\n'Hitachi Remote Replication':\n    - Universal Replicator\n    - True Copy\n\nImplements: blueprint hitachi-vsp-add-volume-replication\nChange-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181\n""}, {'number': 9, 'created': '2024-02-27 00:43:12.000000000', 'files': ['cinder/tests/unit/volume/drivers/hpe/xp/test_hpe_xp_rest_iscsi.py', 'cinder/volume/drivers/hitachi/hbsd_replication.py', 'cinder/volume/drivers/hitachi/hbsd_fc.py', 'cinder/tests/unit/volume/drivers/hpe/xp/test_hpe_xp_mirror_iscsi.py', 'cinder/volume/drivers/hitachi/hbsd_rest_api.py', 'releasenotes/notes/hitachi-vsp-add-volume-replication-d8079621818cccec.yaml', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_rest_iscsi.py', 'cinder/tests/unit/volume/drivers/nec/v/test_internal_nec_rest_fc.py', 'cinder/opts.py', 'cinder/tests/unit/volume/drivers/hpe/xp/__init__.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_replication_fc.py', 'cinder/volume/drivers/hitachi/hbsd_iscsi.py', 'cinder/tests/unit/volume/drivers/hpe/xp/test_hpe_xp_mirror_fc.py', 'cinder/tests/unit/volume/drivers/nec/v/test_internal_nec_rest_iscsi.py', 'cinder/volume/drivers/hitachi/hbsd_utils.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_mirror_fc.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_rest_fc.py', 'cinder/volume/drivers/hitachi/hbsd_rest.py', 'cinder/volume/drivers/hitachi/hbsd_common.py', 'cinder/tests/unit/volume/drivers/hpe/xp/test_hpe_xp_rest_fc.py'], 'web_link': 'https://opendev.org/openstack/cinder/commit/16f2c1a2f001c928b9e3adff925f4bf8d52ab8db', 'message': ""Hitachi: Volume Replication for VSP Driver\n\nThis patch is to add Volume Replication for the Hitachi VSP driver.\nWhen using the feature, it requires following software licenses in\n'Hitachi Remote Replication':\n    - Universal Replicator\n    - True Copy\n\nImplements: blueprint hitachi-vsp-add-volume-replication\nChange-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181\n""}]",13,869991,16f2c1a2f001c928b9e3adff925f4bf8d52ab8db,175,4,9,33473,,,0,"Hitachi: Volume Replication for VSP Driver

This patch is to add Volume Replication for the Hitachi VSP driver.
When using the feature, it requires following software licenses in
'Hitachi Remote Replication':
    - Universal Replicator
    - True Copy

Implements: blueprint hitachi-vsp-add-volume-replication
Change-Id: I09ec5c30a7adb9380e65801bdec3ed0489359181
",git fetch https://review.opendev.org/openstack/cinder refs/changes/91/869991/1 && git format-patch -1 --stdout FETCH_HEAD,"['cinder/volume/drivers/hitachi/hbsd_replication.py', 'cinder/volume/drivers/hitachi/hbsd_fc.py', 'cinder/volume/drivers/hitachi/hbsd_rest_api.py', 'releasenotes/notes/hitachi-vsp-add-volume-replication-d8079621818cccec.yaml', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_rest_iscsi.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_replication_fc.py', 'cinder/volume/drivers/hitachi/hbsd_iscsi.py', 'cinder/volume/drivers/hitachi/hbsd_utils.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_mirror_fc.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_rest_fc.py', 'cinder/volume/drivers/hitachi/hbsd_rest.py', 'cinder/volume/drivers/hitachi/hbsd_common.py', 'doc/source/configuration/block-storage/drivers/hitachi-vsp-driver.rst']",13,163b47a37e08661e18ec789db0875b7e6baf753b,bp/hitachi-vsp-add-volume-replication, cinder.volume.drivers.hitachi.hbsd_replication,,4340,168
openstack%2Fswift~910842,openstack/swift,master,I3516823fdacbe8fd3c2434c0de9dedd1d82980fe,CI: fix rolling-upgrade jobs,MERGED,2024-03-01 19:55:15.000000000,2024-03-02 04:00:01.000000000,2024-03-02 03:57:36.000000000,"[{'_account_id': 15343}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 19:55:15.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/swift/commit/275af9e008fd296623d7a9eb9320206aa536fcdd', 'message': 'CI: fix rolling-upgrade jobs\n\ntrain and ussuri are now EOL; drop them.\n\nyoga has moved from stable to unmaintained.\n\nChange-Id: I3516823fdacbe8fd3c2434c0de9dedd1d82980fe\n'}]",3,910842,275af9e008fd296623d7a9eb9320206aa536fcdd,13,2,1,15343,,,0,"CI: fix rolling-upgrade jobs

train and ussuri are now EOL; drop them.

yoga has moved from stable to unmaintained.

Change-Id: I3516823fdacbe8fd3c2434c0de9dedd1d82980fe
",git fetch https://review.opendev.org/openstack/swift refs/changes/42/910842/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,275af9e008fd296623d7a9eb9320206aa536fcdd,, previous_swift_version: origin/unmaintained/yoga, name: swift-multinode-rolling-upgrade-train parent: swift-multinode-rolling-upgrade vars: previous_swift_version: origin/stable/train - job: name: swift-multinode-rolling-upgrade-ussuri parent: swift-multinode-rolling-upgrade vars: previous_swift_version: origin/stable/ussuri - job: previous_swift_version: origin/stable/yoga,1,13
openstack%2Fcinder~850830,openstack/cinder,master,I8c8b882d9d12159c898f4a2d4622410475a73979,Hitachi: support extending volume has snapshot(s),NEW,2022-07-25 04:45:52.000000000,2024-03-02 03:18:39.000000000,,"[{'_account_id': 597}, {'_account_id': 14806}, {'_account_id': 22348}, {'_account_id': 22879}, {'_account_id': 28403}, {'_account_id': 29122}]","[{'number': 1, 'created': '2022-07-25 04:45:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/8290c10a10db2887082bef770c726585375d12ef', 'message': 'Hitachi: support extending volume with snapshot\n\nSupport extending volume with snapshot\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 2, 'created': '2022-08-29 12:15:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/a903c229cc6a689380155942eb31d48d7a4f5cba', 'message': 'Hitachi: support extending volume with snapshot\n\nSupport extending volume with snapshot\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 3, 'created': '2022-11-04 10:38:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/e6d4c6b89c19f88538977420a21756802ef232d2', 'message': 'Hitachi: support extending volume with snapshot\n\nSupport extending volume with snapshot\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 4, 'created': '2022-12-16 01:23:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/8766371d46880cf5cbb63b81ef4188d6dbad75fd', 'message': 'Hitachi: support extending volume with snapshot\n\nSupport extending volume with snapshot\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 5, 'created': '2023-02-07 03:39:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/fc66feb4cf5ce5003e903354a5e7422bdeb9d522', 'message': 'Hitachi: support extending volume with snapshot\n\nSupport extending volume with snapshot.\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 6, 'created': '2023-12-11 05:47:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/d6aba3c8e3a685c130f02e08b687e3bbd71a8d20', 'message': 'Hitachi: support extending volume has snapshot(s)\n\nSupport extending volume has snapshot(s).\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 7, 'created': '2023-12-13 07:27:40.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/0cb2a181964fbcfefa34133b10e4d61dbb05d6cb', 'message': 'Hitachi: support extending volume has snapshot(s)\n\nSupport extending volume has snapshot(s).\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 8, 'created': '2023-12-22 01:03:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/a722b4f779ed1b84ba21b8f452ed2009c503e0c4', 'message': 'Hitachi: support extending volume has snapshot(s)\n\nSupport extending volume has snapshot(s).\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 9, 'created': '2024-01-18 05:22:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/0ef6b571fa73c8497d3300989261748a7863a6b6', 'message': 'Hitachi: support extending volume has snapshot(s)\n\nSupport extending volume has snapshot(s).\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 10, 'created': '2024-02-02 05:23:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/6243c0363b955587d193853702816bbd6e13d880', 'message': 'Hitachi: support extending volume has snapshot(s)\n\nSupport extending volume has snapshot(s).\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 11, 'created': '2024-02-07 02:16:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/cinder/commit/46cc4ed803bed3b665bd7fc5da6c9fcf0382f520', 'message': 'Hitachi: support extending volume has snapshot(s)\n\nSupport extending volume has snapshot(s).\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}, {'number': 12, 'created': '2024-02-27 00:42:58.000000000', 'files': ['cinder/opts.py', 'cinder/volume/drivers/hitachi/hbsd_iscsi.py', 'cinder/volume/drivers/hitachi/hbsd_replication.py', 'releasenotes/notes/hitachi-vsp-update-extend-vol-6e4348e69da49444.yaml', 'cinder/volume/drivers/hitachi/hbsd_fc.py', 'cinder/volume/drivers/hitachi/hbsd_utils.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_mirror_fc.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_rest_fc.py', 'cinder/volume/drivers/hitachi/hbsd_rest.py', 'cinder/volume/drivers/hitachi/hbsd_common.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_rest_iscsi.py'], 'web_link': 'https://opendev.org/openstack/cinder/commit/64e7a9ca208cbd8d62847bc494aaf18ed2a02fdd', 'message': 'Hitachi: support extending volume has snapshot(s)\n\nSupport extending volume has snapshot(s).\n\nImplements: blueprint hitachi-vsp-update-extend-vol\nChange-Id: I8c8b882d9d12159c898f4a2d4622410475a73979\n'}]",13,850830,64e7a9ca208cbd8d62847bc494aaf18ed2a02fdd,265,6,12,33473,,,0,"Hitachi: support extending volume has snapshot(s)

Support extending volume has snapshot(s).

Implements: blueprint hitachi-vsp-update-extend-vol
Change-Id: I8c8b882d9d12159c898f4a2d4622410475a73979
",git fetch https://review.opendev.org/openstack/cinder refs/changes/30/850830/1 && git format-patch -1 --stdout FETCH_HEAD,"['cinder/opts.py', 'cinder/volume/drivers/hitachi/hbsd_iscsi.py', 'releasenotes/notes/hitachi-vsp-update-extend-vol-6e4348e69da49444.yaml', 'cinder/volume/drivers/hitachi/hbsd_fc.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_rest_fc.py', 'cinder/volume/drivers/hitachi/hbsd_rest.py', 'cinder/volume/drivers/hitachi/hbsd_common.py', 'cinder/tests/unit/volume/drivers/hitachi/test_hitachi_hbsd_rest_iscsi.py']",8,8290c10a10db2887082bef770c726585375d12ef,bp/hitachi-vsp-update-extend-vol, self.configuration.hitachi_enhanced_expansion = False hbsd_common.COMMON_EXTEND_OPTS +,,37,1
openstack%2Fswift~908953,openstack/swift,master,Ia0eff5d435e390a73fc2888a963a889f510d318b,Get basic write support for mountpoint-s3,ABANDONED,2024-02-13 22:23:52.000000000,2024-03-02 01:03:09.000000000,,"[{'_account_id': 22348}, {'_account_id': 34892}]","[{'number': 1, 'created': '2024-02-13 22:23:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/1d6f3b8df7bb4dae4a5b953cf520f9f74c2b05ae', 'message': 'Get basic write support for mountpoint-s3\n\nStill no trailer or proper crc32 support, though.\n\nChange-Id: Ia0eff5d435e390a73fc2888a963a889f510d318b\n'}, {'number': 2, 'created': '2024-02-14 05:23:33.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/e9c99b50829906ff74898824044c7f79ee70f341', 'message': 'Get basic write support for mountpoint-s3\n\nStill no trailer or proper crc32 support, though.\n\nChange-Id: Ia0eff5d435e390a73fc2888a963a889f510d318b\n'}, {'number': 3, 'created': '2024-03-01 16:56:36.000000000', 'files': ['swift/common/middleware/s3api/s3request.py', 'swift/common/middleware/s3api/schema/complete_multipart_upload.rng', 'doc/s3api/rnc/complete_multipart_upload.rnc', 'test/unit/common/middleware/s3api/test_s3request.py'], 'web_link': 'https://opendev.org/openstack/swift/commit/1d4ee842f7044f99f6ff332df56ebed139b0ae22', 'message': 'Get basic write support for mountpoint-s3\n\nStill no trailer or proper crc32 support, though.\n\nChange-Id: Ia0eff5d435e390a73fc2888a963a889f510d318b\n'}]",20,908953,1d4ee842f7044f99f6ff332df56ebed139b0ae22,11,2,3,15343,,,0,"Get basic write support for mountpoint-s3

Still no trailer or proper crc32 support, though.

Change-Id: Ia0eff5d435e390a73fc2888a963a889f510d318b
",git fetch https://review.opendev.org/openstack/swift refs/changes/53/908953/1 && git format-patch -1 --stdout FETCH_HEAD,"['swift/common/middleware/s3api/s3request.py', 'swift/common/middleware/s3api/schema/complete_multipart_upload.rng', 'doc/s3api/rnc/complete_multipart_upload.rnc', 'test/unit/common/middleware/s3api/test_s3request.py']",4,1d6f3b8df7bb4dae4a5b953cf520f9f74c2b05ae,," error, _, sig = raised.exception.body.decode('utf8').partition('\n') error, _, sig = raised.exception.body.decode('utf8').partition('\n') error, _, sig = raised.exception.body.decode('utf8').partition('\n')"," error, sig = raised.exception.body.decode('utf8').split('\n') error, sig = raised.exception.body.decode('utf8').split('\n') error, sig = raised.exception.body.decode('utf8').split('\n')",108,100
openstack%2Fkayobe~908142,openstack/kayobe,master,I6c9686bdf736d58738fbe88169e62833cc85d2f4,Support credentials for custom DNF repositories,MERGED,2024-02-06 15:07:04.000000000,2024-03-01 23:30:27.000000000,2024-03-01 23:29:28.000000000,"[{'_account_id': 14200}, {'_account_id': 15197}, {'_account_id': 22348}, {'_account_id': 28048}]","[{'number': 1, 'created': '2024-02-06 15:07:04.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/kayobe/commit/b342e37075e1d5aa88f043714e8ffafad6649e08', 'message': 'Support credentials for custom DNF repositories\n\nThis allows use of repositories protected with HTTP basic authentication.\n\nChange-Id: I6c9686bdf736d58738fbe88169e62833cc85d2f4\n'}, {'number': 2, 'created': '2024-02-07 08:55:02.000000000', 'files': ['releasenotes/notes/dnf-credentials-afc3bf7940cb6e99.yaml', 'ansible/roles/dnf/tasks/custom-repo.yml'], 'web_link': 'https://opendev.org/openstack/kayobe/commit/bd6673477f0327a5eb07f0f6e2a647827f742a63', 'message': 'Support credentials for custom DNF repositories\n\nThis allows use of repositories protected with HTTP basic\nauthentication.\n\nChange-Id: I6c9686bdf736d58738fbe88169e62833cc85d2f4\n'}]",5,908142,bd6673477f0327a5eb07f0f6e2a647827f742a63,23,4,2,14826,,,0,"Support credentials for custom DNF repositories

This allows use of repositories protected with HTTP basic
authentication.

Change-Id: I6c9686bdf736d58738fbe88169e62833cc85d2f4
",git fetch https://review.opendev.org/openstack/kayobe refs/changes/42/908142/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/dnf-credentials-afc3bf7940cb6e99.yaml', 'ansible/roles/dnf/tasks/custom-repo.yml']",2,b342e37075e1d5aa88f043714e8ffafad6649e08,," password: ""{{ item.value.password | default(omit) }}"" username: ""{{ item.value.username | default(omit) }}""",,7,0
openstack%2Fcinder~910560,openstack/cinder,master,I4bc7d68d9424b127c95636d49325fc42c32b4277,Dell EMC: PowerMax - Configurable SRDF snapshots,ABANDONED,2024-02-29 01:29:19.000000000,2024-03-01 23:20:32.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-02-29 01:29:19.000000000', 'files': ['cinder/volume/drivers/dell_emc/powermax/iscsi.py', 'cinder/volume/drivers/dell_emc/powermax/common.py', 'cinder/volume/drivers/dell_emc/powermax/utils.py', 'cinder/tests/unit/volume/drivers/dell_emc/powermax/test_powermax_replication.py', 'cinder/volume/drivers/dell_emc/powermax/fc.py', 'releasenotes/notes/bp-powermax-protected-snap-82eb6731553356d9.yaml', 'cinder/tests/unit/volume/drivers/dell_emc/powermax/powermax_data.py'], 'web_link': 'https://opendev.org/openstack/cinder/commit/46aecb7f5fd5f94376b872ddd098745eff783b58', 'message': ""Dell EMC: PowerMax - Configurable SRDF snapshots\n\nAdd volume type extra spec boolean property\n'powermax:disable_protected_snap'. Enabled when set to: `'<is> True'`,\n`'True'`, `'true'`, or True, otherwise the property is disabled\nby default.\n\nWhen set to True, snapshot won't be replicated and won't\nmatch the source volume type, it will be a regular device\nno matter what.\n\nIf the property is not enabled in the volume type extra_specs, then\nthere is no change from the current behavior.\n\nImplements blueprint powermax-protected-snap-config\n\nChange-Id: I4bc7d68d9424b127c95636d49325fc42c32b4277\n""}]",0,910560,46aecb7f5fd5f94376b872ddd098745eff783b58,17,1,1,36396,,,0,"Dell EMC: PowerMax - Configurable SRDF snapshots

Add volume type extra spec boolean property
'powermax:disable_protected_snap'. Enabled when set to: `'<is> True'`,
`'True'`, `'true'`, or True, otherwise the property is disabled
by default.

When set to True, snapshot won't be replicated and won't
match the source volume type, it will be a regular device
no matter what.

If the property is not enabled in the volume type extra_specs, then
there is no change from the current behavior.

Implements blueprint powermax-protected-snap-config

Change-Id: I4bc7d68d9424b127c95636d49325fc42c32b4277
",git fetch https://review.opendev.org/openstack/cinder refs/changes/60/910560/1 && git format-patch -1 --stdout FETCH_HEAD,"['cinder/volume/drivers/dell_emc/powermax/iscsi.py', 'cinder/volume/drivers/dell_emc/powermax/common.py', 'cinder/volume/drivers/dell_emc/powermax/utils.py', 'cinder/tests/unit/volume/drivers/dell_emc/powermax/test_powermax_replication.py', 'cinder/volume/drivers/dell_emc/powermax/fc.py', 'releasenotes/notes/bp-powermax-protected-snap-82eb6731553356d9.yaml', 'cinder/tests/unit/volume/drivers/dell_emc/powermax/powermax_data.py']",7,46aecb7f5fd5f94376b872ddd098745eff783b58,, rep_extra_specs[utils.DISABLE_PROTECTED_SNAP] = False,,88,16
openstack%2Fneutron~905331,openstack/neutron,stable/xena,Ib5b943344cddbd468c00768461ba1ee00a2b4c58,Add max limit to agent_down_time,MERGED,2024-01-11 17:17:48.000000000,2024-03-01 23:06:13.000000000,2024-03-01 23:04:59.000000000,"[{'_account_id': 1131}, {'_account_id': 21798}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-01-11 17:17:48.000000000', 'files': ['releasenotes/notes/agent_down_time_max-af3b62763aaa2fe5.yaml', 'neutron/conf/agent/database/agents_db.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/e18837a7e01cea95477beb5a4ab58c80f39cce37', 'message': 'Add max limit to agent_down_time\n\nThe agent_down_time ends up being passed to an eventlet green-thread;\nunder the hood, this uses a CPython C-types interface with a limitation\nof (2^32 / 2 - 1) INT_MAX (as defined in C) where int is usually 32 bits\n\nI have set the max value to (2^32 / 2 - 1)/1000 as agent_down_time\nconfigured in seconds, this ends up being 2147483.\n\nThis patch is required as passing a larger number\ncauses this error: OverflowError: timeout is too large\n\nIf a user currently has a value larger than (2^32 / 2 - 1)/1000 set,\nNeutron Server will fail to start and will print out a very helpful\nerror message.\n\nConflicts:\n      neutron/conf/agent/database/agents_db.py\n\nCloses-Bug: #2028724\nChange-Id: Ib5b943344cddbd468c00768461ba1ee00a2b4c58\n(cherry picked from commit 6fef1e65250dbda057206e1c2ee64f59b21d490f)\n'}]",1,905331,e18837a7e01cea95477beb5a4ab58c80f39cce37,14,3,1,9656,,,0,"Add max limit to agent_down_time

The agent_down_time ends up being passed to an eventlet green-thread;
under the hood, this uses a CPython C-types interface with a limitation
of (2^32 / 2 - 1) INT_MAX (as defined in C) where int is usually 32 bits

I have set the max value to (2^32 / 2 - 1)/1000 as agent_down_time
configured in seconds, this ends up being 2147483.

This patch is required as passing a larger number
causes this error: OverflowError: timeout is too large

If a user currently has a value larger than (2^32 / 2 - 1)/1000 set,
Neutron Server will fail to start and will print out a very helpful
error message.

Conflicts:
      neutron/conf/agent/database/agents_db.py

Closes-Bug: #2028724
Change-Id: Ib5b943344cddbd468c00768461ba1ee00a2b4c58
(cherry picked from commit 6fef1e65250dbda057206e1c2ee64f59b21d490f)
",git fetch https://review.opendev.org/openstack/neutron refs/changes/31/905331/1 && git format-patch -1 --stdout FETCH_HEAD,"['releasenotes/notes/agent_down_time_max-af3b62763aaa2fe5.yaml', 'neutron/conf/agent/database/agents_db.py']",2,e18837a7e01cea95477beb5a4ab58c80f39cce37,," # The agent_down_time value can only be a max of INT_MAX (as defined in C), # where int is usually 32 bits. The agent_down_time will be passed to # eventlet in milliseconds and any number higher will produce an OverFlow # error. More details here: https://bugs.launchpad.net/neutron/+bug/2028724 max=((2**32 / 2 - 1) // 1000),",,11,0
openstack%2Fneutron~878543,openstack/neutron,master,I34e2453ab206c13c3ca40c4181970c320bdd8e67,[ovn] Add support for enable_default_route_bfd attribute,MERGED,2023-03-24 16:10:19.000000000,2024-03-01 23:06:10.000000000,2024-03-01 23:04:54.000000000,"[{'_account_id': 1131}, {'_account_id': 9845}, {'_account_id': 16688}, {'_account_id': 22348}, {'_account_id': 36201}]","[{'number': 1, 'created': '2023-03-24 16:10:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/b975b8c52b8a433a0f0474bc131905273b872c13', 'message': 'WIP [ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is enabled, create BFD records\nand link them to default route entries.\n\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 2, 'created': '2023-03-28 14:13:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/e3cf21ce21c1a44d3cafdef5beb78001502ab2e7', 'message': 'WIP [ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, create BFD records\nand link them to default route entries.\n\nTODO:\n- Figure out why the router attributes are not honoured on\n  router creation.\n- Add test case for removal of external gateways/router and\n  confirm BFD record is cleaned up.\n\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 3, 'created': '2023-03-29 10:13:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/72d3be9d8f8b45f4bd79ed00e4fe375b4a723d9f', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 4, 'created': '2023-03-29 17:58:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/47f1fbe79a4b5154d87c7c7fc3f52c02d7b46334', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 5, 'created': '2023-03-30 20:10:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/8e5c11acfadc7b8b778879f4f9a931d1fb27d0c8', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 6, 'created': '2023-03-31 20:05:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/7a3326a5e5db6e74c67a0fcb7cd2bc585904fe68', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 7, 'created': '2023-04-04 10:05:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/368561005e154fe5245de6b753c8a2342f483def', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 8, 'created': '2023-04-04 14:28:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/500a543af5d27b2438f96586787c3e363b41ef61', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 9, 'created': '2023-04-13 18:52:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/2239e99fb65cd86c517b7672c4061b104e0f828b', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 10, 'created': '2023-04-18 18:41:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/93f5cb46bffeb6c03a5ae0a17dbddb6c58d7ac31', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 11, 'created': '2023-04-27 14:35:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/f8603db2d84087e6a13ead0549d4f132c2384d67', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 12, 'created': '2023-04-27 17:29:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/337d06a2677ea9cd14a394003a12415eae078a6d', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 13, 'created': '2023-05-02 10:13:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/77904343a3da899f5e4b7840492fa4286dd3a60c', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 14, 'created': '2023-05-02 11:14:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/72e75e2abf5640c77f3221d7e0df53e0daaf3a5a', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 15, 'created': '2023-05-02 11:39:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/88bf630b64aba074a5c96a8bfb1799ab869802b9', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 16, 'created': '2023-05-02 18:30:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/5bbb4a1edc3e8127281b6fccc81afdf7b1c7fe36', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 17, 'created': '2023-05-03 07:22:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/1154dc090c838d3c479c2a795c5fdf081ca41cae', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 18, 'created': '2023-05-05 23:54:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/bb640453e8be32d999fa08d620cc9c979d1f9013', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 19, 'created': '2023-05-08 05:47:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/93957bf7fe7d8a41685a0701dbece62ddb3c982d', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 20, 'created': '2023-05-08 13:20:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/baae5f448bfd7825a4077cacb08be254872c7f0a', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 21, 'created': '2023-05-16 21:45:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/f655ee2e7aa83ecba5ea1a453cf175f114735ff6', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 22, 'created': '2023-05-16 21:55:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/eded31432cf8c337aa2f1791bda9e5f7e5781d32', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 23, 'created': '2023-05-19 09:48:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/2f33481c88d97815fd16cea19f42906e874a01af', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 24, 'created': '2023-05-24 23:27:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/986dbc536674cf3e313262450d81f248d9f335ec', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 25, 'created': '2023-05-25 05:48:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/2c9f0435059ab66f4a8e3f5f54f087500c708d15', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 26, 'created': '2023-06-12 09:30:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/2a6903efd02c358e2488b3fa2c935b2d8765dea2', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 27, 'created': '2023-06-12 13:10:46.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/5b680b40e4c4b3bd9c36eaf38aad2322e7827180', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 28, 'created': '2023-06-22 09:34:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/b2d4694fd0034f32f3e8e0db99a8b59da65c9ef2', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 29, 'created': '2023-06-23 06:44:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/c8743786ea4982df47cb9d12f008061e50f24340', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 30, 'created': '2023-06-26 10:45:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/4fdb357ef29644adc34dc0d0a59f18565dfc23ec', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 31, 'created': '2023-07-03 14:47:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/28f42c608f130c2f60b1674e70205cfe16f69ab3', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 32, 'created': '2023-07-06 13:39:40.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/f8e0556ff1163ab978e7dcbdacbc7554999fe68f', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nDepends-On: I0e49a0d60f40991e21f2b3f94cd99f43b07fd639\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 33, 'created': '2023-07-06 16:33:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/499276411102d78be6c184d61c5078d37c0a5b07', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 34, 'created': '2023-07-07 09:53:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/31e9f38996369c3ca26ed4b1f45c5bf88d111a8f', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 35, 'created': '2023-07-25 15:16:00.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/3aed4be7b24d0ec967dc8520b091b36818b83ebb', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 36, 'created': '2023-08-22 12:40:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/3216f606673429328f5dd2db9f78291af7c6feb9', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 37, 'created': '2023-08-22 12:48:53.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/ab6fb62d9b5fdadeafbf63ff9c6eff2aa93c9820', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 38, 'created': '2023-08-29 10:06:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/c47ff636047d7a8a23eba77e5105d815153d1664', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 39, 'created': '2023-10-10 12:33:32.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/28c339d8bc050ec960b07c82c0d239e2a152edaf', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 40, 'created': '2023-10-11 04:49:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/7d7db2eebf614bd2a03bba2532d584d7083a69b4', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 41, 'created': '2023-10-19 11:31:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/74c0d62a61deb64fe5a0c81da5eb8ad5cf426bb0', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 42, 'created': '2023-10-20 08:52:51.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/c0a531e61813bde17a5968860243de7c8397f642', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 43, 'created': '2023-10-20 16:37:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/31032ba96347ddeabb1f31a8ab79660136643787', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 44, 'created': '2023-10-20 19:16:08.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/1d7f4533f6cf417eb5ab709084db3899f01f7772', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 45, 'created': '2023-10-21 17:37:08.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/d9d53fc5c0da4ca48a94614965d37e33005739f4', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 46, 'created': '2023-10-22 06:19:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/cb608b1fcafe733286c96af8a544c7603eeac087', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 47, 'created': '2023-12-04 15:50:14.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/fbf025aae40f4db2467a63511c2877f8997ed43a', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 48, 'created': '2024-01-31 19:27:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/15433a731572c32a67e57fdb3d82152fdbc1b05b', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 49, 'created': '2024-02-01 06:32:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/ebc0414debeab1d863c98aafbf3ee40c00d95f40', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 50, 'created': '2024-02-01 07:08:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/4a3f23b4689bfd6f3913cfa2f9ff25dbbaadfb95', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 51, 'created': '2024-02-01 10:04:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/d922186f61cb38c8a07ec296aa60de1cd96e2a24', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 52, 'created': '2024-02-16 08:07:24.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/73ee14e2206284df3a44125e9efc325fe89a5351', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 53, 'created': '2024-02-16 16:49:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/80359a3750a406689ca5d7b316a19b0dc3825535', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 54, 'created': '2024-02-19 18:53:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/f59012524065255dc6ea55ba154fe097368c3c4e', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 55, 'created': '2024-02-26 06:21:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/933a8a0159095c4a4f8ff04589852a27fad72d11', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 56, 'created': '2024-02-27 10:47:09.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/da0a5d58445bd87390a4f4830c71f2cd436bd352', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 57, 'created': '2024-02-27 13:00:05.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/8d9fbfd74d9bfd310d758aafc7b7b0a460b37b0a', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 58, 'created': '2024-02-27 18:53:32.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/6478c5db91383da0a97ddfd0e1da1491f198c9b0', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 59, 'created': '2024-02-28 06:14:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/c668759a166f445e331da216a9ded13cfcfc10ec', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 60, 'created': '2024-02-28 06:29:02.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/0996df292dcf62fab780586af5460cd2063b756f', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 61, 'created': '2024-02-29 08:03:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/0ac53beb0b2ee1fa1ca21eeed9c2624d8ad91a87', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 62, 'created': '2024-02-29 10:55:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/bf930a7723691240b6ea23227a8366b84a298cbe', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 63, 'created': '2024-02-29 16:29:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/318f07785c39248afb69ef607ec9d61ed3042682', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}, {'number': 64, 'created': '2024-02-29 21:03:27.000000000', 'files': ['neutron/tests/functional/services/ovn_l3/test_plugin.py', 'neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'neutron/tests/unit/fake_resources.py', 'requirements.txt', 'neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/api.py', 'neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/impl_idl_ovn.py', 'neutron/common/ovn/extensions.py', 'neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/commands.py', 'neutron/tests/unit/services/ovn_l3/test_plugin.py', 'neutron/tests/functional/plugins/ml2/drivers/ovn/mech_driver/ovsdb/test_impl_idl.py', 'neutron/tests/unit/plugins/ml2/drivers/ovn/mech_driver/ovsdb/test_ovn_client.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/cc1ff09b9e2e64eb6abd519a0d4ca3dda7439eb1', 'message': '[ovn] Add support for enable_default_route_bfd attribute\n\nWhen ``enable_default_route_bfd`` is set, maintain BFD records\nalong with default route records.  Default route records will\nalso be fitted with the `output_port` key, which is a requirement\nfor the OVN BFD support.\n\nPartial-Bug: #2002687\nSigned-off-by: Frode Nordahl <frode.nordahl@canonical.com>\nChange-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67\n'}]",38,878543,cc1ff09b9e2e64eb6abd519a0d4ca3dda7439eb1,286,5,64,13686,,,0,"[ovn] Add support for enable_default_route_bfd attribute

When ``enable_default_route_bfd`` is set, maintain BFD records
along with default route records.  Default route records will
also be fitted with the `output_port` key, which is a requirement
for the OVN BFD support.

Partial-Bug: #2002687
Signed-off-by: Frode Nordahl <frode.nordahl@canonical.com>
Change-Id: I34e2453ab206c13c3ca40c4181970c320bdd8e67
",git fetch https://review.opendev.org/openstack/neutron refs/changes/43/878543/1 && git format-patch -1 --stdout FETCH_HEAD,"['global-requirements.txt', 'neutron/tests/functional/services/ovn_l3/test_plugin.py', 'neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py', 'requirements.txt', 'neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/commands.py']",5,b975b8c52b8a433a0f0474bc131905273b872c13,2023-aa-l3-gw-multihoming," if col == 'bfd' and 'nexthop' in self.columns: bfd_find_cmd = self.api.bfd_find(val, self.columns['nexthop']) bfd_rec = bfd_find_cmd.execute(check_error=True) print('HELLO bfd_rec={}'.format(bfd_rec)) if bfd_rec: setattr(row, col, bfd_rec) continue",,47,4
openstack%2Frequirements~910713,openstack/requirements,master,I44b1cab5d4a05558a40c3d80e47d327aecbd0ce2,update constraint for python-manilaclient to new release 4.8.0,MERGED,2024-03-01 10:03:48.000000000,2024-03-01 22:32:21.000000000,2024-03-01 22:31:24.000000000,"[{'_account_id': 11904}, {'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 10:03:48.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/dc6a791c40f366af2978c4dc307e29d0c530f041', 'message': 'update constraint for python-manilaclient to new release 4.8.0\n\nmeta: version: 4.8.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: no\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Carlos Eduardo <ces.eduardo98@gmail.com>\nmeta: release:Change-Id: I9d16001590547ac49645bd9afc98b83da361849e\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Workflow+1: Elod Illes <elod.illes@est.tech>\nChange-Id: I44b1cab5d4a05558a40c3d80e47d327aecbd0ce2\n'}]",2,910713,dc6a791c40f366af2978c4dc307e29d0c530f041,13,3,1,11131,,,0,"update constraint for python-manilaclient to new release 4.8.0

meta: version: 4.8.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: no
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Carlos Eduardo <ces.eduardo98@gmail.com>
meta: release:Change-Id: I9d16001590547ac49645bd9afc98b83da361849e
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Workflow+1: Elod Illes <elod.illes@est.tech>
Change-Id: I44b1cab5d4a05558a40c3d80e47d327aecbd0ce2
",git fetch https://review.opendev.org/openstack/requirements refs/changes/13/910713/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,dc6a791c40f366af2978c4dc307e29d0c530f041,new-release,python-manilaclient===4.8.0,python-manilaclient===4.7.0,1,1
openstack%2Fswift~908337,openstack/swift,master,Ib5442f2caf3b7dbf676bf84c62d6ef0458b56278,DNM: WIP: test jig for native mpu audit,NEW,2024-02-07 19:08:31.000000000,2024-03-01 22:29:58.000000000,,"[{'_account_id': 7847}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-07 19:08:31.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/fbeb43eff4a5561546e31f7d9eb95bada74f66e7', 'message': 'DNM: WIP: test jig for native mpu audit\n\nPlaying with some ideas for orphaned MPU cleanup.\n\nChange-Id: Ib5442f2caf3b7dbf676bf84c62d6ef0458b56278\n'}, {'number': 2, 'created': '2024-02-09 17:28:15.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/1bd882e4b1827c67167b0589c7337d5e3ff4cdf7', 'message': 'DNM: WIP: test jig for native mpu audit\n\nPlaying with some ideas for orphaned MPU cleanup.\n\nChange-Id: Ib5442f2caf3b7dbf676bf84c62d6ef0458b56278\n'}, {'number': 3, 'created': '2024-02-16 17:14:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/4eb1c94ede46c160fc88546ce4ee8fe412e6589d', 'message': 'DNM: WIP: test jig for native mpu audit\n\nPlaying with some ideas for orphaned MPU cleanup.\n\nChange-Id: Ib5442f2caf3b7dbf676bf84c62d6ef0458b56278\n'}, {'number': 4, 'created': '2024-03-01 21:16:38.000000000', 'files': ['test/unit/container/test_mpu_auditor.py', 'test/unit/container/test_native_mpu.py', 'swift/container/mpu_auditor.py'], 'web_link': 'https://opendev.org/openstack/swift/commit/9bf088fa59022d2fd2dd8f8ad841689c5e047090', 'message': 'DNM: WIP: test jig for native mpu audit\n\nPlaying with some ideas for orphaned MPU cleanup.\n\nChange-Id: Ib5442f2caf3b7dbf676bf84c62d6ef0458b56278\n'}]",6,908337,9bf088fa59022d2fd2dd8f8ad841689c5e047090,13,2,4,7847,,,0,"DNM: WIP: test jig for native mpu audit

Playing with some ideas for orphaned MPU cleanup.

Change-Id: Ib5442f2caf3b7dbf676bf84c62d6ef0458b56278
",git fetch https://review.opendev.org/openstack/swift refs/changes/37/908337/1 && git format-patch -1 --stdout FETCH_HEAD,['test/unit/container/test_native_mpu.py'],1,fbeb43eff4a5561546e31f7d9eb95bada74f66e7,p-native-mpu-backend,"# Copyright (c) 2024 Nvidia # # Licensed under the Apache License, Version 2.0 (the ""License""); # you may not use this file except in compliance with the License. # You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an ""AS IS"" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or # implied. # See the License for the specific language governing permissions and # limitations under the License. import random from swift.common.utils import Timestamp from swift.container.backend import ContainerBroker from test.unit import make_timestamp_iter from test.unit.common import test_db class Version(object): # legacy id is just the version # new id's are [epoch+]version+label def __init__(self, version=None, epoch=None, label=None): self.version = version self.epoch = epoch self.label = label def __str__(self): parts = [p for p in [self.epoch, self.version, self.label] if p is not None] return '+'.join(parts) @classmethod def parse(cls, value): parts = value.split('+') if len(parts) == 1: # legacy return cls(version=parts[0]) if len(parts) == 2: return cls(epoch=parts[0], label=parts[1]) return cls(epoch=parts[0], version=parts[1], label=parts[2]) class ItemName(object): def __init__(self, name, version): self.name = name self.version = version def __str__(self): return '-'.join([self.name, str(self.version)]) @classmethod def parse(cls, value): parts = value.split('-') return cls(parts[0], Version.parse(parts[1])) class Item(object): def __init__(self, name, timestamp, ctype, version, size=0, etag='', deleted=0): self.name = ItemName(name, version) self.timestamp = timestamp self.ctype = ctype self.deleted = deleted self.size = size self.etag = etag def __iter__(self): yield 'name', str(self.name) yield 'created_at', self.timestamp.internal yield 'size', self.size yield 'etag', self.etag yield 'deleted', self.deleted yield 'content_type', self.ctype class FakeContainer(object): # fake updates to a versions container MPU_TYPE = 'application/x-mpu;swift_bytes=123' DELETE_MARKER_TYPE = 'application/x-deleted' AUDIT_MARKER_TYPE = 'application/x-audit' def __init__(self, broker): self.broker = broker self.ts_iter = make_timestamp_iter() self.versioning_enabled = False self.epoch = self.increment_epoch() self.pending_items = [] self.last_audit_row = 0 def increment_epoch(self): return next(self.ts_iter).internal def set_versioning(self, enabled): self.versioning_enabled = enabled if enabled: self.epoch = self.increment_epoch() def make_unversion(self, version, label=None): return Version(version, self.epoch, label) def make_version(self, version, label=None): return Version(version, None, label) def put(self, name, label=None, content_type=MPU_TYPE): ts = next(self.ts_iter) if self.versioning_enabled: # as per master, object written with version suffix item = Item(name, ts, content_type, version=self.make_version(ts.internal, label), size=99, etag='my-etag') self.pending_items.append(dict(item)) else: # novel: object written with unversion suffix, plus an audit marker # that hints that older unversions may now be orphaned # note: in practice this is not an atomic update on the DB item = Item(name, ts, content_type, version=self.make_unversion(ts.internal, label), size=99, etag='my-etag') self.pending_items.append(dict(item)) marker = Item(name, ts, self.AUDIT_MARKER_TYPE, version=self.make_unversion(''), deleted=1) self.pending_items.append(dict(marker)) return item.name def delete(self, name, version=None, deleted_flag=1): ts = next(self.ts_iter) if version: # regular object DELETE update causes the content-type to be lost item = Item(name, ts, '', version=version, deleted=deleted_flag) elif self.versioning_enabled: # as per master, write a delete marker item = Item(name, ts, self.DELETE_MARKER_TYPE, version=self.make_version(ts.internal)) else: # novel: write a hint that the object in versions container *may* # have been deleted item = Item(name, ts, self.AUDIT_MARKER_TYPE, version=self.make_unversion(''), deleted=1) self.pending_items.append(dict(item)) def merge_pending(self): # pretend object updates arrive out of order random.shuffle(self.pending_items) self.broker.merge_items(self.pending_items) self.pending_items.clear() def mpu_audit(self): rows = self.broker.get_items_since(self.last_audit_row, 100) definite = [] possible = [] for row in rows: self.last_audit_row = row['ROWID'] + 1 name = ItemName.parse(row['name']) timestamp = Timestamp(row['created_at']) ctype = row['content_type'] deleted = row['deleted'] if name.version.label == 'mpu': if deleted == 1: definite.append(row['name']) print('definite orphan: %s' % row['name']) if deleted == 2: print('skip super-tombstone: %s' % row['name']) elif str(name) not in possible: # look for an audit marker (could be in an older row) prefix = str(ItemName(name.name, Version('', name.version.epoch))) candidates = self.broker.list_objects_iter( 100, '', '', prefix, None, include_deleted=True) for candidate in candidates: if (candidate[3] == self.AUDIT_MARKER_TYPE and Timestamp(candidate[1]) > timestamp): possible.append(str(name)) print('possible orphan due to audit marker %s: %s' % (candidate[0], str(name))) elif ctype == self.AUDIT_MARKER_TYPE: # look for mpus that may be orphaned # TODO: prefix query may scoop up some alien objects?? # need to check that suffix is a valid version prefix = row['name'] candidates = self.broker.list_objects_iter( 100, '', '', prefix, None) print('possible orphans due to audit marker %s:' % prefix) for candidate in candidates: name = ItemName.parse(candidate[0]) if (str(name) not in possible and name.version.label == 'mpu' and Timestamp(candidate[1]) < timestamp): possible.append(candidate[0]) print(' %s' % candidate[0]) # TODO: how to figure out parts count? annotate tombstone? return definite, possible def delete_orphans(self, orphans): # delete orphan manifests for orphan in orphans: parsed_name = ItemName.parse(orphan) # write a super-tombstone row # TODO: this is cheating a little - for 'possible' orphans we'd # have to delete the manifest on disk and wait for the object # update to move the row to deleted=1, then delete the parts - or # is it ok to directly manipulate the manifest row once the object # server DELETE returns success? print('super-deleting orphan %s' % str(orphan)) self.delete(parsed_name.name, str(parsed_name.version), deleted_flag=2) class TestMpus(test_db.TestDbBase): def setUp(self): super(TestMpus, self).setUp() self.ts_iter = make_timestamp_iter() def dump_rows(self, rows): if not rows: return keys = rows[0].keys() print('') print(' '.join(keys)) for row in rows: print(' '.join([str(v) or '-' for v in row.values()])) def test_mpus(self): db_file = self.get_db_path() broker = ContainerBroker(db_file, account='a', container='c') self.assertEqual(broker._db_file, db_file) broker.initialize(Timestamp('1').internal, 0) c = FakeContainer(broker) exp_definite_orphans = [] exp_possible_orphans = [] # a regular obj shouldn't be in versions container while versioning is # disabled, but it's ignored by mpu-audit c.put('a') name = c.put('a', label='mpu') exp_possible_orphans.append(str(name)) name = c.put('a', label='mpu') exp_possible_orphans.append(str(name)) c.delete('a') c.put('a', label='mpu') c.set_versioning(True) c.put('a', content_type='plain/text') # regular versioned object c.put('a', label='mpu') c.delete('a') name = c.put('a', label='mpu') c.set_versioning(True) exp_definite_orphans.append(str(name)) c.delete('a', name.version) c.put('a', label='mpu') c.set_versioning(False) name = c.put('a', label='mpu') exp_possible_orphans.append(str(name)) c.delete('a') self.dump_rows(c.pending_items) c.merge_pending() definite_orphans, possible_orphans = c.mpu_audit() self.assertEqual(exp_definite_orphans, sorted(definite_orphans)) self.assertEqual(exp_possible_orphans, sorted(possible_orphans)) c.delete_orphans(definite_orphans + possible_orphans) exp_definite_orphans = [] exp_possible_orphans = [] name = c.put('a', label='mpu') exp_possible_orphans.append(str(name)) c.delete('a') self.dump_rows(c.pending_items) c.merge_pending() self.dump_rows(c.broker.get_items_since(0, 100)) definite_orphans, possible_orphans = c.mpu_audit() self.assertEqual(exp_definite_orphans, sorted(definite_orphans)) self.assertEqual(exp_possible_orphans, sorted(possible_orphans)) ",,283,0
openstack%2Fneutron~894399,openstack/neutron,master,Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6,Make common Metadata Driver classes,MERGED,2023-09-08 21:28:56.000000000,2024-03-01 21:00:55.000000000,2024-03-01 20:59:48.000000000,"[{'_account_id': 1131}, {'_account_id': 8313}, {'_account_id': 8655}, {'_account_id': 9656}, {'_account_id': 9845}, {'_account_id': 11975}, {'_account_id': 15554}, {'_account_id': 16688}, {'_account_id': 22348}, {'_account_id': 32029}, {'_account_id': 32761}, {'_account_id': 34271}, {'_account_id': 36201}]","[{'number': 1, 'created': '2023-09-08 21:28:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/2091b143b30ceb80ebacad00ac20ae13bb51b9ec', 'message': 'WIP: Make common Metadata Driver classes\n\nThe OVS and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nThis has the side-effect of adding IPv6 support to the\nOVN metadata driver.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 2, 'created': '2023-09-14 05:28:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/6d2979261407f492956cbee059258fd5bc1f6307', 'message': 'WIP: Make common Metadata Driver classes\n\nThe OVS and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nThis has the side-effect of adding IPv6 support to the\nOVN metadata driver.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 3, 'created': '2023-09-14 16:01:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/297dfeadf0c6e22a15ae226941fa29cd207db54a', 'message': 'WIP: Make common Metadata Driver classes\n\nThe OVS and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nThis has the side-effect of adding IPv6 support to the\nOVN metadata driver.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 4, 'created': '2023-10-21 23:35:10.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/63792d21177167d7c63435f6feeced6f96c87d03', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 5, 'created': '2023-10-22 00:07:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/a81b2c818d42b8e0276c338eccf38872fb5ce813', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 6, 'created': '2023-10-22 00:17:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/be0984fe01a7f0db5d501cbabc815a1804ba5256', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 7, 'created': '2023-10-25 23:27:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/c1748e80fd81e7414a97aac606c392dbb0e421b9', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 8, 'created': '2023-11-07 23:38:12.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/6946e6d838f963545a09b7b8b603262d7cb8a552', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 9, 'created': '2023-11-15 00:45:22.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/c242043200a1f3ec5e280c7701b5a77f20341184', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 10, 'created': '2023-11-15 01:49:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/d2a75e908d439cecbcae294f9040c47a6991bb3a', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 11, 'created': '2023-12-11 20:10:48.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/7bcbe551fd8c93bb8802b2fcf8cc6c61e8682a5b', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 12, 'created': '2024-01-24 21:07:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/1b0873fa11c2db0a2357ba05c92bcbc7eb691726', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}, {'number': 13, 'created': '2024-02-27 07:39:28.000000000', 'files': ['neutron/agent/metadata/driver_base.py', 'neutron/tests/functional/agent/test_dhcp_agent.py', 'neutron/tests/unit/agent/metadata/test_driver.py', 'neutron/agent/metadata/driver.py', 'neutron/agent/ovn/metadata/driver.py', 'neutron/tests/functional/agent/l3/framework.py', 'neutron/tests/unit/agent/ovn/metadata/test_driver.py', 'neutron/tests/unit/agent/ovn/metadata/test_agent.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/63f690e6fd1b029938746f77a224e1f1b987c6c0', 'message': 'Make common Metadata Driver classes\n\nThe ML2 and OVN metadata agents have almost identical\ncode, as the former was copied to the latter and modified.\nInstead, combine all the common parts and just have\neach do any driver-specific operations separately.\n\nChange-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6\n'}]",22,894399,63f690e6fd1b029938746f77a224e1f1b987c6c0,85,13,13,1131,,,0,"Make common Metadata Driver classes

The ML2 and OVN metadata agents have almost identical
code, as the former was copied to the latter and modified.
Instead, combine all the common parts and just have
each do any driver-specific operations separately.

Change-Id: Iff8bc8de16a8afc7c0195bf301d1b0643e17d7c6
",git fetch https://review.opendev.org/openstack/neutron refs/changes/99/894399/1 && git format-patch -1 --stdout FETCH_HEAD,"['neutron/agent/metadata/driver_base.py', 'neutron/agent/metadata/driver.py', 'neutron/agent/ovn/metadata/driver.py']",3,2091b143b30ceb80ebacad00ac20ae13bb51b9ec,bug/2052787,"from neutron.agent.metadata import driver_base class OVNHaproxyConfigurator(driver_base.HaproxyConfigurator): PROXY_CONFIG_DIR = ""ovn-metadata-proxy"" HEADER_CONFIG_TEMPLATE = _HEADER_CONFIG_TEMPLATE class OVNMetadataDriver(driver_base.MetadataDriver): pass","import errno import grp import os import pwd from neutron.agent.linux import external_process from neutron_lib import exceptions from oslo_config import cfg from oslo_log import log as logging from neutron._i18n import _ from neutron.common import metadata as comm_meta LOG = logging.getLogger(__name__) METADATA_SERVICE_NAME = 'metadata-proxy' HAPROXY_SERVICE = 'haproxy' PROXY_CONFIG_DIR = ""ovn-metadata-proxy""_UNLIMITED_CONFIG_TEMPLATE = """""" listen listener bind %(host)s:%(port)s server metadata %(unix_socket_path)s """""" class HaproxyConfigurator(object): def __init__(self, network_id, router_id, unix_socket_path, host, port, user, group, state_path, pid_file, rate_limiting_config): self.network_id = network_id self.router_id = router_id if network_id is None and router_id is None: raise exceptions.NetworkIdOrRouterIdRequiredError() self.host = host self.port = port self.user = user self.group = group self.state_path = state_path self.unix_socket_path = unix_socket_path self.pidfile = pid_file self.rate_limiting_config = rate_limiting_config self.log_level = ( 'debug' if logging.is_debug_enabled(cfg.CONF) else 'info') # log-tag will cause entries to have the string pre-pended, so use # the uuid haproxy will be started with. Additionally, if it # starts with ""haproxy"" then things will get logged to # /var/log/haproxy.log on Debian distros, instead of to syslog. uuid = network_id or router_id self.log_tag = 'haproxy-{}-{}'.format(METADATA_SERVICE_NAME, uuid) def create_config_file(self): """"""Create the config file for haproxy."""""" # Need to convert uid/gid into username/group try: username = pwd.getpwuid(int(self.user)).pw_name except (ValueError, KeyError): try: username = pwd.getpwnam(self.user).pw_name except KeyError: raise comm_meta.InvalidUserOrGroupException( _(""Invalid user/uid: '%s'"") % self.user) try: groupname = grp.getgrgid(int(self.group)).gr_name except (ValueError, KeyError): try: groupname = grp.getgrnam(self.group).gr_name except KeyError: raise comm_meta.InvalidUserOrGroupException( _(""Invalid group/gid: '%s'"") % self.group) cfg_info = { 'host': self.host, 'port': self.port, 'unix_socket_path': self.unix_socket_path, 'user': username, 'group': groupname, 'pidfile': self.pidfile, 'log_level': self.log_level, 'log_tag': self.log_tag, 'bind_v6_line': '', } if self.network_id: cfg_info['res_type'] = 'Network' cfg_info['res_id'] = self.network_id else: cfg_info['res_type'] = 'Router' cfg_info['res_id'] = self.router_id haproxy_cfg = comm_meta.get_haproxy_config(cfg_info, self.rate_limiting_config, _HEADER_CONFIG_TEMPLATE, _UNLIMITED_CONFIG_TEMPLATE) LOG.debug(""haproxy_cfg = %s"", haproxy_cfg) cfg_dir = self.get_config_path(self.state_path) # uuid has to be included somewhere in the command line so that it can # be tracked by process_monitor. self.cfg_path = os.path.join(cfg_dir, ""%s.conf"" % cfg_info['res_id']) if not os.path.exists(cfg_dir): os.makedirs(cfg_dir) with open(self.cfg_path, ""w"") as cfg_file: cfg_file.write(haproxy_cfg) @staticmethod def get_config_path(state_path): return os.path.join(state_path or cfg.CONF.state_path, PROXY_CONFIG_DIR) @staticmethod def cleanup_config_file(uuid, state_path): """"""Delete config file created when metadata proxy was spawned."""""" # Delete config file if it exists cfg_path = os.path.join( HaproxyConfigurator.get_config_path(state_path), ""%s.conf"" % uuid) try: os.unlink(cfg_path) except OSError as ex: # It can happen that this function is called but metadata proxy # was never spawned so its config file won't exist if ex.errno != errno.ENOENT: raise class MetadataDriver(object): monitors = {} @classmethod def _get_metadata_proxy_user_group(cls, conf): user = conf.metadata_proxy_user or str(os.geteuid()) group = conf.metadata_proxy_group or str(os.getegid()) return user, group @classmethod def _get_metadata_proxy_callback(cls, bind_address, port, conf, network_id=None, router_id=None): def callback(pid_file): metadata_proxy_socket = conf.metadata_proxy_socket user, group = ( cls._get_metadata_proxy_user_group(conf)) haproxy = HaproxyConfigurator(network_id, router_id, metadata_proxy_socket, bind_address, port, user, group, conf.state_path, pid_file, conf.metadata_rate_limiting) haproxy.create_config_file() proxy_cmd = [HAPROXY_SERVICE, '-f', haproxy.cfg_path] return proxy_cmd return callback @classmethod def spawn_monitored_metadata_proxy(cls, monitor, ns_name, port, conf, bind_address=""0.0.0.0"", network_id=None, router_id=None): uuid = network_id or router_id callback = cls._get_metadata_proxy_callback( bind_address, port, conf, network_id=network_id, router_id=router_id) pm = cls._get_metadata_proxy_process_manager(uuid, conf, ns_name=ns_name, callback=callback) pm.enable() monitor.register(uuid, METADATA_SERVICE_NAME, pm) cls.monitors[router_id] = pm @classmethod def destroy_monitored_metadata_proxy(cls, monitor, uuid, conf, ns_name): monitor.unregister(uuid, METADATA_SERVICE_NAME) pm = cls._get_metadata_proxy_process_manager(uuid, conf, ns_name=ns_name) pm.disable() # Delete metadata proxy config file HaproxyConfigurator.cleanup_config_file(uuid, cfg.CONF.state_path) cls.monitors.pop(uuid, None) @classmethod def _get_metadata_proxy_process_manager(cls, router_id, conf, ns_name=None, callback=None): return external_process.ProcessManager( conf=conf, uuid=router_id, namespace=ns_name, service=HAPROXY_SERVICE, default_cmd_callback=callback)",287,446
openstack%2Fpyeclib~910828,openstack/pyeclib,master,I24d653041df35304188500cbadfac8228bac5dce,CI: Remove centos-7 jobs,MERGED,2024-03-01 18:41:14.000000000,2024-03-01 20:52:48.000000000,2024-03-01 20:52:48.000000000,"[{'_account_id': 15343}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 18:41:14.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/pyeclib/commit/6a376b9156f115b4b5d1c408856aed3c3f9101de', 'message': ""CI: Remove centos-7 jobs\n\nCentOS 7 will go EOL later this year, and infra wants to drop the nodes\nsoon-ish -- don't make them wait on our account.\n\nChange-Id: I24d653041df35304188500cbadfac8228bac5dce\n""}]",2,910828,6a376b9156f115b4b5d1c408856aed3c3f9101de,13,2,1,15343,,,0,"CI: Remove centos-7 jobs

CentOS 7 will go EOL later this year, and infra wants to drop the nodes
soon-ish -- don't make them wait on our account.

Change-Id: I24d653041df35304188500cbadfac8228bac5dce
",git fetch https://review.opendev.org/openstack/pyeclib refs/changes/28/910828/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,6a376b9156f115b4b5d1c408856aed3c3f9101de,,, - pyeclib-tox-py27-centos-7 - libec-pyeclib-unit-centos-7 - pyeclib-tox-py27-centos-7 - libec-pyeclib-unit-centos-7 name: pyeclib-tox-py27-centos-7 parent: openstack-tox-py27 description: | Run unit tests using ``py27`` environment on CentOS 7. nodeset: centos-7 - job: name: libec-pyeclib-unit-centos-7 parent: openstack-tox-py27 timeout: 1800 nodeset: centos-7 vars: tox_envlist: py27-compilelibs - job:,0,19
openstack%2Fswift~910753,openstack/swift,master,I40c1724fa673ac252f5052ac85006788ba69d5c7,CI: pin python-dateutil for py2,MERGED,2024-03-01 16:31:27.000000000,2024-03-01 20:40:15.000000000,2024-03-01 20:38:54.000000000,"[{'_account_id': 15343}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 16:31:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/swift/commit/b1c0450263e69eb0e516cf2464a6212f4816f515', 'message': 'CI: pin python-dateutil for py2\n\nTheir 2.9.0 release is known-broken for py27-py35.\n\nChange-Id: I40c1724fa673ac252f5052ac85006788ba69d5c7\n'}, {'number': 2, 'created': '2024-03-01 17:12:35.000000000', 'files': ['tools/playbooks/common/install_dependencies.yaml', 'lower-constraints.txt', 'py2-constraints.txt'], 'web_link': 'https://opendev.org/openstack/swift/commit/f32f2dd023366d45c8062985f850a063d506c05e', 'message': 'CI: pin python-dateutil for py2\n\nTheir 2.9.0 release is known-broken for py27-py35.\n\nChange-Id: I40c1724fa673ac252f5052ac85006788ba69d5c7\n'}]",2,910753,f32f2dd023366d45c8062985f850a063d506c05e,9,2,2,15343,,,0,"CI: pin python-dateutil for py2

Their 2.9.0 release is known-broken for py27-py35.

Change-Id: I40c1724fa673ac252f5052ac85006788ba69d5c7
",git fetch https://review.opendev.org/openstack/swift refs/changes/53/910753/1 && git format-patch -1 --stdout FETCH_HEAD,['py2-constraints.txt'],1,b1c0450263e69eb0e516cf2464a6212f4816f515,,"# python-dateutil seems likely to bring back support, but 2.9.0 is known-broken # see https://github.com/dateutil/dateutil/issues/1344 python-dateutil===2.8.2 ",,4,0
openstack%2Fneutron~909305,openstack/neutron,master,I12717936fe2bc188545309bacb8a260981f14c88,[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact,MERGED,2024-02-17 16:50:19.000000000,2024-03-01 20:40:13.000000000,2024-03-01 20:38:48.000000000,"[{'_account_id': 1131}, {'_account_id': 4694}, {'_account_id': 6773}, {'_account_id': 9845}, {'_account_id': 16688}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-17 16:50:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/b819ff1922a6f5784e73567c154b19dbef40a345', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 2, 'created': '2024-02-17 23:12:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/0cd380ba985ee0ed24dd3691f337dda6f3172a08', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 3, 'created': '2024-02-17 23:30:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/93eba6f11d6de01198bb717f60adb41d015e5f9f', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 4, 'created': '2024-02-18 16:48:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/af6e660b6f70d31ec9b1f4db5dd516eaaab3ee95', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 5, 'created': '2024-02-19 10:33:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/0366df07d72436ad74cdab143f46382f2fc9df14', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 6, 'created': '2024-02-19 10:52:56.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/4bc9a70993ef3754366329d764e4b1e6cccd3a07', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 7, 'created': '2024-02-22 07:59:57.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/49f9f62a78e92eeb88e18f96f436720551a672ab', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 8, 'created': '2024-02-22 10:49:52.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/6a241a4c92350c8b44cb18bf906aea2e1301e944', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 9, 'created': '2024-02-26 16:37:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/f19625059f7e78bf84e29d262b9237ad0080a19a', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 10, 'created': '2024-02-27 09:10:26.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/bffa57e721f98ea6260786ef32198dc652ac6d5d', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 11, 'created': '2024-02-28 12:12:11.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/9d6e8a27c94db8acfe302827da419ffbcf2b131f', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 12, 'created': '2024-02-28 17:13:41.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/dcbea4d49003196aed65698b7b038a1b060cff21', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 13, 'created': '2024-02-29 07:58:44.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/neutron/commit/c7fcde47deb6518c15c086218f72d142c35c0ea8', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}, {'number': 14, 'created': '2024-03-01 07:03:30.000000000', 'files': ['neutron/tests/functional/services/ovn_l3/test_plugin.py', 'doc/source/admin/ovn/l3_scheduler.rst', 'neutron/tests/functional/plugins/ml2/drivers/ovn/mech_driver/ovsdb/test_maintenance.py', 'releasenotes/notes/ovn-l3-scheduler-unbound-gw-ports-46ced10f810d845d.yaml', 'neutron/common/ovn/constants.py', 'neutron/tests/unit/scheduler/test_l3_ovn_scheduler.py', 'neutron/tests/functional/plugins/ml2/drivers/ovn/mech_driver/ovsdb/test_ovsdb_monitor.py', 'neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/commands.py', 'neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/maintenance.py', 'neutron/common/ovn/utils.py', 'neutron/scheduler/l3_ovn_scheduler.py', 'neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/impl_idl_ovn.py', 'neutron/tests/unit/common/ovn/test_utils.py', 'neutron/tests/unit/plugins/ml2/drivers/ovn/mech_driver/ovsdb/test_impl_idl_ovn.py'], 'web_link': 'https://opendev.org/openstack/neutron/commit/fa3223bb9d76c6f5ba1a12dd5a17cec6852be7df', 'message': '[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact\n\nThis artifact is no longer used in the ""Logical_Router"" registers (in\nthe ""options"" field) to mark this ""Logical_Router"" as unhosted. A\n""Logical_Router"" is considered as unhosted if the gateway\n""Logical_Router_Ports"" have no ""chassis"" set.\n\nThis artifact is also used to create a ""Gateway_Chassis"" register\npointing to a inexisting invalid chassis called\n""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound\nto a chassis will have no value in ""gateway_chassis"" (NOTE1).\n\nNOTE1: this is valid now with the current two OVN L3 schedulers that\nuse ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a\nrouter. In a future, we can consider using ""ha_chassis_group"" for\nscheduling.\n\nPartial-Bug: #2052821\nRelated-Bug: #2019217\nChange-Id: I12717936fe2bc188545309bacb8a260981f14c88\n'}]",23,909305,fa3223bb9d76c6f5ba1a12dd5a17cec6852be7df,70,6,14,16688,,,0,"[OVN] Remove OVN_GATEWAY_INVALID_CHASSIS artifact

This artifact is no longer used in the ""Logical_Router"" registers (in
the ""options"" field) to mark this ""Logical_Router"" as unhosted. A
""Logical_Router"" is considered as unhosted if the gateway
""Logical_Router_Ports"" have no ""chassis"" set.

This artifact is also used to create a ""Gateway_Chassis"" register
pointing to a inexisting invalid chassis called
""neutron-ovn-invalid-chassis"". Any ""Logical_Router_Port"" not bound
to a chassis will have no value in ""gateway_chassis"" (NOTE1).

NOTE1: this is valid now with the current two OVN L3 schedulers that
use ""gateway_chassis"" to schedule the ""Logical_Router_Port"" of a
router. In a future, we can consider using ""ha_chassis_group"" for
scheduling.

Partial-Bug: #2052821
Related-Bug: #2019217
Change-Id: I12717936fe2bc188545309bacb8a260981f14c88
",git fetch https://review.opendev.org/openstack/neutron refs/changes/05/909305/1 && git format-patch -1 --stdout FETCH_HEAD,"['neutron/tests/functional/services/ovn_l3/test_plugin.py', 'neutron/scheduler/l3_ovn_scheduler.py', 'neutron/tests/unit/common/ovn/test_utils.py', 'neutron/tests/unit/plugins/ml2/drivers/ovn/mech_driver/ovsdb/test_impl_idl_ovn.py', 'neutron/common/ovn/constants.py', 'neutron/tests/unit/scheduler/test_l3_ovn_scheduler.py']",6,b819ff1922a6f5784e73567c154b19dbef40a345,bug/2052821," 'Gateways': {'g1': None}}, self.assertIsNone(chassis) self.assertIsNone(chassis) self.assertIsNone(chassis) existing_chassis=['temp', None])) existing_chassis=None)) self.assertIsNone(chassis) self.assertIsNone(chassis)"," 'Gateways': { 'g1': [ovn_const.OVN_GATEWAY_INVALID_CHASSIS]}}, self.assertEqual([ovn_const.OVN_GATEWAY_INVALID_CHASSIS], chassis) self.assertEqual([ovn_const.OVN_GATEWAY_INVALID_CHASSIS], chassis) self.assertEqual([ovn_const.OVN_GATEWAY_INVALID_CHASSIS], chassis) existing_chassis=['temp', ovn_const.OVN_GATEWAY_INVALID_CHASSIS])) existing_chassis=[ovn_const.OVN_GATEWAY_INVALID_CHASSIS])) self.assertEqual([ovn_const.OVN_GATEWAY_INVALID_CHASSIS], chassis) self.assertEqual([ovn_const.OVN_GATEWAY_INVALID_CHASSIS], chassis)",19,32
openstack%2Fpython-swiftclient~903770,openstack/python-swiftclient,master,Ice9cc9fe68684563f18ee527996e5a4292230a96,Add transaction id to errors,MERGED,2023-12-15 16:30:17.000000000,2024-03-01 20:39:52.000000000,2024-03-01 20:38:52.000000000,"[{'_account_id': 1179}, {'_account_id': 7847}, {'_account_id': 15343}, {'_account_id': 22348}, {'_account_id': 34892}]","[{'number': 1, 'created': '2023-12-15 16:30:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-swiftclient/commit/816f9da4d39880373fbb5ad5083aacf629551796', 'message': 'Add txn in error output\n\nChange-Id: Ice9cc9fe68684563f18ee527996e5a4292230a96\n'}, {'number': 2, 'created': '2023-12-22 02:56:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-swiftclient/commit/d91add678e50f0b33161389e7a7ffaf20a42ef26', 'message': 'Add txn in error output\n\nChange-Id: Ice9cc9fe68684563f18ee527996e5a4292230a96\n'}, {'number': 3, 'created': '2024-01-19 02:55:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-swiftclient/commit/338d03302195bace9d53f4527f96a126469415fc', 'message': ""Add transaction id to errors to help troubleshoot, including:\n  - error when downloading object with truncted/missing segment\n  - error when downloading or stat'ing non-existent object\n  - error when stat'ing or listing non-existent container\n\nChange response headers returned by client.py Connection APIs\nsuch as get_object() from lowercase dict to CaseInsensitiveDict,\nas some error paths rely on this to retrieve the transaction id,\nwhile there are existing code paths using response.headers which\nis CaseInsensitiveDict from requests lib.\n\nChange-Id: Ice9cc9fe68684563f18ee527996e5a4292230a96\n""}, {'number': 4, 'created': '2024-01-23 20:56:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-swiftclient/commit/5c9d32623b4214d3f23bcbd8b6e09206146cae4f', 'message': ""Add transaction id to errors\n\nAdd transaction id to errors to help troubleshoot, including error\nwhen downloading object with truncted/missing segment, stat'ing or\nlisting non-existent container.\n\nChange response headers returned by client.py Connection APIs\nsuch as get_object() from lowercase dict to CaseInsensitiveDict,\nas some error paths rely on this to retrieve the transaction id,\nwhile there are existing code paths using response.headers which\nis CaseInsensitiveDict from requests lib.\n\nChange-Id: Ice9cc9fe68684563f18ee527996e5a4292230a96\n""}, {'number': 5, 'created': '2024-02-09 16:56:37.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-swiftclient/commit/59044162aac025538a5e6165fa705b629a7092c6', 'message': ""Add transaction id to errors\n\nAdd transaction id to errors to help troubleshoot, including error\nwhen downloading object with truncted/missing segment, stat'ing or\nlisting non-existent container.\n\nChange response headers returned by client.py Connection APIs\nsuch as get_object() from lowercase dict to CaseInsensitiveDict,\nas some error paths rely on this to retrieve the transaction id,\nwhile there are existing code paths using response.headers which\nis CaseInsensitiveDict from requests lib.\n\nChange-Id: Ice9cc9fe68684563f18ee527996e5a4292230a96\n""}, {'number': 6, 'created': '2024-02-28 16:22:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-swiftclient/commit/90d99ae25b8b73ab8fcac0b14500f67d91074bcc', 'message': ""Add transaction id to errors\n\nAdd transaction id to errors to help troubleshoot, including error\nwhen downloading object with truncted/missing segment, stat'ing or\nlisting non-existent container.\n\nChange response headers returned by client.py Connection APIs\nsuch as get_object() from lowercase dict to CaseInsensitiveDict,\nas some error paths rely on this to retrieve the transaction id,\nwhile there are existing code paths using response.headers which\nis CaseInsensitiveDict from requests lib.\n\nChange-Id: Ice9cc9fe68684563f18ee527996e5a4292230a96\n""}, {'number': 7, 'created': '2024-02-29 20:35:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/python-swiftclient/commit/c06b3985bf5ff3c690a3586e03d488bde9e3288c', 'message': ""Add transaction id to errors\n\nAdd transaction id to errors to help troubleshoot, including error\nwhen downloading object with truncted/missing segment, stat'ing or\nlisting non-existent container.\n\nChange response headers returned by client.py Connection APIs\nsuch as get_object() from lowercase dict to CaseInsensitiveDict,\nas some error paths rely on this to retrieve the transaction id,\nwhile there are existing code paths using response.headers which\nis CaseInsensitiveDict from requests lib.\n\nChange-Id: Ice9cc9fe68684563f18ee527996e5a4292230a96\n""}, {'number': 8, 'created': '2024-03-01 16:56:33.000000000', 'files': ['test/unit/test_service.py', 'swiftclient/shell.py', 'swiftclient/client.py', 'swiftclient/multithreading.py', 'swiftclient/service.py', 'test/unit/test_shell.py', 'test/unit/test_swiftclient.py'], 'web_link': 'https://opendev.org/openstack/python-swiftclient/commit/ac2a60dc0d2932583e70406b6d456e6ae094c3dd', 'message': ""Add transaction id to errors\n\nAdd transaction id to errors to help troubleshoot, including error\nwhen downloading object with truncted/missing segment, stat'ing or\nlisting non-existent container.\n\nChange response headers returned by client.py Connection APIs\nsuch as get_object() from lowercase dict to CaseInsensitiveDict,\nas some error paths rely on this to retrieve the transaction id,\nwhile there are existing code paths using response.headers which\nis CaseInsensitiveDict from requests lib.\n\nChange-Id: Ice9cc9fe68684563f18ee527996e5a4292230a96\n""}]",130,903770,ac2a60dc0d2932583e70406b6d456e6ae094c3dd,48,5,8,36606,,,0,"Add transaction id to errors

Add transaction id to errors to help troubleshoot, including error
when downloading object with truncted/missing segment, stat'ing or
listing non-existent container.

Change response headers returned by client.py Connection APIs
such as get_object() from lowercase dict to CaseInsensitiveDict,
as some error paths rely on this to retrieve the transaction id,
while there are existing code paths using response.headers which
is CaseInsensitiveDict from requests lib.

Change-Id: Ice9cc9fe68684563f18ee527996e5a4292230a96
",git fetch https://review.opendev.org/openstack/python-swiftclient refs/changes/70/903770/1 && git format-patch -1 --stdout FETCH_HEAD,"['swiftclient/exceptions.py', 'swiftclient/service.py']",2,816f9da4d39880373fbb5ad5083aacf629551796,tmp_review_alistair," if hasattr(self.exception, 'transaction_id'): self.value += ' (%s)' % self.exception.transaction_id try: for chunk in obj_body: except Exception as err: if isinstance(err, ClientException): raise raise ClientException(str(err), http_response_headers=headers) ", for chunk in obj_body:,12,2
openstack%2Fmagnum~910841,openstack/magnum,master,Ic212134032a95c59799c03245d2046f048743fca,Retire TripleO: remove the TripleO deliverable usage/ref,NEW,2024-03-01 19:38:31.000000000,2024-03-01 20:32:12.000000000,,[{'_account_id': 22348}],"[{'number': 1, 'created': '2024-03-01 19:38:31.000000000', 'files': ['dockerfiles/heat-container-agent/Dockerfile'], 'web_link': 'https://opendev.org/openstack/magnum/commit/3716fb5f34d9fde25ee25ae39ec9624b10d043bd', 'message': 'Retire TripleO: remove the TripleO deliverable usage/ref\n\nTripleO is retired so removing its deliverables usage/ref\n\n- https://review.opendev.org/q/topic:%22retire-tripleo%22\n\nDepends-On: https://review.opendev.org/c/openstack/governance/+/905145\nChange-Id: Ic212134032a95c59799c03245d2046f048743fca\n'}]",0,910841,3716fb5f34d9fde25ee25ae39ec9624b10d043bd,2,1,1,8556,,,0,"Retire TripleO: remove the TripleO deliverable usage/ref

TripleO is retired so removing its deliverables usage/ref

- https://review.opendev.org/q/topic:%22retire-tripleo%22

Depends-On: https://review.opendev.org/c/openstack/governance/+/905145
Change-Id: Ic212134032a95c59799c03245d2046f048743fca
",git fetch https://review.opendev.org/openstack/magnum refs/changes/41/910841/1 && git format-patch -1 --stdout FETCH_HEAD,['dockerfiles/heat-container-agent/Dockerfile'],1,3716fb5f34d9fde25ee25ae39ec9624b10d043bd,retire-tripleo,, dib-utils \,0,1
openstack%2Fnova~910571,openstack/nova,master,If65ec55d311ecf7fb3fe745ebbf116a430f60681,testing: Add ephemeral encryption support to fixtures,MERGED,2024-02-29 07:36:16.000000000,2024-03-01 20:07:02.000000000,2024-03-01 20:05:27.000000000,"[{'_account_id': 4393}, {'_account_id': 11604}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-29 07:36:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/66446f10a02460fb9c98498b81ee13673adde850', 'message': 'testing: Add ephemeral encryption support to fixtures\n\nThis adds encryption related methods and attributes to test fixtures to\nenable functional testing for ephemeral encryption.\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: If65ec55d311ecf7fb3fe745ebbf116a430f60681\n'}, {'number': 2, 'created': '2024-02-29 23:38:41.000000000', 'files': ['nova/tests/fixtures/libvirt_imagebackend.py', 'nova/test.py', 'nova/tests/functional/integrated_helpers.py', 'nova/tests/fixtures/libvirt.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/3a1c65a6327431e4f7c07ef954169104aec310e8', 'message': 'testing: Add ephemeral encryption support to fixtures\n\nThis adds encryption related methods and attributes to test fixtures to\nenable functional testing for ephemeral encryption.\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: If65ec55d311ecf7fb3fe745ebbf116a430f60681\n'}]",16,910571,3a1c65a6327431e4f7c07ef954169104aec310e8,25,3,2,4690,,,0,"testing: Add ephemeral encryption support to fixtures

This adds encryption related methods and attributes to test fixtures to
enable functional testing for ephemeral encryption.

Related to blueprint ephemeral-encryption-libvirt

Change-Id: If65ec55d311ecf7fb3fe745ebbf116a430f60681
",git fetch https://review.opendev.org/openstack/nova refs/changes/71/910571/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/tests/fixtures/libvirt_imagebackend.py', 'nova/test.py', 'nova/tests/functional/integrated_helpers.py', 'nova/tests/fixtures/libvirt.py']",4,66446f10a02460fb9c98498b81ee13673adde850,specs/yoga/approved/ephemeral-encryption-libvirt," encryption = element.find('./source/encryption') if encryption is not None and len(encryption): disk_info['encryption_format'] = encryption.get('format') secret = encryption.find('./secret') if secret is not None: disk_info['encryption_secret'] = secret.get('uuid') strformat = """""" <disk type='%(type)s' device='%(device)s'> <source %(source_attr)s='%(source)s'"""""" if 'encryption_format' not in disk: strformat += '/>' else: strformat += '''> <encryption format='%(encryption_format)s'> <secret type='passphrase' uuid='%(encryption_secret)s'/> </encryption> </source>''' strformat += ''' </disk>''' disks += strformat % dict(source_attr=source_attr, **disk) usage = tree.find('./usage') if usage is not None: self._usage_type = usage.get('type') if self._usage_type == 'volume': self._usage_id = usage.find('volume').text def UUIDString(self): if self._uuid is not None: return self._uuid def usageID(self): if self._usage_id is not None: return self._usage_id def listAllSecrets(self, flags): return [secret for secret in self._secrets.values()] def secretLookupByUsage(self, usage_type_obj, usage_id): for secret in self._secrets.values(): # Ignore usage_type_obj because we don't have a way to map libvrt # usage type constants to strings. if secret._usage_id == usage_id: return secret"," disks += '''<disk type='%(type)s' device='%(device)s'> <source %(source_attr)s='%(source)s'/> </disk>''' % dict(source_attr=source_attr, **disk) def secretLookupByUsage(self, usage_type_obj, usage_id): pass",72,5
openstack%2Frequirements~910737,openstack/requirements,master,I3cd1e0748456e7356453705050055245fc92e743,update constraint for python-magnumclient to new release 4.4.0,MERGED,2024-03-01 14:00:21.000000000,2024-03-01 20:06:31.000000000,2024-03-01 20:05:35.000000000,"[{'_account_id': 13252}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 14:00:21.000000000', 'files': ['upper-constraints.txt'], 'web_link': 'https://opendev.org/openstack/requirements/commit/d31ee5dfe6c4be3016f7a9431714c7689b97c8bf', 'message': 'update constraint for python-magnumclient to new release 4.4.0\n\nmeta: version: 4.4.0\nmeta: diff-start: -\nmeta: series: caracal\nmeta: branch: master\nmeta: release-type: release\nmeta: pypi: yes\nmeta: first: no\nmeta: release:Author: Elod Illes <elod.illes@est.tech>\nmeta: release:Commit: Elod Illes <elod.illes@est.tech>\nmeta: release:Change-Id: If57c3fe2d3f8c0b54f5d9b1534e8512d78c624f3\nmeta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>\nmeta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>\nmeta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>\nChange-Id: I3cd1e0748456e7356453705050055245fc92e743\n'}]",0,910737,d31ee5dfe6c4be3016f7a9431714c7689b97c8bf,7,2,1,11131,,,0,"update constraint for python-magnumclient to new release 4.4.0

meta: version: 4.4.0
meta: diff-start: -
meta: series: caracal
meta: branch: master
meta: release-type: release
meta: pypi: yes
meta: first: no
meta: release:Author: Elod Illes <elod.illes@est.tech>
meta: release:Commit: Elod Illes <elod.illes@est.tech>
meta: release:Change-Id: If57c3fe2d3f8c0b54f5d9b1534e8512d78c624f3
meta: release:Code-Review+2: Elod Illes <elod.illes@est.tech>
meta: release:Workflow+1: Hervé Beraud <herveberaud.pro@gmail.com>
meta: release:Code-Review+2: Hervé Beraud <herveberaud.pro@gmail.com>
Change-Id: I3cd1e0748456e7356453705050055245fc92e743
",git fetch https://review.opendev.org/openstack/requirements refs/changes/37/910737/1 && git format-patch -1 --stdout FETCH_HEAD,['upper-constraints.txt'],1,d31ee5dfe6c4be3016f7a9431714c7689b97c8bf,new-release,python-magnumclient===4.4.0,python-magnumclient===4.3.0,1,1
openstack%2Fnova~870935,openstack/nova,master,I01eef6adc2c8feb64e86b33392b8b4b483041e27,Add hw_ephemeral_encryption_secret_uuid image property,MERGED,2023-01-18 12:38:04.000000000,2024-03-01 20:06:10.000000000,2024-03-01 20:05:01.000000000,"[{'_account_id': 4393}, {'_account_id': 11604}, {'_account_id': 16207}, {'_account_id': 22348}, {'_account_id': 36201}]","[{'number': 1, 'created': '2023-01-18 12:38:04.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/3bae6d3e7dd00de621b1b49973c1157277174d66', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 2, 'created': '2023-01-19 12:39:17.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/668a86b8d9db8d4eeefd36b669a4fe4024853eba', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 3, 'created': '2023-02-07 07:56:42.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/fbe69b2bc8a67f3647c82157b70d5b08bc1f54d2', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 4, 'created': '2023-02-07 08:13:13.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/55d429c780addf8ef664651ad6a0ffcf0cda503a', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 5, 'created': '2023-02-09 13:20:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/f7c47e19e23fc4d168c5580a2788182c7e194229', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 6, 'created': '2023-02-14 05:41:59.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8dd64d5c55fe47231e2988374f730c5207ceca11', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 7, 'created': '2023-04-08 03:45:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/158105de414861057dd7702d0c72c17d214cf6d7', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 8, 'created': '2023-05-25 04:37:03.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/173f4b7a1e9f14a7eb11d1a2cf51f70d5e6c9e47', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 9, 'created': '2023-05-26 00:25:16.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/bce460ad1ad2165f56f1b9da41b8c798d8dc3e2d', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 10, 'created': '2023-07-27 07:09:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/027ce0384b1fd5fc6ae918ccc9108afd90005640', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 11, 'created': '2023-07-27 07:20:25.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/8344811f31f5b8805fee391c81eae338aa5656e3', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 12, 'created': '2023-07-28 04:21:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/3eb128ad80cae98304d7ba4daa22f2c8226a7de4', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 13, 'created': '2023-08-01 03:00:43.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/153c4f3b7b043333103276e08782c6c166dce3d0', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 14, 'created': '2023-08-02 00:23:21.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a00802fd1b0b281539e45efacf44fa03a75436f2', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image.\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 15, 'created': '2023-11-21 00:46:01.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/6c107a4f254f3fc7355da6c28c92c8a12fd53d51', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 16, 'created': '2023-12-09 00:58:07.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/753a42ef6f75d7fda26c39dbf69660e83a77881f', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 17, 'created': '2023-12-09 06:26:54.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/f00c704fc04b0314921d359a05a73fa8d4e06560', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 18, 'created': '2023-12-20 07:59:47.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/693843d4c1dcd20a41b283d3421fa7e5477e8683', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 19, 'created': '2023-12-22 02:02:27.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d83ccb8b616858c8571495f235ac32d27fccc150', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 20, 'created': '2024-01-07 09:41:38.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e25bed781a0ab1335bba88e7159bfa2838e74fc6', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 21, 'created': '2024-01-13 05:26:39.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/30a85173254c9e1ba92039f1e7066327fc9f27b6', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 22, 'created': '2024-01-19 09:54:53.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/6ecef874e1d4969ae04498019e9b59f0aadc3ffc', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 23, 'created': '2024-01-25 05:37:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/61e103bcd2dd46a15e55ffe5396d97d914c49b07', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 24, 'created': '2024-01-25 05:47:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a964fd947fff6bd84d8e01e78ebff9655d901e8e', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 25, 'created': '2024-01-26 08:12:40.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/c5f20ef5885da706a5cf9ce161bc0f2494828fa4', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 26, 'created': '2024-01-27 08:03:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/44f81e9804f681031dfeb5879af10c0f36550346', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 27, 'created': '2024-02-02 06:41:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/6afbe378d280dd76d37a899364fae6462a3fba8e', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 28, 'created': '2024-02-06 08:05:34.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/4f7a3da99a25199e86df4a42eb1dd02ba39964e6', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 29, 'created': '2024-02-06 08:26:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e2ae2922f8439d8faf7dda504742dd6802efe4d8', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 30, 'created': '2024-02-14 08:04:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d0d2e08aa844fae18e5629f26e483b28c371a59f', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 31, 'created': '2024-02-17 19:06:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/bcfb0dc2390ec68ae36bccc234b66cc300c2a9f5', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 32, 'created': '2024-02-20 15:42:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/256f321f15103f047eb59a5d39ee53255d8a4e4a', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}, {'number': 33, 'created': '2024-02-28 09:19:58.000000000', 'files': ['nova/notifications/objects/image.py', 'nova/tests/unit/objects/test_objects.py', 'nova/tests/unit/objects/test_image_meta.py', 'nova/objects/image_meta.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/740d5bb53131843fce667f042656c3ece126db1d', 'message': 'Add hw_ephemeral_encryption_secret_uuid image property\n\nIf an image is encrypted, we will need to retrieve the passphrase from\nthe key manager service in order to create an instance from it.\n\nThis adds an image property to store the secret UUID that belongs to\nthe image. It will only be used to decrypt the image and will not be\nused to encrypt or decrypt any other image. Nova will create a new\nsecret for each disk image it creates, including snapshots.\n\nRelated to blueprint ephemeral-storage-encryption\n\nChange-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27\n'}]",18,870935,740d5bb53131843fce667f042656c3ece126db1d,144,5,33,4690,,,0,"Add hw_ephemeral_encryption_secret_uuid image property

If an image is encrypted, we will need to retrieve the passphrase from
the key manager service in order to create an instance from it.

This adds an image property to store the secret UUID that belongs to
the image. It will only be used to decrypt the image and will not be
used to encrypt or decrypt any other image. Nova will create a new
secret for each disk image it creates, including snapshots.

Related to blueprint ephemeral-storage-encryption

Change-Id: I01eef6adc2c8feb64e86b33392b8b4b483041e27
",git fetch https://review.opendev.org/openstack/nova refs/changes/35/870935/1 && git format-patch -1 --stdout FETCH_HEAD,"['nova/notifications/objects/image.py', 'nova/virt/hardware.py', 'nova/objects/image_meta.py']",3,3bae6d3e7dd00de621b1b49973c1157277174d66,specs/yoga/approved/ephemeral-encryption-libvirt," # Version 1.35: Added 'hw_ephemeral_encryption_secret_uuid' field VERSION = '1.35' if target_version < (1, 35): primitive.pop('hw_ephemeral_encryption_secret_uuid', None) # encryption secret uuid string for passphrase in the image 'hw_ephemeral_encryption_secret_uuid': fields.UUIDField(),", VERSION = '1.34',26,2
openstack%2Fnova~905515,openstack/nova,master,Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62,libvirt: make <encryption> a sub element of <source>,MERGED,2024-01-13 10:19:51.000000000,2024-03-01 20:05:16.000000000,2024-03-01 20:05:16.000000000,"[{'_account_id': 4393}, {'_account_id': 11604}, {'_account_id': 16207}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-01-13 10:19:51.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/6e6d4d9645ad3c4f40f96ada5c056dd915a28d30', 'message': 'WIP libvirt: make <encryption> a subelement of <source>\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 2, 'created': '2024-01-17 02:56:29.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/621d628fefa6c28d2046c6d43b0f4ed562744ef0', 'message': 'WIP libvirt: make <encryption> a subelement of <source>\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 3, 'created': '2024-01-19 09:54:53.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/59616590401c352b8473d5260bbf4177fa8b057f', 'message': 'libvirt: make <encryption> a subelement of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 4, 'created': '2024-01-25 05:37:20.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/e2e01a78c75fb84bb5bc20db0394642f879dd7ef', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 5, 'created': '2024-01-25 05:47:19.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/911449995f027d2d4c9359de7c4ff8fa02687338', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 6, 'created': '2024-01-26 08:12:40.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/ab283e311b04bbc18978314d8ba55271ee4290e8', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 7, 'created': '2024-01-27 08:03:49.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/a313ccaeecff2f6bf300c07dd57f1081cfd61b65', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 8, 'created': '2024-02-02 06:41:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/bcc5838edb7f98f3866f4c17acfa5d7240d406f0', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 9, 'created': '2024-02-06 08:05:34.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/0ef291943295de05e70d6b6d563aa4837c4f7a1c', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 10, 'created': '2024-02-06 08:26:50.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/d5db7faf31f31d9d5ee8bdc9e4efa60a767aac88', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 11, 'created': '2024-02-14 08:04:28.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/28384d1d1c493754686ee5f5501ce86d908709ba', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 12, 'created': '2024-02-17 19:06:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/2e2034a06e0ac4c5a4d7ee2ab862722c2c36aca4', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 13, 'created': '2024-02-20 15:42:55.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/nova/commit/84a736ad2502731c67eed23cfcca0e905b4b9adc', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}, {'number': 14, 'created': '2024-02-28 09:19:58.000000000', 'files': ['nova/virt/libvirt/migration.py', 'nova/virt/libvirt/config.py', 'nova/virt/libvirt/volume/volume.py', 'nova/tests/unit/virt/libvirt/test_config.py', 'nova/tests/unit/virt/libvirt/test_imagebackend.py', 'nova/virt/libvirt/imagebackend.py'], 'web_link': 'https://opendev.org/openstack/nova/commit/e91aaaf5511d86558d852043a28a4c9b5e2a9bc2', 'message': 'libvirt: make <encryption> a sub element of <source>\n\nFor encryption of local ephemeral disks, the <encryption> XML should be\na sub element of the <source> XML element [1][2] in order for more\ninvolved operations like live migration to work properly.\n\nThis adds generation of ephemeral <encryption> XML as a sub element of\nthe <source> XML.\n\nThis also renames the internal LibvirtConfigGuestDisk attribute for\nvolume encryption from ""encryption"" to ""volume_encryption"" in an effort\nto clearly differentiate between volume encryption and ephemeral disk\nencryption.\n\n[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms\n[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13\n\nRelated to blueprint ephemeral-encryption-libvirt\n\nChange-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62\n'}]",18,905515,e91aaaf5511d86558d852043a28a4c9b5e2a9bc2,70,4,14,4690,,,0,"libvirt: make <encryption> a sub element of <source>

For encryption of local ephemeral disks, the <encryption> XML should be
a sub element of the <source> XML element [1][2] in order for more
involved operations like live migration to work properly.

This adds generation of ephemeral <encryption> XML as a sub element of
the <source> XML.

This also renames the internal LibvirtConfigGuestDisk attribute for
volume encryption from ""encryption"" to ""volume_encryption"" in an effort
to clearly differentiate between volume encryption and ephemeral disk
encryption.

[1] https://libvirt.org/formatdomain.html#hard-drives-floppy-disks-cdroms
[2] https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13

Related to blueprint ephemeral-encryption-libvirt

Change-Id: Ie4e5f2b27f7ef05f5c45b9adc1df2966e7f05e62
",git fetch https://review.opendev.org/openstack/nova refs/changes/15/905515/1 && git format-patch -1 --stdout FETCH_HEAD,['nova/virt/libvirt/config.py'],1,6e6d4d9645ad3c4f40f96ada5c056dd915a28d30,specs/yoga/approved/ephemeral-encryption-libvirt," source = None if self.source_type == ""file"": source = etree.Element(""source"", file=self.source_path) elif self.source_type == ""block"": source = etree.Element(""source"", dev=self.source_path) elif self.source_type == ""mount"": source = etree.Element(""source"", dir=self.source_path) if self.encryption: # NOTE(melwitt): <encryption> should be a subelement of <source>. # See: https://bugzilla.redhat.com/show_bug.cgi?id=1371022#c13 source.append(self.encryption.format_dom()) dev.append(source)"," if self.source_type == ""file"": dev.append(etree.Element(""source"", file=self.source_path)) elif self.source_type == ""block"": dev.append(etree.Element(""source"", dev=self.source_path)) elif self.source_type == ""mount"": dev.append(etree.Element(""source"", dir=self.source_path)) dev.append(source) if self.encryption: dev.append(self.encryption.format_dom()) ",9,7
openstack%2Fpyeclib~910658,openstack/pyeclib,master,I842fbbc2eb1f8c4a1d4eb53597ad14cce4eb3dcf,"tests: Fix random ""invalid range"" errors",MERGED,2024-02-29 19:31:45.000000000,2024-03-01 19:42:17.000000000,2024-03-01 19:42:17.000000000,"[{'_account_id': 15343}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-29 19:31:45.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/pyeclib/commit/b321099057c88543ecc3ba9f4d0a490958a7f588', 'message': 'tests: Fix random ""invalid range"" errors\n\nrandom.randint is inclusive on both ends, unlike random.randrange.\nAs a result, we could previously (rarely) select an end value\n*exactly equal* to len(whole_file_bytes), causing an error like\n\n    pyeclib.ec_iface.ECInvalidParameter: pyeclib_c_decode invalid\n    range ERROR: Invalid arguments. Please inspect syslog for\n    liberasurecode error report.\n\nChange-Id: I842fbbc2eb1f8c4a1d4eb53597ad14cce4eb3dcf\n'}, {'number': 2, 'created': '2024-02-29 19:52:10.000000000', 'files': ['test/test_pyeclib_c.py'], 'web_link': 'https://opendev.org/openstack/pyeclib/commit/3f8ead5a297ffbec597004b3022dbc1f93e7e0f1', 'message': 'tests: Fix random ""invalid range"" errors\n\nrandom.randint is inclusive on both ends, unlike random.randrange.\nAs a result, we could previously (rarely) select an end value\n*exactly equal* to len(whole_file_bytes), causing an error like\n\n    pyeclib.ec_iface.ECInvalidParameter: pyeclib_c_decode invalid\n    range ERROR: Invalid arguments. Please inspect syslog for\n    liberasurecode error report.\n\nChange-Id: I842fbbc2eb1f8c4a1d4eb53597ad14cce4eb3dcf\n'}]",2,910658,3f8ead5a297ffbec597004b3022dbc1f93e7e0f1,10,2,2,15343,,,0,"tests: Fix random ""invalid range"" errors

random.randint is inclusive on both ends, unlike random.randrange.
As a result, we could previously (rarely) select an end value
*exactly equal* to len(whole_file_bytes), causing an error like

    pyeclib.ec_iface.ECInvalidParameter: pyeclib_c_decode invalid
    range ERROR: Invalid arguments. Please inspect syslog for
    liberasurecode error report.

Change-Id: I842fbbc2eb1f8c4a1d4eb53597ad14cce4eb3dcf
",git fetch https://review.opendev.org/openstack/pyeclib refs/changes/58/910658/1 && git format-patch -1 --stdout FETCH_HEAD,['test/test_pyeclib_c.py'],1,b321099057c88543ecc3ba9f4d0a490958a7f588,," ends = [int(random.randint(begins[i], len(whole_file_bytes) -1))"," ends = [int(random.randint(begins[i], len(whole_file_bytes)))",1,1
openstack%2Fliberasurecode~910827,openstack/liberasurecode,master,Iaa31fc95ed2d100726adf60807c8bf95599afd3f,CI: Remove centos-7 jobs,MERGED,2024-03-01 18:39:39.000000000,2024-03-01 19:32:49.000000000,2024-03-01 19:32:49.000000000,"[{'_account_id': 15343}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-03-01 18:39:39.000000000', 'files': ['.zuul.yaml'], 'web_link': 'https://opendev.org/openstack/liberasurecode/commit/e1377f6f500ed386f8768f142dc91be595c394c5', 'message': ""CI: Remove centos-7 jobs\n\nCentOS 7 will go EOL later this year, and infra wants to drop the nodes\nsoon-ish -- don't make them wait on our account.\n\nChange-Id: Iaa31fc95ed2d100726adf60807c8bf95599afd3f\n""}]",0,910827,e1377f6f500ed386f8768f142dc91be595c394c5,7,2,1,15343,,,0,"CI: Remove centos-7 jobs

CentOS 7 will go EOL later this year, and infra wants to drop the nodes
soon-ish -- don't make them wait on our account.

Change-Id: Iaa31fc95ed2d100726adf60807c8bf95599afd3f
",git fetch https://review.opendev.org/openstack/liberasurecode refs/changes/27/910827/1 && git format-patch -1 --stdout FETCH_HEAD,['.zuul.yaml'],1,e1377f6f500ed386f8768f142dc91be595c394c5,,, name: liberasurecode-unittests-centos-7 parent: liberasurecode-unittests nodeset: centos-7 description: | Build and run test and valgrind-test for liberasurecode. This job runs on CentOS-7. - job: - liberasurecode-unittests-centos-7 - liberasurecode-unittests-centos-7,0,10
openstack%2Foctavia-tempest-plugin~910659,openstack/octavia-tempest-plugin,master,Ib0d2224aea8d15f9a732d9eb9690208a0cab0029,"Add legacy ""creator"" role to lb_member user",NEW,2024-02-29 19:37:06.000000000,2024-03-01 18:56:46.000000000,,"[{'_account_id': 7973}, {'_account_id': 22348}]","[{'number': 1, 'created': '2024-02-29 19:37:06.000000000', 'files': [], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/b0640eeb5ea5ba712604d30c482647fda1da01a2', 'message': 'Add legacy ""creator"" role to lb_member user\n\nThe Barbican legacy policies require that the user have the \'creator\'\nrole assigned to them to upload secrets.\n\nCurrently, the integration job with Barbican works because the Barbican\ndevstack plugin adds the [auth] tempest_roles = creator option to\ntempest.conf, which assigns this role to all users created by the\ndynamic credentials provider.\n\nHowever, the devstack plugin for Barbican is being refactored to remove this\noption in tempest.conf by default [1], thus requiring that we assign the role\nhere to ensure that the lb_member user can still create a secret when using\nthe legacy policies for barbican.\n\nChange-Id: Ib0d2224aea8d15f9a732d9eb9690208a0cab0029\n'}, {'number': 2, 'created': '2024-02-29 19:38:04.000000000', 'files': ['octavia_tempest_plugin/tests/test_base.py'], 'web_link': 'https://opendev.org/openstack/octavia-tempest-plugin/commit/8c1c7bcd6f0a81d7de45186b39f4dd57baba8d9e', 'message': 'Add legacy ""creator"" role to lb_member user\n\nThe Barbican legacy policies require that the user have the \'creator\'\nrole assigned to them to upload secrets.\n\nCurrently, the integration job with Barbican works because the Barbican\ndevstack plugin adds the [auth] tempest_roles = creator option to\ntempest.conf, which assigns this role to all users created by the\ndynamic credentials provider.\n\nHowever, the devstack plugin for Barbican is being refactored to remove this\noption in tempest.conf by default [1], thus requiring that we assign the role\nhere to ensure that the lb_member user can still create a secret when using\nthe legacy policies for barbican.\n\n[1] https://review.opendev.org/c/openstack/barbican/+/908858\n\nChange-Id: Ib0d2224aea8d15f9a732d9eb9690208a0cab0029\n'}]",0,910659,8c1c7bcd6f0a81d7de45186b39f4dd57baba8d9e,4,2,2,7973,,,0,"Add legacy ""creator"" role to lb_member user

The Barbican legacy policies require that the user have the 'creator'
role assigned to them to upload secrets.

Currently, the integration job with Barbican works because the Barbican
devstack plugin adds the [auth] tempest_roles = creator option to
tempest.conf, which assigns this role to all users created by the
dynamic credentials provider.

However, the devstack plugin for Barbican is being refactored to remove this
option in tempest.conf by default [1], thus requiring that we assign the role
here to ensure that the lb_member user can still create a secret when using
the legacy policies for barbican.

[1] https://review.opendev.org/c/openstack/barbican/+/908858

Change-Id: Ib0d2224aea8d15f9a732d9eb9690208a0cab0029
",git fetch https://review.opendev.org/openstack/octavia-tempest-plugin refs/changes/59/910659/1 && git format-patch -1 --stdout FETCH_HEAD,['octavia_tempest_plugin/tests/test_base.py'],1,b0640eeb5ea5ba712604d30c482647fda1da01a2,secure-rbac," # Note: Legacy policies in Barbican require the 'creator' role # to store secrets. ['lb_member', CONF.load_balancer.member_role, 'creator'],"," ['lb_member', CONF.load_balancer.member_role],",3,1
